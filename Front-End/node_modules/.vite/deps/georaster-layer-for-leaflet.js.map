{
  "version": 3,
  "sources": ["../../regenerator-runtime/runtime.js", "../../iter-fun/index.js", "../../xdim/src/prepared-select-funcs.js", "../../xdim/src/prepared-update-funcs.js", "../../xdim/src/xdim.js", "../../quick-scale/quick-scale.js", "../../bbox-fns/dense-polygon.js", "../../utm-utils/src/isUTM.js", "../../utm-utils/src/getZone.js", "../../utm-utils/src/getHemisphere.js", "../../utm-utils/src/getProjString.js", "../../proj4-merge/proj4-merge.js", "../../proj4/lib/global.js", "../../proj4/lib/constants/values.js", "../../proj4/lib/constants/PrimeMeridian.js", "../../proj4/lib/constants/units.js", "../../proj4/lib/match.js", "../../proj4/lib/projString.js", "../../wkt-parser/PROJJSONBuilderBase.js", "../../wkt-parser/PROJJSONBuilder2015.js", "../../wkt-parser/PROJJSONBuilder2019.js", "../../wkt-parser/buildPROJJSON.js", "../../wkt-parser/detectWKTVersion.js", "../../wkt-parser/parser.js", "../../wkt-parser/process.js", "../../wkt-parser/util.js", "../../wkt-parser/transformPROJJSON.js", "../../wkt-parser/index.js", "../../proj4/lib/defs.js", "../../proj4/lib/parseCode.js", "../../proj4/lib/extend.js", "../../proj4/lib/common/msfnz.js", "../../proj4/lib/common/sign.js", "../../proj4/lib/common/adjust_lon.js", "../../proj4/lib/common/tsfnz.js", "../../proj4/lib/common/phi2z.js", "../../proj4/lib/projections/merc.js", "../../proj4/lib/projections/longlat.js", "../../proj4/lib/projections.js", "../../proj4/lib/constants/Ellipsoid.js", "../../proj4/lib/deriveConstants.js", "../../proj4/lib/constants/Datum.js", "../../proj4/lib/datum.js", "../../proj4/lib/nadgrid.js", "../../proj4/lib/Proj.js", "../../proj4/lib/datumUtils.js", "../../proj4/lib/datum_transform.js", "../../proj4/lib/adjust_axis.js", "../../proj4/lib/common/toPoint.js", "../../proj4/lib/checkSanity.js", "../../proj4/lib/transform.js", "../../proj4/lib/core.js", "../../mgrs/mgrs.js", "../../proj4/lib/Point.js", "../../proj4/lib/common/pj_enfn.js", "../../proj4/lib/common/pj_mlfn.js", "../../proj4/lib/common/pj_inv_mlfn.js", "../../proj4/lib/projections/tmerc.js", "../../proj4/lib/common/sinh.js", "../../proj4/lib/common/hypot.js", "../../proj4/lib/common/log1py.js", "../../proj4/lib/common/asinhy.js", "../../proj4/lib/common/gatg.js", "../../proj4/lib/common/clens.js", "../../proj4/lib/common/cosh.js", "../../proj4/lib/common/clens_cmplx.js", "../../proj4/lib/projections/etmerc.js", "../../proj4/lib/common/adjust_zone.js", "../../proj4/lib/projections/utm.js", "../../proj4/lib/common/srat.js", "../../proj4/lib/projections/gauss.js", "../../proj4/lib/projections/sterea.js", "../../proj4/lib/projections/stere.js", "../../proj4/lib/projections/somerc.js", "../../proj4/lib/projections/omerc.js", "../../proj4/lib/projections/lcc.js", "../../proj4/lib/projections/krovak.js", "../../proj4/lib/common/mlfn.js", "../../proj4/lib/common/e0fn.js", "../../proj4/lib/common/e1fn.js", "../../proj4/lib/common/e2fn.js", "../../proj4/lib/common/e3fn.js", "../../proj4/lib/common/gN.js", "../../proj4/lib/common/adjust_lat.js", "../../proj4/lib/common/imlfn.js", "../../proj4/lib/projections/cass.js", "../../proj4/lib/common/qsfnz.js", "../../proj4/lib/projections/laea.js", "../../proj4/lib/common/asinz.js", "../../proj4/lib/projections/aea.js", "../../proj4/lib/projections/gnom.js", "../../proj4/lib/common/iqsfnz.js", "../../proj4/lib/projections/cea.js", "../../proj4/lib/projections/eqc.js", "../../proj4/lib/projections/poly.js", "../../proj4/lib/projections/nzmg.js", "../../proj4/lib/projections/mill.js", "../../proj4/lib/projections/sinu.js", "../../proj4/lib/projections/moll.js", "../../proj4/lib/projections/eqdc.js", "../../proj4/lib/projections/vandg.js", "../../proj4/lib/common/vincenty.js", "../../proj4/lib/projections/aeqd.js", "../../proj4/lib/projections/ortho.js", "../../proj4/lib/projections/qsc.js", "../../proj4/lib/projections/robin.js", "../../proj4/lib/projections/geocent.js", "../../proj4/lib/projections/tpers.js", "../../proj4/lib/projections/geos.js", "../../proj4/lib/projections/eqearth.js", "../../proj4/lib/projections/bonne.js", "../../proj4/projs.js", "../../proj4/lib/index.js", "../../proj4js-definitions/proj4js-definitions.js", "../../proj4-fully-loaded/proj4-fully-loaded.js", "../../proj4-collect/index.js", "../../get-depth/index.js", "../../reproject-line/reproject-line.js", "../../reproject-geojson/pluggable.js", "../../reproject-geojson/reproject-geojson.js", "../../bbox-fns/merge.js", "../../bbox-fns/polygon.js", "../../typed-array-ranges/get-min.js", "../../fast-min/index.js", "../../typed-array-ranges/get-max.js", "../../fast-max/index.js", "../../preciso/compare_positive.js", "../../preciso/expand.js", "../../preciso/clean.js", "../../preciso/constants/max_safe_integer.js", "../../preciso/constants/max_safe_integer_length.js", "../../preciso/long_addition.js", "../../preciso/long_subtraction.js", "../../preciso/is_infinity.js", "../../preciso/add.js", "../../preciso/absolute.js", "../../preciso/subtract.js", "../../preciso/truncate_decimal.js", "../../preciso/round_last_decimal.js", "../../preciso/long_division.js", "../../preciso/divide.js", "../../preciso/is_imaginary.js", "../../preciso/is_integer.js", "../../preciso/is_odd.js", "../../preciso/is_zero.js", "../../preciso/long_multiplication.js", "../../preciso/count_decimal_digits.js", "../../preciso/is_negative.js", "../../preciso/round_rational.js", "../../preciso/round.js", "../../preciso/multiply_rational.js", "../../preciso/sign_nonzero.js", "../../preciso/multiply_array.js", "../../preciso/multiply.js", "../../bbox-fns/bbox-array.js", "../../bbox-fns/boolean-contains.js", "../../bbox-fns/boolean-intersects.js", "../../bbox-fns/shift.js", "../../bbox-fns/sort.js", "../../bbox-fns/split.js", "../../bbox-fns/union.js", "../../bbox-fns/unwrap.js", "../../get-epsg-code/node_modules/b64ab/b64ab.js", "../../get-epsg-code/node_modules/xml-utils/index-of-match.js", "../../get-epsg-code/node_modules/xml-utils/index-of-match-end.js", "../../get-epsg-code/node_modules/xml-utils/count-substring.js", "../../get-epsg-code/node_modules/xml-utils/find-tag-by-name.js", "../../get-epsg-code/node_modules/xml-utils/find-tags-by-name.js", "../../get-epsg-code/node_modules/xml-utils/find-tags-by-path.js", "../../get-epsg-code/node_modules/xml-utils/find-tag-by-path.js", "../../get-epsg-code/node_modules/xml-utils/get-attribute.js", "../../get-epsg-code/node_modules/wkt-parser/wkt.build.js", "../../get-epsg-code/node_modules/utm-utils/src/getCodeFromEsriWKT.js", "../../get-epsg-code/node_modules/utm-utils/src/getCodeFromProjString.js", "../../get-epsg-code/lib/hash.js", "../../get-epsg-code/node_modules/wkt-crs/wkt-crs.js", "../../get-epsg-code/lib/normalize/wkt.js", "../../get-epsg-code/lib/normalize/esriwkt.js", "../../get-epsg-code/lib/normalize/proj4.js", "../../get-epsg-code/node_modules/is-wkt/is-wkt.js", "../../get-epsg-code/lib/enums.js", "../../get-epsg-code/lib/get-proj-type.js", "../../get-epsg-code/lib/parse/proj4js.js", "../../get-epsg-code/lib/data/esriwkt-mapfile-proj4.json", "../../get-epsg-code/lib/lookup-esriwkt-mapfile-proj4.js", "../../geography-markup-language/dist/geography-markup-language.cjs", "../../bbox-fns/reproject.js", "../../reproject-bbox/reproject-bbox.js", "../../bbox-fns/bbox-area.js", "../../bbox-fns/bbox-point.js", "../../bbox-fns/bbox-size.js", "../../bbox-fns/boolean-contains-point.js", "../../bbox-fns/boolean-rectangle.js", "../../bbox-fns/calc.js", "../../bbox-fns/dedupe.js", "../../bbox-fns/calc-all.js", "../../bbox-fns/grid.js", "../../bbox-fns/intersect.js", "../../bbox-fns/precise/dense-polygon.js", "../../bbox-fns/precise/divide.js", "../../preciso/compare.js", "../../bbox-fns/precise/bbox-array.js", "../../bbox-fns/precise/reproject.js", "../../bbox-fns/scale.js", "../../bbox-fns/validate.js", "../../bbox-fns/precise/validate.js", "../../bbox-fns/index.js", "../../dufour-peyton-intersection/src/categorize-intersection.js", "../../dufour-peyton-intersection/src/clamp.js", "../../dufour-peyton-intersection/src/cluster.js", "../../dufour-peyton-intersection/src/cluster-line-segments.js", "../../dufour-peyton-intersection/src/each-polygon.js", "../../dufour-peyton-intersection/src/get-polygons.js", "../../dufour-peyton-intersection/src/range/merge-consecutive.js", "../../dufour-peyton-intersection/src/range/compare.js", "../../dufour-peyton-intersection/src/range/sort.js", "../../dufour-peyton-intersection/src/range/overlaps.js", "../../dufour-peyton-intersection/src/range/cut.js", "../../dufour-peyton-intersection/src/range/multicut.js", "../../dufour-peyton-intersection/src/couple.js", "../../dufour-peyton-intersection/src/each-pair.js", "../../dufour-peyton-intersection/src/range/merge.js", "../../dufour-peyton-intersection/src/partition.js", "../../dufour-peyton-intersection/src/round-down.js", "../../dufour-peyton-intersection/src/prepare-snap.js", "../../dufour-peyton-intersection/src/calculate-core.js", "../../dufour-peyton-intersection/src/check-rows.js", "../../dufour-peyton-intersection/src/calculate-ring.js", "../../dufour-peyton-intersection/src/calculate-polygon.js", "../../dufour-peyton-intersection/src/calculate.js", "../../dufour-peyton-intersection/src/range/contains.js", "../../dufour-peyton-intersection/src/index.js", "../../geoaffine/fn/apply.js", "../../geoaffine/fn/invert.js", "../../geoaffine/Geotransform.js", "../../geowarp/node_modules/mediana/src/count.js", "../../geowarp/node_modules/mediana/src/mean.js", "../../geowarp/node_modules/mediana/src/index.js", "../../proj-turbo/proj-turbo.js", "../../quick-resolve/quick-resolve.js", "../../segflip/segflip.js", "../../geowarp/geowarp.js", "../../preciso/multiply_range.js", "../../preciso/factorial.js", "../../preciso/binomial_coefficient.js", "../../preciso/sign.js", "../../preciso/ceil.js", "../../preciso/constants/pi_100.js", "../../preciso/constants/index.js", "../../preciso/fraction.js", "../../preciso/pow_positive.js", "../../preciso/is_fraction.js", "../../preciso/parse_fraction.js", "../../preciso/reciprocal.js", "../../preciso/is_even.js", "../../preciso/count_integer_digits.js", "../../preciso/root_integer_digits.js", "../../preciso/root.js", "../../preciso/min.js", "../../preciso/primes.js", "../../preciso/simplify_fraction.js", "../../preciso/pow.js", "../../preciso/square.js", "../../preciso/cosine_radians.js", "../../preciso/cube.js", "../../preciso/cube_root.js", "../../preciso/eulers_number.js", "../../preciso/is_negative_infinity.js", "../../preciso/is_positive_infinity.js", "../../preciso/exp.js", "../../preciso/flip_sign.js", "../../preciso/floor.js", "../../preciso/square_root.js", "../../preciso/sum.js", "../../preciso/hypotenuse.js", "../../preciso/is_factorial.js", "../../preciso/max.js", "../../preciso/mean.js", "../../preciso/nilakantha.js", "../../preciso/ols.js", "../../preciso/truncate.js", "../../preciso/remainder.js", "../../preciso/sine_radians.js", "../../preciso/softmax.js", "../../preciso/sort.js", "../../preciso/preciso.js", "../../mediana/src/count.js", "../../mediana/node_modules/preciso/expand.js", "../../mediana/node_modules/preciso/clean.js", "../../mediana/node_modules/preciso/compare_positive.js", "../../mediana/node_modules/preciso/constants.js", "../../mediana/node_modules/preciso/long_addition.js", "../../mediana/node_modules/preciso/long_subtraction.js", "../../mediana/node_modules/preciso/add.js", "../../mediana/node_modules/preciso/absolute.js", "../../mediana/node_modules/preciso/long_multiplication.js", "../../mediana/node_modules/preciso/multiply.js", "../../mediana/node_modules/preciso/subtract.js", "../../mediana/node_modules/preciso/round_last_decimal.js", "../../mediana/node_modules/preciso/long_division.js", "../../mediana/node_modules/preciso/divide.js", "../../mediana/src/mean.js", "../../mediana/src/median-of-a-lot.js", "../../mediana/src/median-of-a-few.js", "../../mediana/src/index.js", "../../calc-stats/calc-stats.js", "../../guess-image-layout/guess-image-layout.js", "../../calc-image-stats/src/calc-image-stats.js", "../../pixel-utils/dist/cjs/add-alpha/index.js", "../../pixel-utils/dist/cjs/make-no-data-rgba/index.js", "../../pixel-utils/dist/cjs/make-no-data-rgba-string/index.js", "../../pixel-utils/dist/cjs/raw-to-rgba/convert-single.js", "../../pixel-utils/dist/cjs/raw-to-rgba/convert-single-str.js", "../../pixel-utils/dist/cjs/raw-to-rgba/convert-double.js", "../../pixel-utils/dist/cjs/raw-to-rgba/convert-double-str.js", "../../pixel-utils/dist/cjs/raw-to-rgba/convert-double-all.js", "../../pixel-utils/dist/cjs/raw-to-rgba/convert-double-all-str.js", "../../pixel-utils/dist/cjs/raw-to-rgba/convert-multiband.js", "../../pixel-utils/dist/cjs/raw-to-rgba/convert-multiband-str.js", "../../pixel-utils/dist/cjs/raw-to-rgba/convert-multiband-all.js", "../../pixel-utils/dist/cjs/raw-to-rgba/convert-multiband-all-str.js", "../../pixel-utils/dist/cjs/raw-to-rgba/index.js", "../../pixel-utils/dist/cjs/enums.js", "../../pixel-utils/dist/cjs/select-pixel/select-pixel-from-brc.js", "../../pixel-utils/dist/cjs/select-pixel/select-pixel-from-b-r-c.js", "../../pixel-utils/dist/cjs/select-pixel/select-pixel-from-b-rc.js", "../../pixel-utils/dist/cjs/select-pixel/select-pixel-from-rcb.js", "../../pixel-utils/dist/cjs/select-pixel/select-pixel-from-rc-b.js", "../../pixel-utils/dist/cjs/select-pixel/select-pixel-from-r-c-b.js", "../../pixel-utils/dist/cjs/select-pixel/select-pixel-from-r-cb.js", "../../pixel-utils/dist/cjs/select-pixel/index.js", "../../pixel-utils/dist/cjs/fit/index.js", "../../pixel-utils/dist/cjs/has-no-data/index.js", "../../pixel-utils/dist/cjs/hide-rgba/index.js", "../../pixel-utils/dist/cjs/is-hidden/index.js", "../../pixel-utils/dist/cjs/is-no-data/index.js", "../../pixel-utils/dist/cjs/make-no-data-rgb/index.js", "../../pixel-utils/dist/cjs/pop-alpha/index.js", "../../pixel-utils/dist/cjs/range/index.js", "../../pixel-utils/dist/cjs/raw-to-rgb/convert-single.js", "../../pixel-utils/dist/cjs/raw-to-rgb/convert-single-str.js", "../../pixel-utils/dist/cjs/raw-to-rgb/convert-double.js", "../../pixel-utils/dist/cjs/raw-to-rgb/convert-double-str.js", "../../pixel-utils/dist/cjs/raw-to-rgb/convert-triple.js", "../../pixel-utils/dist/cjs/raw-to-rgb/convert-triple-str.js", "../../pixel-utils/dist/cjs/raw-to-rgb/convert-many.js", "../../pixel-utils/dist/cjs/raw-to-rgb/convert-many-str.js", "../../pixel-utils/dist/cjs/rgb-to-str/index.js", "../../pixel-utils/dist/cjs/raw-to-rgb/index.js", "../../pixel-utils/dist/cjs/push-alpha/index.js", "../../pixel-utils/dist/cjs/rgb-to-rgba/safely-convert.js", "../../pixel-utils/dist/cjs/rgb-to-rgba/quickly-convert.js", "../../pixel-utils/dist/cjs/rgb-to-rgba/index.js", "../../pixel-utils/dist/cjs/slice-alpha/index.js", "../../pixel-utils/dist/cjs/rgba-to-rgb/safely-convert.js", "../../pixel-utils/dist/cjs/rgba-to-rgb/quickly-convert.js", "../../pixel-utils/dist/cjs/rgba-to-rgb/index.js", "../../pixel-utils/dist/cjs/set-hidden/index.js", "../../pixel-utils/dist/cjs/set-visible/index.js", "../../pixel-utils/dist/cjs/show-rgba/index.js", "../../pixel-utils/dist/cjs/index.js", "../../geowarp-canvas/index.js", "../../snap-bbox/lib/snap-bbox.js", "../../snap-bbox/lib/snap-precise-bbox.js", "../../snap-bbox/lib/index.js", "../../microlink/esm/enums.js", "../../microlink/esm/serialize.js", "../../microlink/esm/batch.js", "../../microlink/esm/batchcall.js", "../../microlink/esm/deserialize.js", "../../microlink/esm/call.js", "../../microlink/esm/wrap.js", "../../frame-worker/frame-worker.js", "../../geotiff-tile-web-worker/lib/worker-string.prod.js", "../../geotiff-tile-web-worker/lib/index.prod.js", "../../geotiff-epsg-code/index.cjs", "../../geotiff-geotransform/index.js", "../../geotiff-read-bbox/index.cjs", "../../geotiff-precise-no-data/geotiff-precise-no-data.js", "../../geotiff-no-data/geotiff-no-data.js", "../../geotiff-tile/dist/cjs/geotiff-tile.js", "../../georaster-stack/core/index.js", "../../georaster-stack/web/index.js", "../../georaster-layer-for-leaflet/dist/v3/babel/esm/georaster-layer-for-leaflet.js", "../../pixel-utils/dist/esm/fit/index.js", "../../pixel-utils/dist/esm/raw-to-rgba/index.js", "../../pixel-utils/dist/esm/enums.js", "../../pixel-utils/dist/esm/make-no-data-rgb/index.js", "../../pixel-utils/dist/esm/raw-to-rgb/index.js", "../../pixel-utils/dist/esm/raw-to-rgb/convert-single.js", "../../pixel-utils/dist/esm/raw-to-rgb/convert-single-str.js", "../../pixel-utils/dist/esm/raw-to-rgb/convert-double.js", "../../pixel-utils/dist/esm/raw-to-rgb/convert-double-str.js", "../../pixel-utils/dist/esm/raw-to-rgb/convert-triple.js", "../../pixel-utils/dist/esm/raw-to-rgb/convert-triple-str.js", "../../pixel-utils/dist/esm/raw-to-rgb/convert-many.js", "../../pixel-utils/dist/esm/raw-to-rgb/convert-many-str.js", "../../pixel-utils/dist/esm/rgb-to-str/index.js", "../../geo-extent/dist/geo-extent.mjs"],
  "sourcesContent": ["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per GeneratorResume behavior specified since ES2015:\n        // ES2015 spec, step 3: https://262.ecma-international.org/6.0/#sec-generatorresume\n        // Latest spec, step 2: https://tc39.es/ecma262/#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next method, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable != null) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    throw new TypeError(typeof iterable + \" is not iterable\");\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n", "function addSymbolIterator(obj) {\n  try {\n    obj[Symbol.iterator] = function () {\n      return this;\n    };\n  } catch (error) {\n    // pass\n  }\n}\n\nfunction addSymbolIteratorFallback(obj) {\n  obj[\"@@iterator\"] = function () {\n    return this;\n  };\n}\n\nfunction wrapNextFunction(next) {\n  const iter = { next };\n  addSymbolIterator(iter);\n  addSymbolIteratorFallback(iter);\n  return iter;\n}\n\nfunction isArray(data) {\n  try {\n    return data.constructor.name.endsWith(\"Array\");\n  } catch {\n    return false;\n  }\n}\n\nfunction hasNext(data) {\n  try {\n    return typeof data.next === \"function\";\n  } catch {\n    return false;\n  }\n}\n\nfunction hasIterator(data) {\n  try {\n    return \"@@iterator\" in data;\n  } catch {\n    return false;\n  }\n}\n\nfunction hasSymbolIterator(data) {\n  try {\n    return Symbol.iterator in data.constructor.prototype;\n  } catch {\n    return false;\n  }\n}\n\nfunction isIterator(data) {\n  try {\n    return (\n      Symbol.iterator in data &&\n      typeof data.next === \"function\" &&\n      data.propertyIsEnumerable(\"next\") === false\n    );\n  } catch {\n    return false;\n  }\n}\n\nfunction getIterator(data) {\n  const iter = data[\"@@iterator\"];\n  if (hasNext(iter)) {\n    return iter;\n  } else if (typeof iter === \"function\") {\n    return iter();\n  }\n}\n\nfunction createIterator(data) {\n  let i = 0;\n  let len = data.length;\n  const next = () =>\n    i++ < len ? { value: data[i], done: false } : { done: true };\n  return wrapNextFunction(next);\n}\n\nfunction getOrCreateIterator(data) {\n  if (isIterator(data)) {\n    return data;\n  } else if (hasSymbolIterator(data)) {\n    return data[Symbol.iterator]();\n  } else if (hasNext(data)) {\n    return wrapNextFunction(data.next);\n  } else if (hasIterator(data)) {\n    return getIterator(data);\n  } else if (typeof data === \"string\" || isArray(data)) {\n    return createIterator(data);\n  } else {\n    throw \"[iter-fun] unable to determine iterator\";\n  }\n}\n\nfunction zip(iters) {\n  // convert input to iters just in case\n  iters = iters.map(getOrCreateIterator);\n\n  return wrapNextFunction(function next() {\n    const values = iters.map(iter => iter.next());\n    // if they are all done, stop\n    if (values.every(({ done }) => done)) {\n      return { done: true };\n    } else {\n      return {\n        done: false,\n        value: values.map(({ value }) => value)\n      };\n    }\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = {\n    addSymbolIterator,\n    addSymbolIteratorFallback,\n    isIterator,\n    isArray,\n    hasNext,\n    hasSymbolIterator,\n    hasIterator,\n    getIterator,\n    createIterator,\n    getOrCreateIterator,\n    wrapNextFunction,\n    zip\n  };\n}\n", "module.exports = {\n  \"1\": function ({ point }) { const parent = this.data; const index = point[this.d0v0]; return { parent, index, value: parent[index] }; },\n  \"2\": function ({ point }) { const parent = this.data; const index = this.m0v0*point[this.d0v0]+this.m0v1*point[this.d0v1]; return { parent, index, value: parent[index] }; },\n  \"3\": function ({ point }) { const parent = this.data; const index = this.m0v0*point[this.d0v0]+this.m0v1*point[this.d0v1]+this.m0v2*point[this.d0v2]; return { parent, index, value: parent[index] }; },\n  \"4\": function ({ point }) { const parent = this.data; const index = this.m0v0*point[this.d0v0]+this.m0v1*point[this.d0v1]+this.m0v2*point[this.d0v2]+this.m0v3*point[this.d0v3]; return { parent, index, value: parent[index] }; },\n  \"5\": function ({ point }) { const parent = this.data; const index = this.m0v0*point[this.d0v0]+this.m0v1*point[this.d0v1]+this.m0v2*point[this.d0v2]+this.m0v3*point[this.d0v3]+this.m0v4*point[this.d0v4]; return { parent, index, value: parent[index] }; },\n  \"1,1\": function ({ point }) { const parent = this.data[point[this.d0v0]]; const index = point[this.d1v0]; return { parent, index, value: parent[index] }; },\n  \"1,2\": function ({ point }) { const parent = this.data[point[this.d0v0]]; const index = this.m1v0*point[this.d1v0]+this.m1v1*point[this.d1v1]; return { parent, index, value: parent[index] }; },\n  \"1,3\": function ({ point }) { const parent = this.data[point[this.d0v0]]; const index = this.m1v0*point[this.d1v0]+this.m1v1*point[this.d1v1]+this.m1v2*point[this.d1v2]; return { parent, index, value: parent[index] }; },\n  \"1,4\": function ({ point }) { const parent = this.data[point[this.d0v0]]; const index = this.m1v0*point[this.d1v0]+this.m1v1*point[this.d1v1]+this.m1v2*point[this.d1v2]+this.m1v3*point[this.d1v3]; return { parent, index, value: parent[index] }; },\n  \"1,5\": function ({ point }) { const parent = this.data[point[this.d0v0]]; const index = this.m1v0*point[this.d1v0]+this.m1v1*point[this.d1v1]+this.m1v2*point[this.d1v2]+this.m1v3*point[this.d1v3]+this.m1v4*point[this.d1v4]; return { parent, index, value: parent[index] }; },\n  \"1,1,1\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]]; const index = point[this.d2v0]; return { parent, index, value: parent[index] }; },\n  \"1,1,2\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]]; const index = this.m2v0*point[this.d2v0]+this.m2v1*point[this.d2v1]; return { parent, index, value: parent[index] }; },\n  \"1,1,3\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]]; const index = this.m2v0*point[this.d2v0]+this.m2v1*point[this.d2v1]+this.m2v2*point[this.d2v2]; return { parent, index, value: parent[index] }; },\n  \"1,1,4\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]]; const index = this.m2v0*point[this.d2v0]+this.m2v1*point[this.d2v1]+this.m2v2*point[this.d2v2]+this.m2v3*point[this.d2v3]; return { parent, index, value: parent[index] }; },\n  \"1,1,5\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]]; const index = this.m2v0*point[this.d2v0]+this.m2v1*point[this.d2v1]+this.m2v2*point[this.d2v2]+this.m2v3*point[this.d2v3]+this.m2v4*point[this.d2v4]; return { parent, index, value: parent[index] }; },\n  \"1,1,1,1\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]]; const index = point[this.d3v0]; return { parent, index, value: parent[index] }; },\n  \"1,1,1,2\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]]; const index = this.m3v0*point[this.d3v0]+this.m3v1*point[this.d3v1]; return { parent, index, value: parent[index] }; },\n  \"1,1,1,3\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]]; const index = this.m3v0*point[this.d3v0]+this.m3v1*point[this.d3v1]+this.m3v2*point[this.d3v2]; return { parent, index, value: parent[index] }; },\n  \"1,1,1,4\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]]; const index = this.m3v0*point[this.d3v0]+this.m3v1*point[this.d3v1]+this.m3v2*point[this.d3v2]+this.m3v3*point[this.d3v3]; return { parent, index, value: parent[index] }; },\n  \"1,1,1,5\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]]; const index = this.m3v0*point[this.d3v0]+this.m3v1*point[this.d3v1]+this.m3v2*point[this.d3v2]+this.m3v3*point[this.d3v3]+this.m3v4*point[this.d3v4]; return { parent, index, value: parent[index] }; },\n  \"1,1,1,1,1\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]]; const index = point[this.d4v0]; return { parent, index, value: parent[index] }; },\n  \"1,1,1,1,2\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]]; const index = this.m4v0*point[this.d4v0]+this.m4v1*point[this.d4v1]; return { parent, index, value: parent[index] }; },\n  \"1,1,1,1,3\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]]; const index = this.m4v0*point[this.d4v0]+this.m4v1*point[this.d4v1]+this.m4v2*point[this.d4v2]; return { parent, index, value: parent[index] }; },\n  \"1,1,1,1,4\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]]; const index = this.m4v0*point[this.d4v0]+this.m4v1*point[this.d4v1]+this.m4v2*point[this.d4v2]+this.m4v3*point[this.d4v3]; return { parent, index, value: parent[index] }; },\n  \"1,1,1,1,5\": function ({ point }) { const parent = this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]]; const index = this.m4v0*point[this.d4v0]+this.m4v1*point[this.d4v1]+this.m4v2*point[this.d4v2]+this.m4v3*point[this.d4v3]+this.m4v4*point[this.d4v4]; return { parent, index, value: parent[index] }; }\n}", "module.exports = {\n  \"1\": function ({ point, value }) { this.data[point[this.d0v0]] = value; },\n  \"2\": function ({ point, value }) { this.data[this.m0v0*point[this.d0v0]+this.m0v1*point[this.d0v1]] = value; },\n  \"3\": function ({ point, value }) { this.data[this.m0v0*point[this.d0v0]+this.m0v1*point[this.d0v1]+this.m0v2*point[this.d0v2]] = value; },\n  \"4\": function ({ point, value }) { this.data[this.m0v0*point[this.d0v0]+this.m0v1*point[this.d0v1]+this.m0v2*point[this.d0v2]+this.m0v3*point[this.d0v3]] = value; },\n  \"5\": function ({ point, value }) { this.data[this.m0v0*point[this.d0v0]+this.m0v1*point[this.d0v1]+this.m0v2*point[this.d0v2]+this.m0v3*point[this.d0v3]+this.m0v4*point[this.d0v4]] = value; },\n  \"1,1\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]] = value; },\n  \"1,2\": function ({ point, value }) { this.data[point[this.d0v0]][this.m1v0*point[this.d1v0]+this.m1v1*point[this.d1v1]] = value; },\n  \"1,3\": function ({ point, value }) { this.data[point[this.d0v0]][this.m1v0*point[this.d1v0]+this.m1v1*point[this.d1v1]+this.m1v2*point[this.d1v2]] = value; },\n  \"1,4\": function ({ point, value }) { this.data[point[this.d0v0]][this.m1v0*point[this.d1v0]+this.m1v1*point[this.d1v1]+this.m1v2*point[this.d1v2]+this.m1v3*point[this.d1v3]] = value; },\n  \"1,5\": function ({ point, value }) { this.data[point[this.d0v0]][this.m1v0*point[this.d1v0]+this.m1v1*point[this.d1v1]+this.m1v2*point[this.d1v2]+this.m1v3*point[this.d1v3]+this.m1v4*point[this.d1v4]] = value; },\n  \"1,1,1\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]] = value; },\n  \"1,1,2\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][this.m2v0*point[this.d2v0]+this.m2v1*point[this.d2v1]] = value; },\n  \"1,1,3\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][this.m2v0*point[this.d2v0]+this.m2v1*point[this.d2v1]+this.m2v2*point[this.d2v2]] = value; },\n  \"1,1,4\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][this.m2v0*point[this.d2v0]+this.m2v1*point[this.d2v1]+this.m2v2*point[this.d2v2]+this.m2v3*point[this.d2v3]] = value; },\n  \"1,1,5\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][this.m2v0*point[this.d2v0]+this.m2v1*point[this.d2v1]+this.m2v2*point[this.d2v2]+this.m2v3*point[this.d2v3]+this.m2v4*point[this.d2v4]] = value; },\n  \"1,1,1,1\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]] = value; },\n  \"1,1,1,2\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][this.m3v0*point[this.d3v0]+this.m3v1*point[this.d3v1]] = value; },\n  \"1,1,1,3\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][this.m3v0*point[this.d3v0]+this.m3v1*point[this.d3v1]+this.m3v2*point[this.d3v2]] = value; },\n  \"1,1,1,4\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][this.m3v0*point[this.d3v0]+this.m3v1*point[this.d3v1]+this.m3v2*point[this.d3v2]+this.m3v3*point[this.d3v3]] = value; },\n  \"1,1,1,5\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][this.m3v0*point[this.d3v0]+this.m3v1*point[this.d3v1]+this.m3v2*point[this.d3v2]+this.m3v3*point[this.d3v3]+this.m3v4*point[this.d3v4]] = value; },\n  \"1,1,1,1,1\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]][point[this.d4v0]] = value; },\n  \"1,1,1,1,2\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]][this.m4v0*point[this.d4v0]+this.m4v1*point[this.d4v1]] = value; },\n  \"1,1,1,1,3\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]][this.m4v0*point[this.d4v0]+this.m4v1*point[this.d4v1]+this.m4v2*point[this.d4v2]] = value; },\n  \"1,1,1,1,4\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]][this.m4v0*point[this.d4v0]+this.m4v1*point[this.d4v1]+this.m4v2*point[this.d4v2]+this.m4v3*point[this.d4v3]] = value; },\n  \"1,1,1,1,5\": function ({ point, value }) { this.data[point[this.d0v0]][point[this.d1v0]][point[this.d2v0]][point[this.d3v0]][this.m4v0*point[this.d4v0]+this.m4v1*point[this.d4v1]+this.m4v2*point[this.d4v2]+this.m4v3*point[this.d4v3]+this.m4v4*point[this.d4v4]] = value; }\n}", "const layoutCache = {};\nconst { wrapNextFunction } = require(\"iter-fun\");\nconst preparedSelectFunctions = require(\"./prepared-select-funcs.js\");\nconst preparedUpdateFunctions = require(\"./prepared-update-funcs.js\");\n\nconst ARRAY_TYPES = {\n  Array,\n  Int8Array,\n  Uint8Array,\n  Uint8ClampedArray,\n  Int16Array,\n  Uint16Array,\n  Float32Array,\n  Float64Array\n};\n\ntry {\n  ARRAY_TYPES.BigInt64Array = BigInt64Array;\n  ARRAY_TYPES.BigUint64Array = BigUint64Array;\n} catch (error) {\n  // pass\n}\n\nfunction parseDimensions(str) {\n  const dims = {};\n  const re = /[A-Za-z]+/g;\n  let arr;\n  while ((arr = re.exec(str)) !== null) {\n    const [match] = arr;\n    dims[match] = {\n      name: match\n    };\n  }\n  return dims;\n}\n\nfunction normalizeLayoutString(str) {\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  let i = 0;\n  return str.replace(/[A-Za-z]+/g, () => alphabet[i++]);\n}\n\nconst parseVectors = str => str.match(/\\[[^\\]]+\\]/g);\n\n// \"[row]\" to \"row\"\nconst removeBraces = str => (str.startsWith(\"[\") && str.endsWith(\"]\") ? str.substring(1, str.length - 1) : str);\n\n// \"(row)\" to \"row\"\nconst removeParentheses = str => (str.startsWith(\"(\") && str.endsWith(\")\") ? str.substring(1, str.length - 1) : str);\n\n// sort of like parsing a CSV except instead of \" for quotes use (\nconst matchSequences = str => str.match(/(\\(.*?\\)|[^\\(,\\s]+)(?=\\s*,|\\s*$)/g);\n\nconst parseSequences = str => {\n  // unwrap [...]\n  str = removeBraces(str);\n\n  // unwrap (...)\n  str = removeParentheses(str);\n\n  const seqs = matchSequences(str);\n\n  if (seqs.length === 1) {\n    return {\n      type: \"Vector\",\n      dim: seqs[0]\n    };\n  } else {\n    return {\n      type: \"Matrix\",\n      parts: seqs.map(parseSequences)\n    };\n  }\n};\n\nfunction checkValidity(str) {\n  const invalid = str.match(/[^ A-Za-z,\\[\\]]/g);\n  if (invalid) {\n    throw new Error(\"The following invalid characters were used: \" + invalid.map(c => `\"${c}\"`).join(\", \"));\n  } else {\n    return true;\n  }\n}\n\nfunction parse(str, { useLayoutCache = true } = { useLayoutCache: true }) {\n  if (useLayoutCache && str in layoutCache) return layoutCache[str];\n\n  checkValidity(str);\n\n  const vectors = parseVectors(str);\n  const dims = vectors.map(parseSequences);\n  const result = {\n    type: \"Layout\",\n    summary: dims.map(it => (it.type === \"Matrix\" ? it.parts.length : 1)),\n    dims\n  };\n\n  if (useLayoutCache) layoutCache[str] = result;\n\n  return result;\n}\n\nfunction update({ useLayoutCache = true, data, layout, point, sizes = {}, value }) {\n  if (typeof layout === \"string\") layout = parse(layout, { useLayoutCache });\n\n  const { dims } = layout;\n  for (let idim = 0; idim < dims.length; idim++) {\n    const last = idim === dims.length - 1;\n    const arr = dims[idim];\n    let offset;\n    if (arr.type === \"Vector\") {\n      offset = point[arr.dim];\n    } else {\n      // arr.type assumed to be \"Matrix\"\n      const { parts } = arr;\n      offset = 0;\n      let multiplier = 1;\n      for (let i = parts.length - 1; i >= 0; i--) {\n        const part = parts[i];\n        const { dim } = part;\n        offset += multiplier * point[dim];\n        if (i > 0) {\n          if (!(dim in sizes)) throw new Error(`you cannot calculate the location without knowing the size of the \"${dim}\" dimension.`);\n          multiplier *= sizes[dim];\n        }\n      }\n    }\n    if (last) {\n      data[offset] = value;\n    } else {\n      data = data[offset];\n    }\n  }\n}\n\nfunction prepareUpdate({ useLayoutCache = true, data, layout, sizes = {} }) {\n  if (typeof layout === \"string\") {\n    layout = parse(layout, { useLayoutCache });\n  }\n  const { dims } = layout;\n  const numDims = dims.length;\n  const multipliers = getMultipliers({ useLayoutCache, layout, sizes });\n  const end = numDims - 1;\n\n  const key = layout.summary.toString();\n  if (key in preparedUpdateFunctions) {\n    const _this = { data };\n    layout.dims.map((it, depth) => {\n      if (it.type === \"Vector\") {\n        _this[`d${depth}v0`] = it.dim;\n      } else if (it.type === \"Matrix\") {\n        it.parts.forEach((part, ipart) => {\n          _this[`d${depth}v${ipart}`] = part.dim;\n          _this[`m${depth}v${ipart}`] = multipliers[part.dim];\n        });\n      }\n    });\n\n    return preparedUpdateFunctions[key].bind(_this);\n  }\n\n  return ({ point, value }) => {\n    let currentData = data;\n    for (let idim = 0; idim < numDims; idim++) {\n      const last = idim === end;\n      const arr = dims[idim];\n      let offset;\n      if (arr.type === \"Vector\") {\n        offset = point[arr.dim];\n      } else {\n        // arr.type assumed to be \"Matrix\"\n        offset = arr.parts.reduce((acc, { dim }) => acc + multipliers[dim] * point[dim], 0);\n      }\n      if (last) {\n        currentData[offset] = value;\n      } else {\n        currentData = currentData[offset];\n      }\n    }\n  };\n}\n\nfunction iterClip({ data, layout, order, rect = {}, sizes = {}, useLayoutCache = true }) {\n  if (!data) throw new Error(\"[xdim] must specify data\");\n  if (!layout) throw new Error(\"[xdim] must specify layout\");\n  const points = iterPoints({ order, sizes, rect });\n  return wrapNextFunction(function next() {\n    const { value: point, done } = points.next();\n    if (done) {\n      return { done: true };\n    } else {\n      const { value } = select({ data, layout, point, sizes, useLayoutCache });\n      return { done: false, value };\n    }\n  });\n}\n\nfunction validateRect({ rect = {} }) {\n  if (rect) {\n    for (let key in rect) {\n      const value = rect[key];\n      if (value.length !== 2) throw new Error(`[xdim] uh oh. invalid hyper-rectangle`);\n      const [start, end] = value;\n      if (start > end) throw new Error(`[xdim] uh oh. invalid range for \"${key}\".  Start of ${start} can't be greater than end of ${end}.`);\n      if (start < 0) throw new Error(`[xdim] uh oh. invalid hyper-rectangle with start ${start}`);\n    }\n  }\n}\n\nfunction clip({ useLayoutCache = true, data, layout, rect, sizes = {}, flat = false, validate = true }) {\n  if (validate) validateRect({ rect });\n\n  if (typeof layout === \"string\") layout = parse(layout, { useLayoutCache });\n\n  let datas = [data];\n\n  layout.dims.forEach(arr => {\n    let new_datas = [];\n    datas.forEach(data => {\n      if (arr.type === \"Vector\") {\n        const [start, end] = rect[arr.dim];\n        new_datas = new_datas.concat(data.slice(start, end + 1));\n      } else {\n        // only 2 types so must be arr.type === \"Matrix\"\n        const { parts } = arr;\n        let offsets = [0];\n        let multiplier = 1;\n        for (let i = parts.length - 1; i >= 0; i--) {\n          const part = parts[i];\n          // assume part.type === \"Vector\"\n          const { dim } = part;\n          const [start, end] = rect[dim];\n          const new_offsets = [];\n          for (let n = start; n <= end; n++) {\n            offsets.forEach(offset => {\n              new_offsets.push(offset + multiplier * n);\n            });\n          }\n          offsets = new_offsets;\n          multiplier *= sizes[dim];\n        }\n        offsets.forEach(offset => {\n          new_datas.push(data[offset]);\n        });\n      }\n    });\n    datas = new_datas;\n  });\n\n  if (flat) {\n    return {\n      data: datas\n    };\n  }\n\n  // prepareResult\n  const out_sizes = Object.fromEntries(Object.entries(rect).map(([dim, [start, end]]) => [dim, end - start + 1]));\n\n  const { data: out_data } = prepareData({\n    layout,\n    sizes: out_sizes\n  });\n\n  const max_depth = layout.dims.length;\n\n  const step = (arr, depth) => {\n    if (depth === max_depth) {\n      for (let i = 0; i < arr.length; i++) {\n        arr[i] = datas.shift();\n      }\n    } else {\n      arr.forEach(sub => step(sub, depth + 1));\n    }\n  };\n  step(out_data, 1);\n\n  return { data: out_data };\n}\n\nfunction getMultipliers({ useLayoutCache = true, layout, sizes }) {\n  if (typeof layout === \"string\") {\n    layout = parse(layout, { useLayoutCache });\n  }\n  const { dims } = layout;\n  const numDims = dims.length;\n  let multipliers = {};\n  for (let idim = 0; idim < numDims; idim++) {\n    const arr = dims[idim];\n    if (arr.type === \"Vector\") {\n      multipliers[arr.dim] = 1;\n    } else {\n      // arr.type assumed to be \"Matrix\"\n      const { parts } = arr;\n      let multiplier = 1;\n      for (let i = parts.length - 1; i >= 0; i--) {\n        const { dim } = parts[i];\n        multipliers[dim] = multiplier;\n        multiplier *= sizes[parts[i].dim];\n      }\n    }\n  }\n  return multipliers;\n}\n\nfunction prepareSelect({ useLayoutCache = true, data, layout, sizes = {} }) {\n  if (typeof layout === \"string\") {\n    layout = parse(layout, { useLayoutCache });\n  }\n  const { dims } = layout;\n  const numDims = dims.length;\n  const multipliers = getMultipliers({ useLayoutCache, layout, sizes });\n  const end = numDims - 1;\n\n  const key = layout.summary.toString();\n  if (key in preparedSelectFunctions) {\n    const _this = { data };\n    layout.dims.map((it, depth) => {\n      if (it.type === \"Vector\") {\n        _this[`d${depth}v0`] = it.dim;\n      } else if (it.type === \"Matrix\") {\n        it.parts.forEach((part, ipart) => {\n          _this[`d${depth}v${ipart}`] = part.dim;\n          _this[`m${depth}v${ipart}`] = multipliers[part.dim];\n        });\n      }\n    });\n\n    return preparedSelectFunctions[key].bind(_this);\n  }\n\n  return ({ point }) => {\n    let currentData = data;\n    for (let idim = 0; idim < numDims; idim++) {\n      const last = idim === end;\n      const arr = dims[idim];\n      let offset;\n      if (arr.type === \"Vector\") {\n        offset = point[arr.dim];\n      } else {\n        // arr.type assumed to be \"Matrix\"\n        offset = arr.parts.reduce((acc, { dim }) => acc + multipliers[dim] * point[dim], 0);\n      }\n      if (last) {\n        return {\n          index: offset,\n          parent: currentData,\n          value: currentData[offset]\n        };\n      } else {\n        currentData = currentData[offset];\n      }\n    }\n  };\n}\n\nfunction select({ useLayoutCache = true, data, layout, point, sizes = {} }) {\n  // converts layout expression to a layout object\n  if (typeof layout === \"string\") {\n    layout = parse(layout, { useLayoutCache });\n  }\n\n  let parent;\n  let index;\n  let value = data;\n  // dims are arrays\n  const { dims } = layout;\n  const len = dims.length;\n  for (let idim = 0; idim < len; idim++) {\n    const arr = dims[idim];\n    if (arr.type === \"Vector\") {\n      const i = point[arr.dim];\n      parent = value;\n      index = i;\n      value = value[i];\n    } else {\n      // only 2 types so must be a Matrix\n      const { parts } = arr;\n      let offset = 0;\n      let multiplier = 1;\n      for (let i = parts.length - 1; i >= 0; i--) {\n        const part = parts[i];\n        if (part.type === \"Vector\") {\n          const { dim } = part;\n          offset += multiplier * point[dim];\n          if (i > 0) {\n            if (!(dim in sizes)) throw new Error(`you cannot calculate the location without knowing the size of the \"${dim}\" dimension.`);\n            multiplier *= sizes[dim];\n          }\n        }\n      }\n      parent = value;\n      index = offset;\n      value = value[offset];\n    }\n  }\n\n  return { index, value, parent };\n}\n\n// add dimensions to an array until the limit reaches zero\nfunction addDims({ arr, fill = undefined, lens, arrayTypes }) {\n  // no new dimensions to add\n  if (lens.length === 0) return arr;\n\n  const len = lens[0];\n  if (lens.length === 1) {\n    const lastArrayType = arrayTypes ? arrayTypes[arrayTypes.length - 1] : \"Array\";\n    for (let i = 0; i < arr.length; i++) {\n      arr[i] = new ARRAY_TYPES[lastArrayType](len).fill(fill);\n    }\n  } else {\n    for (let i = 0; i < arr.length; i++) {\n      const sub = new Array(len).fill(fill);\n      arr[i] = sub;\n      addDims({ arr: sub, fill, lens: lens.slice(1), arrayTypes });\n    }\n  }\n  return arr;\n}\n\n// to-do: maybe only call fill if not undefined or default typed array value?\nfunction createMatrix({ fill = undefined, shape, arrayTypes }) {\n  const len = shape[0];\n  if (shape.length === 1) {\n    if (Array.isArray(arrayTypes) && arrayTypes.length !== 1) throw new Error(\"[xdim] shape and arrayTypes have different lengths\");\n    const arrayType = Array.isArray(arrayTypes) ? arrayTypes[0] : \"Array\";\n    return new ARRAY_TYPES[arrayType](len).fill(fill);\n  }\n  const arr = new Array(len).fill(fill);\n  return addDims({ arr, fill, lens: shape.slice(1), arrayTypes });\n}\n\n// generates an in-memory data structure to hold the data\nfunction prepareData({ fill = undefined, layout, useLayoutCache = true, sizes, arrayTypes }) {\n  if (typeof layout === \"string\") layout = parse(layout, { useLayoutCache });\n\n  // console.log(\"layout:\", layout);\n  const shape = layout.dims.map(it => {\n    if (it.type === \"Vector\") {\n      return sizes[it.dim];\n    } else if (it.type === \"Matrix\") {\n      return it.parts.reduce((total, part) => {\n        if (!(part.dim in sizes)) throw new Error(`[xdim] could not find \"${part.dim}\" in sizes: { ${Object.keys(sizes).join(\", \")} }`);\n        return total * sizes[part.dim];\n      }, 1);\n    }\n  });\n\n  const data = createMatrix({ fill, shape, arrayTypes });\n\n  return { data, shape, arrayTypes };\n}\n\n// assume positive step\nfunction iterRange({ start = 0, end = 100 }) {\n  let i = start - 1;\n  end = end + 1;\n  return wrapNextFunction(function next() {\n    i++;\n    if (i === end) {\n      return { done: true };\n    } else {\n      return { done: false, value: i };\n    }\n  });\n}\n\n// iterate over all the points, saving memory vs array\nfunction iterPoints({ order, sizes, rect = {} }) {\n  // names sorted by shortest dimension to longest dimension\n  const names = Array.isArray(order) ? order : Object.keys(sizes).sort((a, b) => sizes[a] - sizes[b]);\n\n  const iters = new Array(names.length);\n  const current = {};\n  for (let i = 0; i < names.length - 1; i++) {\n    const name = names[i];\n    const [start, end] = rect[name] || [0, sizes[name] - 1];\n    iters[i] = iterRange({ start: start + 1, end });\n    current[name] = start;\n  }\n  const lastName = names[names.length - 1];\n  const [start, end] = rect[lastName] || [0, sizes[lastName] - 1];\n  iters[iters.length - 1] = iterRange({ start: start, end });\n  current[lastName] = start - 1;\n\n  // permutate\n  return wrapNextFunction(function next() {\n    for (let i = iters.length - 1; i >= 0; i--) {\n      const { value, done } = iters[i].next();\n\n      if (done) {\n        if (i === 0) {\n          // we have exhausted all of the permutations\n          return { done: true };\n        }\n      } else {\n        // add iters for the remaining dims\n        for (let ii = i + 1; ii < iters.length; ii++) {\n          const nameii = names[ii];\n          const [start, end] = rect[nameii] || [0, sizes[nameii] - 1];\n          iters[ii] = iterRange({ start: start + 1, end });\n          current[nameii] = start;\n        }\n\n        current[names[i]] = value;\n\n        return { value: current, done: false };\n      }\n    }\n  });\n}\n\nfunction transform({ data, fill = undefined, from, to, sizes, useLayoutCache = true }) {\n  if (typeof from === \"string\") from = parse(from, { useLayoutCache });\n  if (typeof to === \"string\") to = parse(to, { useLayoutCache });\n\n  const { data: out_data } = prepareData({ fill, layout: to, sizes });\n\n  const update = prepareUpdate({\n    useLayoutCache,\n    data: out_data,\n    layout: to,\n    sizes\n  });\n\n  const points = iterPoints({ sizes });\n\n  for (point of points) {\n    const { value } = select({\n      data,\n      layout: from,\n      point,\n      sizes\n    });\n\n    // insert into new frame\n    update({\n      point,\n      value\n    });\n  }\n\n  return { data: out_data };\n}\n\nmodule.exports = {\n  addDims,\n  checkValidity,\n  createMatrix,\n  iterClip,\n  iterRange,\n  iterPoints,\n  matchSequences,\n  parse,\n  parseDimensions,\n  parseSequences,\n  parseVectors,\n  prepareData,\n  prepareSelect,\n  prepareUpdate,\n  removeBraces,\n  removeParentheses,\n  select,\n  transform,\n  update,\n  clip,\n  validateRect\n};\n", "// to-do: provide offsets, so evenly distributed when rounding\n\nfunction _identity(n) {\n  return n;\n}\n\nfunction _scale_number(old_min, old_range, new_min, new_range, n) {\n  return new_min + (new_range * (n - old_min)) / old_range;\n}\n\nfunction _scale_and_flip_number(old_min, old_range, new_max, new_range, n) {\n  return new_max - (new_range * (n - old_min)) / old_range;\n}\n\nfunction _scale_and_round_number(old_min, old_range, new_min, new_range, n) {\n  return Math.round(new_min + (new_range * (n - old_min)) / old_range);\n}\n\nfunction _scale_and_flip_and_round_number(old_min, old_range, new_max, new_range, n) {\n  return Math.round(new_max - (new_range * (n - old_min)) / old_range);\n}\n\n// assuming not no data\nfunction createScaleFunction([old_min, old_max], [new_min, new_max], { flip, no_range_value, no_range_value_strategy = \"highest\", round = false } = {}) {\n  const old_range = old_max - old_min;\n  const new_range = new_max - new_min;\n\n  if (old_range === 0) {\n    if (typeof no_range_value === \"number\") {\n      return _identity.bind(null, no_range_value);\n    } else if (no_range_value_strategy === \"highest\") {\n      return _identity.bind(null, new_max);\n    } else if (no_range_value_strategy === \"lowest\") {\n      return _identity.bind(null, new_min);\n    } else if (no_range_value_strategy === \"middle\") {\n      let n = (new_max - new_min) / 2;\n      if (round) n = Math.round(n);\n      return _identity.bind(null, n);\n    }\n  }\n\n  if (flip) {\n    if (round) {\n      return _scale_and_flip_and_round_number.bind(null, old_min, old_range, new_max, new_range);\n    } else {\n      return _scale_and_flip_number.bind(null, old_min, old_range, new_max, new_range);\n    }\n  } else {\n    if (round) {\n      return _scale_and_round_number.bind(null, old_min, old_range, new_min, new_range);\n    } else {\n      return _scale_number.bind(null, old_min, old_range, new_min, new_range);\n    }\n  }\n}\n\nfunction _scale(pixel, ...rest) {\n  return create(rest)(pixel);\n}\n\nconst quickScale = {\n  _identity,\n  _scale,\n  _scale_number,\n  _scale_and_flip_number,\n  _scale_and_round_number,\n  _scale_and_flip_and_round_number,\n  createScaleFunction\n};\n\nif (typeof define === \"object\")\n  define(function () {\n    return quickScale;\n  });\nif (typeof module === \"object\") module.exports = quickScale;\nif (typeof window === \"object\") window.quickScale = quickScale;\nif (typeof self === \"object\") self.quickScale = quickScale;\n", "\"use_strict\";\n\nfunction densePolygon([xmin, ymin, xmax, ymax], { density = 0 } = { density: 0 }) {\n  if (typeof density === \"number\") density = [density, density];\n\n  const [x_density, y_density] = density;\n\n  const height = ymax - ymin;\n  const width = xmax - xmin;\n\n  const ring = [];\n\n  // left-side, bottom-side, right-side, top-side\n  const x_distance = width / (x_density + 1);\n  const y_distance = height / (y_density + 1);\n\n  // add top left corner\n  ring.push([xmin, ymax]);\n\n  // left-edge\n  for (let i = 1; i <= y_density; i++) ring.push([xmin, ymax - i * y_distance]);\n\n  // add bottom left corner\n  ring.push([xmin, ymin]);\n\n  // bottom-edge\n  for (let i = 1; i <= x_density; i++) ring.push([xmin + i * x_distance, ymin]);\n\n  // add bottom right corner\n  ring.push([xmax, ymin]);\n\n  // right-edge\n  for (let i = 1; i <= y_density; i++) ring.push([xmax, ymin + i * y_distance]);\n\n  // add top right corner\n  ring.push([xmax, ymax]);\n\n  // top-edge\n  for (let i = 1; i <= x_density; i++) ring.push([xmax - i * x_distance, ymax]);\n\n  // add top left corner (repeats according to GeoJSON spec)\n  ring.push([xmin, ymax]);\n\n  return [ring];\n}\n\nmodule.exports = densePolygon;\nmodule.exports.default = densePolygon;\n", "function isUTM(projection) {\n  const projstr = projection.toString();\n\n  const replaced = projstr.replace(\"EPSG:\", \"\");\n\n  if (replaced.startsWith(\"326\") || replaced.startsWith(\"327\")) {\n    return true;\n  }\n\n  const sorted = projstr.split(\" \").sort().join(\" \");\n\n  if (sorted.match(/^\\+datum=WGS84 \\+ellps=WGS84 \\+no_defs \\+proj=utm( \\+south)? \\+units=m \\+zone=\\d{1,2}$/)) {\n    return true;\n  }\n\n  return false;\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return isUTM;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = isUTM;\n  module.exports.default = isUTM;\n}\n", "function getZone(projection) {\n  return Number.parseInt(projection.toString().substring(3));\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return getZone;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = getZone;\n  module.exports.default = getZone;\n}\n", "// assumes that projection is UTM\nfunction getHemisphere(projection) {\n  const projstr = projection.toString();\n  if (projstr.startsWith(\"326\") || projstr.startsWith(\"269\")) {\n    return \"N\";\n  } else if (projstr.startsWith(\"327\")) {\n    return \"S\";\n  }\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return getHemisphere;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = getHemisphere;\n  module.exports.default = getHemisphere;\n}\n", "const getZone = require(\"./getZone\");\nconst getHemisphere = require(\"./getHemisphere\");\n\nfunction getProjString(projection) {\n  const zone = getZone(projection);\n  const hemisphere = getHemisphere(projection);\n  if (projection.toString().startsWith(\"269\")) {\n    // North American Datum of 1983 (NAD83)\n    return `+proj=utm +zone=${zone} +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs +type=crs`;\n  } else {\n    return `+proj=utm +zone=${zone}${hemisphere === \"S\" ? \" +south \" : \" \"}+ellps=WGS84 +datum=WGS84 +units=m +no_defs`;\n  }\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return getProjString;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = getProjString;\n  module.exports.default = getProjString;\n}\n", "function merge() {\n  const instances = [];\n\n  const isEmpty = it => typeof it === \"object\" && Object.keys(it).length === 0 && JSON.stringify(it) === \"{}\";\n\n  const add = it => {\n    if (!it) return;\n    if (Array.isArray(it)) return it.forEach(add);\n    if (it.default) it = it.default;\n    if (isEmpty(it)) return;\n    instances.push(it);\n  };\n\n  Array.from(arguments).forEach(add);\n\n  if (instances.length === 0) throw Error(\"[proj4-merge] merge called with zero instances of proj4\");\n\n  const [first, ...rest] = instances;\n\n  rest.forEach(instance => {\n    first.defs(Object.entries(instance.defs));\n  });\n\n  return first;\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return merge;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = merge;\n  module.exports.default = merge;\n}\n", "export default function (defs) {\n  defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n  defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n  defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), '+proj=utm +zone=' + i + ' +datum=WGS84 +units=m');\n    defs('EPSG:' + (32700 + i), '+proj=utm +zone=' + i + ' +south +datum=WGS84 +units=m');\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n", "export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n", "var primeMeridian = {};\n\nprimeMeridian.greenwich = 0.0; // \"0dE\",\nprimeMeridian.lisbon = -9.131906111111; // \"9d07'54.862\\\"W\",\nprimeMeridian.paris = 2.337229166667; // \"2d20'14.025\\\"E\",\nprimeMeridian.bogota = -74.080916666667; // \"74d04'51.3\\\"W\",\nprimeMeridian.madrid = -3.687938888889; // \"3d41'16.58\\\"W\",\nprimeMeridian.rome = 12.452333333333; // \"12d27'8.4\\\"E\",\nprimeMeridian.bern = 7.439583333333; // \"7d26'22.5\\\"E\",\nprimeMeridian.jakarta = 106.807719444444; // \"106d48'27.79\\\"E\",\nprimeMeridian.ferro = -17.666666666667; // \"17d40'W\",\nprimeMeridian.brussels = 4.367975; // \"4d22'4.71\\\"E\",\nprimeMeridian.stockholm = 18.058277777778; // \"18d3'29.8\\\"E\",\nprimeMeridian.athens = 23.7163375; // \"23d42'58.815\\\"E\",\nprimeMeridian.oslo = 10.722916666667; // \"10d43'22.5\\\"E\"\n\nexport default primeMeridian;\n", "export default {\n  mm: { to_meter: 0.001 },\n  cm: { to_meter: 0.01 },\n  ft: { to_meter: 0.3048 },\n  'us-ft': { to_meter: 1200 / 3937 },\n  fath: { to_meter: 1.8288 },\n  kmi: { to_meter: 1852 },\n  'us-ch': { to_meter: 20.1168402336805 },\n  'us-mi': { to_meter: 1609.34721869444 },\n  km: { to_meter: 1000 },\n  'ind-ft': { to_meter: 0.30479841 },\n  'ind-yd': { to_meter: 0.91439523 },\n  mi: { to_meter: 1609.344 },\n  yd: { to_meter: 0.9144 },\n  ch: { to_meter: 20.1168 },\n  link: { to_meter: 0.201168 },\n  dm: { to_meter: 0.1 },\n  in: { to_meter: 0.0254 },\n  'ind-ch': { to_meter: 20.11669506 },\n  'us-in': { to_meter: 0.025400050800101 },\n  'us-yd': { to_meter: 0.914401828803658 }\n};\n", "var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n", "import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\n/**\n * @param {string} defData\n * @returns {import('./defs').ProjectionDefinition}\n */\nexport default function (defData) {\n  /** @type {import('./defs').ProjectionDefinition} */\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    /** @type {Array<?>} */\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function (v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function (v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function (v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function (v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function (v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function (v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function (v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function (v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function (v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function (v) {\n      self.rectified_grid_angle = parseFloat(v) * D2R;\n    },\n    lonc: function (v) {\n      self.longc = v * D2R;\n    },\n    x_0: function (v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function (v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function (v) {\n      self.a = parseFloat(v);\n    },\n    b: function (v) {\n      self.b = parseFloat(v);\n    },\n    r: function (v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function () {\n      self.R_A = true;\n    },\n    zone: function (v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function () {\n      self.utmSouth = true;\n    },\n    towgs84: function (v) {\n      self.datum_params = v.split(',').map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function (v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function (v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function (v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function (v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function (v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function (v) {\n      var legalAxis = 'ewnsud';\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function () {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n  if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n", "class PROJJSONBuilderBase {\n  static getId(node) {\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    if (idNode && idNode.length >= 3) {\n      return {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      };\n    }\n    return null;\n  }\n\n  static convertUnit(node, type = 'unit') {\n    if (!node || node.length < 3) {\n      return { type, name: 'unknown', conversion_factor: null };\n    }\n\n    const name = node[1];\n    const conversionFactor = parseFloat(node[2]) || null;\n\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    const id = idNode\n      ? {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      }\n      : null;\n\n    return {\n      type,\n      name,\n      conversion_factor: conversionFactor,\n      id,\n    };\n  }\n\n  static convertAxis(node) {\n    const name = node[1] || 'Unknown';\n\n    // Determine the direction\n    let direction;\n    const abbreviationMatch = name.match(/^\\((.)\\)$/); // Match abbreviations like \"(E)\" or \"(N)\"\n    if (abbreviationMatch) {\n      // Use the abbreviation to determine the direction\n      const abbreviation = abbreviationMatch[1].toUpperCase();\n      if (abbreviation === 'E') direction = 'east';\n      else if (abbreviation === 'N') direction = 'north';\n      else if (abbreviation === 'U') direction = 'up';\n      else throw new Error(`Unknown axis abbreviation: ${abbreviation}`);\n    } else {\n      // Use the explicit direction provided in the AXIS node\n      direction = node[2] ? node[2].toLowerCase() : 'unknown';\n    }\n\n    const orderNode = node.find((child) => Array.isArray(child) && child[0] === 'ORDER');\n    const order = orderNode ? parseInt(orderNode[1], 10) : null;\n\n    const unitNode = node.find(\n      (child) =>\n        Array.isArray(child) &&\n        (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n    );\n    const unit = this.convertUnit(unitNode);\n\n    return {\n      name,\n      direction, // Use the valid PROJJSON direction value\n      unit,\n      order,\n    };\n  }\n\n  static extractAxes(node) {\n    return node\n      .filter((child) => Array.isArray(child) && child[0] === 'AXIS')\n      .map((axis) => this.convertAxis(axis))\n      .sort((a, b) => (a.order || 0) - (b.order || 0)); // Sort by the \"order\" property\n  }\n\n  static convert(node, result = {}) {\n\n    switch (node[0]) {\n      case 'PROJCRS':\n        result.type = 'ProjectedCRS';\n        result.name = node[1];\n        result.base_crs = node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS'))\n          : null;\n        result.conversion = node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION'))\n          : null;\n\n        const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n        if (csNode) {\n          result.coordinate_system = {\n            type: csNode[1],\n            axis: this.extractAxes(node),\n          };\n        }\n\n        const lengthUnitNode = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT');\n        if (lengthUnitNode) {\n          const unit = this.convertUnit(lengthUnitNode);\n          result.coordinate_system.unit = unit; // Add unit to coordinate_system\n        }\n\n        result.id = this.getId(node);\n        break;\n\n      case 'BASEGEOGCRS':\n      case 'GEOGCRS':\n        result.type = 'GeographicCRS';\n        result.name = node[1];\n      \n        // Handle DATUM or ENSEMBLE\n        const datumOrEnsembleNode = node.find(\n          (child) => Array.isArray(child) && (child[0] === 'DATUM' || child[0] === 'ENSEMBLE')\n        );\n        if (datumOrEnsembleNode) {\n          const datumOrEnsemble = this.convert(datumOrEnsembleNode);\n          if (datumOrEnsembleNode[0] === 'ENSEMBLE') {\n            result.datum_ensemble = datumOrEnsemble;\n          } else {\n            result.datum = datumOrEnsemble;\n          }\n          const primem = node.find((child) => Array.isArray(child) && child[0] === 'PRIMEM');\n          if (primem && primem[1] !== 'Greenwich') {\n            datumOrEnsemble.prime_meridian = {\n              name: primem[1],\n              longitude: parseFloat(primem[2]),\n            }\n          }\n        }\n      \n        result.coordinate_system = {\n          type: 'ellipsoidal',\n          axis: this.extractAxes(node),\n        };\n      \n        result.id = this.getId(node);\n        break;\n\n      case 'DATUM':\n        result.type = 'GeodeticReferenceFrame';\n        result.name = node[1];\n        result.ellipsoid = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID'))\n          : null;\n        break;\n      \n      case 'ENSEMBLE':\n        result.type = 'DatumEnsemble';\n        result.name = node[1];\n      \n        // Extract ensemble members\n        result.members = node\n          .filter((child) => Array.isArray(child) && child[0] === 'MEMBER')\n          .map((member) => ({\n            type: 'DatumEnsembleMember',\n            name: member[1],\n            id: this.getId(member), // Extract ID as { authority, code }\n          }));\n      \n        // Extract accuracy\n        const accuracyNode = node.find((child) => Array.isArray(child) && child[0] === 'ENSEMBLEACCURACY');\n        if (accuracyNode) {\n          result.accuracy = parseFloat(accuracyNode[1]);\n        }\n      \n        // Extract ellipsoid\n        const ellipsoidNode = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID');\n        if (ellipsoidNode) {\n          result.ellipsoid = this.convert(ellipsoidNode); // Convert the ellipsoid node\n        }\n      \n        // Extract identifier for the ensemble\n        result.id = this.getId(node);\n        break;\n\n      case 'ELLIPSOID':\n        result.type = 'Ellipsoid';\n        result.name = node[1];\n        result.semi_major_axis = parseFloat(node[2]);\n        result.inverse_flattening = parseFloat(node[3]);\n        const units = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT'), result)\n          : null;\n        break;\n\n      case 'CONVERSION':\n        result.type = 'Conversion';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && child[0] === 'PARAMETER')\n          .map((param) => this.convert(param));\n        break;\n\n      case 'METHOD':\n        result.type = 'Method';\n        result.name = node[1];\n        result.id = this.getId(node);\n        break;\n\n      case 'PARAMETER':\n        result.type = 'Parameter';\n        result.name = node[1];\n        result.value = parseFloat(node[2]);\n        result.unit = this.convertUnit(\n          node.find(\n            (child) =>\n              Array.isArray(child) &&\n              (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n          )\n        );\n        result.id = this.getId(node);\n        break;\n\n      case 'BOUNDCRS':\n        result.type = 'BoundCRS';\n\n        // Process SOURCECRS\n        const sourceCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'SOURCECRS');\n        if (sourceCrsNode) {\n          const sourceCrsContent = sourceCrsNode.find((child) => Array.isArray(child));\n          result.source_crs = sourceCrsContent ? this.convert(sourceCrsContent) : null;\n        }\n\n        // Process TARGETCRS\n        const targetCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'TARGETCRS');\n        if (targetCrsNode) {\n          const targetCrsContent = targetCrsNode.find((child) => Array.isArray(child));\n          result.target_crs = targetCrsContent ? this.convert(targetCrsContent) : null;\n        }\n\n        // Process ABRIDGEDTRANSFORMATION\n        const transformationNode = node.find((child) => Array.isArray(child) && child[0] === 'ABRIDGEDTRANSFORMATION');\n        if (transformationNode) {\n          result.transformation = this.convert(transformationNode);\n        } else {\n          result.transformation = null;\n        }\n        break;\n\n      case 'ABRIDGEDTRANSFORMATION':\n        result.type = 'Transformation';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && (child[0] === 'PARAMETER' || child[0] === 'PARAMETERFILE'))\n          .map((param) => {\n            if (param[0] === 'PARAMETER') {\n              return this.convert(param);\n            } else if (param[0] === 'PARAMETERFILE') {\n              return {\n                name: param[1],\n                value: param[2],\n                id: {\n                  'authority': 'EPSG',\n                  'code': 8656\n                }\n              };\n            }\n          });\n\n        // Adjust the Scale difference parameter if present\n        if (result.parameters.length === 7) {\n          const scaleDifference = result.parameters[6];\n          if (scaleDifference.name === 'Scale difference') {\n            scaleDifference.value = Math.round((scaleDifference.value - 1) * 1e12) / 1e6;\n          }\n        }\n\n        result.id = this.getId(node);\n        break;\n      \n      case 'AXIS':\n        if (!result.coordinate_system) {\n          result.coordinate_system = { type: 'unspecified', axis: [] };\n        }\n        result.coordinate_system.axis.push(this.convertAxis(node));\n        break;\n      \n      case 'LENGTHUNIT':\n        const unit = this.convertUnit(node, 'LinearUnit');\n        if (result.coordinate_system && result.coordinate_system.axis) {\n          result.coordinate_system.axis.forEach((axis) => {\n            if (!axis.unit) {\n              axis.unit = unit;\n            }\n          });\n        }\n        if (unit.conversion_factor && unit.conversion_factor !== 1) {\n          if (result.semi_major_axis) {\n            result.semi_major_axis = {\n              value: result.semi_major_axis,\n              unit,\n            }\n          }\n        }\n        break;\n\n      default:\n        result.keyword = node[0];\n        break;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilderBase;", "import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2015 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Skip `CS` and `USAGE` nodes for WKT2-2015\n    if (result.coordinate_system && result.coordinate_system.subtype === 'Cartesian') {\n      delete result.coordinate_system;\n    }\n    if (result.usage) {\n      delete result.usage;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2015;", "import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2019 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Handle `CS` node for WKT2-2019\n    const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n    if (csNode) {\n      result.coordinate_system = {\n        subtype: csNode[1],\n        axis: this.extractAxes(node),\n      };\n    }\n\n    // Handle `USAGE` node for WKT2-2019\n    const usageNode = node.find((child) => Array.isArray(child) && child[0] === 'USAGE');\n    if (usageNode) {\n      const scope = usageNode.find((child) => Array.isArray(child) && child[0] === 'SCOPE');\n      const area = usageNode.find((child) => Array.isArray(child) && child[0] === 'AREA');\n      const bbox = usageNode.find((child) => Array.isArray(child) && child[0] === 'BBOX');\n      result.usage = {};\n      if (scope) {\n        result.usage.scope = scope[1];\n      }\n      if (area) {\n        result.usage.area = area[1];\n      }\n      if (bbox) {\n        result.usage.bbox = bbox.slice(1);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2019;", "import PROJJSONBuilder2015 from './PROJJSONBuilder2015.js';\nimport PROJJSONBuilder2019 from './PROJJSONBuilder2019.js';\n\n/**\n * Detects the WKT2 version based on the structure of the WKT.\n * @param {Array} root The root WKT array node.\n * @returns {string} The detected version (\"2015\" or \"2019\").\n */\nfunction detectWKT2Version(root) {\n  // Check for WKT2-2019-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'USAGE')) {\n    return '2019'; // `USAGE` is specific to WKT2-2019\n  }\n\n  // Check for WKT2-2015-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'CS')) {\n    return '2015'; // `CS` is valid in both, but default to 2015 unless `USAGE` is present\n  }\n\n  if (root[0] === 'BOUNDCRS' || root[0] === 'PROJCRS' || root[0] === 'GEOGCRS') {\n    return '2015'; // These are valid in both, but default to 2015\n  }\n\n  // Default to WKT2-2015 if no specific indicators are found\n  return '2015';\n}\n\n/**\n * Builds a PROJJSON object from a WKT array structure.\n * @param {Array} root The root WKT array node.\n * @returns {Object} The PROJJSON object.\n */\nexport function buildPROJJSON(root) {\n  const version = detectWKT2Version(root);\n  const builder = version === '2019' ? PROJJSONBuilder2019 : PROJJSONBuilder2015;\n  return builder.convert(root);\n}\n", "/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */\nexport function detectWKTVersion(wkt) {\n  // Normalize the WKT string for easier keyword matching\n  const normalizedWKT = wkt.toUpperCase();\n\n  // Check for WKT2-specific keywords\n  if (\n    normalizedWKT.includes('PROJCRS') ||\n    normalizedWKT.includes('GEOGCRS') ||\n    normalizedWKT.includes('BOUNDCRS') ||\n    normalizedWKT.includes('VERTCRS') ||\n    normalizedWKT.includes('LENGTHUNIT') ||\n    normalizedWKT.includes('ANGLEUNIT') ||\n    normalizedWKT.includes('SCALEUNIT')\n  ) {\n    return 'WKT2';\n  }\n\n  // Check for WKT1-specific keywords\n  if (\n    normalizedWKT.includes('PROJCS') ||\n    normalizedWKT.includes('GEOGCS') ||\n    normalizedWKT.includes('LOCAL_CS') ||\n    normalizedWKT.includes('VERT_CS') ||\n    normalizedWKT.includes('UNIT')\n  ) {\n    return 'WKT1';\n  }\n\n  // Default to WKT1 if no specific indicators are found\n  return 'WKT1';\n}", "export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n", "\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n", "var D2R = 0.01745329251994329577;\n\nexport function d2r(input) {\n  return input * D2R;\n}\n\nexport function applyProjectionDefaults(wkt) {\n  // Normalize projName for WKT2 compatibility\n  const normalizedProjName = (wkt.projName || '').toLowerCase().replace(/_/g, ' ');\n\n  if (!wkt.long0 && wkt.longc && (normalizedProjName === 'albers conic equal area' || normalizedProjName === 'lambert azimuthal equal area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (normalizedProjName === 'stereographic south pole' || normalizedProjName === 'polar stereographic (variant b)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n    delete wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && (normalizedProjName === 'polar stereographic' || normalizedProjName === 'polar stereographic (variant a)')) {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n    delete wkt.lat1;\n  }\n}", "import { applyProjectionDefaults } from './util.js';\n\n// Helper function to process units and to_meter\nfunction processUnit(unit) {\n  let result = { units: null, to_meter: undefined };\n\n  if (typeof unit === 'string') {\n    result.units = unit.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    if (result.units === 'meter') {\n      result.to_meter = 1; // Only set to_meter if units are 'meter'\n    }\n  } else if (unit && unit.name) {\n    result.units = unit.name.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    result.to_meter = unit.conversion_factor;\n  }\n\n  return result;\n}\n\nfunction toValue(valueOrObject) {\n  if (typeof valueOrObject === 'object') {\n    return valueOrObject.value * valueOrObject.unit.conversion_factor;\n  }\n  return valueOrObject;\n}\n\nfunction calculateEllipsoid(value, result) {\n  if (value.ellipsoid.radius) {\n    result.a = value.ellipsoid.radius;\n    result.rf = 0;\n  } else {\n    result.a = toValue(value.ellipsoid.semi_major_axis);\n    if (value.ellipsoid.inverse_flattening !== undefined) {\n      result.rf = value.ellipsoid.inverse_flattening;\n    } else if (value.ellipsoid.semi_major_axis !== undefined && value.ellipsoid.semi_minor_axis !== undefined) {\n      result.rf = result.a / (result.a - toValue(value.ellipsoid.semi_minor_axis));\n    }\n  }\n}\n\nexport function transformPROJJSON(projjson, result = {}) {\n  if (!projjson || typeof projjson !== 'object') {\n    return projjson; // Return primitive values as-is\n  }\n\n  if (projjson.type === 'BoundCRS') {\n    transformPROJJSON(projjson.source_crs, result);\n\n    if (projjson.transformation) {\n      if (projjson.transformation.method && projjson.transformation.method.name === 'NTv2') {\n        // Set nadgrids to the filename from the parameterfile\n        result.nadgrids = projjson.transformation.parameters[0].value;\n      } else {\n        // Populate datum_params if no parameterfile is found\n        result.datum_params = projjson.transformation.parameters.map((param) => param.value);\n      }\n    }\n    return result; // Return early for BoundCRS\n  }\n\n  // Handle specific keys in PROJJSON\n  Object.keys(projjson).forEach((key) => {\n    const value = projjson[key];\n    if (value === null) {\n      return;\n    }\n\n    switch (key) {\n      case 'name':\n        if (result.srsCode) {\n          break;\n        }\n        result.name = value;\n        result.srsCode = value; // Map `name` to `srsCode`\n        break;\n\n      case 'type':\n        if (value === 'GeographicCRS') {\n          result.projName = 'longlat';\n        } else if (value === 'ProjectedCRS' && projjson.conversion && projjson.conversion.method) {\n          result.projName = projjson.conversion.method.name; // Retain original capitalization\n        }\n        break;\n\n      case 'datum':\n      case 'datum_ensemble': // Handle both datum and ensemble\n        if (value.ellipsoid) {\n          // Extract ellipsoid properties\n          result.ellps = value.ellipsoid.name;\n          calculateEllipsoid(value, result);\n        }\n        if (value.prime_meridian) {\n          result.from_greenwich = value.prime_meridian.longitude * Math.PI / 180; // Convert to radians\n        }\n        break;\n\n      case 'ellipsoid':\n        result.ellps = value.name;\n        calculateEllipsoid(value, result);\n        break;\n\n      case 'prime_meridian':\n        result.long0 = (value.longitude || 0) * Math.PI / 180; // Convert to radians\n        break;\n\n      case 'coordinate_system':\n        if (value.axis) {\n          result.axis = value.axis\n            .map((axis) => {\n              const direction = axis.direction;\n              if (direction === 'east') return 'e';\n              if (direction === 'north') return 'n';\n              if (direction === 'west') return 'w';\n              if (direction === 'south') return 's';\n              throw new Error(`Unknown axis direction: ${direction}`);\n            })\n            .join('') + 'u'; // Combine into a single string (e.g., \"enu\")\n\n          if (value.unit) {\n            const { units, to_meter } = processUnit(value.unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          } else if (value.axis[0] && value.axis[0].unit) {\n            const { units, to_meter } = processUnit(value.axis[0].unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          }\n        }\n        break;\n        \n      case 'id':\n        if (value.authority && value.code) {\n          result.title = value.authority + ':' + value.code;\n        }\n        break;\n\n      case 'conversion':\n        if (value.method && value.method.name) {\n          result.projName = value.method.name; // Retain original capitalization\n        }\n        if (value.parameters) {\n          value.parameters.forEach((param) => {\n            const paramName = param.name.toLowerCase().replace(/\\s+/g, '_');\n            const paramValue = param.value;\n            if (param.unit && param.unit.conversion_factor) {\n              result[paramName] = paramValue * param.unit.conversion_factor; // Convert to radians or meters\n            } else if (param.unit === 'degree') {\n              result[paramName] = paramValue * Math.PI / 180; // Convert to radians\n            } else {\n              result[paramName] = paramValue;\n            }\n          });\n        }\n        break;\n\n      case 'unit':\n        if (value.name) {\n          result.units = value.name.toLowerCase();\n          if (result.units === 'metre') {\n            result.units = 'meter';\n          }\n        }\n        if (value.conversion_factor) {\n          result.to_meter = value.conversion_factor;\n        }\n        break;\n\n      case 'base_crs':\n        transformPROJJSON(value, result); // Pass `result` directly\n        result.datumCode = value.id ? value.id.authority + '_' + value.id.code : value.name; // Set datumCode\n        break;\n\n      default:\n        // Ignore irrelevant or unneeded properties\n        break;\n    }\n  });\n\n  // Additional calculated properties\n  if (result.latitude_of_false_origin !== undefined) {\n    result.lat0 = result.latitude_of_false_origin; // Already in radians\n  }\n  if (result.longitude_of_false_origin !== undefined) {\n    result.long0 = result.longitude_of_false_origin;\n  }\n  if (result.latitude_of_standard_parallel !== undefined) {\n    result.lat0 = result.latitude_of_standard_parallel;\n    result.lat1 = result.latitude_of_standard_parallel;\n  }\n  if (result.latitude_of_1st_standard_parallel !== undefined) {\n    result.lat1 = result.latitude_of_1st_standard_parallel;\n  }\n  if (result.latitude_of_2nd_standard_parallel !== undefined) {\n    result.lat2 = result.latitude_of_2nd_standard_parallel; \n  }\n  if (result.latitude_of_projection_centre !== undefined) {\n    result.lat0 = result.latitude_of_projection_centre;\n  }\n  if (result.longitude_of_projection_centre !== undefined) {\n    result.longc = result.longitude_of_projection_centre;\n  }\n  if (result.easting_at_false_origin !== undefined) {\n    result.x0 = result.easting_at_false_origin;\n  }\n  if (result.northing_at_false_origin !== undefined) {\n    result.y0 = result.northing_at_false_origin;\n  }\n  if (result.latitude_of_natural_origin !== undefined) {\n    result.lat0 = result.latitude_of_natural_origin;\n  }\n  if (result.longitude_of_natural_origin !== undefined) {\n    result.long0 = result.longitude_of_natural_origin;\n  }\n  if (result.longitude_of_origin !== undefined) {\n    result.long0 = result.longitude_of_origin;\n  }\n  if (result.false_easting !== undefined) {\n    result.x0 = result.false_easting;\n  }\n  if (result.easting_at_projection_centre) {\n    result.x0 = result.easting_at_projection_centre;\n  }\n  if (result.false_northing !== undefined) {\n    result.y0 = result.false_northing;\n  }\n  if (result.northing_at_projection_centre) {\n    result.y0 = result.northing_at_projection_centre;\n  }\n  if (result.standard_parallel_1 !== undefined) {\n    result.lat1 = result.standard_parallel_1;\n  }\n  if (result.standard_parallel_2 !== undefined) {\n    result.lat2 = result.standard_parallel_2;\n  }\n  if (result.scale_factor_at_natural_origin !== undefined) {\n    result.k0 = result.scale_factor_at_natural_origin;\n  }\n  if (result.scale_factor_at_projection_centre !== undefined) {\n    result.k0 = result.scale_factor_at_projection_centre;\n  }\n  if (result.scale_factor_on_pseudo_standard_parallel !== undefined) {  \n    result.k0 = result.scale_factor_on_pseudo_standard_parallel;\n  }\n  if (result.azimuth !== undefined) {\n    result.alpha = result.azimuth;\n  }\n  if (result.azimuth_at_projection_centre !== undefined) {\n    result.alpha = result.azimuth_at_projection_centre;\n  }\n  if (result.angle_from_rectified_to_skew_grid) {\n    result.rectified_grid_angle = result.angle_from_rectified_to_skew_grid;\n  }\n\n  // Apply projection defaults\n  applyProjectionDefaults(result);\n\n  return result;\n}", "import { buildPROJJSON } from './buildPROJJSON.js';\nimport { detectWKTVersion } from './detectWKTVersion.js';\nimport parser from './parser.js';\nimport {sExpr} from './process.js';\nimport { transformPROJJSON } from './transformPROJJSON.js';\nimport { applyProjectionDefaults, d2r } from './util.js';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n  if (wkt.rectified_grid_angle) {\n    wkt.rectified_grid_angle = d2r(wkt.rectified_grid_angle);\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  applyProjectionDefaults(wkt);\n}\nexport default function(wkt) {\n  if (typeof wkt === 'object') {\n    return transformPROJJSON(wkt);\n  }\n  const version = detectWKTVersion(wkt);\n  var lisp = parser(wkt);\n  if (version === 'WKT2') {\n    const projjson = buildPROJJSON(lisp);\n    return transformPROJJSON(projjson);\n  }\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n", "import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\n/**\n * @typedef {Object} ProjectionDefinition\n * @property {string} title\n * @property {string} [projName]\n * @property {string} [ellps]\n * @property {import('./Proj.js').DatumDefinition} [datum]\n * @property {string} [datumName]\n * @property {number} [rf]\n * @property {number} [lat0]\n * @property {number} [lat1]\n * @property {number} [lat2]\n * @property {number} [lat_ts]\n * @property {number} [long0]\n * @property {number} [long1]\n * @property {number} [long2]\n * @property {number} [alpha]\n * @property {number} [longc]\n * @property {number} [x0]\n * @property {number} [y0]\n * @property {number} [k0]\n * @property {number} [a]\n * @property {number} [b]\n * @property {true} [R_A]\n * @property {number} [zone]\n * @property {true} [utmSouth]\n * @property {string|Array<number>} [datum_params]\n * @property {number} [to_meter]\n * @property {string} [units]\n * @property {number} [from_greenwich]\n * @property {string} [datumCode]\n * @property {string} [nadgrids]\n * @property {string} [axis]\n * @property {boolean} [sphere]\n * @property {number} [rectified_grid_angle]\n * @property {boolean} [approx]\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n */\n\n/**\n * @overload\n * @param {string} name\n * @param {string|ProjectionDefinition|import('./core.js').PROJJSONDefinition} projection\n * @returns {void}\n */\n/**\n * @overload\n * @param {Array<[string, string]>} name\n * @returns {Array<ProjectionDefinition|undefined>}\n */\n/**\n * @overload\n * @param {string} name\n * @returns {ProjectionDefinition}\n */\n\n/**\n * @param {string | Array<Array<string>> | Partial<Record<'EPSG'|'ESRI'|'IAU2000', ProjectionDefinition>>} name\n * @returns {ProjectionDefinition | Array<ProjectionDefinition|undefined> | void}\n */\nfunction defs(name) {\n  /* global console */\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[/** @type {string} */ (name)] = parseProj(arguments[1]);\n      } else {\n        defs[/** @type {string} */ (name)] = wkt(arguments[1]);\n      }\n    } else {\n      defs[/** @type {string} */ (name)] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          return defs.apply(that, v);\n        } else {\n          return defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n    return;\n  }\n}\nglobals(defs);\nexport default defs;\n", "import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code) {\n  return typeof code === 'string';\n}\nfunction testDef(code) {\n  return code in defs;\n}\nfunction testWKT(code) {\n  return (code.indexOf('+') !== 0 && code.indexOf('[') !== -1) || (typeof code === 'object' && !('srsCode' in code));\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code) {\n  return code[0] === '+';\n}\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} code\n * @returns {import('./defs').ProjectionDefinition}\n */\nfunction parse(code) {\n  if (testObj(code)) {\n    // check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else if (!('projName' in code)) {\n    return wkt(code);\n  } else {\n    return code;\n  }\n}\n\nexport default parse;\n", "export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n", "export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n", "export default function (x) {\n  return x < 0 ? -1 : 1;\n}\n", "import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n", "import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n", "import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  // console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n", "import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e\n * @property {number} k\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  -------------------------------------------------- */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  -------------------------------------------------- */\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mercator', 'Popular Visualisation Pseudo Mercator', 'Mercator_1SP', 'Mercator_Auxiliary_Sphere', 'Mercator_Variant_A', 'merc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export function init() {\n  // no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = ['longlat', 'identity'];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n", "import merc from './projections/merc';\nimport longlat from './projections/longlat';\n/** @type {Array<Partial<import('./Proj').default>>} */\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\n/**\n * @param {import('./Proj').default} proj\n * @param {number} i\n */\nexport function add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport function getNormalizedProjName(n) {\n  return n.replace(/[-\\(\\)\\s]+/g, ' ').trim().replace(/ /g, '_');\n}\n\n/**\n * Get a projection by name.\n * @param {string} name\n * @returns {import('./Proj').default|false}\n */\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n  n = getNormalizedProjName(n);\n  if (n in names && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n", "var ellipsoids = {\n  MERIT: {\n    a: 6378137,\n    rf: 298.257,\n    ellipseName: 'MERIT 1983'\n  },\n  SGS85: {\n    a: 6378136,\n    rf: 298.257,\n    ellipseName: 'Soviet Geodetic System 85'\n  },\n  GRS80: {\n    a: 6378137,\n    rf: 298.257222101,\n    ellipseName: 'GRS 1980(IUGG, 1980)'\n  },\n  IAU76: {\n    a: 6378140,\n    rf: 298.257,\n    ellipseName: 'IAU 1976'\n  },\n  airy: {\n    a: 6377563.396,\n    b: 6356256.91,\n    ellipseName: 'Airy 1830'\n  },\n  APL4: {\n    a: 6378137,\n    rf: 298.25,\n    ellipseName: 'Appl. Physics. 1965'\n  },\n  NWL9D: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'Naval Weapons Lab., 1965'\n  },\n  mod_airy: {\n    a: 6377340.189,\n    b: 6356034.446,\n    ellipseName: 'Modified Airy'\n  },\n  andrae: {\n    a: 6377104.43,\n    rf: 300,\n    ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n  },\n  aust_SA: {\n    a: 6378160,\n    rf: 298.25,\n    ellipseName: 'Australian Natl & S. Amer. 1969'\n  },\n  GRS67: {\n    a: 6378160,\n    rf: 298.247167427,\n    ellipseName: 'GRS 67(IUGG 1967)'\n  },\n  bessel: {\n    a: 6377397.155,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841'\n  },\n  bess_nam: {\n    a: 6377483.865,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841 (Namibia)'\n  },\n  clrk66: {\n    a: 6378206.4,\n    b: 6356583.8,\n    ellipseName: 'Clarke 1866'\n  },\n  clrk80: {\n    a: 6378249.145,\n    rf: 293.4663,\n    ellipseName: 'Clarke 1880 mod.'\n  },\n  clrk80ign: {\n    a: 6378249.2,\n    b: 6356515,\n    rf: 293.4660213,\n    ellipseName: 'Clarke 1880 (IGN)'\n  },\n  clrk58: {\n    a: 6378293.645208759,\n    rf: 294.2606763692654,\n    ellipseName: 'Clarke 1858'\n  },\n  CPM: {\n    a: 6375738.7,\n    rf: 334.29,\n    ellipseName: 'Comm. des Poids et Mesures 1799'\n  },\n  delmbr: {\n    a: 6376428,\n    rf: 311.5,\n    ellipseName: 'Delambre 1810 (Belgium)'\n  },\n  engelis: {\n    a: 6378136.05,\n    rf: 298.2566,\n    ellipseName: 'Engelis 1985'\n  },\n  evrst30: {\n    a: 6377276.345,\n    rf: 300.8017,\n    ellipseName: 'Everest 1830'\n  },\n  evrst48: {\n    a: 6377304.063,\n    rf: 300.8017,\n    ellipseName: 'Everest 1948'\n  },\n  evrst56: {\n    a: 6377301.243,\n    rf: 300.8017,\n    ellipseName: 'Everest 1956'\n  },\n  evrst69: {\n    a: 6377295.664,\n    rf: 300.8017,\n    ellipseName: 'Everest 1969'\n  },\n  evrstSS: {\n    a: 6377298.556,\n    rf: 300.8017,\n    ellipseName: 'Everest (Sabah & Sarawak)'\n  },\n  fschr60: {\n    a: 6378166,\n    rf: 298.3,\n    ellipseName: 'Fischer (Mercury Datum) 1960'\n  },\n  fschr60m: {\n    a: 6378155,\n    rf: 298.3,\n    ellipseName: 'Fischer 1960'\n  },\n  fschr68: {\n    a: 6378150,\n    rf: 298.3,\n    ellipseName: 'Fischer 1968'\n  },\n  helmert: {\n    a: 6378200,\n    rf: 298.3,\n    ellipseName: 'Helmert 1906'\n  },\n  hough: {\n    a: 6378270,\n    rf: 297,\n    ellipseName: 'Hough'\n  },\n  intl: {\n    a: 6378388,\n    rf: 297,\n    ellipseName: 'International 1909 (Hayford)'\n  },\n  kaula: {\n    a: 6378163,\n    rf: 298.24,\n    ellipseName: 'Kaula 1961'\n  },\n  lerch: {\n    a: 6378139,\n    rf: 298.257,\n    ellipseName: 'Lerch 1979'\n  },\n  mprts: {\n    a: 6397300,\n    rf: 191,\n    ellipseName: 'Maupertius 1738'\n  },\n  new_intl: {\n    a: 6378157.5,\n    b: 6356772.2,\n    ellipseName: 'New International 1967'\n  },\n  plessis: {\n    a: 6376523,\n    rf: 6355863,\n    ellipseName: 'Plessis 1817 (France)'\n  },\n  krass: {\n    a: 6378245,\n    rf: 298.3,\n    ellipseName: 'Krassovsky, 1942'\n  },\n  SEasia: {\n    a: 6378155,\n    b: 6356773.3205,\n    ellipseName: 'Southeast Asia'\n  },\n  walbeck: {\n    a: 6376896,\n    b: 6355834.8467,\n    ellipseName: 'Walbeck'\n  },\n  WGS60: {\n    a: 6378165,\n    rf: 298.3,\n    ellipseName: 'WGS 60'\n  },\n  WGS66: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'WGS 66'\n  },\n  WGS7: {\n    a: 6378135,\n    rf: 298.26,\n    ellipseName: 'WGS 72'\n  },\n  WGS84: {\n    a: 6378137,\n    rf: 298.257223563,\n    ellipseName: 'WGS 84'\n  },\n  sphere: {\n    a: 6370997,\n    b: 6370997,\n    ellipseName: 'Normal Sphere (r=6370997)'\n  }\n};\n\nexport default ellipsoids;\n", "import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid } from './constants/Ellipsoid';\nimport match from './match';\n\nconst WGS84 = Ellipsoid.WGS84; // default ellipsoid\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n", "var datums = {\n  wgs84: {\n    towgs84: '0,0,0',\n    ellipse: 'WGS84',\n    datumName: 'WGS84'\n  },\n  ch1903: {\n    towgs84: '674.374,15.056,405.346',\n    ellipse: 'bessel',\n    datumName: 'swiss'\n  },\n  ggrs87: {\n    towgs84: '-199.87,74.79,246.62',\n    ellipse: 'GRS80',\n    datumName: 'Greek_Geodetic_Reference_System_1987'\n  },\n  nad83: {\n    towgs84: '0,0,0',\n    ellipse: 'GRS80',\n    datumName: 'North_American_Datum_1983'\n  },\n  nad27: {\n    nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n    ellipse: 'clrk66',\n    datumName: 'North_American_Datum_1927'\n  },\n  potsdam: {\n    towgs84: '598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n    ellipse: 'bessel',\n    datumName: 'Potsdam Rauenberg 1950 DHDN'\n  },\n  carthage: {\n    towgs84: '-263.0,6.0,431.0',\n    ellipse: 'clark80',\n    datumName: 'Carthage 1934 Tunisia'\n  },\n  hermannskogel: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Hermannskogel'\n  },\n  mgi: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Militar-Geographische Institut'\n  },\n  osni52: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'airy',\n    datumName: 'Irish National'\n  },\n  ire65: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'mod_airy',\n    datumName: 'Ireland 1965'\n  },\n  rassadiran: {\n    towgs84: '-133.63,-157.5,-158.62',\n    ellipse: 'intl',\n    datumName: 'Rassadiran'\n  },\n  nzgd49: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n    ellipse: 'intl',\n    datumName: 'New Zealand Geodetic Datum 1949'\n  },\n  osgb36: {\n    towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n    ellipse: 'airy',\n    datumName: 'Ordnance Survey of Great Britain 1936'\n  },\n  s_jtsk: {\n    towgs84: '589,76,480',\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n    ellipse: 'intl',\n    datumName: 'Reseau National Belge 1972'\n  },\n  EPSG_5451: {\n    towgs84: '6.41,-49.05,-11.28,1.5657,0.5242,6.9718,-5.7649'\n  },\n  IGNF_LURESG: {\n    towgs84: '-192.986,13.673,-39.309,-0.4099,-2.9332,2.6881,0.43'\n  },\n  EPSG_4614: {\n    towgs84: '-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065'\n  },\n  EPSG_4615: {\n    towgs84: '-494.088,-312.129,279.877,-1.423,-1.013,1.59,-0.748'\n  },\n  ESRI_37241: {\n    towgs84: '-76.822,257.457,-12.817,2.136,-0.033,-2.392,-0.031'\n  },\n  ESRI_37249: {\n    towgs84: '-440.296,58.548,296.265,1.128,10.202,4.559,-0.438'\n  },\n  ESRI_37245: {\n    towgs84: '-511.151,-181.269,139.609,1.05,2.703,1.798,3.071'\n  },\n  EPSG_4178: {\n    towgs84: '24.9,-126.4,-93.2,-0.063,-0.247,-0.041,1.01'\n  },\n  EPSG_4622: {\n    towgs84: '-472.29,-5.63,-304.12,0.4362,-0.8374,0.2563,1.8984'\n  },\n  EPSG_4625: {\n    towgs84: '126.93,547.94,130.41,-2.7867,5.1612,-0.8584,13.8227'\n  },\n  EPSG_5252: {\n    towgs84: '0.023,0.036,-0.068,0.00176,0.00912,-0.01136,0.00439'\n  },\n  EPSG_4314: {\n    towgs84: '597.1,71.4,412.1,0.894,0.068,-1.563,7.58'\n  },\n  EPSG_4282: {\n    towgs84: '-178.3,-316.7,-131.5,5.278,6.077,10.979,19.166'\n  },\n  EPSG_4231: {\n    towgs84: '-83.11,-97.38,-117.22,0.0276,-0.2167,0.2147,0.1218'\n  },\n  EPSG_4274: {\n    towgs84: '-230.994,102.591,25.199,0.633,-0.239,0.9,1.95'\n  },\n  EPSG_4134: {\n    towgs84: '-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006'\n  },\n  EPSG_4254: {\n    towgs84: '18.38,192.45,96.82,0.056,-0.142,-0.2,-0.0013'\n  },\n  EPSG_4159: {\n    towgs84: '-194.513,-63.978,-25.759,-3.4027,3.756,-3.352,-0.9175'\n  },\n  EPSG_4687: {\n    towgs84: '0.072,-0.507,-0.245,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_4227: {\n    towgs84: '-83.58,-397.54,458.78,-17.595,-2.847,4.256,3.225'\n  },\n  EPSG_4746: {\n    towgs84: '599.4,72.4,419.2,-0.062,-0.022,-2.723,6.46'\n  },\n  EPSG_4745: {\n    towgs84: '612.4,77,440.2,-0.054,0.057,-2.797,2.55'\n  },\n  EPSG_6311: {\n    towgs84: '8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926'\n  },\n  EPSG_4289: {\n    towgs84: '565.7381,50.4018,465.2904,-1.91514,1.60363,-9.09546,4.07244'\n  },\n  EPSG_4230: {\n    towgs84: '-68.863,-134.888,-111.49,-0.53,-0.14,0.57,-3.4'\n  },\n  EPSG_4154: {\n    towgs84: '-123.02,-158.95,-168.47'\n  },\n  EPSG_4156: {\n    towgs84: '570.8,85.7,462.8,4.998,1.587,5.261,3.56'\n  },\n  EPSG_4299: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4179: {\n    towgs84: '33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84'\n  },\n  EPSG_4313: {\n    towgs84: '-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747'\n  },\n  EPSG_4194: {\n    towgs84: '163.511,127.533,-159.789'\n  },\n  EPSG_4195: {\n    towgs84: '105,326,-102.5'\n  },\n  EPSG_4196: {\n    towgs84: '-45,417,-3.5'\n  },\n  EPSG_4611: {\n    towgs84: '-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246'\n  },\n  EPSG_4633: {\n    towgs84: '137.092,131.66,91.475,-1.9436,-11.5993,-4.3321,-7.4824'\n  },\n  EPSG_4641: {\n    towgs84: '-408.809,366.856,-412.987,1.8842,-0.5308,2.1655,-121.0993'\n  },\n  EPSG_4643: {\n    towgs84: '-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002'\n  },\n  EPSG_4300: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4188: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4660: {\n    towgs84: '982.6087,552.753,-540.873,32.39344,-153.25684,-96.2266,16.805'\n  },\n  EPSG_4662: {\n    towgs84: '97.295,-263.247,310.882,-1.5999,0.8386,3.1409,13.3259'\n  },\n  EPSG_3906: {\n    towgs84: '577.88891,165.22205,391.18289,4.9145,-0.94729,-13.05098,7.78664'\n  },\n  EPSG_4307: {\n    towgs84: '-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547'\n  },\n  EPSG_6892: {\n    towgs84: '-76.269,-16.683,68.562,-6.275,10.536,-4.286,-13.686'\n  },\n  EPSG_4690: {\n    towgs84: '221.597,152.441,176.523,2.403,1.3893,0.884,11.4648'\n  },\n  EPSG_4691: {\n    towgs84: '218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817'\n  },\n  EPSG_4629: {\n    towgs84: '72.51,345.411,79.241,-1.5862,-0.8826,-0.5495,1.3653'\n  },\n  EPSG_4630: {\n    towgs84: '165.804,216.213,180.26,-0.6251,-0.4515,-0.0721,7.4111'\n  },\n  EPSG_4692: {\n    towgs84: '217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_9333: {\n    towgs84: '0,0,0,-8.393,0.749,-10.276,0'\n  },\n  EPSG_9059: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4312: {\n    towgs84: '601.705,84.263,485.227,4.7354,1.3145,5.393,-2.3887'\n  },\n  EPSG_4123: {\n    towgs84: '-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496'\n  },\n  EPSG_4309: {\n    towgs84: '-124.45,183.74,44.64,-0.4384,0.5446,-0.9706,-2.1365'\n  },\n  ESRI_104106: {\n    towgs84: '-283.088,-70.693,117.445,-1.157,0.059,-0.652,-4.058'\n  },\n  EPSG_4281: {\n    towgs84: '-219.247,-73.802,269.529'\n  },\n  EPSG_4322: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4324: {\n    towgs84: '0,0,1.9'\n  },\n  EPSG_4284: {\n    towgs84: '43.822,-108.842,-119.585,1.455,-0.761,0.737,0.549'\n  },\n  EPSG_4277: {\n    towgs84: '446.448,-125.157,542.06,0.15,0.247,0.842,-20.489'\n  },\n  EPSG_4207: {\n    towgs84: '-282.1,-72.2,120,-1.529,0.145,-0.89,-4.46'\n  },\n  EPSG_4688: {\n    towgs84: '347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647'\n  },\n  EPSG_4689: {\n    towgs84: '410.793,54.542,80.501,-2.5596,-2.3517,-0.6594,17.3218'\n  },\n  EPSG_4720: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4273: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  EPSG_4240: {\n    towgs84: '204.64,834.74,293.8'\n  },\n  EPSG_4817: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  ESRI_104131: {\n    towgs84: '426.62,142.62,460.09,4.98,4.49,-12.42,-17.1'\n  },\n  EPSG_4265: {\n    towgs84: '-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68'\n  },\n  EPSG_4263: {\n    towgs84: '-111.92,-87.85,114.5,1.875,0.202,0.219,0.032'\n  },\n  EPSG_4298: {\n    towgs84: '-689.5937,623.84046,-65.93566,-0.02331,1.17094,-0.80054,5.88536'\n  },\n  EPSG_4270: {\n    towgs84: '-253.4392,-148.452,386.5267,0.15605,0.43,-0.1013,-0.0424'\n  },\n  EPSG_4229: {\n    towgs84: '-121.8,98.1,-10.7'\n  },\n  EPSG_4220: {\n    towgs84: '-55.5,-348,-229.2'\n  },\n  EPSG_4214: {\n    towgs84: '12.646,-155.176,-80.863'\n  },\n  EPSG_4232: {\n    towgs84: '-345,3,223'\n  },\n  EPSG_4238: {\n    towgs84: '-1.977,-13.06,-9.993,0.364,0.254,0.689,-1.037'\n  },\n  EPSG_4168: {\n    towgs84: '-170,33,326'\n  },\n  EPSG_4131: {\n    towgs84: '199,931,318.9'\n  },\n  EPSG_4152: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_5228: {\n    towgs84: '572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378'\n  },\n  EPSG_8351: {\n    towgs84: '485.021,169.465,483.839,7.786342,4.397554,4.102655,0'\n  },\n  EPSG_4683: {\n    towgs84: '-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06'\n  },\n  EPSG_4133: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7373: {\n    towgs84: '0.819,-0.5762,-1.6446,-0.00378,-0.03317,0.00318,0.0693'\n  },\n  EPSG_9075: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9072: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9294: {\n    towgs84: '1.16835,-1.42001,-2.24431,-0.00822,-0.05508,0.01818,0.23388'\n  },\n  EPSG_4212: {\n    towgs84: '-267.434,173.496,181.814,-13.4704,8.7154,7.3926,14.7492'\n  },\n  EPSG_4191: {\n    towgs84: '-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703'\n  },\n  EPSG_4237: {\n    towgs84: '52.684,-71.194,-13.975,-0.312,-0.1063,-0.3729,1.0191'\n  },\n  EPSG_4740: {\n    towgs84: '-1.08,-0.27,-0.9'\n  },\n  EPSG_4124: {\n    towgs84: '419.3836,99.3335,591.3451,0.850389,1.817277,-7.862238,-0.99496'\n  },\n  EPSG_5681: {\n    towgs84: '584.9636,107.7175,413.8067,1.1155,0.2824,-3.1384,7.9922'\n  },\n  EPSG_4141: {\n    towgs84: '23.772,17.49,17.859,-0.3132,-1.85274,1.67299,-5.4262'\n  },\n  EPSG_4204: {\n    towgs84: '-85.645,-273.077,-79.708,2.289,-1.421,2.532,3.194'\n  },\n  EPSG_4319: {\n    towgs84: '226.702,-193.337,-35.371,-2.229,-4.391,9.238,0.9798'\n  },\n  EPSG_4200: {\n    towgs84: '24.82,-131.21,-82.66'\n  },\n  EPSG_4130: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4127: {\n    towgs84: '-82.875,-57.097,-156.768,-2.158,1.524,-0.982,-0.359'\n  },\n  EPSG_4149: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4617: {\n    towgs84: '-0.991,1.9072,0.5129,1.25033e-7,4.6785e-8,5.6529e-8,0'\n  },\n  EPSG_4663: {\n    towgs84: '-210.502,-66.902,-48.476,2.094,-15.067,-5.817,0.485'\n  },\n  EPSG_4664: {\n    towgs84: '-211.939,137.626,58.3,-0.089,0.251,0.079,0.384'\n  },\n  EPSG_4665: {\n    towgs84: '-105.854,165.589,-38.312,-0.003,-0.026,0.024,-0.048'\n  },\n  EPSG_4666: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  EPSG_4756: {\n    towgs84: '-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188'\n  },\n  EPSG_4723: {\n    towgs84: '-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925'\n  },\n  EPSG_4726: {\n    towgs84: '8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081'\n  },\n  EPSG_4267: {\n    towgs84: '-8.0,160.0,176.0'\n  },\n  EPSG_5365: {\n    towgs84: '-0.16959,0.35312,0.51846,0.03385,-0.16325,0.03446,0.03693'\n  },\n  EPSG_4218: {\n    towgs84: '304.5,306.5,-318.1'\n  },\n  EPSG_4242: {\n    towgs84: '-33.722,153.789,94.959,-8.581,-4.478,4.54,8.95'\n  },\n  EPSG_4216: {\n    towgs84: '-292.295,248.758,429.447,4.9971,2.99,6.6906,1.0289'\n  },\n  ESRI_104105: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  ESRI_104129: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4673: {\n    towgs84: '174.05,-25.49,112.57'\n  },\n  EPSG_4202: {\n    towgs84: '-124,-60,154'\n  },\n  EPSG_4203: {\n    towgs84: '-117.763,-51.51,139.061,0.292,0.443,0.277,-0.191'\n  },\n  EPSG_3819: {\n    towgs84: '595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'\n  },\n  EPSG_8694: {\n    towgs84: '-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169'\n  },\n  EPSG_4145: {\n    towgs84: '275.57,676.78,229.6'\n  },\n  EPSG_4283: {\n    towgs84: '61.55,-10.87,-40.19,39.4924,32.7221,32.8979,-9.994'\n  },\n  EPSG_4317: {\n    towgs84: '2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266'\n  },\n  EPSG_4272: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993'\n  },\n  EPSG_4248: {\n    towgs84: '-307.7,265.3,-363.5'\n  },\n  EPSG_5561: {\n    towgs84: '24,-121,-76'\n  },\n  EPSG_5233: {\n    towgs84: '-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338'\n  },\n  ESRI_104130: {\n    towgs84: '-86,-98,-119'\n  },\n  ESRI_104102: {\n    towgs84: '682,-203,480'\n  },\n  ESRI_37207: {\n    towgs84: '7,-10,-26'\n  },\n  EPSG_4675: {\n    towgs84: '59.935,118.4,-10.871'\n  },\n  ESRI_104109: {\n    towgs84: '-89.121,-348.182,260.871'\n  },\n  ESRI_104112: {\n    towgs84: '-185.583,-230.096,281.361'\n  },\n  ESRI_104113: {\n    towgs84: '25.1,-275.6,222.6'\n  },\n  IGNF_WGS72G: {\n    towgs84: '0,12,6'\n  },\n  IGNF_NTFG: {\n    towgs84: '-168,-60,320'\n  },\n  IGNF_EFATE57G: {\n    towgs84: '-127,-769,472'\n  },\n  IGNF_PGP50G: {\n    towgs84: '324.8,153.6,172.1'\n  },\n  IGNF_REUN47G: {\n    towgs84: '94,-948,-1262'\n  },\n  IGNF_CSG67G: {\n    towgs84: '-186,230,110'\n  },\n  IGNF_GUAD48G: {\n    towgs84: '-467,-16,-300'\n  },\n  IGNF_TAHI51G: {\n    towgs84: '162,117,154'\n  },\n  IGNF_TAHAAG: {\n    towgs84: '65,342,77'\n  },\n  IGNF_NUKU72G: {\n    towgs84: '84,274,65'\n  },\n  IGNF_PETRELS72G: {\n    towgs84: '365,194,166'\n  },\n  IGNF_WALL78G: {\n    towgs84: '253,-133,-127'\n  },\n  IGNF_MAYO50G: {\n    towgs84: '-382,-59,-262'\n  },\n  IGNF_TANNAG: {\n    towgs84: '-139,-967,436'\n  },\n  IGNF_IGN72G: {\n    towgs84: '-13,-348,292'\n  },\n  IGNF_ATIGG: {\n    towgs84: '1118,23,66'\n  },\n  IGNF_FANGA84G: {\n    towgs84: '150.57,158.33,118.32'\n  },\n  IGNF_RUSAT84G: {\n    towgs84: '202.13,174.6,-15.74'\n  },\n  IGNF_KAUE70G: {\n    towgs84: '126.74,300.1,-75.49'\n  },\n  IGNF_MOP90G: {\n    towgs84: '-10.8,-1.8,12.77'\n  },\n  IGNF_MHPF67G: {\n    towgs84: '338.08,212.58,-296.17'\n  },\n  IGNF_TAHI79G: {\n    towgs84: '160.61,116.05,153.69'\n  },\n  IGNF_ANAA92G: {\n    towgs84: '1.5,3.84,4.81'\n  },\n  IGNF_MARQUI72G: {\n    towgs84: '330.91,-13.92,58.56'\n  },\n  IGNF_APAT86G: {\n    towgs84: '143.6,197.82,74.05'\n  },\n  IGNF_TUBU69G: {\n    towgs84: '237.17,171.61,-77.84'\n  },\n  IGNF_STPM50G: {\n    towgs84: '11.363,424.148,373.13'\n  },\n  EPSG_4150: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4754: {\n    towgs84: '-208.4058,-109.8777,-2.5764'\n  },\n  ESRI_104101: {\n    towgs84: '374,150,588'\n  },\n  EPSG_4693: {\n    towgs84: '0,-0.15,0.68'\n  },\n  EPSG_6207: {\n    towgs84: '293.17,726.18,245.36'\n  },\n  EPSG_4153: {\n    towgs84: '-133.63,-157.5,-158.62'\n  },\n  EPSG_4132: {\n    towgs84: '-241.54,-163.64,396.06'\n  },\n  EPSG_4221: {\n    towgs84: '-154.5,150.7,100.4'\n  },\n  EPSG_4266: {\n    towgs84: '-80.7,-132.5,41.1'\n  },\n  EPSG_4193: {\n    towgs84: '-70.9,-151.8,-41.4'\n  },\n  EPSG_5340: {\n    towgs84: '-0.41,0.46,-0.35'\n  },\n  EPSG_4246: {\n    towgs84: '-294.7,-200.1,525.5'\n  },\n  EPSG_4318: {\n    towgs84: '-3.2,-5.7,2.8'\n  },\n  EPSG_4121: {\n    towgs84: '-199.87,74.79,246.62'\n  },\n  EPSG_4223: {\n    towgs84: '-260.1,5.5,432.2'\n  },\n  EPSG_4158: {\n    towgs84: '-0.465,372.095,171.736'\n  },\n  EPSG_4285: {\n    towgs84: '-128.16,-282.42,21.93'\n  },\n  EPSG_4613: {\n    towgs84: '-404.78,685.68,45.47'\n  },\n  EPSG_4607: {\n    towgs84: '195.671,332.517,274.607'\n  },\n  EPSG_4475: {\n    towgs84: '-381.788,-57.501,-256.673'\n  },\n  EPSG_4208: {\n    towgs84: '-157.84,308.54,-146.6'\n  },\n  EPSG_4743: {\n    towgs84: '70.995,-335.916,262.898'\n  },\n  EPSG_4710: {\n    towgs84: '-323.65,551.39,-491.22'\n  },\n  EPSG_7881: {\n    towgs84: '-0.077,0.079,0.086'\n  },\n  EPSG_4682: {\n    towgs84: '283.729,735.942,261.143'\n  },\n  EPSG_4739: {\n    towgs84: '-156,-271,-189'\n  },\n  EPSG_4679: {\n    towgs84: '-80.01,253.26,291.19'\n  },\n  EPSG_4750: {\n    towgs84: '-56.263,16.136,-22.856'\n  },\n  EPSG_4644: {\n    towgs84: '-10.18,-350.43,291.37'\n  },\n  EPSG_4695: {\n    towgs84: '-103.746,-9.614,-255.95'\n  },\n  EPSG_4292: {\n    towgs84: '-355,21,72'\n  },\n  EPSG_4302: {\n    towgs84: '-61.702,284.488,472.052'\n  },\n  EPSG_4143: {\n    towgs84: '-124.76,53,466.79'\n  },\n  EPSG_4606: {\n    towgs84: '-153,153,307'\n  },\n  EPSG_4699: {\n    towgs84: '-770.1,158.4,-498.2'\n  },\n  EPSG_4247: {\n    towgs84: '-273.5,110.6,-357.9'\n  },\n  EPSG_4160: {\n    towgs84: '8.88,184.86,106.69'\n  },\n  EPSG_4161: {\n    towgs84: '-233.43,6.65,173.64'\n  },\n  EPSG_9251: {\n    towgs84: '-9.5,122.9,138.2'\n  },\n  EPSG_9253: {\n    towgs84: '-78.1,101.6,133.3'\n  },\n  EPSG_4297: {\n    towgs84: '-198.383,-240.517,-107.909'\n  },\n  EPSG_4269: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4301: {\n    towgs84: '-147,506,687'\n  },\n  EPSG_4618: {\n    towgs84: '-59,-11,-52'\n  },\n  EPSG_4612: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4678: {\n    towgs84: '44.585,-131.212,-39.544'\n  },\n  EPSG_4250: {\n    towgs84: '-130,29,364'\n  },\n  EPSG_4144: {\n    towgs84: '214,804,268'\n  },\n  EPSG_4147: {\n    towgs84: '-17.51,-108.32,-62.39'\n  },\n  EPSG_4259: {\n    towgs84: '-254.1,-5.36,-100.29'\n  },\n  EPSG_4164: {\n    towgs84: '-76,-138,67'\n  },\n  EPSG_4211: {\n    towgs84: '-378.873,676.002,-46.255'\n  },\n  EPSG_4182: {\n    towgs84: '-422.651,-172.995,84.02'\n  },\n  EPSG_4224: {\n    towgs84: '-143.87,243.37,-33.52'\n  },\n  EPSG_4225: {\n    towgs84: '-205.57,168.77,-4.12'\n  },\n  EPSG_5527: {\n    towgs84: '-67.35,3.88,-38.22'\n  },\n  EPSG_4752: {\n    towgs84: '98,390,-22'\n  },\n  EPSG_4310: {\n    towgs84: '-30,190,89'\n  },\n  EPSG_9248: {\n    towgs84: '-192.26,65.72,132.08'\n  },\n  EPSG_4680: {\n    towgs84: '124.5,-63.5,-281'\n  },\n  EPSG_4701: {\n    towgs84: '-79.9,-158,-168.9'\n  },\n  EPSG_4706: {\n    towgs84: '-146.21,112.63,4.05'\n  },\n  EPSG_4805: {\n    towgs84: '682,-203,480'\n  },\n  EPSG_4201: {\n    towgs84: '-165,-11,206'\n  },\n  EPSG_4210: {\n    towgs84: '-157,-2,-299'\n  },\n  EPSG_4183: {\n    towgs84: '-104,167,-38'\n  },\n  EPSG_4139: {\n    towgs84: '11,72,-101'\n  },\n  EPSG_4668: {\n    towgs84: '-86,-98,-119'\n  },\n  EPSG_4717: {\n    towgs84: '-2,151,181'\n  },\n  EPSG_4732: {\n    towgs84: '102,52,-38'\n  },\n  EPSG_4280: {\n    towgs84: '-377,681,-50'\n  },\n  EPSG_4209: {\n    towgs84: '-138,-105,-289'\n  },\n  EPSG_4261: {\n    towgs84: '31,146,47'\n  },\n  EPSG_4658: {\n    towgs84: '-73,46,-86'\n  },\n  EPSG_4721: {\n    towgs84: '265.025,384.929,-194.046'\n  },\n  EPSG_4222: {\n    towgs84: '-136,-108,-292'\n  },\n  EPSG_4601: {\n    towgs84: '-255,-15,71'\n  },\n  EPSG_4602: {\n    towgs84: '725,685,536'\n  },\n  EPSG_4603: {\n    towgs84: '72,213.7,93'\n  },\n  EPSG_4605: {\n    towgs84: '9,183,236'\n  },\n  EPSG_4621: {\n    towgs84: '137,248,-430'\n  },\n  EPSG_4657: {\n    towgs84: '-28,199,5'\n  },\n  EPSG_4316: {\n    towgs84: '103.25,-100.4,-307.19'\n  },\n  EPSG_4642: {\n    towgs84: '-13,-348,292'\n  },\n  EPSG_4698: {\n    towgs84: '145,-187,103'\n  },\n  EPSG_4192: {\n    towgs84: '-206.1,-174.7,-87.7'\n  },\n  EPSG_4311: {\n    towgs84: '-265,120,-358'\n  },\n  EPSG_4135: {\n    towgs84: '58,-283,-182'\n  },\n  ESRI_104138: {\n    towgs84: '198,-226,-347'\n  },\n  EPSG_4245: {\n    towgs84: '-11,851,5'\n  },\n  EPSG_4142: {\n    towgs84: '-125,53,467'\n  },\n  EPSG_4213: {\n    towgs84: '-106,-87,188'\n  },\n  EPSG_4253: {\n    towgs84: '-133,-77,-51'\n  },\n  EPSG_4129: {\n    towgs84: '-132,-110,-335'\n  },\n  EPSG_4713: {\n    towgs84: '-77,-128,142'\n  },\n  EPSG_4239: {\n    towgs84: '217,823,299'\n  },\n  EPSG_4146: {\n    towgs84: '295,736,257'\n  },\n  EPSG_4155: {\n    towgs84: '-83,37,124'\n  },\n  EPSG_4165: {\n    towgs84: '-173,253,27'\n  },\n  EPSG_4672: {\n    towgs84: '175,-38,113'\n  },\n  EPSG_4236: {\n    towgs84: '-637,-549,-203'\n  },\n  EPSG_4251: {\n    towgs84: '-90,40,88'\n  },\n  EPSG_4271: {\n    towgs84: '-2,374,172'\n  },\n  EPSG_4175: {\n    towgs84: '-88,4,101'\n  },\n  EPSG_4716: {\n    towgs84: '298,-304,-375'\n  },\n  EPSG_4315: {\n    towgs84: '-23,259,-9'\n  },\n  EPSG_4744: {\n    towgs84: '-242.2,-144.9,370.3'\n  },\n  EPSG_4244: {\n    towgs84: '-97,787,86'\n  },\n  EPSG_4293: {\n    towgs84: '616,97,-251'\n  },\n  EPSG_4714: {\n    towgs84: '-127,-769,472'\n  },\n  EPSG_4736: {\n    towgs84: '260,12,-147'\n  },\n  EPSG_6883: {\n    towgs84: '-235,-110,393'\n  },\n  EPSG_6894: {\n    towgs84: '-63,176,185'\n  },\n  EPSG_4205: {\n    towgs84: '-43,-163,45'\n  },\n  EPSG_4256: {\n    towgs84: '41,-220,-134'\n  },\n  EPSG_4262: {\n    towgs84: '639,405,60'\n  },\n  EPSG_4604: {\n    towgs84: '174,359,365'\n  },\n  EPSG_4169: {\n    towgs84: '-115,118,426'\n  },\n  EPSG_4620: {\n    towgs84: '-106,-129,165'\n  },\n  EPSG_4184: {\n    towgs84: '-203,141,53'\n  },\n  EPSG_4616: {\n    towgs84: '-289,-124,60'\n  },\n  EPSG_9403: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4684: {\n    towgs84: '-133,-321,50'\n  },\n  EPSG_4708: {\n    towgs84: '-491,-22,435'\n  },\n  EPSG_4707: {\n    towgs84: '114,-116,-333'\n  },\n  EPSG_4709: {\n    towgs84: '145,75,-272'\n  },\n  EPSG_4712: {\n    towgs84: '-205,107,53'\n  },\n  EPSG_4711: {\n    towgs84: '124,-234,-25'\n  },\n  EPSG_4718: {\n    towgs84: '230,-199,-752'\n  },\n  EPSG_4719: {\n    towgs84: '211,147,111'\n  },\n  EPSG_4724: {\n    towgs84: '208,-435,-229'\n  },\n  EPSG_4725: {\n    towgs84: '189,-79,-202'\n  },\n  EPSG_4735: {\n    towgs84: '647,1777,-1124'\n  },\n  EPSG_4722: {\n    towgs84: '-794,119,-298'\n  },\n  EPSG_4728: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4734: {\n    towgs84: '-632,438,-609'\n  },\n  EPSG_4727: {\n    towgs84: '912,-58,1227'\n  },\n  EPSG_4729: {\n    towgs84: '185,165,42'\n  },\n  EPSG_4730: {\n    towgs84: '170,42,84'\n  },\n  EPSG_4733: {\n    towgs84: '276,-57,149'\n  },\n  ESRI_37218: {\n    towgs84: '230,-199,-752'\n  },\n  ESRI_37240: {\n    towgs84: '-7,215,225'\n  },\n  ESRI_37221: {\n    towgs84: '252,-209,-751'\n  },\n  ESRI_4305: {\n    towgs84: '-123,-206,219'\n  },\n  ESRI_104139: {\n    towgs84: '-73,-247,227'\n  },\n  EPSG_4748: {\n    towgs84: '51,391,-36'\n  },\n  EPSG_4219: {\n    towgs84: '-384,664,-48'\n  },\n  EPSG_4255: {\n    towgs84: '-333,-222,114'\n  },\n  EPSG_4257: {\n    towgs84: '-587.8,519.75,145.76'\n  },\n  EPSG_4646: {\n    towgs84: '-963,510,-359'\n  },\n  EPSG_6881: {\n    towgs84: '-24,-203,268'\n  },\n  EPSG_6882: {\n    towgs84: '-183,-15,273'\n  },\n  EPSG_4715: {\n    towgs84: '-104,-129,239'\n  },\n  IGNF_RGF93GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGM04GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGSPM06GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGTAAF07GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGFG95GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGNCG: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGPFGDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_ETRS89G: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGR92GDD: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4173: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4180: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4619: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4667: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4075: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6706: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7798: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4661: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4669: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8685: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4151: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4758: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4761: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4765: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8997: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4023: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4670: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4694: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4148: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4163: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4167: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4189: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4190: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4176: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4659: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3824: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3889: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4046: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4081: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4558: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4483: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5013: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5264: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5324: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5354: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5371: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5373: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5381: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5393: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5489: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5593: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6135: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6365: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5246: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7886: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8431: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8427: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8699: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8818: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4757: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9140: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8086: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4686: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4737: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4747: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4749: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4674: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4755: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4759: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4762: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4763: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4764: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4166: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4170: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5546: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7844: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4818: {\n    towgs84: '589,76,480'\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  if (!datum.datumName) {\n    continue;\n  }\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n", "import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; // datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n", "/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\n/**\n * @typedef {Object} NadgridInfo\n * @property {string} name The name of the NAD grid or 'null' if not specified.\n * @property {boolean} mandatory Indicates if the grid is mandatory (true) or optional (false).\n * @property {*} grid The loaded NAD grid object, or null if not loaded or not applicable.\n * @property {boolean} isNull True if the grid is explicitly 'null', otherwise false.\n */\n\n/**\n * @typedef {Object} NTV2GridOptions\n * @property {boolean} [includeErrorFields=true] Whether to include error fields in the subgrids.\n */\n\n/**\n * @typedef {Object} NadgridHeader\n * @property {number} [nFields] Number of fields in the header.\n * @property {number} [nSubgridFields] Number of fields in each subgrid header.\n * @property {number} nSubgrids Number of subgrids in the file.\n * @property {string} [shiftType] Type of shift (e.g., \"SECONDS\").\n * @property {number} [fromSemiMajorAxis] Source ellipsoid semi-major axis.\n * @property {number} [fromSemiMinorAxis] Source ellipsoid semi-minor axis.\n * @property {number} [toSemiMajorAxis] Target ellipsoid semi-major axis.\n * @property {number} [toSemiMinorAxis] Target ellipsoid semi-minor axis.\n */\n\n/**\n * @typedef {Object} Subgrid\n * @property {Array<number>} ll Lower left corner of the grid in radians [longitude, latitude].\n * @property {Array<number>} del Grid spacing in radians [longitude interval, latitude interval].\n * @property {Array<number>} lim Number of columns in the grid [longitude columns, latitude columns].\n * @property {number} [count] Total number of grid nodes.\n * @property {Array} cvs Mapped node values for the grid.\n */\n\n/** @typedef {{header: NadgridHeader, subgrids: Array<Subgrid>}} NADGrid */\n\n/**\n * @typedef {Object} GeoTIFF\n * @property {() => Promise<number>} getImageCount - Returns the number of images in the GeoTIFF.\n * @property {(index: number) => Promise<GeoTIFFImage>} getImage - Returns a GeoTIFFImage for the given index.\n */\n\n/**\n * @typedef {Object} GeoTIFFImage\n * @property {() => number} getWidth - Returns the width of the image.\n * @property {() => number} getHeight - Returns the height of the image.\n * @property {() => number[]} getBoundingBox - Returns the bounding box as [minX, minY, maxX, maxY] in degrees.\n * @property {() => Promise<ArrayLike<ArrayLike<number>>>} readRasters - Returns the raster data as an array of bands.\n * @property {Object} fileDirectory - The file directory object containing metadata.\n * @property {Object} fileDirectory.ModelPixelScale - The pixel scale array [scaleX, scaleY, scaleZ] in degrees.\n */\n\nvar loadedNadgrids = {};\n\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer} data - The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] - Optional parameters for loading the grid.\n * @returns {NADGrid} - The loaded NAD grid information.\n */\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {GeoTIFF} data - The GeoTIFF instance to read the grid from.\n * @returns {{ready: Promise<NADGrid>}} - A promise that resolves to the loaded grid information.\n */\n/**\n * Load either a NTv2 file (.gsb) or a Geotiff (.tif) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer. Pass Geotiff as a GeoTIFF instance from the geotiff.js library.\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer|GeoTIFF} data The data to load, either an ArrayBuffer for NTv2 or a GeoTIFF instance.\n * @param {NTV2GridOptions} [options] Optional parameters.\n * @returns {{ready: Promise<NADGrid>}|NADGrid} - A promise that resolves to the loaded grid information.\n */\nexport default function nadgrid(key, data, options) {\n  if (data instanceof ArrayBuffer) {\n    return readNTV2Grid(key, data, options);\n  }\n  return { ready: readGeotiffGrid(key, data) };\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {ArrayBuffer} data The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] Optional parameters for loading the grid.\n * @returns {NADGrid} The loaded NAD grid information.\n */\nfunction readNTV2Grid(key, data, options) {\n  var includeErrorFields = true;\n  if (options !== undefined && options.includeErrorFields === false) {\n    includeErrorFields = false;\n  }\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian, includeErrorFields);\n  var nadgrid = { header: header, subgrids: subgrids };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {GeoTIFF} tiff The GeoTIFF instance to read the grid from.\n * @returns {Promise<NADGrid>} A promise that resolves to the loaded NAD grid information.\n */\nasync function readGeotiffGrid(key, tiff) {\n  var subgrids = [];\n  var subGridCount = await tiff.getImageCount();\n  // proj produced tiff grid shift files appear to organize lower res subgrids first, higher res/ child subgrids last.\n  for (var subgridIndex = subGridCount - 1; subgridIndex >= 0; subgridIndex--) {\n    var image = await tiff.getImage(subgridIndex);\n\n    var rasters = await image.readRasters();\n    var data = rasters;\n    var lim = [image.getWidth(), image.getHeight()];\n    var imageBBoxRadians = image.getBoundingBox().map(degreesToRadians);\n    var del = [image.fileDirectory.ModelPixelScale[0], image.fileDirectory.ModelPixelScale[1]].map(degreesToRadians);\n\n    var maxX = imageBBoxRadians[0] + (lim[0] - 1) * del[0];\n    var minY = imageBBoxRadians[3] - (lim[1] - 1) * del[1];\n\n    var latitudeOffsetBand = data[0];\n    var longitudeOffsetBand = data[1];\n    var nodes = [];\n\n    for (let i = lim[1] - 1; i >= 0; i--) {\n      for (let j = lim[0] - 1; j >= 0; j--) {\n        var index = i * lim[0] + j;\n        nodes.push([-secondsToRadians(longitudeOffsetBand[index]), secondsToRadians(latitudeOffsetBand[index])]);\n      }\n    }\n\n    subgrids.push({\n      del: del,\n      lim: lim,\n      ll: [-maxX, minY],\n      cvs: nodes\n    });\n  }\n\n  var tifGrid = {\n    header: {\n      nSubgrids: subGridCount\n    },\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = tifGrid;\n  return tifGrid;\n};\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n * @param {string} nadgrids A comma-separated list of grid names, optionally prefixed with '@' to indicate optional grids.\n * @returns\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\n/**\n * @param {string} value The nadgrid string to get information for.\n * @returns {NadgridInfo|null} An object with grid information, or null if the input is empty.\n */\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return { name: 'null', mandatory: !optional, grid: null, isNull: true };\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction degreesToRadians(degrees) {\n  return (degrees) * Math.PI / 180;\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian, includeErrorFields) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian, includeErrorFields);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    var rowSize = 16;\n    if (includeErrorFields === false) {\n      rowSize = 8;\n    }\n    gridOffset += 176 + subHeader.gridNodeCount * rowSize;\n  }\n  return grids;\n}\n\n/**\n * @param {*} nodes\n * @returns Array<Array<number>>\n */\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian, includeErrorFields) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n\n  if (includeErrorFields === false) {\n    gridRecordLength = 8;\n  }\n\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian)\n\n    };\n\n    if (includeErrorFields !== false) {\n      record.latitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian);\n      record.longitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian);\n    }\n\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n", "import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from './nadgrid';\n\n/**\n * @typedef {Object} DatumDefinition\n * @property {number} datum_type - The type of datum.\n * @property {number} a - Semi-major axis of the ellipsoid.\n * @property {number} b - Semi-minor axis of the ellipsoid.\n * @property {number} es - Eccentricity squared of the ellipsoid.\n * @property {number} ep2 - Second eccentricity squared of the ellipsoid.\n */\n\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} srsCode\n * @param {(errorMessage?: string, instance?: Projection) => void} [callback]\n */\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.forward = null;\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.inverse = null;\n  /** @type {function(): void} */\n  this.init = null;\n  /** @type {string} */\n  this.name;\n  /** @type {Array<string>} */\n  this.names = null;\n  /** @type {string} */\n  this.title;\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if (typeof json !== 'object') {\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if (!ourProj) {\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  /** @type {DatumDefinition} */\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  if ('init' in this && typeof this.init === 'function') {\n    this.init();\n  }\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n", "'use strict';\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; // Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    // ..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; // Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } // cs_geocentric_from_wgs84()\n}\n", "import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from './common/adjust_lon';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = { x: -point.x, y: point.y };\n  var output = { x: Number.NaN, y: Number.NaN };\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log('Unable to find mandatory grid \\'' + grid.name + '\\'');\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log('Failed to find a grid shift table for location \\''\n      + -input.x * R2D + ' ' + input.y * R2D + ' tried: \\'' + attemptedGrids + '\\'');\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = { x: Number.NaN, y: Number.NaN };\n  if (isNaN(pin.x)) {\n    return val;\n  }\n  var tb = { x: pin.x, y: pin.y };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log('Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.');\n        break;\n      }\n      dif = { x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y) };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log('Inverse grid shift iterator failed to converge.');\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = { x: pin.x / ct.del[0], y: pin.y / ct.del[1] };\n  var indx = { x: Math.floor(t.x), y: Math.floor(t.y) };\n  var frct = { x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y };\n  var val = { x: Number.NaN, y: Number.NaN };\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx++;\n  var f10 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx += ct.lim[0];\n  var f11 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx--;\n  var f01 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n", "export default function (crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  /** @type {import(\"./core\").InterfaceCoordinates} */\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if ('ew'.indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n      if ('ns'.indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n      case 'w':\n        out[t] = -v;\n        break;\n      case 'n':\n        out[t] = v;\n        break;\n      case 's':\n        out[t] = -v;\n        break;\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n        break;\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n        break;\n      default:\n      // console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n  return out;\n}\n", "/**\n * @param {Array<number>} array\n * @returns {import(\"../core\").InterfaceCoordinates}\n */\nexport default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n  return out;\n}\n", "export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n", "import { D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84')\n  || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\n/**\n * @param {import('./defs').ProjectionDefinition} source\n * @param {import('./defs').ProjectionDefinition} dest\n * @param {import('./core').TemplateCoordinates} point\n * @param {boolean} enforceAxis\n * @returns {import('./core').InterfaceCoordinates | undefined}\n */\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  point = /** @type {import('./core').InterfaceCoordinates} */ (point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n", "import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\n/**\n * @typedef {{x: number, y: number, z?: number, m?: number}} InterfaceCoordinates\n */\n\n/**\n * @typedef {Array<number> | InterfaceCoordinates} TemplateCoordinates\n */\n\n/**\n * @typedef {Object} Converter\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {proj} [oProj]\n */\n\n/**\n * @typedef {Object} PROJJSONDefinition\n * @property {string} [$schema]\n * @property {string} type\n * @property {string} [name]\n * @property {{authority: string, code: number}} [id]\n * @property {string} [scope]\n * @property {string} [area]\n * @property {{south_latitude: number, west_longitude: number, north_latitude: number, east_longitude: number}} [bbox]\n * @property {PROJJSONDefinition[]} [components]\n * @property {{type: string, name: string}} [datum]\n * @property {{\n *   name: string,\n *   members: Array<{\n *     name: string,\n *     id?: {authority: string, code: number}\n *   }>,\n *   ellipsoid?: {\n *     name: string,\n *     semi_major_axis: number,\n *     inverse_flattening?: number\n *   },\n *   accuracy?: string,\n *   id?: {authority: string, code: number}\n * }} [datum_ensemble]\n * @property {{\n *   subtype: string,\n *   axis: Array<{\n *     name: string,\n *     abbreviation?: string,\n *     direction: string,\n *     unit: string\n *   }>\n * }} [coordinate_system]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string\n *   }>\n * }} [conversion]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string,\n *     type?: string,\n *     file_name?: string\n *   }>\n * }} [transformation]\n */\n\n/**\n * @template {TemplateCoordinates} T\n * @param {proj} from\n * @param {proj} to\n * @param {T} coords\n * @param {boolean} [enforceAxis]\n * @returns {T}\n */\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || { x: NaN, y: NaN };\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3)));\n        } else {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3)));\n        }\n      } else {\n        return /** @type {T} */ ([transformedArray.x, transformedArray.y].concat(coords.slice(2)));\n      }\n    } else {\n      return /** @type {T} */ ([transformedArray.x, transformedArray.y]);\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return /** @type {T} */ (out);\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return /** @type {T} */ (out);\n  }\n}\n\n/**\n * @param {proj | string | PROJJSONDefinition | Converter} item\n * @returns {import('./Proj').default}\n */\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (typeof item === 'object' && 'oProj' in item) {\n    return item.oProj;\n  }\n  return proj(/** @type {string | PROJJSONDefinition} */ (item));\n}\n\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @param {string | PROJJSONDefinition | proj} fromProjOrToProj\n * @param {string | PROJJSONDefinition | proj | TemplateCoordinates} [toProjOrCoord]\n * @param {T} [coord]\n * @returns {T|Converter}\n */\nfunction proj4(fromProjOrToProj, toProjOrCoord, coord) {\n  /** @type {proj} */\n  var fromProj;\n  /** @type {proj} */\n  var toProj;\n  var single = false;\n  /** @type {Converter} */\n  var obj;\n  if (typeof toProjOrCoord === 'undefined') {\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof /** @type {?} */ (toProjOrCoord).x !== 'undefined' || Array.isArray(toProjOrCoord)) {\n    coord = /** @type {T} */ (/** @type {?} */ (toProjOrCoord));\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  }\n  if (!fromProj) {\n    fromProj = checkProj(fromProjOrToProj);\n  }\n  if (!toProj) {\n    toProj = checkProj(/** @type {string | PROJJSONDefinition | proj } */ (toProjOrCoord));\n  }\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\n\nexport default proj4;\n", "\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n", "import { toPoint, forward } from 'mgrs';\n\n/**\n * @deprecated v3.0.0 - use proj4.toPoint instead\n * @param {number | import('./core').TemplateCoordinates | string} x\n * @param {number} [y]\n * @param {number} [z]\n */\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0]);\n    this.y = parseFloat(coords[1]);\n    this.z = parseFloat(coords[2]) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n", "var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n", "export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n", "import pj_mlfn from './pj_mlfn';\nimport { EPSLN } from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    // t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    // phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  // ..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n", "// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1\n      + als / 6 * (1 - t + c\n        + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c\n          + als / 42 * (61 + 179 * ts - ts * t - 479 * t)))))\n        + this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0\n      + sin_phi * delta_lon * al / 2 * (1\n        + als / 12 * (5 - t + 9 * c + 4 * cs\n          + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c\n            + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t))))))\n          + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1\n        - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs\n          - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c\n            - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1\n        - ds / 6 * (1 + 2 * t + c\n          - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c\n            - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Fast_Transverse_Mercator', 'Fast Transverse Mercator'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n", "export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n", "export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n", "import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n", "export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n", "export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n", "export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n", "import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n", "// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} cbg\n * @property {Array<number>} cgb\n * @property {Array<number>} utg\n * @property {Array<number>} gtu\n * @property {number} Qn\n * @property {number} Zb\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Extended_Transverse_Mercator', 'Extended Transverse Mercator', 'etmerc', 'Transverse_Mercator', 'Transverse Mercator', 'Gauss Kruger', 'Gauss_Kruger', 'tmerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from './adjust_lon';\n\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n", "import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\n\n/** @this {import('../defs.js').ProjectionDefinition} */\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 = ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = ['Universal Transverse Mercator System', 'utm'];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n", "export default function (esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n", "import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} rc\n * @property {number} C\n * @property {number} phic0\n * @property {number} ratexp\n * @property {number} K\n * @property {number} e\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gauss'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sinc0\n * @property {number} cosc0\n * @property {number} R2\n * @property {number} rc\n * @property {number} phic0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = 'Oblique Stereographic Alternative';\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['Stereographic_North_Pole', 'Oblique_Stereographic', 'sterea', 'Oblique Stereographic Alternative', 'Double_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import { EPSLN, HALF_PI } from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} coslat0\n * @property {number} sinlat0\n * @property {number} ms1\n * @property {number} X0\n * @property {number} cosX0\n * @property {number} sinX0\n * @property {number} con\n * @property {number} cons\n * @property {number} e\n */\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        // North pole\n        // trace('stere:north pole');\n        this.con = 1;\n      } else {\n        // South pole\n        // trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    // case of the origine point\n    // trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    // trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      // trace(p.toString());\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      // Eq\n      // trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      // other case\n      // trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  // trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        // trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  // trace(p.toString());\n  return p;\n}\n\nexport var names = ['stere', 'Stereographic_South_Pole', 'Polar_Stereographic_variant_A', 'Polar_Stereographic_variant_B', 'Polar_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n", "/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} lambda0\n * @property {number} e\n * @property {number} R\n * @property {number} b0\n * @property {number} K\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      // ...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    // S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = ['somerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\n\n/**\n * @typedef {Object} LocalThis\n * @property {boolean} no_off\n * @property {boolean} no_rot\n * @property {number} rectified_grid_angle\n * @property {number} es\n * @property {number} A\n * @property {number} B\n * @property {number} E\n * @property {number} e\n * @property {number} lam0\n * @property {number} singam\n * @property {number} cosgam\n * @property {number} sinrot\n * @property {number} cosrot\n * @property {number} rB\n * @property {number} ArB\n * @property {number} BrA\n * @property {number} u_0\n * @property {number} v_pole_n\n * @property {number} v_pole_s\n */\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/**\n * Initialize the Oblique Mercator  projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL\n      || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL\n      || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.PI) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.PI) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n\n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n\n  return coords;\n}\n\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n * @property {number} ns\n * @property {number} f0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double lat0;                    /* the reference latitude               */\n  // double long0;                   /* the reference longitude              */\n  // double lat1;                    /* first standard parallel              */\n  // double lat2;                    /* second standard parallel             */\n  // double r_maj;                   /* major axis                           */\n  // double r_min;                   /* minor axis                           */\n  // double false_east;              /* x offset in meters                   */\n  // double false_north;             /* y offset in meters                   */\n\n  // the above value can be set with proj4.defs\n  // example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } // if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN\n    ? 0 // Handle poles by setting ts0 to 0\n    : tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = 'Lambert Conformal Conic';\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  'Lambert Tangential Conformal Conic Projection',\n  'Lambert_Conformal_Conic',\n  'Lambert_Conformal_Conic_1SP',\n  'Lambert_Conformal_Conic_2SP',\n  'lcc',\n  'Lambert Conic Conformal (1SP)',\n  'Lambert Conic Conformal (2SP)'\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x */\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = ['Krovak', 'krovak'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function (e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n", "export default function (x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n", "export default function (x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n", "export default function (x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n", "export default function (x) {\n  return (x * x * x * (35 / 3072));\n}\n", "export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n", "import { HALF_PI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n", "export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // ..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n", "import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    // ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['Cassini', 'Cassini_Soldner', 'cass'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "export default function (eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  } else {\n    return (2 * sinphi);\n  }\n}\n", "import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {Array<number>} apa\n * @property {number} dd\n * @property {number} e\n * @property {number} es\n * @property {number} mmf\n * @property {number} rq\n * @property {number} qp\n * @property {number} sinb1\n * @property {number} cosb1\n * @property {number} ymf\n * @property {number} xmf\n * @property {number} sinph0\n * @property {number} cosph0\n */\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/**\n * Initialize the Lambert Azimuthal Equal Area projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? S_POLE : N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = EQUIT;\n  } else {\n    this.mode = OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n      case N_POLE:\n        this.dd = 1;\n        break;\n      case S_POLE:\n        this.dd = 1;\n        break;\n      case EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n      case OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n        x = this.xmf * b * cosb * sinlam;\n        break;\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n        } else {\n          x = y = 0;\n        }\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n      case this.OBLIQ:\n        phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = ['Lambert Azimuthal Equal Area', 'Lambert_Azimuthal_Equal_Area', 'laea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n", "export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n", "import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e3\n * @property {number} sin_po\n * @property {number} cos_po\n * @property {number} t1\n * @property {number} con\n * @property {number} ms1\n * @property {number} qs1\n * @property {number} t2\n * @property {number} ms2\n * @property {number} qs2\n * @property {number} t3\n * @property {number} qs0\n * @property {number} ns0\n * @property {number} c\n * @property {number} rh\n * @property {number} sin_phi\n * @property {number} cos_phi\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  ------------------------------------------------------------------- */\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n------------------------------------------- */\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = ['Albers_Conic_Equal_Area', 'Albers_Equal_Area', 'Albers', 'aea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n * @property {number} infinity_dist\n * @property {number} rc\n */\n\n/**\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n   @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      ----------------- */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gnom'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    } else {\n      return HALF_PI;\n    }\n  }\n  // var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n", "import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n */\n\n/**\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n  @this {import('../defs.js').ProjectionDefinition & LocalThis}\n*/\nexport function init() {\n  // no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['cea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Equidistant Cylindrical (Plate Carre)';\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = ['Equirectangular', 'Equidistant_Cylindrical', 'Equidistant_Cylindrical_Spherical', 'eqc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\n\nimport gN from '../common/gN';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\nvar MAX_ITER = 20;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); // si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      // lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Polyconic', 'American_Polyconic', 'poly'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import { SEC_TO_RAD } from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['New_Zealand_Map_Grid', 'nzmg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  ------------------------------------------- */\nexport function init() {\n  // no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Miller_Cylindrical', 'mill'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {Array<number>} en\n * @property {number} n\n * @property {number} m\n * @property {number} C_y\n * @property {number} C_x\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n    ------------------------------------------------- */\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  ----------------------------------------------------- */\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    ----------------- */\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      // temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    } else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Sinusoidal', 'sinu'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ---------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      ----------------------------------------------------- */\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       -------------------------------------------------------------------------- */\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       ------------------------------------------------------------------- */\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mollweide', 'moll'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} sin_phi\n * @property {number} cos_phi\n * @property {number} ms1\n * @property {number} ml1\n * @property {number} ms2\n * @property {number} ml2\n * @property {number} ns\n * @property {number} g\n * @property {number} ml0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sin_phi = Math.sin(this.lat1);\n  this.cos_phi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sin_phi, this.cos_phi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sin_phi;\n  } else {\n    this.sin_phi = Math.sin(this.lat2);\n    this.cos_phi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sin_phi, this.cos_phi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      ----------------- */\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\n\nexport var names = ['Equidistant_Conic', 'eqdc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\n\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} R - Radius of the Earth\n */\n\n/**\n * Initialize the Van Der Grinten projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  // this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  // con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    // y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    // y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  --------------------------------------------------------- */\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Van_der_Grinten_I', 'VanDerGrinten', 'Van_der_Grinten', 'vandg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "/**\n * Calculates the inverse geodesic problem using Vincenty's formulae.\n * Computes the forward azimuth and ellipsoidal distance between two points\n * specified by latitude and longitude on the surface of an ellipsoid.\n *\n * @param {number} lat1 Latitude of the first point in radians.\n * @param {number} lon1 Longitude of the first point in radians.\n * @param {number} lat2 Latitude of the second point in radians.\n * @param {number} lon2 Longitude of the second point in radians.\n * @param {number} a Semi-major axis of the ellipsoid (meters).\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{ azi1: number, s12: number }} An object containing:\n *   - azi1: Forward azimuth from the first point to the second point (radians).\n *   - s12: Ellipsoidal distance between the two points (meters).\n */\nexport function vincentyInverse(lat1, lon1, lat2, lon2, a, f) {\n  const L = lon2 - lon1;\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const U2 = Math.atan((1 - f) * Math.tan(lat2));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinU2 = Math.sin(U2), cosU2 = Math.cos(U2);\n\n  let lambda = L, lambdaP, iterLimit = 100;\n  let sinLambda, cosLambda, sinSigma, cosSigma, sigma, sinAlpha, cos2Alpha, cos2SigmaM, C;\n  let uSq, A, B, deltaSigma, s;\n\n  do {\n    sinLambda = Math.sin(lambda);\n    cosLambda = Math.cos(lambda);\n    sinSigma = Math.sqrt(\n      (cosU2 * sinLambda) * (cosU2 * sinLambda)\n      + (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n      * (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n    );\n    if (sinSigma === 0) {\n      return { azi1: 0, s12: 0 }; // coincident points\n    }\n    cosSigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n    sigma = Math.atan2(sinSigma, cosSigma);\n    sinAlpha = cosU1 * cosU2 * sinLambda / sinSigma;\n    cos2Alpha = 1 - sinAlpha * sinAlpha;\n    cos2SigmaM = (cos2Alpha !== 0) ? (cosSigma - 2 * sinU1 * sinU2 / cos2Alpha) : 0;\n    C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n    lambdaP = lambda;\n    lambda = L + (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  } while (Math.abs(lambda - lambdaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { azi1: NaN, s12: NaN }; // formula failed to converge\n  }\n\n  uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n  deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n    - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n\n  s = (a * (1 - f)) * A * (sigma - deltaSigma);\n\n  // Forward azimuth\n  const azi1 = Math.atan2(cosU2 * sinLambda, cosU1 * sinU2 - sinU1 * cosU2 * cosLambda);\n\n  return { azi1, s12: s };\n}\n\n/**\n * Solves the direct geodetic problem using Vincenty's formulae.\n * Given a starting point, initial azimuth, and distance, computes the destination point on the ellipsoid.\n *\n * @param {number} lat1 Latitude of the starting point in radians.\n * @param {number} lon1 Longitude of the starting point in radians.\n * @param {number} azi1 Initial azimuth (forward azimuth) in radians.\n * @param {number} s12 Distance to travel from the starting point in meters.\n * @param {number} a Semi-major axis of the ellipsoid in meters.\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{lat2: number, lon2: number}} The latitude and longitude (in radians) of the destination point.\n */\nexport function vincentyDirect(lat1, lon1, azi1, s12, a, f) {\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinAlpha1 = Math.sin(azi1), cosAlpha1 = Math.cos(azi1);\n\n  const sigma1 = Math.atan2(sinU1, cosU1 * cosAlpha1);\n  const sinAlpha = cosU1 * sinAlpha1;\n  const cos2Alpha = 1 - sinAlpha * sinAlpha;\n  const uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  const A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  const B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n\n  let sigma = s12 / ((a * (1 - f)) * A), sigmaP, iterLimit = 100;\n  let cos2SigmaM, sinSigma, cosSigma, deltaSigma;\n\n  do {\n    cos2SigmaM = Math.cos(2 * sigma1 + sigma);\n    sinSigma = Math.sin(sigma);\n    cosSigma = Math.cos(sigma);\n    deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n      - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n    sigmaP = sigma;\n    sigma = s12 / ((a * (1 - f)) * A) + deltaSigma;\n  } while (Math.abs(sigma - sigmaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { lat2: NaN, lon2: NaN };\n  }\n\n  const tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1;\n  const lat2 = Math.atan2(\n    sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\n    (1 - f) * Math.sqrt(sinAlpha * sinAlpha + tmp * tmp)\n  );\n  const lambda = Math.atan2(\n    sinSigma * sinAlpha1,\n    cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1\n  );\n  const C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n  const L = lambda - (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  const lon2 = lon1 + L;\n\n  return { lat2, lon2 };\n}\n", "import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nimport { vincentyDirect, vincentyInverse } from '../common/vincenty';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} sin_p12\n * @property {number} cos_p12\n * @property {number} a\n * @property {number} f\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n  // flattening for ellipsoid\n  this.f = this.es / (1 + Math.sqrt(1 - this.es));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, c, kp, cos_c, vars, azi1;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      // default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      // Default case\n      if (Math.abs(lon) < EPSLN && Math.abs(lat - this.lat0) < EPSLN) {\n        p.x = p.y = 0;\n        return p;\n      }\n      vars = vincentyInverse(this.lat0, this.long0, lat, lon, this.a, this.f);\n      azi1 = vars.azi1;\n      p.x = vars.s12 * Math.sin(azi1);\n      p.y = vars.s12 * Math.cos(azi1);\n      return p;\n    }\n  }\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, azi1, s12, vars;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      // default case\n      azi1 = Math.atan2(p.x, p.y);\n      s12 = Math.sqrt(p.x * p.x + p.y * p.y);\n      vars = vincentyDirect(this.lat0, this.long0, azi1, s12, this.a, this.f);\n\n      p.x = vars.lon2;\n      p.y = vars.lat2;\n      return p;\n    }\n  }\n}\n\nexport var names = ['Azimuthal_Equidistant', 'aeqd'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['ortho'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} face\n * @property {number} x0\n * @property {number} y0\n * @property {number} es\n * @property {number} one_minus_f\n * @property {number} one_minus_f_squared\n */\n\n/* constants */\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Quadrilateralized Spherical Cube';\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = { x: 0, y: 0 };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = { value: 0 };\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) { // if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; // lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = { lam: 0, phi: 0 };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = { value: 0 };\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = ['Quadrilateralized Spherical Cube', 'Quadrilateralized_Spherical_Cube', 'qsc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n  [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n  [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n  [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n  [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n  [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n  [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n  [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n  [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n  [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n  [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n  [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n  [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n  [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n  [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n  [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n  [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n  [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n  [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n  [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n  [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n  [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n  [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n  [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n  [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n  [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n  [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n  [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n  [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n  [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n  [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n  [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n  [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n  [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n  [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n  [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n  [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n  [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n  [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function (coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function (coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || 'Robinson';\n}\n\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\n\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) { // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    }\n    // linear interpolation in 5 degree interval\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]);\n    // find t so that poly3_val(coefs, t) = ll.y\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\n\nexport var names = ['Robinson', 'robin'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import {\n  geodeticToGeocentric,\n  geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n  this.name = 'geocent';\n}\n\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\n\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\n\nexport var names = ['Geocentric', 'geocentric', 'geocent', 'Geocent'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import { D2R, HALF_PI, EPSLN } from '../constants/values';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {number} sinph0\n * @property {number} cosph0\n * @property {number} pn1\n * @property {number} h\n * @property {number} rp\n * @property {number} p\n * @property {number} h1\n * @property {number} pfact\n * @property {number} es\n * @property {number} tilt\n * @property {number} azi\n * @property {number} cg\n * @property {number} sg\n * @property {number} cw\n * @property {number} sw\n */\n\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nvar params = {\n  h: { def: 100000, num: true }, // default is Karman line, no default in PROJ.7\n  azi: { def: 0, num: true, degrees: true }, // default is North\n  tilt: { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true }, // default is Greenwich, conversion to rad is automatic\n  lat0: { def: 0, num: true } // default is Equator, conversion to rad is automatic\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === 'undefined') {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error('Invalid parameter value, must be numeric ' + p + ' = ' + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error('Invalid height');\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = ['Tilted_Perspective', 'tpers'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {1 | 0} flip_axis\n * @property {number} h\n * @property {number} radius_g_1\n * @property {number} radius_g\n * @property {number} radius_p\n * @property {number} radius_p2\n * @property {number} radius_p_inv2\n * @property {'ellipse'|'sphere'} shape\n * @property {number} C\n * @property {string} sweep\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n  this.h = Number(this.h);\n  this.radius_g_1 = this.h / this.a;\n\n  if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n    throw new Error();\n  }\n\n  this.radius_g = 1.0 + this.radius_g_1;\n  this.C = this.radius_g * this.radius_g - 1.0;\n\n  if (this.es !== 0.0) {\n    var one_es = 1.0 - this.es;\n    var rone_es = 1 / one_es;\n\n    this.radius_p = Math.sqrt(one_es);\n    this.radius_p2 = one_es;\n    this.radius_p_inv2 = rone_es;\n\n    this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n  } else {\n    this.radius_p = 1.0;\n    this.radius_p2 = 1.0;\n    this.radius_p_inv2 = 1.0;\n\n    this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n  }\n\n  if (!this.title) {\n    this.title = 'Geostationary Satellite View';\n  }\n}\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var tmp, v_x, v_y, v_z;\n  lon = lon - this.long0;\n\n  if (this.shape === 'ellipse') {\n    lat = Math.atan(this.radius_p2 * Math.tan(lat));\n    var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n    v_x = r * Math.cos(lon) * Math.cos(lat);\n    v_y = r * Math.sin(lon) * Math.cos(lat);\n    v_z = r * Math.sin(lat);\n\n    if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    tmp = this.radius_g - v_x;\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  } else if (this.shape === 'sphere') {\n    tmp = Math.cos(lat);\n    v_x = Math.cos(lon) * tmp;\n    v_y = Math.sin(lon) * tmp;\n    v_z = Math.sin(lat);\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  }\n  p.x = p.x * this.a;\n  p.y = p.y * this.a;\n  return p;\n}\n\nfunction inverse(p) {\n  var v_x = -1.0;\n  var v_y = 0.0;\n  var v_z = 0.0;\n  var a, b, det, k;\n\n  p.x = p.x / this.a;\n  p.y = p.y / this.a;\n\n  if (this.shape === 'ellipse') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n    }\n\n    var v_zp = v_z / this.radius_p;\n    a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n  } else if (this.shape === 'sphere') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n    }\n\n    a = v_y * v_y + v_z * v_z + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n  }\n  p.x = p.x + this.long0;\n  return p;\n}\n\nexport var names = ['Geostationary Satellite View', 'Geostationary_Satellite', 'geos'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from '../common/adjust_lon';\n\nvar A1 = 1.340264,\n  A2 = -0.081106,\n  A3 = 0.000893,\n  A4 = 0.003796,\n  M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n    paramLatSq = paramLat * paramLat,\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat)\n    / (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n    NITER = 12,\n    paramLat = p.y,\n    paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n      break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq))\n    / Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['eqearth', 'Equal Earth', 'Equal_Earth'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n", "import adjust_lat from '../common/adjust_lat';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\nimport pj_enfn from '../common/pj_enfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport { HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} phi1\n * @property {number} cphi1\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} m1\n * @property {number} am1\n */\n\nvar EPS10 = 1e-10;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    } else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['bonne', 'Bonne (Werner lat_1=90)'];\nexport default {\n  init: init,\n  names: names\n};\n", "import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}\n", "import core from './core';\nimport Proj from './Proj';\nimport Point from './Point';\nimport common from './common/toPoint';\nimport defs from './defs';\nimport nadgrid from './nadgrid';\nimport transform from './transform';\nimport mgrs from 'mgrs';\nimport includedProjections from '../projs';\n\n/**\n * @typedef {Object} Mgrs\n * @property {(lonlat: [number, number]) => string} forward\n * @property {(mgrsString: string) => [number, number, number, number]} inverse\n * @property {(mgrsString: string) => [number, number]} toPoint\n */\n\n/**\n * @typedef {import('./defs').ProjectionDefinition} ProjectionDefinition\n * @typedef {import('./core').TemplateCoordinates} TemplateCoordinates\n * @typedef {import('./core').InterfaceCoordinates} InterfaceCoordinates\n * @typedef {import('./core').Converter} Converter\n * @typedef {import('./Proj').DatumDefinition} DatumDefinition\n */\n\n/**\n * @template {import('./core').TemplateCoordinates} T\n * @type {core<T> & {defaultDatum: string, Proj: typeof Proj, WGS84: Proj, Point: typeof Point, toPoint: typeof common, defs: typeof defs, nadgrid: typeof nadgrid, transform: typeof transform, mgrs: Mgrs, version: string}}\n */\nconst proj4 = Object.assign(core, {\n  defaultDatum: 'WGS84',\n  Proj,\n  WGS84: new Proj('WGS84'),\n  Point,\n  toPoint: common,\n  defs,\n  nadgrid,\n  transform,\n  mgrs,\n  version: '__VERSION__'\n});\nincludedProjections(proj4);\nexport default proj4;\n", "/* pass 1 */\nconst A=' +no_defs',B=' +towgs84=0,0,0,0,0,0,0',C=' +ellps=GRS80',D='+proj=tmerc',E=' +units=m',F=' +towgs84=23.92,-141.27,-80.9,-0,0.35,0.82,-0.12',G=' +towgs84=24.47,-130.89,-81.56,-0,-0,0.13,-0.22',H='+proj=lcc',I='+proj=utm',J=' +units=us-ft',K='+proj=longlat',L=' +lat_0=0',M=' +ellps=krass',N=' +y_0=0',O=' +x_0=500000',P=' +towgs84=0,0,4.5,0,0,0.554,0.2263',Q=' +towgs84=0,0,1.9,0,0,0.814,-0.38',R=' +ellps=intl',S=' +datum=WGS84',T=' +ellps=WGS72',U=' +towgs84=15.8,-154.4,-82.3,0,0,0,0',V=' +k=0.9999',W=' +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',X=' +datum=NAD27',Y=' +ellps=bessel',Z=' +x_0=609601.2192024384',a=' +x_0=600000',b=' +towgs84=33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84',c=' +ellps=clrk80',d=' +b=6356755.288157528',e=' +x_0=152400.3048006096',f=' +lat_0=36.66666666666666',g=' +towgs84=-146.414,507.337,680.507,0,0,0,0',h=' +x_0=200000',i=' +ellps=clrk66',j=' +ellps=WGS84',k=' +x_0=500000.001016002',l=' +x_0=240000',m=' +lat_0=-90',n=' +towgs84=-87,-98,-121,0,0,0,0',o=' +south',p=' +lat_0=41.66666666666666',q=' +y_0=36000',r=' +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29',s=' +x_0=0',t=' +units=ft',u=' +x_0=400000',v=' +towgs84=-115.854,-99.0583,-152.462,0,0,0,0',w=' +towgs84=-208.406,-109.878,-2.5764,0,0,0,0',x=' +ellps=aust_SA',y=' +lat_0=39.33333333333334',z=' +towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232',AA=' +lat_0=37.66666666666666',AB=' +lat_0=36.33333333333334',AC=' +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7',AD=' +y_0=500000.0001016001',AE=' +x_0=200000.0001016002',AF=' +x_0=500000.0001016001',AG=' +x_0=500000.00001016',AH=' +y_0=1000000',AI=' +x_0=300000',AJ=' +lon_0=-120.5',AK=' +lat_0=43.66666666666666',AL=' +lat_0=43.83333333333334',AM=' +lat_1=-68.66666666666667',AN=' +lat_2=-71.33333333333333',AO=' +k=0.999966667',AP=' +k=0.9996',AQ=' +lat_0=38.33333333333334',AR=' +lat_1=73.66666666666667',AS=' +lat_2=70.33333333333333',AT=' +lat_0=72.02500919444445',AU=' +a=6378249.2',AV=' +x_0=1500000',AW=' +lat_ts=-80.23861111111111',AX=' +towgs84=-288,175,-376,0,0,0,0',AY=' +lat_1=41.78333333333333',AZ=' +lat_2=-75.33333333333333',Aa=' +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21',Ab=' +x_0=304800',Ac=' +x_0=2000000.0001016',Ad=' +k=0.9999375',Ae=' +y_0=500000',Af=' +towgs84=-209.362,-87.8162,404.62,0.0046,3.4784,0.5805,-1.4547',Ag=' +lon_0=-100.3333333333333',Ah=' +lat_1=-72.66666666666667',Ai=' +lat_1=-76.66666666666667',Aj=' +lat_2=-79.33333333333333',Ak=' +y_0=10000000',Al=' +towgs84=-57,1,-41,0,0,0,0',Am=' +k=0.999941177',An=' +x_0=800000.0000101599',Ao=' +y_0=99999.99998983997',Ap=' +lat_1=38.43333333333333',Aq=' +lat_0=24.33333333333333',Ar=' +towgs84=26,-121,-78,0,0,0,0',As=' +a=6378140',At=' +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496',Au=' +x_0=399999.99998984',Av=' +towgs84=-24,-15,5,0,0,0,0',Aw=' +towgs84=682,-203,480,0,0,0,0',Ax=' +towgs84=-136,-108,-292,0,0,0,0',Ay=' +b=6356075.41314024',Az=' +lat_1=37.96666666666667',BA=' +lat_0=38.83333333333334',BB=' +lat_0=40.16666666666666',BC=' +lat_0=34.33333333333334',BD=' +lat_0=42.83333333333334',BE=' +lon_0=-84.36666666666666',BF=' +x_0=300000.0000000001',BG=' +k=0.999933333',BH=' +lat_1=48.73333333333333',BI=' +lon_0=-111.5',BJ=' +k=0.9999473679999999',BK=' +towgs84=-67.35,3.88,-38.22,0,0,0,0',BL=' +lat_2=73.66666666666667',BM=' +lat_0=75.36440330555556',BN=' +b=6356515',BO=' +towgs84=25,-141,-78.5,-0,0.35,0.736,0',BP='+proj=stere',BQ=' +lat_1=-64.66666666666667',BR=' +lat_2=-67.33333333333333',BS=' +b=6356514.966398753',BT=' +towgs84=295,736,257,0,0,0,0',BU=' +x_0=100000',BV=' +towgs84=-11,851,5,0,0,0,0',BW=' +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0',BX=' +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06',BY=' +lat_0=39.66666666666666',BZ=' +x_0=1000000',Ba=' +lon_0=-105.5',Bb=' +towgs84=482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15',Bc=' +a=6378249.145',Bd=' +x_0=2000000',Be=' +lat_0=45.66666666666666',Bf=' +lat_1=80.33333333333333',Bg=' +lat_0=78.70733752777778',Bh=' +b=6356774.50408554',Bi=' +lon_0=-91.33333333333333',Bj=' +lon_0=-123.3333333333333',Bk=' +towgs84=-168,-60,320,0,0,0,0',Bl=' +lat_0=31',Bm=' +towgs84=0.072,-0.507,-0.245,-0.0183,0.0003,-0.007,-0.0093',Bn=' +x_0=150000',Bo=' +x_0=3500000',Bp=' +towgs84=213.11,9.37,-74.95,0,0,0,0',Bq=' +lat_1=43.66666666666666',Br=' +lat_0=40.33333333333334',Bs=' +towgs84=-148,136,90,0,0,0,0',Bt=' +towgs84=616,97,-251,0,0,0,0',Bu=' +lon_0=-90',Bv=' +x_0=250000',Bw=' +x_0=914401.8288036576',Bx=' +lon_0=-90.33333333333333',By=' +a=6377276.345',Bz=' +b=6356103.038993155',CA=' +lat_0=40.5',CB=' +towgs84=-134,-48,149,0,0,0,0',CC=' +towgs84=25,-141,-78.5,0,0.35,0.736,0',CD=' +lat_1=27.83333333333333',CE=' +lat_2=26.16666666666667',CF=' +lat_2=40.71666666666667',CG=' +lat_2=39.01666666666667',CH=' +lat_2=37.21666666666667',CI=' +lat_1=70.33333333333333',CJ=' +lat_0=68.68747555555557',CK=' +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68',CL=' +y_0=304800.6096012192',CM=' +x_0=699999.9998983998',CN=' +y_0=999999.9998983998',CO=' +y_0=800000',CP=' +k=0.99995',CQ=' +lat_0=34.75',CR=' +lon_0=-81',CS=' +lon_0=-100',CT=' +b=6356098.145120132',CU='+proj=omerc',CV=' +lon_0=-98.5',CW=' +towgs84=-103.746,-9.614,-255.95,0,0,0,0',CX=' +x_0=800000',CY=' +lat_0=37.83333333333334',CZ=' +lat_2=44.33333333333334',Ca=' +lat_2=42.33333333333334',Cb=' +lat_0=29.66666666666667',Cc=' +lat_0=25.66666666666667',Cd=' +lat_0=35.83333333333334',Ce=' +lat_1=83.66666666666667',Cf=' +lat_2=80.33333333333333',Cg=' +lat_0=82.05842488888888',Ch=' +lat_0=38',Ci=' +x_0=2500000',Cj=' +towgs84=-377,681,-50,0,0,0,0',Ck='+proj=cass',Cl=' +y_0=2000000',Cm=' +towgs84=-143,-236,7,0,0,0,0',Cn=' +lon_0=-110.1666666666667',Co=' +lon_0=-111.9166666666667',Cp=' +lon_0=-75.41666666666667',Cq=' +lon_0=-82.16666666666667',Cr=' +lon_0=-84.16666666666667',Cs=' +lon_0=-112.1666666666667',Ct=' +lon_0=-88.83333333333333',Cu=' +lon_0=-104.3333333333333',Cv=' +lon_0=-107.8333333333333',Cw=' +lon_0=-76.58333333333333',Cx=' +lon_0=-78.58333333333333',Cy=' +lon_0=-120.8333333333333',Cz=' +lon_0=-88.33333333333333',DA=' +lon_0=-90.16666666666667',DB=' +lon_0=-85.66666666666667',DC=' +lon_0=-87.08333333333333',DD=' +lon_0=-70.16666666666667',DE=' +lon_0=-93.09999999999999',DF=' +lon_0=-115.5833333333333',DG=' +lon_0=-116.6666666666667',DH=' +lon_0=-118.5833333333333',DI=' +lon_0=-71.66666666666667',DJ=' +lon_0=-105.1666666666667',DK=' +lon_0=-107.3333333333333',DL=' +lon_0=-110.0833333333333',DM=' +lat_0=37.5',DN=' +y_0=700000',DO=' +towgs84=-242.2,-144.9,370.3,0,0,0,0',DP=' +x_0=4500000',DQ=' +y_0=1500000',DR=' +x_0=599999.9999976',DS=' +towgs84=-275.722,94.7824,340.894,-8.001,-4.42,-11.821,1',DT='+proj=aea',DU=' +y_0=-2500000',DV=' +lat_2=38.96666666666667',DW=' +lat_1=41.66666666666666',DX=' +lat_1=39.83333333333334',DY=' +lat_2=38.33333333333334',DZ=' +lat_2=37.06666666666667',Da=' +lat_0=35.33333333333334',Db=' +lat_1=35.46666666666667',Dc=' +lat_2=34.03333333333333',Dd=' +lat_1=33.88333333333333',De=' +lat_2=32.78333333333333',Df=' +lat_0=32.16666666666666',Dg=' +lat_2=37.23333333333333',Dh=' +lat_1=41.86666666666667',Di=' +lat_0=40.83333333333334',Dj=' +lat_2=29.58333333333333',Dk=' +lat_2=41.71666666666667',Dl=' +lat_1=41.03333333333333',Dm=' +lat_2=40.66666666666666',Dn=' +lat_1=36.76666666666667',Do=' +lat_0=33.33333333333334',Dp=' +lat_1=40.96666666666667',Dq=' +lat_2=39.93333333333333',Dr=' +lat_0=31.83333333333333',Ds=' +lat_0=31.66666666666667',Dt=' +lat_0=27.83333333333333',Du=' +lat_2=36.76666666666667',Dv=' +lat_0=45.33333333333334',Dw=' +lat_0=45.16666666666666',Dx=' +lat_1=36.23333333333333',Dy=' +lat_2=34.93333333333333',Dz=' +lat_1=34.76666666666667',EA=' +lat_0=32.66666666666666',EB=' +lat_1=43.26666666666667',EC=' +lat_2=42.06666666666667',ED=' +lat_2=40.61666666666667',EE=' +lat_1=39.78333333333333',EF=' +lat_2=38.71666666666667',EG=' +lat_1=38.56666666666667',EH=' +lat_2=37.26666666666667',EI=' +lat_0=41.08333333333334',EJ=' +lat_0=42.33333333333334',EK=' +y_0=100000',EL=' +b=6356173.508712696',EM=' +y_0=5500000',EN=' +lon_0=105',EO=' +y_0=-5000000',EP=' +k=0.9995000000000001',EQ=' +k=0.9999749999999999',ER=' +towgs84=-160,-6,-302,0,0,0,0',ES=' +towgs84=307,304,-318,0,0,0,0',ET=' +lon_0=-82.5',EU=' +towgs84=70.995,-335.916,262.898,0,0,0,0',EV=' +towgs84=-304.046,-60.576,103.64,0,0,0,0',EW=' +x_0=700000',EX=' +x_0=213360',EY=' +lon_0=-85.75',EZ=' +lon_0=-100.5',Ea=' +lon_0=-77.75',Eb=' +x_0=999999.9999898402',Ec=' +towgs84=-151.99,287.04,-147.45,0,0,0,0',Ed=' +lon_0=129',Ee=' +a=6378293.645208759',Ef=' +b=6356617.987679838',Eg=' +x_0=5500000',Eh=' +lat_1=40.78333333333333',Ei=' +lat_2=39.71666666666667',Ej=' +lat_1=37.93333333333333',Ek=' +lat_2=36.73333333333333',El=' +lat_1=42.68333333333333',Em=' +lat_1=41.48333333333333',En=' +lat_2=41.28333333333333',Eo=' +lat_1=47.08333333333334',Ep=' +lat_2=45.48333333333333',Eq=' +lat_0=44.78333333333333',Er=' +lat_2=44.18333333333333',Es=' +lat_0=43.31666666666667',Et=' +lat_1=36.16666666666666',Eu=' +lat_2=34.33333333333334',Ev=' +lat_2=47.43333333333333',Ew=' +lat_1=47.48333333333333',Ex=' +lat_2=46.18333333333333',Ey=' +lat_2=35.56666666666667',Ez=' +lat_1=35.23333333333333',FA=' +lat_2=33.93333333333333',FB=' +lat_2=40.88333333333333',FC=' +lat_1=34.83333333333334',FD=' +lat_1=36.41666666666666',FE=' +lat_1=36.18333333333333',FF=' +lat_1=33.96666666666667',FG=' +lat_2=32.13333333333333',FH=' +lat_1=31.88333333333333',FI=' +lat_2=30.11666666666667',FJ=' +lat_1=30.28333333333333',FK=' +lat_2=28.38333333333333',FL=' +lat_2=38.03333333333333',FM=' +lat_1=47.33333333333334',FN=' +lat_2=45.83333333333334',FO=' +lat_1=46.76666666666667',FP=' +lat_2=45.56666666666667',FQ=' +lat_1=44.06666666666667',FR=' +lat_2=42.73333333333333',FS=' +lat_1=32.66666666666666',FT=' +lat_2=31.16666666666667',FU=' +lat_1=48.63333333333333',FV=' +lat_2=47.03333333333333',FW=' +lat_2=45.61666666666667',FX=' +lat_1=45.21666666666667',FY=' +lat_2=43.78333333333333',FZ=' +lat_0=39.83333333333334',Fa=' +lat_2=40.43333333333333',Fb=' +lat_1=40.03333333333333',Fc=' +lat_2=38.73333333333333',Fd=' +lat_1=45.68333333333333',Fe=' +lat_2=44.41666666666666',Ff=' +lat_2=42.83333333333334',Fg=' +lat_1=38.88333333333333',Fh=' +lat_2=37.48333333333333',Fi=' +lat_1=37.08333333333334',Fj=' +lat_2=38.66666666666666',Fk=' +lat_0=58',Fl=' +lon_0=-98',Fm=' +lon_0=117',Fn=' +lon_0=135',Fo=' +lat_0=41.5',Fp=' +lat_0=42.5',Fq=' +y_0=3000000',Fr=' +lon_0=123',Fs=' +lat_0=40',Ft=' +lat_0=54',Fu=' +towgs84=-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188',Fv=' +towgs84=565.417,50.3319,465.552,-0.398957,0.343988,-1.8774,4.0725',Fw=' +x_0=914401.8289',Fx=' +y_0=304800.6096',Fy=' +lon_0=111',Fz=' +k_0=0.99878641',GA=' +lon_0=-66.43333333333334',GB=' +towgs84=61,-285,-181,0,0,0,0',GC=' +towgs84=-133,-77,-51,0,0,0,0',GD=' +towgs84=-679,669,-48,0,0,0,0',GE=' +lon_0=-71.5',GF=' +lon_0=-78.5',GG=' +lon_0=-93.5',GH=' +lat_0=41.75',GI=' +y_0=249999.9998983998',GJ=' +y_0=999999.9999898402',GK=' +to_meter=1.0000135965',GL=' +a=6377304.063',GM=' +lat_0=36',GN=' +towgs84=-79.9,-158,-168.9,0,0,0,0',GO=' +towgs84=-50.9,-347.6,-231,0,0,0,0',GP=' +towgs84=-106.869,52.2978,-103.724,0.3366,-0.457,1.8422,-1.2747',GQ=' +towgs84=283,682,231,0,0,0,0',GR=' +towgs84=-206,172,-6,0,0,0,0',GS=' +towgs84=-92,-93,122,0,0,0,0',GT=' +to_meter=0.9143985307444408',GU='+proj=sterea',GV=' +lat_0=21.16666666666667',GW=' +lat_1=18.43333333333333',GX=' +lat_2=18.03333333333333',GY=' +lat_0=17.83333333333333',GZ=' +gamma=323.1301023611111',Ga=' +lon_0=-79.5',Gb=' +y_0=4500000',Gc=' +x_0=31500000',Gd=' +x_0=500000.0001504',Ge=' +b=6356514.96582849',Gf=' +towgs84=674.4,15.1,405.3,0,0,0,0',Gg=' +towgs84=-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.7101',Gh=' +towgs84=589,76,480,0,0,0,0',Gi=' +towgs84=-263,6,431,0,0,0,0',Gj=' +lon_0=15',Gk=' +axis=wsu',Gl=' +lon_0=21',Gm=' +lat_0=30',Gn=' +ellps=helmert',Go=' +a=6377299.151',Gp=' +lon_0=-74.5',Gq=' +b=6356750.304921594',Gr=' +y_0=2000000.0001016',Gs=' +x_0=3500000.0001016',Gt=' +y_0=399999.99998984',Gu=' +x_0=200000.00001016',Gv=' +b=6356098.359005156',Gw=' +x_0=14500000',Gx=' +x_0=29500000',Gy=' +towgs84=-117,-132,-164,0,0,0,0',Gz=' +zone=20',HA=' +lon_0=-122',HB=' +ellps=bess_nam',HC=' +lon_0=-86.15000000000001',HD=' +towgs84=-189,-242,-91,0,0,0,0',HE=' +towgs84=-265,120,-358,0,0,0,0',HF=' +towgs84=-73.472,-51.66,-112.482,0.953,4.6,-2.368,0.586',HG=' +towgs84=-17.51,-108.32,-62.39,0,0,0,0',HH=' +towgs84=-10.18,-350.43,291.37,0,0,0,0',HI=' +towgs84=-190.421,8.532,238.69,0,0,0,0',HJ=' +lon_0=-68.5',HK=' +a=6377299.36559538',HL=' +x_0=79999.99999968',HM=' +x_0=50000.00001504',HN=' +lon_0=0',HO=' +lon_0=27',HP=' +lon_0=75',HQ=' +lon_0=81',HR=' +lon_0=93',HS=' +lon_0=99',HT=' +x_0=900000',HU=' +x_0=13500000',HV=' +x_0=20500000',HW=' +x_0=22500000',HX=' +towgs84=-166,-15,204,0,0,0,0',HY=' +towgs84=-130,110,-13,0,0,0,0',HZ=' +towgs84=-587.8,519.75,145.76,0,0,0,0',Ha=' +lat_2=83.66666666666667',Hb=' +lat_0=85.43711833333333',Hc=' +towgs84=-273.5,110.6,-357.9,0,0,0,0',Hd=' +lon_0=87',He='+proj=laea',Hf=' +towgs84=-403,684,41,0,0,0,0',Hg=' +lon_0=-92.5',Hh=' +y_0=6000000',Hi=' +zone=19',Hj=' +lat_0=29.5',Hk=' +y_0=300000',Hl=' +lat_2=45.5',Hm=' +k=0.999909091',Hn=' +a=6377492.018',Ho=' +b=6356751.689189189',Hp=' +b=6356100.230165384',Hq=' +lon_0=90',Hr=' +lat_0=90',Hs=' +x_0=18500000',Ht=' +x_0=19500000',Hu=' +x_0=15500000',Hv=' +x_0=16500000',Hw=' +x_0=21500000',Hx=' +x_0=23500000',Hy=' +x_0=25500000',Hz=' +x_0=26500000',IA=' +x_0=27500000',IB=' +x_0=28500000',IC=' +zone=18',ID=' +zone=21',IE=' +towgs84=-124.76,53,466.79,0,0,0,0',IF=' +lon_0=-92',IG=' +lon_0=33',IH=' +lon_0=12',II=' +lon_0=24',IJ=' +lat_2=77',IK=' +y_0=200000',IL=' +lon_0=-70.5',IM=' +x_0=7500000',IN=' +y_0=3500000',IO=' +towgs84=31,146,47,0,0,0,0',IP=' +lat_0=45',IQ=' +lat_0=26',IR=' +a=6378160',IS=' +lon_0=-109.5',IT=' +x_0=30500000',IU=' +x_0=32500000',IV=' +lon_0=-85.83333333333333',IW=' +lon_0=-118.3333333333333',IX=' +y_0=0.003048006096012192',IY=' +lat_0=30.5',IZ=' +lat_0=44',Ia=' +lon_0=30',Ib=' +lat_0=47',Ic=' +lat_1=77',Id=' +lat_0=36.16666666666666',Ie=' +lat_0=4.596200416666666',If=' +gamma=53.13010236111111',Ig=' +lon_0=13.33333333333333',Ih=' +lat_0=81.31722600000001',Ii=' +lat_0=73.15574086111111',Ij=' +lat_0=65.10127088888888',Ik=' +zone=17',Il=' +lon_0=132',Im=' +lon_0=114',In=' +towgs84=-143,-90,-294,0,0,0,0',Io=' +zone=22',Ip=' +lat_0=41',Iq=' +lat_0=46.5',Ir=' +lon_0=-118',Is=' +y_0=400000',It=' +x_0=17500000',Iu=' +x_0=33500000',Iv=' +lon_0=-113.75',Iw=' +lon_0=-116.25',Ix=' +lon_0=-115.75',Iy=' +lon_0=-106.25',Iz=' +k=0.999916667',JA=' +k=0.999964286',JB=' +lon_0=-108.75',JC=' +towgs84=-73,-247,227,0,0,0,0',JD=' +towgs84=265.025,384.929,-194.046,0,0,0,0',JE=' +k=0.99998',JF=' +lat_1=40.65',JG=' +lat_1=38.35',JH=' +y_0=2500000',JI=' +y_0=6500000',JJ=' +x_0=39999.99999984',JK=' +towgs84=-61.702,284.488,472.052,0,0,0,0',JL=' +towgs84=-223.237,110.193,36.649,0,0,0,0',JM=' +zone=39',JN=' +zone=32',JO=' +towgs84=-125,53,467,0,0,0,0',JP=' +towgs84=198,881,317,0,0,0,0',JQ=' +towgs84=214,804,268,0,0,0,0',JR=' +towgs84=217,823,299,0,0,0,0',JS=' +lon_0=45',JT=' +lat_1=43',JU='+proj=merc',JV=' +x_0=99999.99998983997',JW=' +x_0=99999.99999960001',JX=' +x_0=2743195.592233322',JY=' +y_0=914398.5307444407',JZ=' +zone=38',Ja=' +zone=28',Jb=' +lon_0=-114',Jc=' +lat_1=45.5',Jd=' +towgs84=-73,46,-86,0,0,0,0',Je=' +towgs84=11,72,-101,0,0,0,0',Jf=' +towgs84=287.58,177.78,-135.41,0,0,0,0',Jg=' +towgs84=-162.619,-276.959,-161.764,0.067753,-2.24365,-1.15883,-1.09425',Jh=' +lon_0=-87',Ji=' +lon_0=-99',Jj=' +lon_0=102',Jk=' +lon_0=126',Jl=' +k=0.99999',Jm=' +x_0=50000',Jn=' +lat_2=40',Jo=' +lon_0=-84.25',Jp=' +x_0=11500000',Jq=' +lon_0=-72.75',Jr=' +lon_0=-101.5',Js=' +lon_0=-94.25',Jt=' +x_0=6500000',Ju=' +y_0=5000000',Jv=' +x_0=1700000',Jw=' +towgs84=31.95,300.99,419.19,0,0,0,0',Jx=' +towgs84=-189.681,18.3463,-42.7695,-0.33746,-3.09264,2.53861,0.4598',Jy=' +towgs84=-119.425,-303.659,-11.0006,1.1643,0.174458,1.09626,3.65706',Jz=' +towgs84=982.609,552.753,-540.873,6.68163,-31.6115,-19.8482,16.805',KA=' +zone=29',KB=' +lon_0=9',KC=' +zone=33',KD=' +zone=37',KE=' +no_uoff',KF=' +lon_0=120',KG=' +lon_0=177',KH=' +lon_0=-177',KI=' +lon_0=-158',KJ=' +y_0=250000',KK=' +lon_0=-111',KL=' +x_0=2500000.0001424',KM=' +x_0=1500000.0001464',KN=' +lon_0=-71.60561777777777',KO=' +lon_0=-156.6666666666667',KP=' +lon_0=-160.1666666666667',KQ=' +lat_0=0.1166666666666667',KR=' +towgs84=0,0,0,-0,-0,-0,0',KS=' +lon_0=-117.8333333333333',KT=' +lon_0=-123.1666666666667',KU=' +lon_0=-122.3333333333333',KV=' +lon_0=-119.1666666666667',KW=' +lon_0=-123.0833333333333',KX=' +lon_0=-85.84999999999999',KY=' +lon_0=-87.09999999999999',KZ=' +lon_0=-86.90000000000001',Ka=' +lon_0=-89.24166666666667',Kb=' +lon_0=-92.63333333333334',Kc=' +towgs84=347.103,1078.12,2623.92,-33.8875,70.6773,-9.3943,186.074',Kd=' +towgs84=8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926',Ke=' +towgs84=-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7',Kf=' +towgs84=-0.293,766.95,87.713,0.195704,1.69507,3.47302,-0.039338',Kg=' +towgs84=221.525,152.948,176.768,-2.3847,-1.3896,-0.877,11.4741',Kh=' +towgs84=215.525,149.593,176.229,-3.2624,-1.692,-1.1571,10.4773',Ki=' +zone=35',Kj=' +lat_0=46.95240555555556',Kk=' +alpha=30.28813972222222',Kl=' +lat_1=10.16666666666667',Km=' +lat_0=10.16666666666667',Kn=' +lat_0=18.83333333333333',Ko=' +lat_0=20.33333333333333',Kp=' +lat_0=21.83333333333333',Kq=' +lat_0=21.66666666666667',Kr=' +lat_0=45.30916666666666',Ks=' +lat_1=49.83333333333334',Kt=' +lat_2=51.16666666666666',Ku=' +lonc=-133.6666666666667',Kv=' +alpha=323.1301023611111',Kw=' +lat_1=53.83333333333334',Kx=' +lat_2=51.83333333333334',Ky=' +lat_1=44.66666666666666',Kz=' +lat_0=44.66666666666666',LA=' +lat_1=45.66666666666666',LB=' +lat_0=45.91666666666666',LC=' +lat_0=45.08333333333334',LD=' +lat_0=44.33333333333334',LE=' +lat_0=44.08333333333334',LF=' +lat_1=48.33333333333334',LG=' +lat_0=48.33333333333334',LH=' +lat_0=31.73409694444445',LI=' +lon_0=35.21208055555556',LJ=' +lat_0=44.03611111111111',LK=' +lat_0=4.599047222222222',LL=' +lat_0=40.66666666666666',LM=' +lat_1=49',LN=' +lon_0=39',LO=' +lat_1=37.25',LP=' +lat_1=39.75',LQ=' +lat_2=38.45',LR=' +lat_1=30.75',LS=' +lon_0=-84.5',LT=' +lat_0=33.75',LU=' +x_0=4000000',LV=' +y_0=4000000',LW=' +lon_0=-72.5',LX=' +x_0=5000000',LY=' +x_0=10500000',LZ=' +x_0=12500000',La=' +x_0=24500000',Lb=' +k=0.99999375',Lc=' +x_0=399999.9999984',Ld=' +lon_0=-77',Le=' +lon_0=108',Lf=' +lon_0=171',Lg=' +towgs84=-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925',Lh=' +lon_0=-171',Li=' +lat_0=32.5',Lj=' +lon_0=-117',Lk=' +k=1.000015',Ll=' +k=1.000034',Lm=' +k=1.000031',Ln=' +k=1.000026',Lo=' +ellps=evrstSS',Lp=' +a=6377301.243',Lq=' +towgs84=410.721,55.049,80.746,2.5779,2.3514,0.6664,17.3311',Lr=' +towgs84=72.438,345.918,79.486,1.6045,0.8823,0.5565,1.3746',Ls=' +pm=ferro',Lt=' +lon_0=78',Lu=' +lon_0=10',Lv=' +pm=paris',Lw=' +towgs84=0.055,-0.541,-0.185,0.0183,-0.0003,-0.007,-0.014',Lx=' +towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489',Ly=' +towgs84=8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081',Lz=' +towgs84=572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378',MA=' +zone=58',MB=' +zone=23',MC=' +x_0=304800.6096012192',MD=' +y_0=152400.3048006096',ME=' +x_0=800000.0001016001',MF=' +x_0=399999.9998983998',MG=' +x_0=7999999.999968001',MH=' +x_0=5999999.999976001',MI=' +x_0=830000.0001016001',MJ=' +x_0=249999.9998983998',MK=' +x_0=350000.0001016001',ML=' +to_meter=0.3047972654',MM=' +x_0=99999.99989839978',MN=' +y_0=8000000.000010163',MO=' +x_0=699999.9999898402',MP=' +lon_0=-69',MQ=' +lon_0=-86',MR=' +towgs84=-3.2,-5.7,2.8,0,0,0,0',MS=' +x_0=8500000',MT=' +x_0=9500000',MU=' +lat_1=39.45',MV=' +lat_0=44.25',MW=' +lat_1=41.95',MX=' +lat_2=35.25',MY=' +lat_2=34.65',MZ=' +lat_2=44.25',Ma=' +lat_1=47.05',Mb=' +lat_1=40.25',Mc=' +k_0=1.00012',Md=' +lat_0=40.25',Me=' +zone=40',Mf=' +zone=36',Mg=' +zone=51',Mh=' +zone=48',Mi=' +zone=49',Mj=' +lon_0=96',Mk=' +y_0=750000',Ml=' +lat_0=36.5',Mm=' +lon_0=-119',Mn=' +lat_0=33.5',Mo=' +lat_2=41.2',Mp=' +k=0.999995',Mq=' +lat_2=33.3',Mr=' +lat_0=38.5',Ms=' +lon_0=-154',Mt=' +lon_0=-120',Mu=' +x_0=34500000',Mv=' +x_0=35500000',Mw=' +x_0=36500000',Mx=' +x_0=37500000',My=' +x_0=38500000',Mz=' +x_0=39500000',NA=' +x_0=40500000',NB=' +x_0=41500000',NC=' +x_0=43500000',ND=' +x_0=45500000',NE=' +y_0=3999999.99998984',NF=' +y_0=2000000.00001016',NG=' +towgs84=164,138,-189,0,0,0,0',NH=' +towgs84=-186,230,110,0,0,0,0',NI=' +towgs84=-199,32,322,0,0,0,0',NJ=' +to_meter=0.3047997101815088',NK=' +towgs84=-76,-138,67,0,0,0,0',NL=' +towgs84=-43,-163,45,0,0,0,0',NM=' +towgs84=-346,-1,224,0,0,0,0',NN=' +towgs84=210,814,289,0,0,0,0',NO=' +towgs84=-74,-130,42,0,0,0,0',NP=' +zone=15',NQ=' +zone=16',NR=' +zone=34',NS=' +zone=50',NT=' +zone=52',NU=' +lon_0=-62',NV=' +lon_0=-84',NW=' +lon_0=-79',NX=' +lon_0=131',NY=' +lon_0=153',NZ=' +lon_0=165',Na=' +lon_0=-94',Nb=' +lon_0=-54',Nc=' +a=6378300.789',Nd=' +b=6356566.435',Ne=' +y_0=3999999.9998984',Nf=' +y_0=5000000.0001016',Ng=' +x_0=150000.00001464',Nh=' +lat_2=46',Ni=' +lon_0=84',Nj=' +lat_0=43',Nk=' +k_0=0.999625769',Nl=' +towgs84=51,391,-36,0,0,0,0',Nm=' +towgs84=-83,37,124,0,0,0,0',Nn=' +towgs84=-355,21,72,0,0,0,0',No=' +towgs84=-23,259,-9,0,0,0,0',Np=' +towgs84=174.05,-25.49,112.57,-0,-0,0.554,0.2263',Nq=' +zone=59',Nr=' +zone=25',Ns=' +zone=11',Nt=' +zone=12',Nu=' +zone=13',Nv=' +zone=54',Nw=' +zone=14',Nx=' +zone=24',Ny=' +zone=47',Nz=' +lat_2=38.3',OA=' +lat_1=45.7',OB=' +lat_2=42.1',OC=' +x_0=165000',OD=' +lat_2=32.5',OE=' +x_0=609600',OF=' +lat_1=39.2',OG=' +lat_2=47.5',OH=' +lat_1=30.7',OI=' +lat_2=29.3',OJ=' +lat_0=28.5',OK=' +lat_1=41.7',OL=' +lat_1=44.4',OM=' +lat_1=27.5',ON=' +lon_0=-150',OO=' +lat_0=44.5',OP=' +k=1.000027',OQ=' +k=1.000038',OR=' +k=1.000036',OS=' +lon_0=-87.5',OT=' +x_0=3999999.999984',OU=' +x_0=199999.9999992',OV=' +towgs84=16,196,93,0,0,0,0',OW=' +towgs84=-88,4,101,0,0,0,0',OX=' +lat_0=18',OY=' +lat_2=67',OZ=' +lon_0=-96',Oa=' +x_0=80000',Ob=' +lon_0=-82',Oc=' +lon_0=-74',Od=' +lon_0=147',Oe=' +lon_0=150',Of=' +x_0=40000',Og=' +k=1.00002',Oh=' +x_0=42500000',Oi=' +x_0=44500000',Oj=' +lon_0=-85.05',Ok=' +ellps=mod_airy',Ol=' +lat_0=0.1333333333333333',Om=' +lat_1=-60.66666666666666',On=' +lat_2=-63.33333333333334',Oo=' +lon_0=-91.91666666666667',Op=' +y_0=0.003352806705613411',Oq=' +zone=30',Or=' +lon_0=3',Os=' +zone=26',Ot=' +zone=53',Ou=' +lat_0=31.73439361111111',Ov=' +lon_0=35.20451694444445',Ow=' +lon_0=7.439583333333333',Ox=' +lon_0=132.1666666666667',Oy=' +lon_0=134.3333333333333',Oz=' +lon_0=137.1666666666667',PA=' +lon_0=139.8333333333333',PB=' +lon_0=140.8333333333333',PC=' +lon_0=3.192280555555556',PD=' +lat_1=49.50000000000001',PE=' +lat_0=49.50000000000001',PF=' +alpha=53.31582047222222',PG=' +lon_0=10.33333333333333',PH=' +lon_0=16.33333333333333',PI=' +towgs84=-502.862,-247.438,312.724,0,0,0,0',PJ=' +towgs84=-381.788,-57.501,-256.673,0,0,0,0',PK=' +towgs84=-43.685,-179.785,-267.721,0,0,0,0',PL=' +zone=60',PM=' +zone=55',PN=' +lon_0=36',PO=' +lon_0=42',PP=' +lat_1=46',PQ=' +lat_1=44',PR=' +lat_0=42',PS=' +lon_0=51',PT=' +lat_0=33',PU=' +lat_0=52',PV=' +ellps=airy',PW=' +pm=jakarta',PX=' +x_0=2743195.5',PY=' +y_0=-4354009.816',PZ=' +k_0=0.9987864078000001',Pa=' +towgs84=-106.226,166.366,-37.893,0,0,0,0',Pb=' +towgs84=508.088,-191.042,565.223,0,0,0,0',Pc=' +k=0.99996',Pd=' +a=6378135',Pe=' +lon_0=-66',Pf=' +lon_0=141',Pg=' +lon_0=159',Ph=' +k=0.99984',Pi=' +lat_0=-22',Pj=' +lon_0=127.5',Pk=' +x_0=6000000',Pl=' +x_0=3900000',Pm=' +y_0=1300000',Pn=' +lat_0=44.75',Po=' +lat_0=37.75',Pp=' +lat_0=40.55',Pq=' +lon_0=-87.3',Pr=' +lon_0=-86.5',Ps=' +towgs84=195.671,332.517,274.607,0,0,0,0',Pt=' +towgs84=-204.619,140.176,55.226,0,0,0,0',Pu='+proj=somerc',Pv=' +y_0=30480.06096012192',Pw=' +y_0=999999.9999960001',Px=' +x_0=182880.3657607315',Py=' +towgs84=674.374,15.056,405.346,0,0,0,0',Pz=' +towgs84=-133.63,-157.5,-158.62,0,0,0,0',QA=' +towgs84=-0.465,372.095,171.736,0,0,0,0',QB=' +towgs84=-56.263,16.136,-22.856,0,0,0,0',QC=' +towgs84=-241.54,-163.64,396.06,0,0,0,0',QD=' +zone=31',QE=' +zone=10',QF=' +zone=46',QG=' +x_0=304800.6096',QH=' +y_0=152400.3048',QI=' +alpha=337.25556',QJ=' +x_0=2546731.496',QK=' +gamma=337.25556',QL=' +k_0=0.999625544',QM=' +towgs84=335.47,222.58,-230.94,0,0,0,0',QN=' +towgs84=217.037,86.959,23.956,0,0,0,0',QO=' +towgs84=-128.16,-282.42,21.93,0,0,0,0',QP=' +towgs84=103.25,-100.4,-307.19,0,0,0,0',QQ=' +lon_0=31',QR=' +lon_0=18',QS=' +lat_2=36',QT=' +lat_0=29',QU=' +lat_0=35',QV=' +lat_0=34',QW=' +lon_0=63',QX=' +lat_0=37',QY=' +lat_2=65',QZ=' +y_0=-4000000',Qa=' +y_0=914398.5',Qb=' +towgs84=-199.87,74.79,246.62,0,0,0,0',Qc=' +towgs84=-11.64,-348.6,291.98,0,0,0,0',Qd=' +towgs84=-254.1,-5.36,-100.29,0,0,0,0',Qe=' +towgs84=-206.1,-174.7,-87.7,0,0,0,0',Qf=' +towgs84=-770.1,158.4,-498.2,0,0,0,0',Qg=' +towgs84=-146.21,112.63,4.05,0,0,0,0',Qh=' +towgs84=-294.7,-200.1,525.5,0,0,0,0',Qi=' +lat_0=4',Qj=' +a=6378300',Qk=' +lon_0=-63',Ql=' +lon_0=162',Qm=' +lat_ts=90',Qn=' +y_0=600000',Qo=' +x_0=350000',Qp=' +y_0=900000',Qq=' +lat_1=32.5',Qr=' +lon_0=-147',Qs=' +k=1.000043',Qt=' +lat_0=48.5',Qu=' +lat_0=40.9',Qv=' +k=1.000028',Qw=' +k=1.000025',Qx=' +x_0=170251.555',Qy=' +b=6356657.142669561',Qz=' +b=6356094.667915204',RA=' +b=6355862.933255573',RB=' +a=6378249.144808011',RC=' +b=6356514.966204134',RD=' +towgs84=-70.9,-151.8,-41.4,0,0,0,0',RE=' +towgs84=52.17,-71.82,-14.9,0,0,0,0',RF=' +towgs84=283.7,735.9,261.1,0,0,0,0',RG=' +zone=5',RH=' +zone=7',RI=' +lon_0=19',RJ=' +lon_0=25',RK=' +lat_2=45',RL=' +lon_0=57',RM=' +lon_0=69',RN=' +lat_2=39',RO=' +lat_2=35',RP=' +lon_0=28',RQ=' +lon_0=-61.5',RR=' +lon_0=-64.5',RS=' +lon_0=-90.5',RT=' +lon_0=-94.5',RU=' +y_0=2800000',RV=' +x_0=4321000',RW=' +y_0=3210000',RX=' +y_0=14743.5',RY=' +y_0=1999999.999992',RZ=' +y_0=2999999.999988',Ra=' +y_0=50000.00001504',Rb=' +zone=41',Rc=' +zone=42',Rd=' +k=0.994',Re=' +zone=56',Rf=' +lon_0=-67.875',Rg=' +lon_0=-70.375',Rh=' +x_0=609601.22',Ri=' +b=6356889.449',Rj=' +lon_0=-69.125',Rk=' +lon_0=-121.75',Rl=' +lon_0=-121.25',Rm=' +lon_0=-119.75',Rn=' +lon_0=-122.75',Ro=' +zone=6',Rp='+proj=krovak',Rq=' +towgs84=-637,-549,-203,0,0,0,0',Rr=' +towgs84=-20.8,11.3,2.4,0,0,0,0',Rs=' +lon_0=-93',Rt=' +lon_0=127',Ru=' +lon_0=125',Rv=' +k=0.99975',Rw=' +lon_0=136',Rx=' +lon_0=138',Ry=' +lon_0=180',Rz=' +y_0=50000',SA=' +lon_0=-85',SB=' +k=1.00016',SC=' +lon_0=2.7',SD=' +towgs84=27.5,14,186.4,0,0,0,0',SE=' +towgs84=-499,-249,314,0,0,0,0',SF=' +towgs84=-467,-16,-300,0,0,0,0',SG=' +towgs84=-382,-59,-262,0,0,0,0',SH=' +towgs84=253,-132,-127,0,0,0,0',SI=' +towgs84=-963,510,-359,0,0,0,0',SJ=' +towgs84=94,-948,-1262,0,0,0,0',SK=' +zone=1',SL=' +zone=27',SM=' +zone=57',SN=' +pm=oslo',SO=' +zone=43',SP=' +lon_0=23',SQ=' +lon_0=48',SR=' +lon_0=54',SS=' +lat_0=49.5',ST=' +k=0.999912',SU=' +lon_0=-174',SV=' +lon_0=-168',SW=' +lon_0=-170',SX=' +lon_0=-165',SY=' +lat_2=40.5',SZ=' +lon_0=-115',Sa=' +lat_1=29.5',Sb=' +k=1.000045',Sc=' +lat_1=39.5',Sd=' +lat_1=33.3',Se=' +lat_0=33.3',Sf=' +lon_0=-155.5',Sg=' +lon_0=-159.5',Sh=' +y_0=-4480000',Si=' +lon_0=-176.5',Sj=' +lon_0=-89.75',Sk=' +k_0=1.000008',Sl=' +lonc=-124.05',Sm=' +k_0=1.000002',Sn=' +lon_0=-122.5',So=' +lon_0=-98.25',Sp=' +lon_0=-112.5',Sq=' +lon_0=-84.95',Sr=' +lon_0=-86.95',Ss=' +lon_0=-85.45',St=' +lon_0=-87.45',Su=' +lon_0=-87.55',Sv=' +towgs84=-149,128,296,0,0,0,0',Sw=' +towgs84=-425,-169,81,0,0,0,0',Sx=' +towgs84=-104,167,-38,0,0,0,0',Sy=' +towgs84=-106,-87,188,0,0,0,0',Sz=' +towgs84=-289,-124,60,0,0,0,0',TA=' +towgs84=137,248,-430,0,0,0,0',TB=' +towgs84=-13,-348,292,0,0,0,0',TC=' +towgs84=-115,118,426,0,0,0,0',TD=' +towgs84=0,-0.15,0.68,0,0,0,0',TE=' +towgs84=145,-187,103,0,0,0,0',TF=' +towgs84=-134,229,-29,0,0,0,0',TG=' +towgs84=70,207,389.5,0,0,0,0',TH=' +towgs84=-148,51,-291,0,0,0,0',TI=' +towgs84=-255,-15,71,0,0,0,0',TJ=' +towgs84=725,685,536,0,0,0,0',TK=' +towgs84=72,213.7,93,0,0,0,0',TL=' +towgs84=174,359,365,0,0,0,0',TM=' +towgs84=-173,253,27,0,0,0,0',TN=' +towgs84=-203,141,53,0,0,0,0',TO=' +towgs84=186,482,151,0,0,0,0',TP=' +towgs84=162,117,154,0,0,0,0',TQ=' +towgs84=-73,213,296,0,0,0,0',TR=' +towgs84=-130,29,364,0,0,0,0',TS=' +towgs84=-10,375,165,0,0,0,0',TT=' +towgs84=175,-38,113,0,0,0,0',TU=' +to_meter=0.9143984146160287',TV=' +zone=2',TW=' +zone=8',TX=' +zone=9',TY=' +zone=4',TZ=' +towgs84=30,430,368,0,0,0,0',Ta=' +towgs84=185,165,42,0,0,0,0',Tb=' +towgs84=-97,787,86,0,0,0,0',Tc=' +towgs84=639,405,60,0,0,0,0',Td=' +zone=44',Te=' +zone=45',Tf=' +lon_0=-58.5',Tg=' +lon_0=-67.5',Th=' +lon_0=-73.5',Ti=' +lon_0=-76.5',Tj=' +y_0=1200000',Tk=' +lon_0=133.5',Tl=' +x_0=8000000',Tm=' +y_0=8000000',Tn=' +k=0.9998335',To=' +lon_0=-85.5',Tp=' +x_0=7000000',Tq=' +lat_0=43.75',Tr=' +lat_0=43.25',Ts=' +lat_0=45.25',Tt=' +lon_0=-86.3',Tu=' +lat_0=38.15',Tv=' +lat_0=39.15',Tw=' +lat_0=41.25',Tx=' +lat_0=40.65',Ty=' +lat_0=39.25',Tz=' +lat_0=40.35',UA=' +lon_0=-85.8',UB=' +towgs84=9,183,236,0,0,0,0',UC=' +towgs84=-48,55,52,0,0,0,0',UD=' +towgs84=84,274,65,0,0,0,0',UE=' +lon_0=17',UF=' +lat_1=60',UG=' +k=0.9998',UH=' +lon_0=66',UI=' +lon_0=20',UJ=' +lon_0=26',UK=' +lat_0=51',UL=' +lat_1=87',UM=' +lat_1=26',UN=' +lon_0=144',UO=' +lon_0=168',UP=' +lon_0=174',UQ=' +lon_0=-72',UR=' +lon_0=-75',US=' +lon_0=-60',UT=' +lon_0=-39',UU='+proj=poly',UV=' +x_0=219529.584',UW=' +a=6378306.3696',UX=' +lon_0=-61.33333333333334',UY=' +lon_0=-91.86666666666666',UZ=' +lon_0=-8.131906111111112',Ua=' +lon_0=-83.66666666666667',Ub=' +lon_0=-108.4166666666667',Uc=' +lon_0=-108.3333333333333',Ud=' +lon_0=-85.40000000000001',Ue=' +lon_0=-86.65000000000001',Uf=' +lon_0=-86.40000000000001',Ug=' +lon_0=-85.59999999999999',Uh=' +lon_0=-87.15000000000001',Ui=' +lon_0=-86.59999999999999',Uj=' +lon_0=-84.90000000000001',Uk=' +lon_0=-85.65000000000001',Ul=' +lon_0=-87.65000000000001',Um=' +lon_0=-85.34999999999999',Un=' +lon_0=-87.40000000000001',Uo=' +lon_0=-87.34999999999999',Up=' +lon_0=-85.90000000000001',Uq=' +lon_0=-90.62222222222222',Ur=' +lon_0=-91.84999999999999',Us=' +lon_0=-91.15277777777779',Ut=' +lon_0=-91.79722222222222',Uu=' +lon_0=-92.45777777777778',Uv=' +lon_0=-91.29444444444444',Uw=' +lon_0=-90.70833333333334',Ux=' +lon_0=-89.39444444444445',Uy=' +lon_0=-89.42222222222223',Uz=' +lon_0=-88.77500000000001',VA=' +lon_0=-87.27222222222223',VB=' +lon_0=-91.89444444444445',VC=' +lon_0=-91.28888888888889',VD=' +lon_0=-88.14166666666668',VE=' +lon_0=-88.63333333333334',VF=' +lon_0=-89.83888888888889',VG=' +lon_0=-90.16111111111111',VH=' +lon_0=-90.25555555555556',VI=' +lon_0=-90.84429651944444',VJ=' +lon_0=-87.89444444444445',VK=' +lon_0=-91.31666666666666',VL=' +lon_0=-89.03333333333333',VM=' +lon_0=-89.73333333333333',VN=' +lon_0=-87.71111111111111',VO=' +lon_0=-88.41666666666667',VP=' +lon_0=-90.64166666666668',VQ=' +lon_0=-87.90833333333335',VR=' +lon_0=-89.54444444444444',VS=' +lon_0=-92.22777777777777',VT=' +lon_0=-90.48888888888889',VU=' +lon_0=-90.43055555555556',VV=' +lon_0=-89.07222222222222',VW=' +lon_0=-91.06666666666666',VX=' +lon_0=-89.90000000000001',VY=' +lon_0=-91.11666666666666',VZ=' +lon_0=-88.60555555555555',Va=' +lon_0=-90.48333333333333',Vb=' +lon_0=-91.36666666666666',Vc=' +lon_0=-90.78333333333333',Vd=' +lon_0=-89.48888888888889',Ve=' +lon_0=-88.54166666666667',Vf=' +lon_0=-91.78333333333333',Vg=' +lon_0=-88.06388888888888',Vh=' +lon_0=-88.22499999999999',Vi=' +lon_0=-88.81666666666666',Vj=' +y_0=0.004876809753619507',Vk=' +y_0=0.008534417068834137',Vl=' +y_0=0.003962407924815849',Vm=' +y_0=0.005791211582423164',Vn=' +lon_0=-55.68333333333333',Vo=' +to_meter=0.201166195164',Vp=' +lat_0=4.666666666666667',Vq=' +lat_0=6.666666666666667',Vr=' +lon_0=6.166666666666667',Vs=' +lat_0=10.44166666666667',Vt=' +lat_0=22.31213333333334',Vu=' +lon_0=114.1785555555556',Vv=' +lon_0=51.21666666666667',Vw=' +lon_0=11.30827777777778',Vx=' +lon_0=13.55827777777778',Vy=' +lon_0=15.80827777777778',Vz=' +lon_0=18.05827777777778',WA=' +lon_0=20.30827777777778',WB=' +lon_0=22.55827777777778',WC=' +lat_1=27.41666666666667',WD=' +lat_2=34.91666666666666',WE=' +lat_0=31.16666666666667',WF=' +lat_1=59.33333333333334',WG=' +lat_0=57.51755393055556',WH=' +lon_0=4.359215833333333',WI=' +lat_1=61.66666666666666',WJ=' +lat_0=29.02626833333333',WK=' +lat_1=48.66666666666666',WL=' +lat_2=53.66666666666666',WM=' +lon_0=127.0028902777778',WN=' +lon_0=89.84999999999999',WO=' +lon_0=91.56666666666666',WP=' +lon_0=24.83333333333333',WQ=' +lat_2=63.66666666666666',WR=' +lat_0=65.35103930555555',WS=' +lat_1=63.66666666666666',WT=' +lat_2=60.33333333333334',WU=' +lat_0=62.01530688888889',WV=' +lat_1=45.78333333333333',WW=' +lat_0=45.78333333333333',WX=' +lat_0=42.66666666666666',WY=' +lat_0=43.36666666666667',WZ=' +lat_0=45.70611111111111',Wa=' +lat_0=45.13333333333333',Wb=' +lat_1=46.66964837722222',Wc=' +lat_0=46.66964837722222',Wd=' +lat_0=43.48138888888889',We=' +lat_1=45.89871486583333',Wf=' +lat_0=45.89871486583333',Wg=' +lat_0=42.71944444444445',Wh=' +lat_1=44.97785689861112',Wi=' +lat_0=44.97785689861112',Wj=' +lat_1=43.46254664583333',Wk=' +lat_0=43.46254664583333',Wl=' +lon_0=-90.9388888888889',Wm=' +lat_0=41.47222222222222',Wn=' +lat_0=45.88333333333333',Wo=' +lat_0=44.40833333333333',Wp=' +lat_1=44.87228112638889',Wq=' +lat_0=44.87228112638889',Wr=' +lat_0=45.43888888888888',Ws=' +lat_0=44.00555555555555',Wt=' +lat_0=41.41111111111111',Wu=' +lat_1=42.63756227694444',Wv=' +lat_0=42.63756227694444',Ww=' +lat_1=43.80700011777778',Wx=' +lat_0=43.80700011777778',Wy=' +lat_0=42.53888888888888',Wz=' +lat_0=45.43333333333333',XA=' +lat_0=44.25333512777778',XB=' +lat_0=42.21666666666667',XC=' +lat_0=43.26666666666667',XD=' +lat_0=43.45111111111111',XE=' +lat_1=45.15423710527778',XF=' +lat_0=45.15423710527778',XG=' +lat_0=44.84444444444445',XH=' +lat_1=44.90090442361111',XI=' +lat_0=44.90090442361111',XJ=' +lat_0=44.69166666666666',XK=' +lat_0=44.71666666666667',XL=' +lat_1=44.00007392861111',XM=' +lat_0=44.00007392861111',XN=' +lat_0=44.39722222222222',XO=' +lat_1=45.70422377027778',XP=' +lat_0=45.70422377027778',XQ=' +lat_1=44.63614887194444',XR=' +lat_0=44.63614887194444',XS=' +lat_0=44.66111111111111',XT=' +lat_1=44.41682397527777',XU=' +lat_0=44.41682397527777',XV=' +lat_0=44.55555555555555',XW=' +lat_0=41.94444444444444',XX=' +lat_0=43.91944444444444',XY=' +lat_0=42.81944444444445',XZ=' +lat_1=45.90009913138888',Xa=' +lat_0=45.90009913138888',Xb=' +lat_1=45.17782208583333',Xc=' +lat_0=45.17782208583333',Xd=' +lat_0=43.16111111111111',Xe=' +lat_1=43.57503293972223',Xf=' +lat_0=43.57503293972223',Xg=' +lat_1=46.07784409055556',Xh=' +lat_0=46.07784409055556',Xi=' +lat_1=42.66946209694444',Xj=' +lat_0=42.66946209694444',Xk=' +lat_1=45.96121983333334',Xl=' +lat_0=45.96121983333334',Xm=' +lat_0=42.91805555555555',Xn=' +lat_0=42.56944444444445',Xo=' +lat_0=43.42027777777778',Xp=' +lat_1=44.11394404583334',Xq=' +lat_0=44.11394404583334',Xr=' +lat_1=44.36259546944444',Xs=' +lat_0=44.36259546944444',Xt=' +lat_1=44.10000000000001',Xu=' +lat_0=44.10000000000001',Xv=' +lat_1=42.16500000000001',Xw=' +lat_0=42.16500000000001',Xx=' +lat_0=52.15616055555555',Xy=' +lat_2=48.73333333333333',Xz=' +zone=3',YA=' +lat_0=53.5',YB=' +k=0.999923',YC=' +x_0=850000',YD=' +x_0=830000',YE=' +lon_0=16.5',YF=' +x_0=520000',YG=' +lat_2=31.5',YH=' +lon_0=10.5',YI=' +lat_1=44.5',YJ=' +lon_0=-153',YK=' +lon_0=-135',YL=' +x_0=750000',YM=' +lat_0=43.5',YN=' +lon_0=-142',YO=' +lon_0=-146',YP=' +lon_0=-162',YQ=' +lon_0=-166',YR=' +lon_0=-176',YS=' +lat_2=39.5',YT=' +lon_0=-129',YU=' +k_0=1.0002',YV=' +k=1.000023',YW=' +lon_0=-121',YX=' +k=1.000175',YY=' +lat_0=45.5',YZ=' +k=1.000155',Ya=' +lat_2=37.5',Yb=' +lat_1=48.5',Yc=' +k=1.000029',Yd=' +lat_0=39.6',Ye=' +k=1.000013',Yf=' +k=1.000022',Yg=' +lat_0=40.7',Yh=' +lat_0=39.3',Yi=' +lat_0=37.8',Yj=' +lat_0=38.9',Yk=' +lon_0=-5.4',Yl=' +y_0=626907.39',Ym=' +b=6356571.996',Yn=' +a=6377295.664',Yo=' +lon_0=5.38763888888889',Yp=' +y_0=-4600000.00001208',Yq=' +y_0=1889763.779527559',Yr=' +y_0=99999.99999960001',Ys=' +x_0=120091.4401828804',Yt=' +lon_0=72',Yu=' +lat_0=50',Yv=' +lat_1=50',Yw=' +lat_1=35',Yx=' +lon_0=22',Yy=' +lat_1=34',Yz=' +lonc=115',ZA=' +lat_0=-9',ZB=' +lat_0=23',ZC=' +lat_1=85',ZD=' +lat_2=69',ZE=' +lat_1=69',ZF=' +lat_2=61',ZG=' +lon_0=34',ZH=' +lon_0=140.25',ZI=' +lon_0=142.25',ZJ=' +lon_0=144.25',ZK=' +x_0=47500000',ZL=' +y_0=-3000000',ZM=' +pm=2.337208333333333',ZN=' +x_0=7000000.00000248',ZO=' +lon_0=6',ZP=' +k=0.997',ZQ=' +lon_0=106',ZR=' +lon_0=154',ZS=' +lon_0=156',ZT=' +lat_2=-36',ZU=' +lon_0=119',ZV=' +lon_0=121',ZW=' +lon_0=166',ZX=' +a=6371228',ZY=' +b=6371228',ZZ=' +a=6378273',Za=' +lat_0=-44',Zb=' +pm=lisbon',Zc=' +lon_0=-57',Zd=' +lon_0=-56',Ze=' +k=1.00007',Zf=' +lonc=-123',Zg=' +alpha=295',Zh=' +gamma=295',Zi=' +k=1.00011',Zj=' +k=1.00005',Zk=' +k=1.00013',Zl=' +x_0=30000',Zm=' +k=1.00001',Zn=' +k=1.00003',Zo=' +y_0=130000.00001472',Zp=' +x_0=119999.99999952',Zq=' +y_0=-2999999.999988',Zr=' +x_0=-299999.9999988',Zs=' +lat_1=43.0695160375',Zt=' +lat_0=43.0695160375',Zu=' +lat_1=43.3223129275',Zv=' +lat_0=43.3223129275',Zw=' +k=1.0000067',Zx=' +a=6378298.3',Zy=' +lon_0=-66.5',Zz=' +lon_0=129.5',aA=' +lon_0=138.5',aB=' +x_0=2300000',aC=' +x_0=3300000',aD=' +x_0=4300000',aE=' +y_0=7500000',aF=' +lonc=102.25',aG=' +y_0=1166200',aH=' +x_0=3000000',aI=' +lat_1=46.25',aJ=' +ellps=WGS66',aK=' +ellps=GRS67',aL=' +lat_1=34.65',aM=' +y_0=59999.99999976',aN=' +y_0=30000.00001512',aO=' +x_0=59999.99999976',aP=' +x_0=30000.00001512',aQ=' +lat_1=43.200055605',aR=' +lat_0=43.200055605',aS=' +y_0=65379.0134283',aT=' +alpha=323.0257905',aU=' +alpha=53.31580995',aV=' +x_0=10000.0000152';\nmodule.exports = [2000,D+L+NU+EP+u+N+c+E+A,1,D+L+NU+EP+u+N+c+TI+E+A,1,D+L+NU+EP+u+N+c+TJ+E+A,1,D+L+NU+EP+u+N+c+TK+E+A,1,D+L+NU+EP+u+N+c+TL+E+A,1,D+L+NU+EP+u+N+c+UB+E+A,1,D+L+NU+EP+u+N+c+Sv+E+A,1,D+L+NU+EP+u+N+c+Ps+E+A,2,D+L+Tf+V+Ab+N+i+E+A,1,D+L+RQ+V+Ab+N+i+E+A,1,D+L+RR+V+Ab+N+i+E+A,1,D+L+Tg+V+Ab+N+i+E+A,1,D+L+IL+V+Ab+N+i+E+A,1,D+L+Th+V+Ab+N+i+E+A,1,D+L+Ti+V+Ab+N+i+E+A,1,D+L+Ga+V+Ab+N+i+E+A,1,D+L+Th+V+Ab+N+i+E+A,1,D+L+Ti+V+Ab+N+i+E+A,1,D+L+Ga+V+Ab+N+i+E+A,1,D+L+ET+V+Ab+N+i+E+A,1,D+L+CR+V+Ab+N+i+E+A,1,D+L+NV+V+Ab+N+i+E+A,1,D+L+Jh+V+Ab+N+i+E+A,1,D+L+Bu+V+Ab+N+i+E+A,1,D+L+Rs+V+Ab+N+i+E+A,1,D+L+OZ+V+Ab+N+i+E+A,1,I+NP+i+E+A,1,I+NQ+i+E+A,1,I+Ik+i+E+A,1,I+IC+i+E+A,1,I+Ik+i+E+A,1,I+IC+i+E+A,1,I+Hi+i+E+A,1,I+Gz+i+E+A,1,I+ID+i+E+A,4,D+Ou+Ov+Zw+UV+Yl+C+UC+E+A,1,I+Oq+c+JO+E+A,1,I+Oq+c+IE+E+A,1,I+KA+c+JO+E+A,1,I+KA+c+IE+E+A,1,D+L+EN+' +k=1'+Hs+N+M+HG+E+A,1,D+L+Fy+' +k=1'+Ht+N+M+HG+E+A,1,D+L+Gj+' +k=1'+s+N+Gk+j+B+E+A,1,D+L+UE+' +k=1'+s+N+Gk+j+B+E+A,1,D+L+RI+' +k=1'+s+N+Gk+j+B+E+A,1,D+L+Gl+' +k=1'+s+N+Gk+j+B+E+A,1,D+L+SP+' +k=1'+s+N+Gk+j+B+E+A,1,D+L+RJ+' +k=1'+s+N+Gk+j+B+E+A,1,D+L+HO+' +k=1'+s+N+Gk+j+B+E+A,1,D+L+' +lon_0=29 +k=1'+s+N+Gk+j+B+E+A,1,D+L+QQ+' +k=1'+s+N+Gk+j+B+E+A,1,D+L+IG+' +k=1'+s+N+Gk+j+B+E+A,1,Pu+Kj+Ow+' +k_0=1 +x_0=2600000'+Tj+Y+Py+E+A,1,CU+' +lat_0=27.51882880555555 +lonc=52.60353916666667 +alpha=0.5716611944444444 +k=0.999895934 +x_0=658377.437 +y_0=3044969.194 +gamma=0.5716611944444444'+R+Pz+E+A,1,I+JZ+R+Gy+E+A,1,I+JM+R+Gy+E+A,1,I+Me+R+Gy+E+A,1,I+Rb+R+Gy+E+A,1,H+' +lat_1=40'+Fs+HN+' +k_0=0.9988085293'+a+Qn+Zx+Qy+' +pm=madrid'+E+A,3,Rp+SS+' +lon_0=42.5'+Kk+V+s+N+Y+Gh+Ls+E+A,1,Ck+' +lat_0=11.25217861111111 +lon_0=-60.68600888888889 +x_0=37718.66159325 +y_0=36209.91512952'+Ee+Ef+Vo+A,1,I+Gz+R+QA+E+A,1,D+L+KB+V+h+N+R+v+E+A,1,D+L+' +lon_0=11'+V+h+N+R+v+E+A,1,D+L+' +lon_0=13'+V+h+N+R+v+E+A,1,D+L+Gj+V+h+N+R+v+E+A,1,D+L+UE+V+h+N+R+v+E+A,1,D+L+RI+V+h+N+R+v+E+A,1,D+L+Gl+V+h+N+R+v+E+A,1,D+L+SP+V+h+N+R+v+E+A,1,D+L+RJ+V+h+N+R+v+E+A,1,I+JN+R+v+E+A,1,I+KC+R+v+E+A,1,I+NR+R+v+E+A,1,I+Ki+R+v+E+A,1,D+m+MP+' +k=1'+Ci+N+R+E+A,1,D+m+MP+' +k=1'+Ci+N+R+SD+E+A,1,D+m+MP+' +k=1'+Ci+N+R+OV+E+A,1,I+Hi+o+R+OV+E+A,3,D+L+IH+AP+O+N+R+v+E+A,1,D+L+' +lon_0=11'+AP+O+N+AU+BN+Gi+E+A,1,I+JZ+j+B+E+A,1,I+JM+j+B+E+A,3,D+L+ZQ+' +k=1'+O+N+M+HG+E+A,1,D+L+ZQ+AP+O+N+T+Q+E+A,1,I+Ja+R+TM+E+A,1,D+Ch+Ed+' +k=1'+h+Ae+Y+E+A,1,D+Ch+Rt+' +k=1'+h+Ae+Y+E+A,1,D+Ch+Ru+' +k=1'+h+Ae+Y+E+A,1,Ck+' +lat_0=25.38236111111111 +lon_0=50.76138888888889'+BU+EK+Gn+E+A,1,D+L+II+AP+O+N+C+Qb+E+A,1,H+Kl+Km+KN+' +k_0=1'+s+' +y_0=-52684.972'+R+E+A,1,H+Kl+Km+KN+' +k_0=1'+h+' +y_0=147315.028'+R+E+A,1,H+Kl+Km+KN+' +k_0=1'+O+' +y_0=447315.028'+R+E+A,1,H+Kl+Km+KN+' +k_0=1 +x_0=-17044 +y_0=-23139.97'+R+E+A,1,D+' +lat_0=-36.87972222222222 +lon_0=174.7641666666667'+V+u+CO+C+B+E+A,1,D+' +lat_0=-37.76111111111111 +lon_0=176.4661111111111 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-38.62444444444444 +lon_0=177.8855555555556 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-39.65083333333333 +lon_0=176.6736111111111 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-39.13555555555556 +lon_0=174.2277777777778 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-39.51222222222222 +lon_0=175.64 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-40.24194444444444 +lon_0=175.4880555555555 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-40.92527777777777 +lon_0=175.6472222222222 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-41.3011111111111 +lon_0=174.7763888888889 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-40.71472222222223 +lon_0=172.6719444444444 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-41.27444444444444 +lon_0=173.2991666666667 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-41.28972222222222 +lon_0=172.1088888888889 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-41.81055555555555 +lon_0=171.5811111111111 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-42.33361111111111 +lon_0=171.5497222222222 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-42.68888888888888 +lon_0=173.01 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-41.54444444444444 +lon_0=173.8019444444444 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-42.88611111111111 +lon_0=170.9797222222222 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-43.11 +lon_0=170.2608333333333 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-43.97777777777778 +lon_0=168.6061111111111 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-43.59055555555556 +lon_0=172.7269444444445 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-43.74861111111111 +lon_0=171.3605555555555 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-44.40194444444445 +lon_0=171.0572222222222 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-44.735 +lon_0=169.4675 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-45.13277777777778 +lon_0=168.3986111111111 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-45.56361111111111 +lon_0=167.7386111111111 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-45.81611111111111 +lon_0=170.6283333333333 +k=1'+u+CO+C+B+E+A,1,D+' +lat_0=-45.86138888888889 +lon_0=170.2825'+Pc+u+CO+C+B+E+A,1,D+' +lat_0=-46.6 +lon_0=168.3427777777778 +k=1'+u+CO+C+B+E+A,1,I+MA+o+C+B+E+A,1,I+Nq+o+C+B+E+A,1,I+PL+o+C+B+E+A,1,D+Vp+' +lon_0=-1'+Rv+' +x_0=274319.7391633579'+N+Qj+Ho+NI+NJ+A,1,D+L+' +lon_0=-1'+AP+O+N+Qj+Ho+NI+E+A,1,H+UF+Nh+IZ+HJ+s+N+i+E+A,16,H+LM+' +lat_2=44'+Iq+Or+EW+' +y_0=6600000'+C+B+E+A,3,D+YA+' +lon_0=-8 +k=0.99982'+a+Mk+C+B+E+A,1,I+KA+C+B+E+A,1,D+Vq+' +lon_0=-12 +k=1 +x_0=152399.8550907544'+N+Qj+Ho+NJ+A,1,D+Vq+' +lon_0=-12 +k=1 +x_0=243839.7681452071 +y_0=182879.8261089053'+Qj+Ho+NJ+A,1,I+Ja+c+OW+E+A,1,I+KA+c+OW+E+A,1,He+IP+CS+s+N+' +a=6370997 +b=6370997'+E+A,1,D+L+' +lon_0=-5'+AP+O+N+c+JO+E+A,1,D+L+' +lon_0=-5'+AP+O+N+c+IE+E+A,4,D+' +lat_0=49.83333333333334'+Vr+' +k=1'+Oa+EK+R+Jx+E+A,3,GU+' +lat_0=53.00194444444445 +lon_0=21.50277777777778'+UG+' +x_0=4603000 +y_0=5806000'+M+b+E+A,1,GU+' +lat_0=53.58333333333334 +lon_0=17.00833333333333'+UG+' +x_0=3501000 +y_0=5999000'+M+b+E+A,1,GU+' +lat_0=51.67083333333333 +lon_0=16.67222222222222'+UG+' +x_0=3703000 +y_0=5627000'+M+b+E+A,1,D+L+' +lon_0=18.95833333333333 +k=0.999983 +x_0=237000 +y_0=-4700000'+M+b+E+A,1,D+L+Gj+YB+Eg+N+C+B+E+A,1,D+L+QR+YB+Jt+N+C+B+E+A,1,D+L+Gl+YB+IM+N+C+B+E+A,1,D+L+II+YB+MS+N+C+B+E+A,1,D+L+RI+' +k=0.9993'+O+' +y_0=-5300000'+C+B+E+A,8,I+Nr+R+Sw+E+A,1,I+Os+R+Sx+E+A,1,I+Os+R+TN+E+A,3,D+L+' +lon_0=173'+AP+' +x_0=1600000'+Ak+C+B+E+A,2,I+TV+o+C+B+E+A,1,D+L+' +lon_0=9.5'+CP+h+N+C+B+E+A,1,D+L+IH+CP+O+N+C+B+E+A,1,D+L+Gj+' +k=1'+HT+N+C+B+E+A,2,GU+Iq+Zy+ST+AI+CO+Pd+Gq+E+A,1,I+IC+C+B+E+A,1,I+Hi+C+B+E+A,1,I+Gz+C+B+E+A,1,H+' +lat_1=35.25 +lat_2=36.41666666666666 +lat_0=34.66666666666666'+MQ+Z+Pv+X+J+A,1,H+Az+DV+DM+Jo+O+N+C+B+E+A,1,D+L+HO+' +k=1'+MT+N+R+n+E+A,1,D+L+Ia+' +k=1'+LY+N+R+n+E+A,1,D+L+IG+' +k=1'+Jp+N+R+n+E+A,1,D+L+PN+' +k=1'+LZ+N+R+n+E+A,1,D+L+LN+' +k=1'+HU+N+R+n+E+A,1,D+L+PO+' +k=1'+Gw+N+R+n+E+A,1,D+L+JS+' +k=1'+Hu+N+R+n+E+A,1,D+L+Ia+AP+O+N+C+B+E+A,2,I+JN+AU+BN+RD+E+A,1,I+Io+R+NG+E+A,1,I+MB+R+NG+E+A,2,I+Hi+Pd+Gq+E+A,1,I+Gz+Pd+Gq+E+A,2,D+Bl+Cn+V+EX+N+C+B+t+A,1,D+Bl+Co+V+EX+N+C+B+t+A,1,D+Bl+Iv+BG+EX+N+C+B+t+A,1,H+DW+Jn+y+HA+Ac+AD+C+B+J+A,1,H+DX+DY+AA+HA+Ac+AD+C+B+J+A,1,H+Ap+DZ+Ml+AJ+Ac+AD+C+B+J+A,1,H+LO+QS+Da+Mm+Ac+AD+C+B+J+A,1,H+Db+Dc+Mn+Ir+Ac+AD+C+B+J+A,1,H+Dd+De+Df+Iw+Ac+AD+C+B+J+A,1,H+Eh+Ei+y+Ba+Bw+CL+C+B+J+A,1,H+LP+LQ+CY+Ba+Bw+CL+C+B+J+A,1,H+Ap+Dg+f+Ba+Bw+CL+C+B+J+A,1,H+Dh+Mo+Di+Jq+MC+MD+C+B+J+A,1,D+Ch+Cp+Mp+AE+N+C+B+J+A,1,D+Aq+CR+Am+AE+N+C+B+J+A,1,D+Aq+Ob+Am+AE+N+C+B+J+A,1,H+LR+Dj+QT+LS+a+N+C+B+J+A,1,D+Gm+Cq+V+AE+N+C+B+J+A,1,D+Gm+Cr+V+CM+N+C+B+J+A,1,D+p+Cs+BJ+AE+N+C+B+J+A,1,D+p+Jb+BJ+AF+N+C+B+J+A,1,D+p+Ix+BG+ME+N+C+B+J+A,3,H+Az+DV+DM+Jo+AF+N+C+B+J+A,1,H+Ej+Ek+AB+EY+AF+AD+C+B+J+A,1,H+MU+Nz+AA+Ld+MF+N+C+B+J+A,1,H+El+Dk+Ip+GE+AE+Mk+C+B+J+A,1,H+Em+En+Ip+IL+AF+N+C+B+J+A,1,H+Eo+Ep+Eq+Jh+MG+N+C+B+t+A,1,H+OA+Er+Es+BE+MH+N+C+B+t+A,1,H+Bq+OB+Fo+BE+OT+N+C+B+t+A,1,D+Hj+Ct+CP+BF+N+C+B+J+A,1,D+Hj+Bx+CP+CM+N+C+B+J+A,1,H+LM+RK+MV+IS+DR+N+C+B+t+A,1,D+Bl+Cu+Hm+OC+N+C+B+J+A,1,D+Bl+Iy+V+AF+N+C+B+J+A,1,D+Bl+Cv+Iz+MI+N+C+B+J+A,1,D+BA+Gp+V+Bn+N+C+B+J+A,1,D+Fs+Cw+Ad+MJ+N+C+B+J+A,1,D+Fs+Cx+Ad+MK+N+C+B+J+A,1,H+Dl+Dm+BB+Oc+BF+N+C+B+J+A,1,H+Et+Eu+LT+NW+Z+N+C+B+J+A,1,H+BH+Ev+Ib+EZ+DR+N+C+B+t+A,1,H+Ew+Ex+Be+EZ+DR+N+C+B+t+A,1,H+Dn+Ey+QU+Fl+a+N+C+B+J+A,1,H+Ez+FA+Do+Fl+a+N+C+B+J+A,1,H+PP+CZ+AK+AJ+KL+N+C+B+t+A,1,H+PQ+Ca+p+AJ+KM+N+C+B+t+A,1,H+MW+FB+BB+Ea+a+N+C+B+J+A,1,H+Dp+Dq+y+Ea+a+N+C+B+J+A,1,H+FC+OD+Dr+CR+OE+N+C+B+t+A,1,H+FD+MX+BC+MQ+a+N+C+B+J+A,1,H+FE+MY+QV+Jr+AE+CN+C+B+J+A,1,H+FF+FG+Ds+CV+a+Gr+C+B+J+A,1,H+FH+FI+Cb+Ag+CM+Fq+C+B+J+A,1,H+FJ+FK+Dt+Ji+a+Ne+C+B+J+A,1,H+CD+CE+Cc+CV+BF+Nf+C+B+J+A,1,H+AY+CF+Br+BI+Gd+Pw+C+B+t+A,1,H+JF+CG+AQ+BI+Gd+RY+C+B+t+A,1,H+JG+CH+f+BI+Gd+RZ+C+B+t+A,1,H+OF+FL+AA+GF+Gs+Gr+C+B+J+A,1,H+Az+Du+AB+GF+Gs+CN+C+B+J+A,1,H+BH+OG+Ib+Cy+AF+N+C+B+J+A,1,H+FM+FN+Dv+AJ+AF+N+C+B+J+A,1,H+FO+FP+Dw+Bu+a+N+C+B+J+A,1,H+Jc+MZ+AL+Bu+a+N+C+B+J+A,1,H+FQ+FR+PR+Bu+a+N+C+B+J+A,1,GU+' +lat_0=47.25'+Qk+ST+EW+Is+Pd+Gq+E+A,4,D+L+RQ+V+DP+N+Pd+Gq+E+A,1,D+L+RR+V+Eg+N+Pd+Gq+E+A,13,D+L+' +lon_0=109'+AP+O+Ak+Y+Cj+E+A,1,D+L+' +lon_0=116'+AP+O+Ak+S+E+A,1,D+L+Il+AP+O+Ak+S+E+A,1,D+L+ZO+AP+O+N+S+E+A,1,I+KC+c+E+A,1,I+KC+c+E+A,1,Ck+Vs+UX+' +x_0=86501.46392052001'+aS+Ee+Ef+JK+ML+A,1,I+Hi+o+R+Bs+E+A,1,I+Gz+o+R+Bs+E+A,1,H+' +lat_1=9 +lat_2=3 +lat_0=6'+Pe+BZ+AH+R+AX+E+A,1,H+' +lat_1=17 +lat_2=33 +lat_0=25.08951'+SQ+s+N+R+Cm+E+A,1,D+L+HO+' +k=1'+O+N+R+n+E+A,1,D+L+Ia+' +k=1'+O+N+R+n+E+A,1,D+L+IG+' +k=1'+O+N+R+n+E+A,1,D+L+PN+' +k=1'+O+N+R+n+E+A,1,D+L+LN+' +k=1'+O+N+R+n+E+A,1,D+L+PO+' +k=1'+O+N+R+n+E+A,1,D+L+JS+' +k=1'+O+N+R+n+E+A,1,D+Vt+Vu+' +k=1 +x_0=836694.05 +y_0=819069.8'+R+Jg+E+A,1,D+L+HP+' +k=1'+HU+N+As+d+E+A,1,D+L+HQ+' +k=1'+Gw+N+As+d+E+A,1,D+L+Hd+' +k=1'+Hu+N+As+d+E+A,1,D+L+HR+' +k=1'+Hv+N+As+d+E+A,1,D+L+HS+' +k=1'+It+N+As+d+E+A,1,D+L+EN+' +k=1'+Hs+N+As+d+E+A,1,D+L+Fy+' +k=1'+Ht+N+As+d+E+A,1,D+L+Fm+' +k=1'+HV+N+As+d+E+A,1,D+L+Fr+' +k=1'+Hw+N+As+d+E+A,1,D+L+Ed+' +k=1'+HW+N+As+d+E+A,1,D+L+Fn+' +k=1'+Hx+N+As+d+E+A,1,D+L+HP+' +k=1'+O+N+As+d+E+A,1,D+L+HQ+' +k=1'+O+N+As+d+E+A,1,D+L+Hd+' +k=1'+O+N+As+d+E+A,1,D+L+HR+' +k=1'+O+N+As+d+E+A,1,D+L+HS+' +k=1'+O+N+As+d+E+A,1,D+L+EN+' +k=1'+O+N+As+d+E+A,1,D+L+Fy+' +k=1'+O+N+As+d+E+A,1,D+L+Fm+' +k=1'+O+N+As+d+E+A,1,D+L+Fr+' +k=1'+O+N+As+d+E+A,1,D+L+Ed+' +k=1'+O+N+As+d+E+A,1,D+L+Fn+' +k=1'+O+N+As+d+E+A,1,D+L+HP+' +k=1'+Hy+N+As+d+E+A,1,D+L+Lt+' +k=1'+Hz+N+As+d+E+A,1,D+L+HQ+' +k=1'+IA+N+As+d+E+A,1,D+L+Ni+' +k=1'+IB+N+As+d+E+A,1,D+L+Hd+' +k=1'+Gx+N+As+d+E+A,1,D+L+Hq+' +k=1'+IT+N+As+d+E+A,1,D+L+HR+' +k=1'+Gc+N+As+d+E+A,1,D+L+Mj+' +k=1'+IU+N+As+d+E+A,1,D+L+HS+' +k=1'+Iu+N+As+d+E+A,1,D+L+Jj+' +k=1'+Mu+N+As+d+E+A,1,D+L+EN+' +k=1'+Mv+N+As+d+E+A,1,D+L+Le+' +k=1'+Mw+N+As+d+E+A,1,D+L+Fy+' +k=1'+Mx+N+As+d+E+A,1,D+L+Im+' +k=1'+My+N+As+d+E+A,1,D+L+Fm+' +k=1'+Mz+N+As+d+E+A,1,D+L+KF+' +k=1'+NA+N+As+d+E+A,1,D+L+Fr+' +k=1'+NB+N+As+d+E+A,1,D+L+Jk+' +k=1'+Oh+N+As+d+E+A,1,D+L+Ed+' +k=1'+NC+N+As+d+E+A,1,D+L+Il+' +k=1'+Oi+N+As+d+E+A,1,D+L+Fn+' +k=1'+ND+N+As+d+E+A,1,D+L+HP+' +k=1'+O+N+As+d+E+A,1,D+L+Lt+' +k=1'+O+N+As+d+E+A,1,D+L+HQ+' +k=1'+O+N+As+d+E+A,1,D+L+Ni+' +k=1'+O+N+As+d+E+A,1,D+L+Hd+' +k=1'+O+N+As+d+E+A,1,D+L+Hq+' +k=1'+O+N+As+d+E+A,1,D+L+HR+' +k=1'+O+N+As+d+E+A,1,D+L+Mj+' +k=1'+O+N+As+d+E+A,1,D+L+HS+' +k=1'+O+N+As+d+E+A,1,D+L+Jj+' +k=1'+O+N+As+d+E+A,1,D+L+EN+' +k=1'+O+N+As+d+E+A,1,D+L+Le+' +k=1'+O+N+As+d+E+A,1,D+L+Fy+' +k=1'+O+N+As+d+E+A,1,D+L+Im+' +k=1'+O+N+As+d+E+A,1,D+L+Fm+' +k=1'+O+N+As+d+E+A,1,D+L+KF+' +k=1'+O+N+As+d+E+A,1,D+L+Fr+' +k=1'+O+N+As+d+E+A,1,D+L+Jk+' +k=1'+O+N+As+d+E+A,1,D+L+Ed+' +k=1'+O+N+As+d+E+A,1,D+L+Il+' +k=1'+O+N+As+d+E+A,1,D+L+Fn+' +k=1'+O+N+As+d+E+A,1,D+L+Gl+' +k=1'+AV+N+R+At+E+A,1,D+L+II+' +k=1'+Ci+N+R+At+E+A,1,D+L+HO+' +k=1'+Bo+N+R+At+E+A,1,D+L+Ia+' +k=1'+DP+N+R+At+E+A,1,D+L+JS+' +k=1'+MS+N+M+NK+E+A,1,D+L+PS+' +k=1'+MT+N+M+NK+E+A,1,D+L+KB+' +k=1'+Bo+N+M+Ar+E+A,1,D+L+IH+' +k=1'+DP+N+M+Ar+E+A,1,D+L+Gj+' +k=1'+Eg+N+M+Ar+E+A,2,D+L+HP+' +k=1'+Hy+N+M+U+E+A,1,D+L+Lt+' +k=1'+Hz+N+M+U+E+A,1,D+L+HQ+' +k=1'+IA+N+M+U+E+A,1,D+L+Ni+' +k=1'+IB+N+M+U+E+A,1,D+L+Hd+' +k=1'+Gx+N+M+U+E+A,1,D+L+Hq+' +k=1'+IT+N+M+U+E+A,1,D+L+HR+' +k=1'+Gc+N+M+U+E+A,1,D+L+Mj+' +k=1'+IU+N+M+U+E+A,1,D+L+HS+' +k=1'+Iu+N+M+U+E+A,1,D+L+Jj+' +k=1'+Mu+N+M+U+E+A,1,D+L+EN+' +k=1'+Mv+N+M+U+E+A,1,D+L+Le+' +k=1'+Mw+N+M+U+E+A,1,D+L+Fy+' +k=1'+Mx+N+M+U+E+A,1,D+L+Im+' +k=1'+My+N+M+U+E+A,1,D+L+Fm+' +k=1'+Mz+N+M+U+E+A,1,D+L+KF+' +k=1'+NA+N+M+U+E+A,1,D+L+Fr+' +k=1'+NB+N+M+U+E+A,1,D+L+Jk+' +k=1'+Oh+N+M+U+E+A,1,D+L+Ed+' +k=1'+NC+N+M+U+E+A,1,D+L+Il+' +k=1'+Oi+N+M+U+E+A,1,D+L+Fn+' +k=1'+ND+N+M+U+E+A,1,D+L+HP+' +k=1'+O+N+M+U+E+A,1,D+L+Lt+' +k=1'+O+N+M+U+E+A,1,D+L+HQ+' +k=1'+O+N+M+U+E+A,1,D+L+Ni+' +k=1'+O+N+M+U+E+A,1,D+L+Hd+' +k=1'+O+N+M+U+E+A,1,D+L+Hq+' +k=1'+O+N+M+U+E+A,1,D+L+HR+' +k=1'+O+N+M+U+E+A,1,D+L+Mj+' +k=1'+O+N+M+U+E+A,1,D+L+HS+' +k=1'+O+N+M+U+E+A,1,D+L+Jj+' +k=1'+O+N+M+U+E+A,1,D+L+EN+' +k=1'+O+N+M+U+E+A,1,D+L+Le+' +k=1'+O+N+M+U+E+A,1,D+L+Fy+' +k=1'+O+N+M+U+E+A,1,D+L+Im+' +k=1'+O+N+M+U+E+A,1,D+L+Fm+' +k=1'+O+N+M+U+E+A,1,D+L+KF+' +k=1'+O+N+M+U+E+A,1,D+L+Fr+' +k=1'+O+N+M+U+E+A,1,D+L+Jk+' +k=1'+O+N+M+U+E+A,1,D+L+Ed+' +k=1'+O+N+M+U+E+A,1,D+L+Il+' +k=1'+O+N+M+U+E+A,1,D+L+Fn+' +k=1'+O+N+M+U+E+A,1,D+PT+Zz+V+s+N+C+B+E+A,1,D+PT+NX+V+s+N+C+B+E+A,1,D+GM+Ox+V+s+N+C+B+E+A,1,D+PT+Tk+V+s+N+C+B+E+A,1,D+GM+Oy+V+s+N+C+B+E+A,1,D+GM+Rw+V+s+N+C+B+E+A,1,D+GM+Oz+V+s+N+C+B+E+A,1,D+GM+aA+V+s+N+C+B+E+A,1,D+GM+PA+V+s+N+C+B+E+A,1,D+Fs+PB+V+s+N+C+B+E+A,1,D+IZ+ZH+V+s+N+C+B+E+A,1,D+IZ+ZI+V+s+N+C+B+E+A,1,D+IZ+ZJ+V+s+N+C+B+E+A,1,D+IQ+' +lon_0=142'+V+s+N+C+B+E+A,1,D+IQ+Pj+V+s+N+C+B+E+A,1,D+IQ+' +lon_0=124'+V+s+N+C+B+E+A,1,D+IQ+NX+V+s+N+C+B+E+A,1,D+' +lat_0=20'+Rw+V+s+N+C+B+E+A,1,D+IQ+ZR+V+s+N+C+B+E+A,1,D+L+Gl+' +k=1'+DP+N+M+E+A,1,D+L+Gl+' +k=1'+O+N+M+G+E+A,1,D+L+HO+' +k=1'+O+N+M+G+E+A,1,D+L+IG+' +k=1'+O+N+M+G+E+A,1,D+L+LN+' +k=1'+O+N+M+G+E+A,1,D+L+JS+' +k=1'+O+N+M+G+E+A,1,D+L+PS+' +k=1'+O+N+M+G+E+A,1,D+L+RL+' +k=1'+O+N+M+G+E+A,1,D+L+QW+' +k=1'+O+N+M+G+E+A,1,D+L+RM+' +k=1'+O+N+M+G+E+A,1,D+L+HP+' +k=1'+O+N+M+G+E+A,1,D+L+HQ+' +k=1'+O+N+M+G+E+A,1,D+L+Hd+' +k=1'+O+N+M+G+E+A,1,D+L+HR+' +k=1'+O+N+M+G+E+A,1,D+L+HS+' +k=1'+O+N+M+G+E+A,1,D+L+EN+' +k=1'+O+N+M+G+E+A,1,D+L+Fy+' +k=1'+O+N+M+G+E+A,1,D+L+Fm+' +k=1'+O+N+M+G+E+A,1,D+L+Fr+' +k=1'+O+N+M+G+E+A,1,D+L+Ed+' +k=1'+O+N+M+G+E+A,1,D+L+Fn+' +k=1'+O+N+M+G+E+A,1,D+L+Pf+' +k=1'+O+N+M+G+E+A,1,D+L+Od+' +k=1'+O+N+M+G+E+A,1,D+L+NY+' +k=1'+O+N+M+G+E+A,1,D+L+Pg+' +k=1'+O+N+M+G+E+A,1,D+L+NZ+' +k=1'+O+N+M+G+E+A,1,D+L+Lf+' +k=1'+O+N+M+G+E+A,1,D+L+KG+' +k=1'+O+N+M+G+E+A,1,D+L+KH+' +k=1'+O+N+M+G+E+A,1,D+L+Lh+' +k=1'+O+N+M+G+E+A,3,D+L+Gl+' +k=1'+O+N+M+F+E+A,1,D+L+HO+' +k=1'+O+N+M+F+E+A,1,D+L+IG+' +k=1'+O+N+M+F+E+A,1,D+L+LN+' +k=1'+O+N+M+F+E+A,1,D+L+JS+' +k=1'+O+N+M+F+E+A,1,D+L+PS+' +k=1'+O+N+M+F+E+A,1,D+L+RL+' +k=1'+O+N+M+F+E+A,1,D+L+QW+' +k=1'+O+N+M+F+E+A,1,D+L+RM+' +k=1'+O+N+M+F+E+A,1,D+L+HP+' +k=1'+O+N+M+F+E+A,1,D+L+HQ+' +k=1'+O+N+M+F+E+A,1,D+L+Hd+' +k=1'+O+N+M+F+E+A,1,D+L+HR+' +k=1'+O+N+M+F+E+A,1,D+L+HS+' +k=1'+O+N+M+F+E+A,1,D+L+EN+' +k=1'+O+N+M+F+E+A,1,D+L+Fy+' +k=1'+O+N+M+F+E+A,1,D+L+Fm+' +k=1'+O+N+M+F+E+A,1,D+L+Fr+' +k=1'+O+N+M+F+E+A,1,D+L+Ed+' +k=1'+O+N+M+F+E+A,1,D+L+Fn+' +k=1'+O+N+M+F+E+A,1,D+L+Pf+' +k=1'+O+N+M+F+E+A,1,D+L+Od+' +k=1'+O+N+M+F+E+A,1,D+L+NY+' +k=1'+O+N+M+F+E+A,1,D+L+Pg+' +k=1'+O+N+M+F+E+A,1,D+L+NZ+' +k=1'+O+N+M+F+E+A,1,D+L+Lf+' +k=1'+O+N+M+F+E+A,1,D+L+KG+' +k=1'+O+N+M+F+E+A,1,D+L+KH+' +k=1'+O+N+M+F+E+A,1,D+L+Lh+' +k=1'+O+N+M+F+E+A,1,D+L+Gl+' +k=1'+IM+N+M+F+E+A,1,D+L+II+' +k=1'+MS+N+M+F+E+A,1,D+L+HO+' +k=1'+MT+N+M+F+E+A,1,D+L+Ia+' +k=1'+LY+N+M+F+E+A,1,D+L+IG+' +k=1'+Jp+N+M+F+E+A,1,D+L+PN+' +k=1'+LZ+N+M+F+E+A,1,D+L+LN+' +k=1'+HU+N+M+F+E+A,1,D+L+PO+' +k=1'+Gw+N+M+F+E+A,1,D+L+JS+' +k=1'+Hu+N+M+F+E+A,1,D+L+SQ+' +k=1'+Hv+N+M+F+E+A,1,D+L+PS+' +k=1'+It+N+M+F+E+A,1,D+L+SR+' +k=1'+Hs+N+M+F+E+A,1,D+L+RL+' +k=1'+Ht+N+M+F+E+A,1,D+L+' +lon_0=60 +k=1'+HV+N+M+F+E+A,1,D+L+QW+' +k=1'+Hw+N+M+F+E+A,1,D+L+UH+' +k=1'+HW+N+M+F+E+A,1,D+L+RM+' +k=1'+Hx+N+M+F+E+A,1,D+L+Yt+' +k=1'+La+N+M+F+E+A,1,D+L+HP+' +k=1'+Hy+N+M+F+E+A,1,D+L+Lt+' +k=1'+Hz+N+M+F+E+A,1,D+L+HQ+' +k=1'+IA+N+M+F+E+A,1,D+L+Ni+' +k=1'+IB+N+M+F+E+A,1,D+L+Hd+' +k=1'+Gx+N+M+F+E+A,1,D+L+Hq+' +k=1'+IT+N+M+F+E+A,1,D+L+HR+' +k=1'+Gc+N+M+F+E+A,1,D+L+Mj+' +k=1'+IU+N+M+F+E+A,1,D+L+HS+' +k=1'+Iu+N+M+F+E+A,2,D+L+Jj+' +k=1'+Mu+N+M+F+E+A,1,D+L+EN+' +k=1'+Mv+N+M+F+E+A,1,D+L+Le+' +k=1'+Mw+N+M+F+E+A,1,D+L+Fy+' +k=1'+Mx+N+M+F+E+A,1,D+L+Im+' +k=1'+My+N+M+F+E+A,1,D+L+Fm+' +k=1'+Mz+N+M+F+E+A,1,D+L+KF+' +k=1'+NA+N+M+F+E+A,1,D+L+Fr+' +k=1'+NB+N+M+F+E+A,1,D+L+Jk+' +k=1'+Oh+N+M+F+E+A,1,D+L+Ed+' +k=1'+NC+N+M+F+E+A,1,D+L+Il+' +k=1'+Oi+N+M+F+E+A,1,D+L+Fn+' +k=1'+ND+N+M+F+E+A,1,D+L+Rx+' +k=1 +x_0=46500000'+N+M+F+E+A,1,D+L+Pf+' +k=1'+ZK+N+M+F+E+A,1,D+L+UN+' +k=1 +x_0=48500000'+N+M+F+E+A,1,D+L+Od+' +k=1 +x_0=49500000'+N+M+F+E+A,1,D+L+Oe+' +k=1 +x_0=50500000'+N+M+F+E+A,1,D+L+NY+' +k=1 +x_0=51500000'+N+M+F+E+A,1,D+L+ZS+' +k=1 +x_0=52500000'+N+M+F+E+A,1,D+L+Pg+' +k=1 +x_0=53500000'+N+M+F+E+A,1,D+L+Ql+' +k=1 +x_0=54500000'+N+M+F+E+A,1,D+L+NZ+' +k=1 +x_0=55500000'+N+M+F+E+A,1,D+L+UO+' +k=1 +x_0=56500000'+N+M+F+E+A,1,D+L+Lf+' +k=1 +x_0=57500000'+N+M+F+E+A,1,D+L+UP+' +k=1 +x_0=58500000'+N+M+F+E+A,1,D+L+KG+' +k=1 +x_0=59500000'+N+M+F+E+A,2,D+L+KH+' +k=1 +x_0=61500000'+N+M+F+E+A,1,D+L+SU+' +k=1 +x_0=62500000'+N+M+F+E+A,1,D+L+Lh+' +k=1 +x_0=63500000'+N+M+F+E+A,1,D+L+SV+' +k=1 +x_0=64500000'+N+M+F+E+A,1,D+L+Gl+' +k=1'+O+N+M+F+E+A,1,D+L+II+' +k=1'+O+N+M+F+E+A,1,D+L+HO+' +k=1'+O+N+M+F+E+A,1,D+L+Ia+' +k=1'+O+N+M+F+E+A,1,D+L+IG+' +k=1'+O+N+M+F+E+A,1,D+L+PN+' +k=1'+O+N+M+F+E+A,1,D+L+LN+' +k=1'+O+N+M+F+E+A,1,D+L+PO+' +k=1'+O+N+M+F+E+A,1,D+L+JS+' +k=1'+O+N+M+F+E+A,1,D+L+SQ+' +k=1'+O+N+M+F+E+A,1,D+L+PS+' +k=1'+O+N+M+F+E+A,1,D+L+SR+' +k=1'+O+N+M+F+E+A,1,D+L+RL+' +k=1'+O+N+M+F+E+A,1,D+L+' +lon_0=60 +k=1'+O+N+M+F+E+A,1,D+L+QW+' +k=1'+O+N+M+F+E+A,1,D+L+UH+' +k=1'+O+N+M+F+E+A,1,D+L+RM+' +k=1'+O+N+M+F+E+A,1,D+L+Yt+' +k=1'+O+N+M+F+E+A,2,D+L+HP+' +k=1'+O+N+M+F+E+A,1,D+L+Lt+' +k=1'+O+N+M+F+E+A,1,D+L+HQ+' +k=1'+O+N+M+F+E+A,1,D+L+Ni+' +k=1'+O+N+M+F+E+A,1,D+L+Hd+' +k=1'+O+N+M+F+E+A,1,D+L+Hq+' +k=1'+O+N+M+F+E+A,1,D+L+HR+' +k=1'+O+N+M+F+E+A,1,D+L+Mj+' +k=1'+O+N+M+F+E+A,1,D+L+HS+' +k=1'+O+N+M+F+E+A,1,D+L+Jj+' +k=1'+O+N+M+F+E+A,1,D+L+EN+' +k=1'+O+N+M+F+E+A,1,D+L+Le+' +k=1'+O+N+M+F+E+A,1,D+L+Fy+' +k=1'+O+N+M+F+E+A,1,D+L+Im+' +k=1'+O+N+M+F+E+A,1,D+L+Fm+' +k=1'+O+N+M+F+E+A,1,D+L+KF+' +k=1'+O+N+M+F+E+A,1,D+L+Fr+' +k=1'+O+N+M+F+E+A,1,D+L+Jk+' +k=1'+O+N+M+F+E+A,1,D+L+Ed+' +k=1'+O+N+M+F+E+A,1,D+L+Il+' +k=1'+O+N+M+F+E+A,1,D+L+Fn+' +k=1'+O+N+M+F+E+A,1,D+L+Rx+' +k=1'+O+N+M+F+E+A,1,D+L+Pf+' +k=1'+O+N+M+F+E+A,1,D+L+UN+' +k=1'+O+N+M+F+E+A,1,D+L+Od+' +k=1'+O+N+M+F+E+A,1,D+L+Oe+' +k=1'+O+N+M+F+E+A,1,D+L+NY+' +k=1'+O+N+M+F+E+A,1,D+L+ZS+' +k=1'+O+N+M+F+E+A,1,D+L+Pg+' +k=1'+O+N+M+F+E+A,1,D+L+Ql+' +k=1'+O+N+M+F+E+A,1,D+L+NZ+' +k=1'+O+N+M+F+E+A,1,D+L+UO+' +k=1'+O+N+M+F+E+A,1,D+L+Lf+' +k=1'+O+N+M+F+E+A,1,D+L+UP+' +k=1'+O+N+M+F+E+A,1,D+L+KG+' +k=1'+O+N+M+F+E+A,1,D+L+Ry+' +k=1'+O+N+M+F+E+A,1,D+L+KH+' +k=1'+O+N+M+F+E+A,1,D+L+SU+' +k=1'+O+N+M+F+E+A,1,D+L+Lh+' +k=1'+O+N+M+F+E+A,1,D+L+SV+' +k=1'+O+N+M+F+E+A,1,D+L+Gl+' +k=1'+IM+N+M+G+E+A,1,D+L+II+' +k=1'+MS+N+M+G+E+A,1,D+L+HO+' +k=1'+MT+N+M+G+E+A,1,D+L+Ia+' +k=1'+LY+N+M+G+E+A,1,D+L+IG+' +k=1'+Jp+N+M+G+E+A,1,D+L+PN+' +k=1'+LZ+N+M+G+E+A,1,D+L+LN+' +k=1'+HU+N+M+G+E+A,1,D+L+PO+' +k=1'+Gw+N+M+G+E+A,1,D+L+JS+' +k=1'+Hu+N+M+G+E+A,1,D+L+SQ+' +k=1'+Hv+N+M+G+E+A,1,D+L+PS+' +k=1'+It+N+M+G+E+A,1,D+L+SR+' +k=1'+Hs+N+M+G+E+A,1,D+L+RL+' +k=1'+Ht+N+M+G+E+A,1,D+L+' +lon_0=60 +k=1'+HV+N+M+G+E+A,1,D+L+QW+' +k=1'+Hw+N+M+G+E+A,1,D+L+UH+' +k=1'+HW+N+M+G+E+A,1,D+L+RM+' +k=1'+Hx+N+M+G+E+A,1,D+L+Yt+' +k=1'+La+N+M+G+E+A,1,D+L+HP+' +k=1'+Hy+N+M+G+E+A,1,D+L+Lt+' +k=1'+Hz+N+M+G+E+A,1,D+L+HQ+' +k=1'+IA+N+M+G+E+A,1,D+L+Ni+' +k=1'+IB+N+M+G+E+A,1,D+L+Hd+' +k=1'+Gx+N+M+G+E+A,1,D+L+Hq+' +k=1'+IT+N+M+G+E+A,1,D+L+HR+' +k=1'+Gc+N+M+G+E+A,1,D+L+Mj+' +k=1'+IU+N+M+G+E+A,1,D+L+HS+' +k=1'+Iu+N+M+G+E+A,1,D+L+Jj+' +k=1'+Mu+N+M+G+E+A,1,D+L+EN+' +k=1'+Mv+N+M+G+E+A,1,D+L+Le+' +k=1'+Mw+N+M+G+E+A,1,D+L+Fy+' +k=1'+Mx+N+M+G+E+A,1,D+L+Im+' +k=1'+My+N+M+G+E+A,1,D+L+Fm+' +k=1'+Mz+N+M+G+E+A,1,D+L+KF+' +k=1'+NA+N+M+G+E+A,1,D+L+Fr+' +k=1'+NB+N+M+G+E+A,1,D+L+Jk+' +k=1'+Oh+N+M+G+E+A,1,D+L+Ed+' +k=1'+NC+N+M+G+E+A,1,D+L+Il+' +k=1'+Oi+N+M+G+E+A,1,D+L+Fn+' +k=1'+ND+N+M+G+E+A,1,D+L+Rx+' +k=1 +x_0=46500000'+N+M+G+E+A,1,D+L+Pf+' +k=1'+ZK+N+M+G+E+A,1,D+L+UN+' +k=1 +x_0=48500000'+N+M+G+E+A,1,D+L+Od+' +k=1 +x_0=49500000'+N+M+G+E+A,1,D+L+Oe+' +k=1 +x_0=50500000'+N+M+G+E+A,1,D+L+NY+' +k=1 +x_0=51500000'+N+M+G+E+A,1,D+L+ZS+' +k=1 +x_0=52500000'+N+M+G+E+A,1,D+L+Pg+' +k=1 +x_0=53500000'+N+M+G+E+A,1,D+L+Ql+' +k=1 +x_0=54500000'+N+M+G+E+A,1,D+L+NZ+' +k=1 +x_0=55500000'+N+M+G+E+A,1,D+L+UO+' +k=1 +x_0=56500000'+N+M+G+E+A,1,D+L+Lf+' +k=1 +x_0=57500000'+N+M+G+E+A,1,D+L+UP+' +k=1 +x_0=58500000'+N+M+G+E+A,1,D+L+KG+' +k=1 +x_0=59500000'+N+M+G+E+A,2,D+L+KH+' +k=1 +x_0=61500000'+N+M+G+E+A,1,D+L+SU+' +k=1 +x_0=62500000'+N+M+G+E+A,1,D+L+Lh+' +k=1 +x_0=63500000'+N+M+G+E+A,1,D+L+SV+' +k=1 +x_0=64500000'+N+M+G+E+A,1,D+L+Gl+' +k=1'+O+N+M+G+E+A,1,D+L+II+' +k=1'+O+N+M+G+E+A,1,D+L+HO+' +k=1'+O+N+M+G+E+A,1,D+L+Ia+' +k=1'+O+N+M+G+E+A,1,D+L+IG+' +k=1'+O+N+M+G+E+A,1,D+L+PN+' +k=1'+O+N+M+G+E+A,1,D+L+LN+' +k=1'+O+N+M+G+E+A,1,D+L+PO+' +k=1'+O+N+M+G+E+A,1,D+L+JS+' +k=1'+O+N+M+G+E+A,1,D+L+SQ+' +k=1'+O+N+M+G+E+A,1,D+L+PS+' +k=1'+O+N+M+G+E+A,1,D+L+SR+' +k=1'+O+N+M+G+E+A,1,D+L+RL+' +k=1'+O+N+M+G+E+A,1,D+L+' +lon_0=60 +k=1'+O+N+M+G+E+A,1,D+L+QW+' +k=1'+O+N+M+G+E+A,1,D+L+UH+' +k=1'+O+N+M+G+E+A,1,D+L+RM+' +k=1'+O+N+M+G+E+A,1,D+L+Yt+' +k=1'+O+N+M+G+E+A,1,D+L+HP+' +k=1'+O+N+M+G+E+A,1,D+L+Lt+' +k=1'+O+N+M+G+E+A,1,D+L+HQ+' +k=1'+O+N+M+G+E+A,1,D+L+Ni+' +k=1'+O+N+M+G+E+A,1,D+L+Hd+' +k=1'+O+N+M+G+E+A,1,D+L+Hq+' +k=1'+O+N+M+G+E+A,1,D+L+HR+' +k=1'+O+N+M+G+E+A,1,D+L+Mj+' +k=1'+O+N+M+G+E+A,1,D+L+HS+' +k=1'+O+N+M+G+E+A,1,D+L+Jj+' +k=1'+O+N+M+G+E+A,1,D+L+EN+' +k=1'+O+N+M+G+E+A,1,D+L+Le+' +k=1'+O+N+M+G+E+A,1,D+L+Fy+' +k=1'+O+N+M+G+E+A,1,D+L+Im+' +k=1'+O+N+M+G+E+A,1,D+L+Fm+' +k=1'+O+N+M+G+E+A,1,D+L+KF+' +k=1'+O+N+M+G+E+A,1,D+L+Fr+' +k=1'+O+N+M+G+E+A,1,D+L+Jk+' +k=1'+O+N+M+G+E+A,1,D+L+Ed+' +k=1'+O+N+M+G+E+A,1,I+Mf+o+i+HF+E+A,1,I+KD+o+i+HF+E+A,1,D+L+Il+' +k=1'+O+N+M+G+E+A,1,D+L+Fn+' +k=1'+O+N+M+G+E+A,1,D+L+Rx+' +k=1'+O+N+M+G+E+A,1,D+L+Pf+' +k=1'+O+N+M+G+E+A,1,D+L+UN+' +k=1'+O+N+M+G+E+A,1,D+L+Od+' +k=1'+O+N+M+G+E+A,1,D+L+Oe+' +k=1'+O+N+M+G+E+A,1,D+L+NY+' +k=1'+O+N+M+G+E+A,1,D+L+ZS+' +k=1'+O+N+M+G+E+A,1,D+L+Pg+' +k=1'+O+N+M+G+E+A,1,D+L+Ql+' +k=1'+O+N+M+G+E+A,1,D+L+NZ+' +k=1'+O+N+M+G+E+A,1,D+L+UO+' +k=1'+O+N+M+G+E+A,1,D+L+Lf+' +k=1'+O+N+M+G+E+A,1,D+L+UP+' +k=1'+O+N+M+G+E+A,1,D+L+KG+' +k=1'+O+N+M+G+E+A,1,D+L+Ry+' +k=1'+O+N+M+G+E+A,1,D+L+KH+' +k=1'+O+N+M+G+E+A,1,D+L+SU+' +k=1'+O+N+M+G+E+A,1,D+L+Lh+' +k=1'+O+N+M+G+E+A,1,D+L+SV+' +k=1'+O+N+M+G+E+A,1,D+IY+IV+Pc+h+N+C+B+E+A,1,D+Gm+OS+BG+a+N+C+B+E+A,1,D+Bl+Cn+V+EX+N+C+B+E+A,1,D+Bl+Co+V+EX+N+C+B+E+A,1,D+Bl+Iv+BG+EX+N+C+B+E+A,1,H+Dx+Dy+BC+IF+u+N+C+B+E+A,1,H+Dz+Mq+EA+IF+u+Is+C+B+E+A,1,H+DW+Jn+y+HA+Bd+Ae+C+B+E+A,1,H+DX+DY+AA+HA+Bd+Ae+C+B+E+A,1,H+Ap+DZ+Ml+AJ+Bd+Ae+C+B+E+A,1,H+LO+QS+Da+Mm+Bd+Ae+C+B+E+A,1,H+Db+Dc+Mn+Ir+Bd+Ae+C+B+E+A,1,H+Dd+De+Df+Iw+Bd+Ae+C+B+E+A,1,H+Eh+Ei+y+Ba+Fw+Fx+C+B+E+A,1,H+LP+LQ+CY+Ba+Fw+Fx+C+B+E+A,1,H+Ap+Dg+f+Ba+Fw+Fx+C+B+E+A,1,H+Dh+Mo+Di+Jq+QG+QH+C+B+E+A,1,D+Ch+Cp+Mp+h+N+C+B+E+A,1,D+Aq+CR+Am+h+N+C+B+E+A,1,D+Aq+Ob+Am+h+N+C+B+E+A,1,H+LR+Dj+QT+LS+a+N+C+B+E+A,1,D+Gm+Cq+V+h+N+C+B+E+A,1,D+Gm+Cr+V+EW+N+C+B+E+A,1,D+Kn+Sf+AO+O+N+C+B+E+A,1,D+Ko+KO+AO+O+N+C+B+E+A,1,D+GV+KI+Jl+O+N+C+B+E+A,1,D+Kp+Sg+Jl+O+N+C+B+E+A,1,D+Kq+KP+' +k=1'+O+N+C+B+E+A,1,D+p+Cs+BJ+h+N+C+B+E+A,1,D+p+Jb+BJ+O+N+C+B+E+A,1,D+p+Ix+BG+CX+N+C+B+E+A,1,D+f+Cz+EQ+AI+N+C+B+E+A,1,D+f+DA+Am+EW+N+C+B+E+A,1,D+DM+DB+AO+BU+KJ+C+B+E+A,1,D+DM+DC+AO+HT+KJ+C+B+E+A,1,H+EB+EC+Fo+GG+AV+AH+C+B+E+A,1,H+AY+ED+Fs+GG+O+N+C+B+E+A,1,H+EE+EF+AQ+Fl+u+N+C+B+E+A,1,H+EG+EH+f+CV+u+Is+C+B+E+A,1,H+Az+DV+DM+Jo+O+N+C+B+E+A,1,H+Ej+Ek+AB+EY+O+Ae+C+B+E+A,1,H+FS+FT+IY+Hg+BZ+N+C+B+E+A,1,H+OH+OI+OJ+Bi+BZ+N+C+B+E+A,1,D+AK+HJ+V+AI+N+C+B+E+A,1,D+BD+DD+AO+HT+N+C+B+E+A,1,H+MU+Nz+AA+Ld+u+N+C+B+E+A,1,H+El+Dk+Ip+GE+h+Mk+C+B+E+A,1,H+Em+En+Ip+IL+O+N+C+B+E+A,1,H+Eo+Ep+Eq+Jh+Tl+N+C+B+E+A,1,H+OA+Er+Es+BE+Pk+N+C+B+E+A,1,H+Bq+OB+Fo+BE+LU+N+C+B+E+A,1,H+FU+FV+Iq+DE+CX+EK+C+B+E+A,1,H+Ma+FW+IP+Js+CX+EK+C+B+E+A,1,H+FX+FY+Nj+Na+CX+EK+C+B+E+A,1,D+Hj+Ct+CP+AI+N+C+B+E+A,1,D+Hj+Bx+CP+EW+N+C+B+E+A,1,D+Cd+RS+BG+Bv+N+C+B+E+A,1,D+Cd+Hg+BG+O+N+C+B+E+A,1,D+Id+RT+Am+YC+N+C+B+E+A,1,H+LM+RK+MV+IS+a+N+C+B+E+A,1,H+JT+Jn+FZ+CS+O+N+C+B+E+A,1,D+CQ+DF+V+h+Tm+C+B+E+A,1,D+CQ+DG+V+O+Hh+C+B+E+A,1,D+CQ+DH+V+CX+LV+C+B+E+A,1,D+Fp+DI+AO+AI+N+C+B+E+A,1,D+BA+Gp+V+Bn+N+C+B+E+A,1,D+Bl+Cu+Hm+OC+N+C+B+E+A,1,D+Bl+Iy+V+O+N+C+B+E+A,1,D+Bl+Cv+Iz+YD+N+C+B+E+A,1,D+BA+Gp+V+Bn+N+C+B+E+A,1,D+Fs+Cw+Ad+Bv+N+C+B+E+A,1,D+Fs+Cx+Ad+Qo+N+C+B+E+A,1,H+Dl+Dm+BB+Oc+AI+N+C+B+E+A,1,H+BH+Ev+Ib+EZ+a+N+C+B+E+A,1,H+Ew+Ex+Be+EZ+a+N+C+B+E+A,1,H+OK+Fa+BY+ET+a+N+C+B+E+A,1,H+Fb+Fc+Ch+ET+a+N+C+B+E+A,1,H+Dn+Ey+QU+Fl+a+N+C+B+E+A,1,H+Ez+FA+Do+Fl+a+N+C+B+E+A,1,H+PP+CZ+AK+AJ+Ci+N+C+B+E+A,1,H+PQ+Ca+p+AJ+AV+N+C+B+E+A,1,D+EI+GE+Lb+BU+N+C+B+E+A,1,H+Fd+Fe+AL+CS+a+N+C+B+E+A,1,H+OL+Ff+EJ+Ag+a+N+C+B+E+A,1,H+FD+MX+BC+MQ+a+N+C+B+E+A,1,H+FE+MY+QV+Jr+h+AH+C+B+E+A,1,H+FF+FG+Ds+CV+a+Cl+C+B+E+A,1,H+FH+FI+Cb+Ag+EW+Fq+C+B+E+A,1,H+FJ+FK+Dt+Ji+a+LV+C+B+E+A,1,H+CD+CE+Cc+CV+AI+Ju+C+B+E+A,1,H+AY+CF+Br+BI+O+AH+C+B+E+A,1,H+JF+CG+AQ+BI+O+Cl+C+B+E+A,1,H+JG+CH+f+BI+O+Fq+C+B+E+A,1,D+Fp+LW+JA+O+N+C+B+E+A,1,H+OF+FL+AA+GF+Bo+Cl+C+B+E+A,1,H+Az+Du+AB+GF+Bo+AH+C+B+E+A,1,H+BH+OG+Ib+Cy+O+N+C+B+E+A,1,H+FM+FN+Dv+AJ+O+N+C+B+E+A,1,H+Mb+RN+Mr+Ga+a+N+C+B+E+A,1,H+Fg+Fh+QX+CR+a+N+C+B+E+A,1,H+FO+FP+Dw+Bu+a+N+C+B+E+A,1,H+Jc+MZ+AL+Bu+a+N+C+B+E+A,1,H+FQ+FR+PR+Bu+a+N+C+B+E+A,1,D+CA+DJ+Ad+h+N+C+B+E+A,1,D+CA+DK+Ad+u+EK+C+B+E+A,1,D+CA+JB+Ad+a+N+C+B+E+A,1,D+CA+DL+Ad+CX+EK+C+B+E+A,1,H+GW+GX+GY+GA+h+IK+C+B+E+A,1,D+Bl+Cn+V+EX+N+C+B+t+A,1,D+Bl+Co+V+EX+N+C+B+t+A,1,D+Bl+Iv+BG+EX+N+C+B+t+A,1,H+DW+Jn+y+HA+Ac+AD+C+B+J+A,1,H+DX+DY+AA+HA+Ac+AD+C+B+J+A,1,H+Ap+DZ+Ml+AJ+Ac+AD+C+B+J+A,1,H+LO+QS+Da+Mm+Ac+AD+C+B+J+A,1,H+Db+Dc+Mn+Ir+Ac+AD+C+B+J+A,1,H+Dd+De+Df+Iw+Ac+AD+C+B+J+A,1,H+Eh+Ei+y+Ba+Bw+CL+C+B+J+A,1,H+LP+LQ+CY+Ba+Bw+CL+C+B+J+A,1,H+Ap+Dg+f+Ba+Bw+CL+C+B+J+A,1,H+Dh+Mo+Di+Jq+MC+MD+C+B+J+A,1,D+Ch+Cp+Mp+AE+N+C+B+J+A,1,D+Aq+CR+Am+AE+N+C+B+J+A,1,D+Aq+Ob+Am+AE+N+C+B+J+A,1,H+LR+Dj+QT+LS+a+N+C+B+J+A,1,D+Gm+Cq+V+AE+N+C+B+J+A,1,D+Gm+Cr+V+CM+N+C+B+J+A,1,D+p+Cs+BJ+AE+N+C+B+J+A,1,D+p+Jb+BJ+AF+N+C+B+J+A,1,D+p+Ix+BG+ME+N+C+B+J+A,3,H+Az+DV+DM+Jo+AF+N+C+B+J+A,1,H+Ej+Ek+AB+EY+AF+AD+C+B+J+A,1,H+MU+Nz+AA+Ld+MF+N+C+B+J+A,1,H+El+Dk+Ip+GE+AE+Mk+C+B+J+A,1,H+Em+En+Ip+IL+AF+N+C+B+J+A,1,H+Eo+Ep+Eq+Jh+MG+N+C+B+t+A,1,H+OA+Er+Es+BE+MH+N+C+B+t+A,1,H+Bq+OB+Fo+BE+OT+N+C+B+t+A,1,D+Hj+Ct+CP+BF+N+C+B+J+A,1,D+Hj+Bx+CP+CM+N+C+B+J+A,1,H+LM+RK+MV+IS+DR+N+C+B+t+A,1,D+Bl+Cu+Hm+OC+N+C+B+J+A,1,D+Bl+Iy+V+AF+N+C+B+J+A,1,D+Bl+Cv+Iz+MI+N+C+B+J+A,1,D+BA+Gp+V+Bn+N+C+B+J+A,1,D+Fs+Cw+Ad+MJ+N+C+B+J+A,1,D+Fs+Cx+Ad+MK+N+C+B+J+A,1,H+Dl+Dm+BB+Oc+BF+N+C+B+J+A,1,H+BH+Ev+Ib+EZ+DR+N+C+B+t+A,1,H+Ew+Ex+Be+EZ+DR+N+C+B+t+A,1,H+Dn+Ey+QU+Fl+a+N+C+B+J+A,1,H+Ez+FA+Do+Fl+a+N+C+B+J+A,1,H+PP+CZ+AK+AJ+KL+N+C+B+t+A,1,H+PQ+Ca+p+AJ+KM+N+C+B+t+A,1,H+FD+MX+BC+MQ+a+N+C+B+J+A,1,H+FE+MY+QV+Jr+AE+CN+C+B+J+A,1,H+FF+FG+Ds+CV+a+Gr+C+B+J+A,1,H+FH+FI+Cb+Ag+CM+Fq+C+B+J+A,1,H+FJ+FK+Dt+Ji+a+Ne+C+B+J+A,1,H+CD+CE+Cc+CV+BF+Nf+C+B+J+A,1,H+AY+CF+Br+BI+Gd+Pw+C+B+t+A,1,H+JF+CG+AQ+BI+Gd+RY+C+B+t+A,1,H+JG+CH+f+BI+Gd+RZ+C+B+t+A,1,H+OF+FL+AA+GF+Gs+Gr+C+B+J+A,1,H+Az+Du+AB+GF+Gs+CN+C+B+J+A,1,H+BH+OG+Ib+Cy+AF+N+C+B+J+A,1,H+FM+FN+Dv+AJ+AF+N+C+B+J+A,1,H+FO+FP+Dw+Bu+a+N+C+B+J+A,1,H+Jc+MZ+AL+Bu+a+N+C+B+J+A,1,H+FQ+FR+PR+Bu+a+N+C+B+J+A,1,D+L+' +lon_0=13'+AP+O+N+AU+BN+Sy+E+A,1,D+' +lat_0=24.45'+Vv+Jl+h+Hk+R+Jy+E+A,1,I+NS+o+Y+Hf+E+A,2,D+KQ+' +lon_0=41.53333333333333 +k=1 +x_0=1300000'+N+M+F+E+A,1,D+KQ+' +lon_0=44.53333333333333 +k=1'+aB+N+M+F+E+A,1,D+KQ+' +lon_0=47.53333333333333 +k=1'+aC+N+M+F+E+A,1,D+KQ+' +lon_0=50.53333333333333 +k=1'+aD+N+M+F+E+A,1,D+Ol+' +lon_0=50.76666666666667 +k=1'+aB+N+M+F+E+A,1,D+Ol+' +lon_0=53.76666666666667 +k=1'+aC+N+M+F+E+A,1,D+Ol+' +lon_0=56.76666666666667 +k=1'+aD+N+M+F+E+A,1,I+Ja+R+SE+E+A,1,I+Ja+R+Sz+E+A,2,D+L+Tf+V+Ab+N+C+B+E+A,1,D+L+RQ+V+Ab+N+C+B+E+A,1,D+L+RR+V+Ab+N+C+B+E+A,1,D+L+Tg+V+Ab+N+C+B+E+A,1,D+L+IL+V+Ab+N+C+B+E+A,1,D+L+Th+V+Ab+N+C+B+E+A,1,D+L+Ti+V+Ab+N+C+B+E+A,1,D+L+Ga+V+Ab+N+C+B+E+A,1,GU+Iq+Zy+ST+Ci+aE+C+B+E+A,1,GU+' +lat_0=47.25'+Qk+ST+u+CO+C+B+E+A,1,I+Ns+C+B+E+A,1,I+Nt+C+B+E+A,1,I+Nu+C+B+E+A,1,I+Ik+C+B+E+A,1,I+IC+C+B+E+A,1,I+Hi+C+B+E+A,1,I+Gz+C+B+E+A,1,I+ID+C+B+E+A,2,DT+' +lat_1=55'+QY+Yu+Ms+s+N+X+J+A,1,D+DM+DB+AO+MM+GI+C+B+J+A,1,D+DM+DC+AO+HT+GI+C+B+J+A,1,D+DM+DB+AO+MM+GI+C+B+J+A,1,D+DM+DC+AO+HT+GI+C+B+J+A,1,I+Gz+R+TA+E+A,1,I+Gz+R+SF+E+A,1,I+Io+R+NH+E+A,1,I+Io+C+B+E+A,1,I+Gz+R+TO+E+A,2,I+Me+o+C+B+E+A,1,I+Ro+o+R+TP+E+A,1,I+RG+o+R+Lr+E+A,1,I+RH+o+R+UD+E+A,2,I+JZ+o+R+SG+E+A,1,I+MA+o+R+QM+E+A,6,I+ID+i+TZ+E+A,1,I+SK+o+R+SH+E+A,3,H+JT+Hl+GH+AJ+u+N+C+B+E+A,1,H+JT+Hl+GH+AJ+Lc+N+C+B+t+A,1,H+JT+Hl+GH+AJ+u+N+C+B+E+A,1,H+JT+Hl+GH+AJ+Lc+N+C+B+t+A,1,I+MA+o+R+Jf+E+A,1,I+MA+o+R+TB+E+A,1,I+MA+o+R+Ke+E+A,1,I+MA+o+R+HH+E+A,1,I+JZ+o+R+SI+E+A,1,JU+' +lon_0=110'+ZP+Pl+Qp+Y+Hf+E+A,1,JU+' +lon_0=110'+ZP+Pl+Qp+Y+Cj+E+A,1,JU+' +lon_0=110'+ZP+Pl+Qp+Y+HZ+E+A,1,D+L+KB+AP+AV+N+R+CK+E+A,1,D+L+Gj+AP+' +x_0=2520000'+N+R+CK+E+A,1,DT+Yv+' +lat_2=58.5'+IP+' +lon_0=-126'+BZ+N+C+B+E+A,1,I+KC+C+B+E+A,1,D+L+IH+' +k=1'+Bn+N+C+B+E+A,1,D+L+' +lon_0=13.5 +k=1'+Bn+N+C+B+E+A,1,D+L+Gj+' +k=1'+Bn+N+C+B+E+A,1,D+L+YE+' +k=1'+Bn+N+C+B+E+A,1,D+L+QR+' +k=1'+Bn+N+C+B+E+A,1,D+L+' +lon_0=14.25 +k=1'+Bn+N+C+B+E+A,1,D+L+' +lon_0=15.75 +k=1'+Bn+N+C+B+E+A,1,D+L+' +lon_0=17.25 +k=1'+Bn+N+C+B+E+A,1,D+L+' +lon_0=18.75 +k=1'+Bn+N+C+B+E+A,1,D+L+' +lon_0=20.25 +k=1'+Bn+N+C+B+E+A,1,D+L+' +lon_0=21.75 +k=1'+Bn+N+C+B+E+A,1,D+L+' +lon_0=23.25 +k=1'+Bn+N+C+B+E+A,1,D+L+Vw+' +k=1'+AV+N+Y+BW+E+A,1,D+L+Vx+' +k=1'+AV+N+Y+BW+E+A,1,D+L+Vy+' +k=1'+AV+N+Y+BW+E+A,1,D+L+Vz+' +k=1'+AV+N+Y+BW+E+A,1,D+L+WA+' +k=1'+AV+N+Y+BW+E+A,1,D+L+WB+' +k=1'+AV+N+Y+BW+E+A,1,D+L+Vw+' +k=1'+AV+N+Y+E+A,1,D+L+Vx+' +k=1'+AV+N+Y+E+A,1,D+L+Vy+' +k=1'+AV+N+Y+E+A,1,D+L+Vz+' +k=1'+AV+N+Y+E+A,1,D+L+WA+' +k=1'+AV+N+Y+E+A,1,D+L+WB+' +k=1'+AV+N+Y+E+A,1,BP+m+' +lat_ts=-71'+HN+' +k=1'+s+N+S+E+A,1,BP+m+' +lat_ts=-71 +lon_0=70 +k=1'+Pk+Hh+S+E+A,1,H+' +lat_1=-68.5 +lat_2=-74.5 +lat_0=-50 +lon_0=70'+Pk+Hh+S+E+A,1,H+Yw+QY+PU+Lu+LU+RU+C+B+E+A,1,He+PU+Lu+RV+RW+C+B+E+A,1,I+Mf+o+j+KR+E+A,1,I+KD+o+j+KR+E+A,3,I+Ja+C+B+E+A,1,I+KA+C+B+E+A,1,I+Oq+C+B+E+A,1,I+QD+C+B+E+A,1,I+JN+C+B+E+A,1,I+KC+C+B+E+A,1,I+NR+C+B+E+A,1,I+Ki+C+B+E+A,1,I+Mf+C+B+E+A,1,I+KD+C+B+E+A,5,I+Os+R+Jd+E+A,1,I+SL+R+Jd+E+A,1,I+Ja+R+Jd+E+A,1,H+' +lat_1=64.25 +lat_2=65.75 +lat_0=65 +lon_0=-19'+O+Ae+C+B+E+A,1,D+L+' +lon_0=-8.5 +k=1'+Jm+' +y_0=-7800000'+R+Jz+E+A,1,D+L+II+AP+O+' +y_0=-6000000'+C+B+E+A,1,I+MA+o+R+Qc+E+A,1,I+Ja+R+PI+E+A,1,I+Os+R+Pt+E+A,1,I+Os+R+Pa+E+A,1,I+JN+j+B+E+A,1,I+KC+j+B+E+A,1,D+L+' +lon_0=37'+UG+O+ZL+R+n+E+A,1,I+Ki+C+B+E+A,1,Ck+' +lat_0=52.41864827777778 +lon_0=13.62720366666667'+Of+' +y_0=10000'+Y+AC+E+A,1,D+L+Bu+AP+O+' +y_0=-4500000'+X+E+A,1,D+L+Bu+AP+YF+Sh+C+B+E+A,1,D+L+Bu+AP+YF+Sh+C+B+E+A,1,D+AL+Rf+JE+EW+N+C+B+E+A,2,D+BD+Rg+JE+AI+N+C+B+E+A,1,D+AL+Rf+JE+EW+N+C+B+E+A,2,D+BD+Rg+JE+AI+N+C+B+E+A,1,CU+Kr+' +lonc=-86'+QI+AP+QJ+PY+KE+QK+C+B+E+A,1,CU+Kr+' +lonc=-86'+QI+AP+QJ+PY+KE+QK+C+B+E+A,1,H+WC+WD+WE+CS+' +x_0=914400 +y_0=914400'+X+t+A,1,H+WC+WD+WE+CS+BZ+AH+C+B+E+A,1,H+OM+RO+OX+CS+AV+Ju+C+B+E+A,1,DT+OM+RO+OX+CS+AV+Hh+C+B+E+A,1,H+OM+RO+OX+CS+AV+Ju+C+B+E+A,1,DT+OM+RO+OX+CS+AV+Hh+C+B+E+A,1,DT+' +lat_1=24'+YG+' +lat_0=24'+NV+u+N+C+B+E+A,1,DT+' +lat_1=24'+YG+' +lat_0=24'+NV+u+N+C+B+E+A,1,H+Fi+Fj+AB+EY+AV+AH+C+B+E+A,1,H+Fi+Fj+AB+EY+AV+CN+C+B+J+A,1,H+Fi+Fj+AB+EY+AV+AH+C+B+E+A,1,H+Fi+Fj+AB+EY+AV+CN+C+B+J+A,1,I+Mg+Y+g+E+A,1,I+NT+Y+g+E+A,1,I+Ot+Y+g+E+A,1,I+Nv+Y+g+E+A,1,I+PM+Y+g+E+A,1,I+Mg+C+B+E+A,1,I+NT+C+B+E+A,1,I+Ot+C+B+E+A,1,I+Nv+C+B+E+A,1,I+PM+C+B+E+A,1,H+' +lat_1=-14.26666666666667 +lat_0=-14.26666666666667'+SW+' +k_0=1'+e+' +y_0=95169.31165862332'+i+TC+J+A,4,D+L+Hq+AP+O+N+By+Ay+RF+E+A,1,H+' +lat_1=-28'+ZT+' +lat_0=-32'+Fn+BZ+Cl+C+B+E+A,1,D+SS+' +lon_0=-2.416666666666667 +k=0.999997 +x_0=47000'+Rz+C+B+E+A,1,D+' +lat_0=49.225 +lon_0=-2.135 +k=0.9999999000000001'+Of+' +y_0=70000'+C+B+E+A,1,H+' +lat_1=-36 +lat_2=-38 +lat_0=-37 +lon_0=145'+Ci+Gb+x+r+E+A,1,H+' +lat_1=-36 +lat_2=-38 +lat_0=-37 +lon_0=145'+Ci+JH+C+B+E+A,1,H+' +lat_1=-18'+ZT+L+' +lon_0=134'+s+N+C+B+E+A,1,D+' +lat_0=-28'+NY+Jl+Jm+EK+C+B+E+A,1,D+Ie+' +lon_0=-80.07750791666666 +k=1'+BZ+AH+C+B+E+A,1,D+Ie+' +lon_0=-77.07750791666666 +k=1'+BZ+AH+C+B+E+A,1,D+Ie+' +lon_0=-74.07750791666666 +k=1'+BZ+AH+C+B+E+A,1,D+Ie+' +lon_0=-71.07750791666666 +k=1'+BZ+AH+C+B+E+A,1,D+Ie+' +lon_0=-68.07750791666666 +k=1'+BZ+AH+C+B+E+A,1,D+L+YH+' +k=0.999'+BZ+AH+R+Qe+E+A,1,GU+' +lat_0=50.625 +lon_0=21.08333333333333'+UG+' +x_0=4637000 +y_0=5467000'+M+b+E+A,1,D+L+Fm+CP+O+N+i+BX+E+A,1,D+L+ZU+CP+O+N+i+BX+E+A,1,D+L+ZV+CP+O+N+i+BX+E+A,1,D+L+Fr+CP+O+N+i+BX+E+A,1,D+L+Ru+CP+O+N+i+BX+E+A,1,D+L+RI+' +k=1'+O+N+C+B+E+A,1,D+L+UI+' +k=1'+O+N+C+B+E+A,1,D+L+Gl+' +k=1'+O+N+C+B+E+A,1,D+L+Yx+' +k=1'+O+N+C+B+E+A,1,D+L+SP+' +k=1'+O+N+C+B+E+A,1,D+L+II+' +k=1'+O+N+C+B+E+A,1,D+L+RJ+' +k=1'+O+N+C+B+E+A,1,D+L+UJ+' +k=1'+O+N+C+B+E+A,1,D+L+HO+' +k=1'+O+N+C+B+E+A,1,D+L+RP+' +k=1'+O+N+C+B+E+A,1,D+L+' +lon_0=29 +k=1'+O+N+C+B+E+A,1,D+L+Ia+' +k=1'+O+N+C+B+E+A,1,D+L+QQ+' +k=1'+O+N+C+B+E+A,2,Ck+' +lat_0=-18 +lon_0=178 +x_0=109435.392 +y_0=141622.272'+UW+Ym+Nl+' +to_meter=0.201168'+A,1,I+PL+o+R+JD+E+A,1,I+SK+o+R+JD+E+A,6,I+Mh+By+Ay+JP+E+A,1,I+Mi+By+Ay+JP+E+A,3,D+L+' +lon_0=18.05779 +k=0.99999425 +x_0=100178.1808 +y_0=-6500614.7836'+C+B+E+A,1,DT+Yv+' +lat_2=58.5'+IP+' +lon_0=-126'+BZ+N+C+B+E+A,1,I+RH+C+B+E+A,1,I+TW+C+B+E+A,1,I+TX+C+B+E+A,1,I+QE+C+B+E+A,1,I+Nw+C+B+E+A,1,I+NP+C+B+E+A,1,I+NQ+C+B+E+A,1,H+YI+' +lat_2=53.5'+L+SA+' +x_0=930000 +y_0=6430000'+C+B+E+A,1,H+YI+' +lat_2=53.5'+L+SA+' +x_0=930000 +y_0=6430000'+C+B+E+A,1,H+' +lat_1=-20.66666666666667 +lat_2=-22.33333333333333 +lat_0=-21.5'+ZW+u+Hk+C+B+E+A,1,I+MA+o+j+QB+E+A,1,H+' +lat_1=-22.24469175 +lat_2=-22.29469175 +lat_0=-22.26969175 +lon_0=166.44242575 +x_0=0.66 +y_0=1.02'+R+HH+E+A,1,H+' +lat_1=-22.24472222222222 +lat_2=-22.29472222222222 +lat_0=-22.26972222222222 +lon_0=166.4425 +x_0=8.313000000000001 +y_0=-2.354'+R+HH+E+A,1,CU+Qi+aF+aT+Ph+Of+N+KE+GZ+Yn+Qz+' +to_meter=20.116756'+A,1,CU+Qi+aF+aT+Ph+' +x_0=804670.24'+N+KE+GZ+Yn+Qz+E+A,1,I+SM+o+C+B+E+A,1,I+MA+o+C+B+E+A,1,I+Nq+o+C+B+E+A,1,I+Nq+o+R+Jf+E+A,2,DT+' +lat_1=42.122774 +lat_2=49.01518 +lat_0=45.568977 +lon_0=-84.455955'+BZ+AH+C+B+E+A,1,DT+' +lat_1=42.122774 +lat_2=49.01518 +lat_0=45.568977 +lon_0=-83.248627'+BZ+AH+C+B+E+A,1,D+L+ZQ+AP+O+N+By+Ay+JP+E+A,1,D+L+UE+' +k=0.9965000000000001'+BZ+N+R+w+E+A,1,I+IC+C+B+E+A,1,I+Hi+C+B+E+A,1,I+Gz+C+B+E+A,1,I+ID+C+B+E+A,1,I+Io+C+B+E+A,1,I+MB+C+B+E+A,1,I+Nx+C+B+E+A,1,I+Nr+C+B+E+A,1,I+Os+C+B+E+A,1,I+SL+C+B+E+A,1,I+Ja+C+B+E+A,1,I+KA+C+B+E+A,1,D+L+KB+CP+h+N+R+w+E+A,1,D+L+' +lon_0=11'+CP+h+N+R+w+E+A,1,D+L+' +lon_0=13'+CP+h+N+R+w+E+A,1,D+L+Gj+CP+h+N+R+w+E+A,1,D+L+UE+CP+h+N+R+w+E+A,1,D+L+RI+CP+h+N+R+w+E+A,1,D+L+Gl+CP+h+N+R+w+E+A,1,D+L+SP+CP+h+N+R+w+E+A,1,D+L+RJ+CP+h+N+R+w+E+A,1,I+JN+R+w+E+A,1,H+Qq+Li+JS+PZ+AV+aG+c+QC+E+A,1,I+KC+R+w+E+A,1,I+NR+R+w+E+A,1,I+Ki+R+w+E+A,1,H+Om+On+m+Pe+s+N+S+E+A,1,H+Om+On+m+Nb+s+N+S+E+A,1,H+Om+On+m+' +lon_0=-42'+s+N+S+E+A,1,H+BQ+BR+m+SU+s+N+S+E+A,1,H+BQ+BR+m+Pe+s+N+S+E+A,1,H+BQ+BR+m+Nb+s+N+S+E+A,1,H+BQ+BR+m+PO+s+N+S+E+A,1,H+BQ+BR+m+SR+s+N+S+E+A,1,H+BQ+BR+m+UH+s+N+S+E+A,1,H+BQ+BR+m+Lt+s+N+S+E+A,1,H+BQ+BR+m+Hq+s+N+S+E+A,1,H+BQ+BR+m+Jj+s+N+S+E+A,1,H+BQ+BR+m+Im+s+N+S+E+A,1,H+BQ+BR+m+Jk+s+N+S+E+A,1,H+BQ+BR+m+Rx+s+N+S+E+A,1,H+BQ+BR+m+Oe+s+N+S+E+A,1,H+BQ+BR+m+Ql+s+N+S+E+A,1,H+AM+AN+m+' +lon_0=-102'+s+N+S+E+A,1,H+AM+AN+m+Bu+s+N+S+E+A,1,H+AM+AN+m+' +lon_0=-78'+s+N+S+E+A,1,H+AM+AN+m+Pe+s+N+S+E+A,1,H+AM+AN+m+' +lon_0=-18'+s+N+S+E+A,1,H+AM+AN+m+' +lon_0=-6'+s+N+S+E+A,1,H+AM+AN+m+ZO+s+N+S+E+A,1,H+AM+AN+m+QR+s+N+S+E+A,1,H+AM+AN+m+Ia+s+N+S+E+A,1,H+AM+AN+m+PO+s+N+S+E+A,1,H+AM+AN+m+SR+s+N+S+E+A,1,H+AM+AN+m+UH+s+N+S+E+A,1,H+AM+AN+m+Lt+s+N+S+E+A,1,H+AM+AN+m+Hq+s+N+S+E+A,1,H+AM+AN+m+Jj+s+N+S+E+A,1,H+AM+AN+m+Im+s+N+S+E+A,1,H+AM+AN+m+Jk+s+N+S+E+A,1,H+AM+AN+m+Rx+s+N+S+E+A,1,H+AM+AN+m+Oe+s+N+S+E+A,1,H+AM+AN+m+Ql+s+N+S+E+A,1,H+AM+AN+m+UP+s+N+S+E+A,1,H+Ah+AZ+m+YJ+s+N+S+E+A,1,H+Ah+AZ+m+YK+s+N+S+E+A,1,H+Ah+AZ+m+Lj+s+N+S+E+A,1,H+Ah+AZ+m+Ji+s+N+S+E+A,1,H+Ah+AZ+m+CR+s+N+S+E+A,1,H+Ah+AZ+m+Qk+s+N+S+E+A,1,H+Ah+AZ+m+' +lon_0=-27'+s+N+S+E+A,1,H+Ah+AZ+m+' +lon_0=-9'+s+N+S+E+A,1,H+Ah+AZ+m+KB+s+N+S+E+A,1,H+Ah+AZ+m+HO+s+N+S+E+A,1,H+Ah+AZ+m+JS+s+N+S+E+A,1,H+Ah+AZ+m+QW+s+N+S+E+A,1,H+Ah+AZ+m+HQ+s+N+S+E+A,1,H+Ah+AZ+m+HS+s+N+S+E+A,1,H+Ah+AZ+m+Fm+s+N+S+E+A,1,H+Ah+AZ+m+Fn+s+N+S+E+A,1,H+Ah+AZ+m+NY+s+N+S+E+A,1,H+Ah+AZ+m+Lf+s+N+S+E+A,1,H+Ai+Aj+m+SV+s+N+S+E+A,1,H+Ai+Aj+m+' +lon_0=-144'+s+N+S+E+A,1,H+Ai+Aj+m+Mt+s+N+S+E+A,1,H+Ai+Aj+m+OZ+s+N+S+E+A,1,H+Ai+Aj+m+UQ+s+N+S+E+A,1,H+Ai+Aj+m+' +lon_0=-48'+s+N+S+E+A,1,H+Ai+Aj+m+' +lon_0=-24'+s+N+S+E+A,1,H+Ai+Aj+m+HN+s+N+S+E+A,1,H+Ai+Aj+m+II+s+N+S+E+A,1,H+Ai+Aj+m+SQ+s+N+S+E+A,1,H+Ai+Aj+m+Yt+s+N+S+E+A,1,H+Ai+Aj+m+Mj+s+N+S+E+A,1,H+Ai+Aj+m+KF+s+N+S+E+A,1,H+Ai+Aj+m+UN+s+N+S+E+A,1,H+Ai+Aj+m+UO+s+N+S+E+A,1,BP+m+AW+SX+' +k=1'+s+N+S+E+A,1,BP+m+AW+YK+' +k=1'+s+N+S+E+A,1,BP+m+AW+' +lon_0=-105 +k=1'+s+N+S+E+A,1,BP+m+AW+UR+' +k=1'+s+N+S+E+A,1,BP+m+AW+' +lon_0=-45 +k=1'+s+N+S+E+A,1,BP+m+AW+' +lon_0=-15 +k=1'+s+N+S+E+A,1,BP+m+AW+Gj+' +k=1'+s+N+S+E+A,1,BP+m+AW+JS+' +k=1'+s+N+S+E+A,1,BP+m+AW+HP+' +k=1'+s+N+S+E+A,1,BP+m+AW+EN+' +k=1'+s+N+S+E+A,1,BP+m+AW+Fn+' +k=1'+s+N+S+E+A,1,BP+m+AW+NZ+' +k=1'+s+N+S+E+A,1,BP+m+AW+ON+' +k=1'+s+N+S+E+A,1,BP+m+AW+Bu+' +k=1'+s+N+S+E+A,1,BP+m+AW+' +lon_0=-30 +k=1'+s+N+S+E+A,1,BP+m+AW+Ia+' +k=1'+s+N+S+E+A,1,BP+m+AW+Hq+' +k=1'+s+N+S+E+A,1,BP+m+AW+Oe+' +k=1'+s+N+S+E+A,1,BP+m+AW+HN+' +k=1'+s+N+S+E+A,1,H+Ai+Aj+' +lat_0=-78'+Ql+s+N+S+E+A,2,I+RG+o+C+Bm+E+A,1,I+Ro+o+C+Bm+E+A,1,I+RH+o+C+Bm+E+A,1,I+TW+o+C+Bm+E+A,1,H+WF+' +lat_2=58'+WG+II+O+' +y_0=6375000'+C+Lw+E+A,1,H+WF+' +lat_2=58'+WG+II+O+' +y_0=6375000'+C+B+E+A,1,I+RH+o+R+Lq+E+A,1,I+RH+o+R+Kc+E+A,1,I+Ro+o+R+Kg+E+A,1,I+Ro+o+R+Kh+E+A,1,I+RG+o+R+QN+E+A,1,I+JM+j+TD+E+A,1,H+' +lat_1=-30.75 +lat_2=-35.75 +lat_0=-33.25'+Od+' +x_0=9300000'+Gb+C+B+E+A,1,DT+Yy+SY+L+Mt+s+QZ+X+E+A,1,DT+Yy+SY+L+Mt+s+QZ+C+B+E+A,1,DT+Yy+SY+L+Mt+s+QZ+C+B+E+A,1,I+ID+R+NH+E+A,1,I+ID+C+B+E+A,3,D+L+Yx+V+O+Ak+c+E+A,1,D+L+II+V+O+Ak+c+E+A,1,D+L+IH+V+O+Ak+c+E+A,1,D+L+' +lon_0=14'+V+O+Ak+c+E+A,1,D+L+' +lon_0=16'+V+O+Ak+c+E+A,1,D+L+QR+V+O+Ak+c+E+A,1,D+L+UI+V+O+Ak+c+E+A,1,D+L+Yx+V+O+Ak+c+E+A,1,D+L+II+V+O+Ak+c+E+A,1,D+L+UJ+V+O+Ak+c+E+A,1,D+L+RP+V+O+Ak+c+E+A,1,D+L+Ia+V+O+Ak+c+E+A,1,GU+' +lat_0=52.16666666666666 +lon_0=19.16666666666667 +k=0.999714'+O+Ae+M+b+E+A,1,D+L+Gj+' +k=1'+Eg+N+M+b+E+A,1,D+L+QR+' +k=1'+Jt+N+M+b+E+A,1,D+L+Gl+' +k=1'+IM+N+M+b+E+A,1,D+L+II+' +k=1'+MS+N+M+b+E+A,1,D+L+Gj+' +k=1'+Bo+N+M+b+E+A,1,D+L+Gl+' +k=1'+DP+N+M+b+E+A,1,D+L+HO+' +k=1'+Eg+N+M+b+E+A,1,I+Rc+o+R+TE+E+A,1,H+' +lat_1=-20.19506944444445 +lat_0=-20.19506944444445 +lon_0=57.52182777777778 +k_0=1'+BZ+AH+c+Qf+E+A,1,DT+' +lat_1=55'+QY+Yu+Ms+s+N+C+B+E+A,1,D+L+IH+V+O+Ak+c+GN+E+A,1,D+L+' +lon_0=14'+V+O+Ak+c+GN+E+A,1,D+L+' +lon_0=16'+V+O+Ak+c+GN+E+A,1,I+KC+o+c+GN+E+A,1,I+Ja+C+B+E+A,1,I+KA+C+B+E+A,1,I+Oq+C+B+E+A,1,D+L+II+UG+O+N+C+B+E+A,1,H+LM+IJ+' +lat_0=63.390675'+UY+' +x_0=6200000'+Fq+C+B+E+A,1,H+LM+IJ+' +lat_0=63.390675'+UY+' +x_0=6200000'+Fq+C+B+E+A,2,D+' +lat_0=0.1 +lon_0=21.95 +k=1'+Bv+N+M+F+E+A,1,D+' +lat_0=0.1 +lon_0=24.95 +k=1 +x_0=1250000'+N+M+F+E+A,1,D+' +lat_0=0.1 +lon_0=27.95 +k=1 +x_0=2250000'+N+M+F+E+A,1,I+JN+o+R+E+A,1,I+JN+o+R+E+A,1,D+Gm+QQ+' +k=1 +x_0=615000 +y_0=810000'+Gn+Qg+E+A,3,H+Et+Eu+LT+NW+Rh+N+C+B+E+A,2,H+FC+OD+Dr+CR+OE+N+C+B+E+A,1,H+FC+OD+Dr+CR+OE+N+C+B+t+A,1,H+MW+FB+BB+Ea+a+N+C+B+E+A,1,H+MW+FB+BB+Ea+a+N+C+B+J+A,1,H+Dp+Dq+y+Ea+a+N+C+B+E+A,1,H+Dp+Dq+y+Ea+a+N+C+B+J+A,2,I+Ja+c+E+A,1,I+KA+c+E+A,1,I+Oq+c+E+A,1,I+Nq+X+E+A,1,I+PL+X+E+A,1,I+Nq+C+B+E+A,1,I+PL+C+B+E+A,1,I+KA+R+E+A,1,CU+Qi+aF+' +alpha=323.0257964666666'+Ph+' +x_0=804671'+N+KE+GZ+C+E+A,1,CU+Qi+Yz+aU+Ph+s+N+KE+If+C+E+A,1,Ck+' +lat_0=2.121679744444445 +lon_0=103.4279362361111 +x_0=-14810.562 +y_0=8758.32'+C+E+A,1,Ck+' +lat_0=2.682347636111111 +lon_0=101.9749050416667 +x_0=3673.785 +y_0=-4240.573'+C+E+A,1,Ck+' +lat_0=3.769388088888889 +lon_0=102.3682989833333 +x_0=-7368.228 +y_0=6485.858'+C+E+A,1,Ck+' +lat_0=3.68464905 +lon_0=101.3891079138889 +x_0=-34836.161 +y_0=56464.049'+C+E+A,1,Ck+' +lat_0=4.9762852 +lon_0=103.070275625 +x_0=19594.245 +y_0=3371.895'+C+E+A,1,Ck+' +lat_0=5.421517541666667 +lon_0=100.3443769638889 +x_0=-23.414 +y_0=62.283'+C+E+A,1,Ck+' +lat_0=5.964672713888889 +lon_0=100.6363711111111'+s+N+C+E+A,1,Ck+' +lat_0=4.859063022222222 +lon_0=100.8154105861111 +x_0=-1.769 +y_0=133454.779'+C+E+A,1,Ck+' +lat_0=5.972543658333334 +lon_0=102.2952416694444 +x_0=13227.851 +y_0=8739.894'+C+E+A,1,D+L+QR+' +k=1'+O+N+R+At+E+A,1,D+L+IG+' +k=1'+Eg+N+R+At+E+A,1,JU+PS+' +lat_ts=42'+s+N+M+F+E+A,1,D+L+Ry+' +k=1 +x_0=60500000'+N+M+F+E+A,1,D+L+Ry+' +k=1 +x_0=60500000'+N+M+G+E+A,1,I+KD+c+EU+E+A,1,I+JZ+c+EU+E+A,1,I+JM+c+EU+E+A,1,H+Qq+Li+JS+PZ+AV+aG+c+E+A,1,JU+HN+' +k=1'+s+N+S+E+A,1,D+L+KB+' +k=1'+Bo+N+Y+E+A,1,D+L+IH+' +k=1'+DP+N+Y+E+A,1,D+L+IH+' +k=1'+DP+N+Y+E+A,1,D+L+Gj+' +k=1'+Eg+N+Y+E+A,1,D+L+SZ+' +k=0.9992'+O+N+C+B+E+A,1,D+L+SZ+' +k=0.9992'+s+N+C+B+E+A,1,D+L+SZ+' +k=0.9992'+O+N+C+B+E+A,1,D+L+SZ+' +k=0.9992'+s+N+C+B+E+A,1,H+Et+Eu+LT+NW+Z+N+C+B+J+A,1,I+Mh+j+Fu+E+A,1,I+Mi+j+Fu+E+A,1,Ck+Vt+Vu+' +x_0=40243.57775604237 +y_0=19069.93351512578'+Ee+Ef+ML+A,1,He+Hr+HN+s+N+ZX+ZY+E+A,1,He+m+HN+s+N+ZX+ZY+E+A,1,'+proj=cea'+HN+' +lat_ts=30'+s+N+ZX+ZY+E+A,1,BP+Hr+' +lat_ts=70 +lon_0=-45 +k=1'+s+N+ZZ+Ri+E+A,1,BP+m+' +lat_ts=-70'+HN+' +k=1'+s+N+ZZ+Ri+E+A,1,BP+Hr+' +lat_ts=70 +lon_0=-45 +k=1'+s+N+S+E+A,1,D+' +lat_0=1.366666666666667 +lon_0=103.8333333333333 +k=1 +x_0=28001.642 +y_0=38744.572'+j+E+A,1,H+' +lat_1=18 +lat_2=24 +lat_0=21'+Im+O+Ae+T+Q+E+A,1,H+LM+Nh+' +lat_0=47.5'+Ig+u+Is+C+B+E+A,1,H+EB+EC+Fo+GG+AV+GJ+C+B+J+A,1,H+AY+ED+Fs+GG+AG+N+C+B+J+A,1,H+EE+EF+AQ+Fl+Au+N+C+B+J+A,1,H+EG+EH+f+CV+Au+Gt+C+B+J+A,1,D+CQ+DF+V+Gu+MN+C+B+J+A,1,D+CQ+DG+V+AG+Hh+C+B+J+A,1,D+CQ+DH+V+An+NE+C+B+J+A,1,D+BA+Gp+V+Bn+N+C+B+J+A,1,H+EB+EC+Fo+GG+AV+GJ+C+B+J+A,1,H+AY+ED+Fs+GG+AG+N+C+B+J+A,1,H+EE+EF+AQ+Fl+Au+N+C+B+J+A,1,H+EG+EH+f+CV+Au+Gt+C+B+J+A,1,D+CQ+DF+V+Gu+MN+C+B+J+A,1,D+CQ+DG+V+AG+Hh+C+B+J+A,1,D+CQ+DH+V+An+NE+C+B+J+A,1,D+BA+Gp+V+Bn+N+C+B+J+A,1,H+Dx+Dy+BC+IF+Au+N+C+B+J+A,1,H+Dz+Mq+EA+IF+Au+Gt+C+B+J+A,1,D+f+Cz+EQ+BF+N+C+B+J+A,1,D+f+DA+Am+MO+N+C+B+J+A,1,D+Fp+DI+AO+BF+N+C+B+J+A,1,D+EI+GE+Lb+JV+N+C+B+J+A,1,I+JM+c+Gg+E+A,1,I+Me+c+Gg+E+A,1,H+Dx+Dy+BC+IF+Au+N+C+B+J+A,1,H+Dz+Mq+EA+IF+Au+Gt+C+B+J+A,1,D+f+Cz+EQ+BF+N+C+B+J+A,1,D+f+DA+Am+MO+N+C+B+J+A,1,D+Fp+DI+AO+BF+N+C+B+J+A,1,D+EI+GE+Lb+JV+N+C+B+J+A,1,H+Ks+Kt+' +lat_0=50.797815'+WH+' +x_0=150328 +y_0=166262'+C+B+E+A,1,H+' +lat_1=18'+OX+Ld+' +k_0=1'+YL+' +y_0=650000'+j+B+E+A,1,I+Ik+j+B+E+A,1,I+IC+j+B+E+A,1,H+FS+FT+IY+Hg+Eb+N+C+B+J+A,1,H+OH+OI+OJ+Bi+Eb+N+C+B+J+A,1,H+CD+CE+' +lat_0=25.5'+Bi+Eb+N+C+B+J+A,2,H+OL+Ff+EJ+Ag+a+N+C+B+J+A,1,H+FS+FT+IY+Hg+Eb+N+C+B+J+A,1,H+OH+OI+OJ+Bi+Eb+N+C+B+J+A,1,H+Fd+Fe+AL+CS+a+N+C+B+J+A,1,H+OL+Ff+EJ+Ag+a+N+C+B+J+A,1,D+' +lat_0=-17 +lon_0=178.75 +k=0.99985'+Bd+LV+T+P+E+A,1,I+Ja+AU+BN+Nm+E+A,1,I+KA+AU+BN+Nm+E+A,1,D+YM+Rj+JE+O+N+C+B+E+A,1,D+YM+Rj+JE+O+N+C+B+E+A,1,D+IY+IV+Pc+h+N+C+B+E+A,1,D+Gm+OS+BG+a+N+C+B+E+A,1,DT+' +lat_1=55'+QY+Yu+Ms+s+N+C+B+E+A,1,CU+' +lat_0=57'+Ku+Kv+V+LX+EO+KE+GZ+C+B+E+A,1,D+Ft+YN+V+O+N+C+B+E+A,1,D+Ft+YO+V+O+N+C+B+E+A,1,D+Ft+ON+V+O+N+C+B+E+A,1,D+Ft+Ms+V+O+N+C+B+E+A,1,D+Ft+KI+V+O+N+C+B+E+A,1,D+Ft+YP+V+O+N+C+B+E+A,1,D+Ft+YQ+V+O+N+C+B+E+A,1,D+Ft+SW+V+O+N+C+B+E+A,1,H+Kw+Kx+UK+YR+BZ+N+C+B+E+A,1,D+Bl+Co+V+EX+N+C+B+E+A,1,D+Bl+Co+V+EX+N+C+B+t+A,1,D+Bl+Cn+V+EX+N+C+B+E+A,1,D+Bl+Cn+V+EX+N+C+B+t+A,1,D+Bl+Iv+BG+EX+N+C+B+E+A,1,D+Bl+Iv+BG+EX+N+C+B+t+A,1,H+Dx+Dy+BC+IF+u+N+C+B+E+A,1,H+Dx+Dy+BC+IF+Au+N+C+B+J+A,1,H+Dz+Mq+EA+IF+u+Is+C+B+E+A,1,H+Dz+Mq+EA+IF+Au+Gt+C+B+J+A,1,DT+Yy+SY+L+Mt+s+QZ+C+B+E+A,1,H+DW+Jn+y+HA+Bd+Ae+C+B+E+A,1,H+DW+Jn+y+HA+Ac+AD+C+B+J+A,1,H+DX+DY+AA+HA+Bd+Ae+C+B+E+A,1,H+DX+DY+AA+HA+Ac+AD+C+B+J+A,1,H+Ap+DZ+Ml+AJ+Bd+Ae+C+B+E+A,1,H+Ap+DZ+Ml+AJ+Ac+AD+C+B+J+A,1,H+LO+QS+Da+Mm+Bd+Ae+C+B+E+A,1,H+LO+QS+Da+Mm+Ac+AD+C+B+J+A,1,H+Db+Dc+Mn+Ir+Bd+Ae+C+B+E+A,1,H+Db+Dc+Mn+Ir+Ac+AD+C+B+J+A,1,H+Dd+De+Df+Iw+Bd+Ae+C+B+E+A,1,H+Dd+De+Df+Iw+Ac+AD+C+B+J+A,1,H+LP+LQ+CY+Ba+Fw+Fx+C+B+E+A,1,H+LP+LQ+CY+Ba+Bw+CL+C+B+J+A,1,H+Eh+Ei+y+Ba+Fw+Fx+C+B+E+A,1,H+Eh+Ei+y+Ba+Bw+CL+C+B+J+A,1,H+Ap+Dg+f+Ba+Fw+Fx+C+B+E+A,1,H+Ap+Dg+f+Ba+Bw+CL+C+B+J+A,1,H+Dh+Mo+Di+Jq+QG+QH+C+B+E+A,1,H+Dh+Mo+Di+Jq+MC+MD+C+B+J+A,1,D+Ch+Cp+Mp+h+N+C+B+E+A,1,D+Ch+Cp+Mp+AE+N+C+B+J+A,1,D+Aq+CR+Am+h+N+C+B+E+A,1,D+Aq+CR+Am+AE+N+C+B+J+A,1,DT+' +lat_1=24'+YG+' +lat_0=24'+NV+u+N+C+B+E+A,1,H+LR+Dj+QT+LS+a+N+C+B+E+A,1,H+LR+Dj+QT+LS+a+N+C+B+J+A,1,D+Aq+Ob+Am+h+N+C+B+E+A,1,D+Aq+Ob+Am+AE+N+C+B+J+A,1,D+Gm+Cq+V+h+N+C+B+E+A,1,D+Gm+Cq+V+AE+N+C+B+J+A,1,D+Gm+Cr+V+EW+N+C+B+E+A,1,D+Gm+Cr+V+CM+N+C+B+J+A,1,D+p+Jb+BJ+O+N+C+B+E+A,1,D+p+Jb+BJ+AF+N+C+B+J+A,1,D+p+Cs+BJ+h+N+C+B+E+A,1,D+p+Cs+BJ+AE+N+C+B+J+A,1,D+p+Ix+BG+CX+N+C+B+E+A,1,D+p+Ix+BG+ME+N+C+B+J+A,1,D+f+Cz+EQ+AI+N+C+B+E+A,1,D+f+Cz+EQ+BF+N+C+B+J+A,1,D+f+DA+Am+EW+N+C+B+E+A,1,D+f+DA+Am+MO+N+C+B+J+A,1,D+DM+DB+AO+BU+KJ+C+B+E+A,1,D+DM+DB+AO+MM+GI+C+B+J+A,1,D+DM+DC+AO+HT+KJ+C+B+E+A,1,D+DM+DC+AO+HT+GI+C+B+J+A,1,H+EB+EC+Fo+GG+AV+AH+C+B+E+A,1,H+EB+EC+Fo+GG+AV+GJ+C+B+J+A,1,H+AY+ED+Fs+GG+O+N+C+B+E+A,1,H+AY+ED+Fs+GG+AG+N+C+B+J+A,1,H+EE+EF+AQ+Fl+u+N+C+B+E+A,1,H+EE+EF+AQ+Fl+Au+N+C+B+J+A,1,H+EG+EH+f+CV+u+Is+C+B+E+A,1,H+EG+EH+f+CV+Au+Gt+C+B+J+A,1,H+Az+DV+DM+Jo+O+N+C+B+E+A,1,H+Az+DV+DM+Jo+AF+N+C+B+J+A,1,H+Fi+Fj+AB+EY+AV+AH+C+B+E+A,1,H+Fi+Fj+AB+EY+AV+CN+C+B+J+A,1,H+Ej+Ek+AB+EY+O+Ae+C+B+E+A,1,H+Ej+Ek+AB+EY+AF+AD+C+B+J+A,1,H+FS+FT+IY+Hg+BZ+N+C+B+E+A,1,H+FS+FT+IY+Hg+Eb+N+C+B+J+A,1,H+OH+OI+OJ+Bi+BZ+N+C+B+E+A,1,H+OH+OI+OJ+Bi+Eb+N+C+B+J+A,1,D+YM+Rj+JE+O+N+C+B+E+A,1,D+AL+Rf+JE+EW+N+C+B+E+A,1,D+BD+Rg+JE+AI+N+C+B+E+A,1,D+AK+HJ+V+AI+N+C+B+E+A,1,D+BD+DD+AO+HT+N+C+B+E+A,1,H+MU+Nz+AA+Ld+u+N+C+B+E+A,1,H+AY+CF+Br+BI+AG+GJ+C+B+J+A,1,D+Kn+Sf+AO+e+N+i+GB+J+A,1,D+Ko+KO+AO+e+N+i+GB+J+A,1,D+GV+KI+Jl+e+N+i+GB+J+A,1,D+Kp+Sg+Jl+e+N+i+GB+J+A,1,D+Kq+KP+' +k=1'+e+N+i+GB+J+A,1,H+JF+CG+AQ+BI+AG+NF+C+B+J+A,1,H+JG+CH+f+BI+AG+Fq+C+B+J+A,1,H+AY+CF+Br+BI+AG+GJ+C+B+J+A,1,H+JF+CG+AQ+BI+AG+NF+C+B+J+A,1,H+JG+CH+f+BI+AG+Fq+C+B+J+A,1,He+Hr+Ry+s+N+S+E+A,1,He+Hr+ON+s+N+S+E+A,1,He+Hr+CS+s+N+S+E+A,1,He+Hr+' +lon_0=-40'+s+N+S+E+A,1,He+Hr+Lu+s+N+S+E+A,1,He+Hr+Hq+s+N+S+E+A,1,DT+' +lat_1=-18'+ZT+L+Il+s+N+C+B+E+A,1,DT+WI+' +lat_2=68 +lat_0=59 +lon_0=-132.5'+O+Ae+C+B+E+A,1,DT+WI+' +lat_2=68 +lat_0=59 +lon_0=-132.5'+O+Ae+C+B+E+A,1,H+' +lat_1=62 +lat_2=70'+L+' +lon_0=-112'+s+N+C+B+E+A,1,H+' +lat_1=62 +lat_2=70'+L+' +lon_0=-112'+s+N+C+B+E+A,1,H+MU+Nz+AA+Ld+MF+N+C+B+J+A,1,H+Em+En+Ip+IL+O+N+C+B+E+A,1,H+Em+En+Ip+IL+AF+N+C+B+J+A,1,H+El+Dk+Ip+GE+h+Mk+C+B+E+A,1,H+El+Dk+Ip+GE+AE+Mk+C+B+J+A,1,H+OA+Er+Es+BE+Pk+N+C+B+E+A,1,H+OA+Er+Es+BE+MH+N+C+B+t+A,1,H+Eo+Ep+Eq+Jh+Tl+N+C+B+E+A,1,H+Eo+Ep+Eq+Jh+MG+N+C+B+t+A,1,CU+Kr+' +lonc=-86'+QI+AP+QJ+PY+KE+QK+C+B+E+A,1,H+Bq+OB+Fo+BE+LU+N+C+B+E+A,1,H+Bq+OB+Fo+BE+OT+N+C+B+t+A,1,H+Ma+FW+IP+Js+CX+EK+C+B+E+A,1,H+FU+FV+Iq+DE+CX+EK+C+B+E+A,1,H+FX+FY+Nj+Na+CX+EK+C+B+E+A,1,D+Hj+Ct+CP+AI+N+C+B+E+A,1,D+Hj+Ct+CP+BF+N+C+B+J+A,1,D+Hj+Bx+CP+EW+N+C+B+E+A,1,D+Hj+Bx+CP+CM+N+C+B+J+A,1,D+Cd+Hg+BG+O+N+C+B+E+A,1,D+Cd+RS+BG+Bv+N+C+B+E+A,1,D+Id+RT+Am+YC+N+C+B+E+A,1,H+LM+RK+MV+IS+a+N+C+B+E+A,1,H+LM+RK+MV+IS+DR+N+C+B+t+A,1,H+JT+Jn+FZ+CS+O+N+C+B+E+A,1,D+CQ+DG+V+O+Hh+C+B+E+A,1,D+CQ+DG+V+AG+Hh+C+B+J+A,1,D+CQ+DF+V+h+Tm+C+B+E+A,1,D+CQ+DF+V+Gu+MN+C+B+J+A,1,D+CQ+DH+V+CX+LV+C+B+E+A,1,D+CQ+DH+V+An+NE+C+B+J+A,1,D+Fp+DI+AO+AI+N+C+B+E+A,1,D+Fp+DI+AO+BF+N+C+B+J+A,1,D+BA+Gp+V+Bn+N+C+B+E+A,1,D+BA+Gp+V+Bn+N+C+B+J+A,1,D+Bl+Iy+V+O+N+C+B+E+A,1,D+Bl+Iy+V+AF+N+C+B+J+A,1,D+Bl+Cu+Hm+OC+N+C+B+E+A,1,D+Bl+Cu+Hm+OC+N+C+B+J+A,1,D+Bl+Cv+Iz+YD+N+C+B+E+A,1,D+Bl+Cv+Iz+MI+N+C+B+J+A,1,D+Fs+Cw+Ad+Bv+N+C+B+E+A,1,D+Fs+Cw+Ad+MJ+N+C+B+J+A,1,D+BA+Gp+V+Bn+N+C+B+E+A,1,D+BA+Gp+V+Bn+N+C+B+J+A,1,H+Dl+Dm+BB+Oc+AI+N+C+B+E+A,1,H+Dl+Dm+BB+Oc+BF+N+C+B+J+A,1,D+Fs+Cx+Ad+Qo+N+C+B+E+A,1,D+Fs+Cx+Ad+MK+N+C+B+J+A,1,H+Et+Eu+LT+NW+Rh+N+C+B+E+A,1,H+Et+Eu+LT+NW+Z+N+C+B+J+A,1,H+BH+Ev+Ib+EZ+a+N+C+B+E+A,1,H+BH+Ev+Ib+EZ+DR+N+C+B+t+A,1,H+Ew+Ex+Be+EZ+a+N+C+B+E+A,1,H+Ew+Ex+Be+EZ+DR+N+C+B+t+A,1,H+OK+Fa+BY+ET+a+N+C+B+E+A,1,H+Fb+Fc+Ch+ET+a+N+C+B+E+A,1,H+Dn+Ey+QU+Fl+a+N+C+B+E+A,1,H+Dn+Ey+QU+Fl+a+N+C+B+J+A,1,H+Ez+FA+Do+Fl+a+N+C+B+E+A,1,H+Ez+FA+Do+Fl+a+N+C+B+J+A,1,H+JT+Hl+GH+AJ+u+N+C+B+E+A,1,H+JT+Hl+GH+AJ+Lc+N+C+B+t+A,1,H+PP+CZ+AK+AJ+Ci+N+C+B+E+A,1,H+PP+CZ+AK+AJ+KL+N+C+B+t+A,1,H+PQ+Ca+p+AJ+AV+N+C+B+E+A,1,H+PQ+Ca+p+AJ+KM+N+C+B+t+A,1,H+MW+FB+BB+Ea+a+N+C+B+E+A,1,H+MW+FB+BB+Ea+a+N+C+B+J+A,1,H+Dp+Dq+y+Ea+a+N+C+B+E+A,1,H+Dp+Dq+y+Ea+a+N+C+B+J+A,1,D+EI+GE+Lb+BU+N+C+B+E+A,1,D+EI+GE+Lb+JV+N+C+B+J+A,1,H+FC+OD+Dr+CR+OE+N+C+B+E+A,1,H+FC+OD+Dr+CR+OE+N+C+B+t+A,1,H+Fd+Fe+AL+CS+a+N+C+B+E+A,1,H+Fd+Fe+AL+CS+a+N+C+B+J+A,1,H+OL+Ff+EJ+Ag+a+N+C+B+E+A,1,H+OL+Ff+EJ+Ag+a+N+C+B+J+A,1,H+FD+MX+BC+MQ+a+N+C+B+E+A,1,H+FD+MX+BC+MQ+a+N+C+B+J+A,1,H+FH+FI+Cb+Ag+EW+Fq+C+B+E+A,1,H+FH+FI+Cb+Ag+CM+Fq+C+B+J+A,1,DT+OM+RO+OX+CS+AV+Hh+C+B+E+A,1,H+OM+RO+OX+CS+AV+Ju+C+B+E+A,1,H+FE+MY+QV+Jr+h+AH+C+B+E+A,1,H+FE+MY+QV+Jr+AE+CN+C+B+J+A,1,H+FF+FG+Ds+CV+a+Cl+C+B+E+A,1,H+FF+FG+Ds+CV+a+Gr+C+B+J+A,1,H+CD+CE+Cc+CV+AI+Ju+C+B+E+A,1,H+CD+CE+Cc+CV+BF+Nf+C+B+J+A,1,H+FJ+FK+Dt+Ji+a+LV+C+B+E+A,1,H+FJ+FK+Dt+Ji+a+Ne+C+B+J+A,1,H+JF+CG+AQ+BI+O+Cl+C+B+E+A,1,H+JF+CG+AQ+BI+Gd+RY+C+B+t+A,1,H+JF+CG+AQ+BI+AG+NF+C+B+J+A,1,H+AY+CF+Br+BI+O+AH+C+B+E+A,1,H+AY+CF+Br+BI+Gd+Pw+C+B+t+A,1,H+AY+CF+Br+BI+AG+GJ+C+B+J+A,1,H+JG+CH+f+BI+O+Fq+C+B+E+A,1,H+JG+CH+f+BI+Gd+RZ+C+B+t+A,1,H+JG+CH+f+BI+AG+Fq+C+B+J+A,1,D+Fp+LW+JA+O+N+C+B+E+A,1,H+OF+FL+AA+GF+Bo+Cl+C+B+E+A,1,H+OF+FL+AA+GF+Gs+Gr+C+B+J+A,1,H+Az+Du+AB+GF+Bo+AH+C+B+E+A,1,H+Az+Du+AB+GF+Gs+CN+C+B+J+A,1,H+BH+OG+Ib+Cy+O+N+C+B+E+A,1,H+BH+OG+Ib+Cy+AF+N+C+B+J+A,1,H+FM+FN+Dv+AJ+O+N+C+B+E+A,1,H+FM+FN+Dv+AJ+AF+N+C+B+J+A,1,H+Mb+RN+Mr+Ga+a+N+C+B+E+A,1,H+Fg+Fh+QX+CR+a+N+C+B+E+A,1,H+Jc+MZ+AL+Bu+a+N+C+B+E+A,1,H+Jc+MZ+AL+Bu+a+N+C+B+J+A,1,H+FO+FP+Dw+Bu+a+N+C+B+E+A,1,H+FO+FP+Dw+Bu+a+N+C+B+J+A,1,H+FQ+FR+PR+Bu+a+N+C+B+E+A,1,H+FQ+FR+PR+Bu+a+N+C+B+J+A,1,D+L+Bu+AP+YF+Sh+C+B+E+A,1,D+CA+DJ+Ad+h+N+C+B+E+A,1,D+CA+DK+Ad+u+EK+C+B+E+A,1,D+CA+JB+Ad+a+N+C+B+E+A,1,D+CA+DL+Ad+CX+EK+C+B+E+A,1,I+Nq+C+B+E+A,1,I+PL+C+B+E+A,1,I+SK+C+B+E+A,1,I+TV+C+B+E+A,1,I+Xz+C+B+E+A,1,I+TY+C+B+E+A,1,I+RG+C+B+E+A,1,I+Ro+C+B+E+A,1,I+RH+C+B+E+A,1,I+TW+C+B+E+A,1,I+TX+C+B+E+A,1,I+QE+C+B+E+A,1,I+Ns+C+B+E+A,1,I+Nt+C+B+E+A,1,I+Nu+C+B+E+A,1,I+Nw+C+B+E+A,1,I+NP+C+B+E+A,1,I+NQ+C+B+E+A,1,I+Ik+C+B+E+A,1,I+IC+C+B+E+A,1,I+Hi+C+B+E+A,1,D+' +lat_0=-21.11666666666667 +lon_0=55.53333333333333 +k=1 +x_0=160000'+Rz+R+SJ+E+A,1,H+OK+Fa+BY+ET+a+N+C+B+J+A,1,H+Fb+Fc+Ch+ET+a+N+C+B+J+A,1,D+CA+DJ+Ad+Gu+N+C+B+J+A,1,D+CA+DK+Ad+Au+Ao+C+B+J+A,1,D+CA+JB+Ad+a+N+C+B+J+A,1,D+CA+DL+Ad+An+Ao+C+B+J+A,1,H+OK+Fa+BY+ET+a+N+C+B+J+A,1,H+Fb+Fc+Ch+ET+a+N+C+B+J+A,1,D+CA+DJ+Ad+Gu+N+C+B+J+A,1,D+CA+DK+Ad+Au+Ao+C+B+J+A,1,D+CA+JB+Ad+a+N+C+B+J+A,1,D+CA+DL+Ad+An+Ao+C+B+J+A,1,I+QE+C+B+E+A,1,I+Ns+C+B+E+A,1,I+Nt+C+B+E+A,1,I+Nu+C+B+E+A,1,I+Nw+C+B+E+A,1,I+NP+C+B+E+A,1,I+NQ+C+B+E+A,1,I+Ik+C+B+E+A,1,I+IC+C+B+E+A,1,I+Hi+C+B+E+A,1,I+TY+C+B+E+A,1,I+RG+C+B+E+A,2,H+OK+Fa+BY+ET+a+N+C+B+J+A,1,H+Fb+Fc+Ch+ET+a+N+C+B+J+A,1,D+CA+DJ+Ad+Gu+N+C+B+J+A,1,D+CA+DK+Ad+Au+Ao+C+B+J+A,1,D+CA+JB+Ad+a+N+C+B+J+A,1,D+CA+DL+Ad+An+Ao+C+B+J+A,1,D+GV+KI+Jl+AG+N+C+B+J+A,1,D+GV+KI+Jl+AG+N+C+B+J+A,1,I+Io+C+B+E+A,1,H+' +lat_1=-54 +lat_2=-54.75 +lat_0=-55 +lon_0=-37'+s+N+S+E+A,1,D+' +lat_0=39.66825833333333 +lon_0=-8.133108333333334 +k=1'+s+N+C+B+E+A,1,D+Za+Si+' +k=1'+u+CO+C+B+E+A,1,D+L+YE+V+O+N+C+B+E+A,1,H+' +lat_1=45.91666666666666 +lat_2=43.08333333333334'+L+YE+s+N+C+B+E+A,1,I+KC+C+B+E+A,1,I+NR+C+B+E+A,1,I+Gz+i+TQ+E+A,1,D+' +lat_0=32 +lon_0=-64.75 +k=1 +x_0=550000'+EK+j+B+E+A,1,D+L+KK+V+s+N+X+E+A,1,D+L+Jb+V+s+N+X+E+A,1,D+L+Lj+V+s+N+X+E+A,2,D+L+KK+V+s+N+C+B+E+A,1,D+L+Jb+V+s+N+C+B+E+A,1,D+L+Lj+V+s+N+C+B+E+A,2,D+L+KK+V+s+N+C+B+E+A,1,D+L+Jb+V+s+N+C+B+E+A,1,D+L+Lj+V+s+N+C+B+E+A,2,D+' +lat_0=-25.06855261111111 +lon_0=-130.1129671111111 +k=1 +x_0=14200 +y_0=15500'+j+B+E+A,1,I+TX+o+R+Ta+E+A,4,D+L+ZW+' +k=1'+Bo+Ak+C+B+E+A,1,D+L+' +lon_0=169 +k=1'+Bo+Ak+C+B+E+A,1,D+L+' +lon_0=179 +k=1'+Bo+Ak+C+B+E+A,1,D+L+' +lon_0=-178 +k=1'+Bo+Ak+C+B+E+A,2,D+L+Si+' +k=1'+Bo+Ak+C+B+E+A,1,D+L+Gj+V+O+EO+C+B+E+A,1,H+' +lat_1=23 +lat_2=21.7 +lat_0=22.35'+CR+O+' +y_0=280296.016'+X+E+A,1,H+' +lat_1=21.3 +lat_2=20.13333333333333 +lat_0=20.71666666666667 +lon_0=-76.83333333333333'+O+' +y_0=229126.939'+X+E+A,1,H+Yv+Nh+IZ+' +lon_0=-70'+CX+N+X+E+A,1,H+Yv+Nh+IZ+' +lon_0=-70'+CX+N+C+B+E+A,1,H+Yv+Nh+IZ+' +lon_0=-70'+CX+N+C+B+E+A,1,D+L+Mt+V+s+N+X+E+A,1,D+L+Mt+V+s+N+C+B+E+A,1,D+L+Mt+V+s+N+C+B+E+A,10,H+Ks+Kt+' +lat_0=50.797815'+WH+' +x_0=649328 +y_0=665262'+C+B+E+A,2,D+Li+Sj+Tn+O+Pm+C+B+E+A,1,D+Li+Sj+Tn+O+Pm+C+B+E+A,1,D+Li+Sj+Tn+O+Pm+C+B+E+A,3,K+Y+' +towgs84=595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'+A,2,K+x+A,3,K+C+B+A,1,D+L+ZU+V+Bv+N+C+B+E+A,1,D+L+ZV+V+Bv+N+C+B+E+A,1,D+L+ZU+V+Bv+N+x+E+A,1,D+L+ZV+V+Bv+N+x+E+A,1,I+Mg+R+Rq+E+A,3,JU+Oe+' +k=1'+s+N+S+E+A,1,D+L+KB+' +k=1'+Ci+N+M+b+E+A,1,D+L+KB+' +k=1'+Ci+N+M+Ar+E+A,1,D+L+Gj+' +k=1'+Bo+N+M+Ar+E+A,1,D+L+Gl+' +k=1'+DP+N+M+Ar+E+A,1,D+L+KB+' +k=1'+Bo+N+M+b+E+A,1,D+L+IH+' +k=1'+DP+N+M+b+E+A,1,D+L+HO+' +k=1'+MT+N+M+b+E+A,1,D+L+Ia+' +k=1'+LY+N+M+b+E+A,1,D+L+QR+' +k=1'+Jt+N+M+Ar+E+A,3,GU+' +lat_0=46'+RJ+Rv+O+Ae+M+b+E+A,1,D+L+' +lon_0=11.30625 +k=1.000006 +x_0=1500025.141 +y_0=-667.282'+C+B+E+A,1,D+L+' +lon_0=13.55626666666667 +k=1.0000058 +x_0=1500044.695 +y_0=-667.13'+C+B+E+A,1,D+L+' +lon_0=15.80628452944445 +k=1.00000561024 +x_0=1500064.274 +y_0=-667.711'+C+B+E+A,1,D+L+' +lon_0=18.0563 +k=1.0000054 +x_0=1500083.521 +y_0=-668.8440000000001'+C+B+E+A,1,D+L+' +lon_0=20.30631666666667 +k=1.0000052 +x_0=1500102.765 +y_0=-670.706'+C+B+E+A,1,D+L+' +lon_0=22.55633333333333 +k=1.0000049 +x_0=1500121.846 +y_0=-672.557'+C+B+E+A,1,H+' +lat_1=-37.5 +lat_2=-44.5 +lat_0=-41 +lon_0=173'+aH+' +y_0=7000000'+C+B+E+A,1,H+Ai+Aj+m+' +lon_0=157'+O+N+C+B+E+A,2,D+L+' +lon_0=18.05787 +k=0.99999506 +x_0=100182.7406 +y_0=-6500620.1207'+C+B+E+A,3,JU+' +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0'+N+' +k=1.0'+E+' +nadgrids=@null +wktext '+A,16,D+L+RI+' +k=1'+Ht+N+C+B+E+A,1,D+L+UI+' +k=1'+HV+N+C+B+E+A,1,D+L+Gl+' +k=1'+Hw+N+C+B+E+A,1,D+L+Yx+' +k=1'+HW+N+C+B+E+A,1,D+L+SP+' +k=1'+Hx+N+C+B+E+A,1,D+L+II+' +k=1'+La+N+C+B+E+A,1,D+L+RJ+' +k=1'+Hy+N+C+B+E+A,1,D+L+UJ+' +k=1'+Hz+N+C+B+E+A,1,D+L+HO+' +k=1'+IA+N+C+B+E+A,1,D+L+RP+' +k=1'+IB+N+C+B+E+A,1,D+L+' +lon_0=29 +k=1'+Gx+N+C+B+E+A,1,D+L+Ia+' +k=1'+IT+N+C+B+E+A,1,D+L+QQ+' +k=1'+Gc+N+C+B+E+A,4,K+C+B+A,1,I+KD+C+B+E+A,1,I+JZ+C+B+E+A,1,I+JM+C+B+E+A,1,D+WJ+' +lon_0=46.5 +k=0.9994'+CX+N+R+n+E+A,13,K+Y+Aw+A,6,D+L+Gj+V+O+EO+Y+Aw+E+A,8,I+Gz+i+Je+E+A,22,H+' +lat_1=41.25 +lat_2=42.75'+PR+Or+Jv+Tj+C+B+E+A,1,H+' +lat_1=42.25 +lat_2=43.75'+Nj+Or+Jv+' +y_0=2200000'+C+B+E+A,1,H+' +lat_1=43.25 +lat_2=44.75'+IZ+Or+Jv+' +y_0=3200000'+C+B+E+A,1,H+' +lat_1=44.25 +lat_2=45.75'+IP+Or+Jv+' +y_0=4200000'+C+B+E+A,1,H+' +lat_1=45.25 +lat_2=46.75 +lat_0=46'+Or+Jv+' +y_0=5200000'+C+B+E+A,1,H+aI+' +lat_2=47.75'+Ib+Or+Jv+' +y_0=6200000'+C+B+E+A,1,H+' +lat_1=47.25 +lat_2=48.75 +lat_0=48'+Or+Jv+' +y_0=7200000'+C+B+E+A,1,H+' +lat_1=48.25 +lat_2=49.75 +lat_0=49'+Or+Jv+' +y_0=8200000'+C+B+E+A,1,H+' +lat_1=49.25 +lat_2=50.75'+Yu+Or+Jv+' +y_0=9200000'+C+B+E+A,18,H+' +lat_1=37'+YS+GM+Ga+s+N+C+B+E+A,1,H+' +lat_1=37'+YS+GM+Ga+s+N+C+B+E+A,1,H+' +lat_1=37'+YS+GM+Ga+s+N+C+B+E+A,6,BP+m+' +lat_ts=-70'+HN+' +k=1'+s+N+S+E+A,2,H+LM+IJ+' +lat_0=49 +lon_0=-95'+s+N+C+B+E+A,1,H+LM+IJ+' +lat_0=49 +lon_0=-95'+s+N+C+B+E+A,7,D+ZA+Ia+' +k=1'+h+Ae+i+CW+E+A,1,D+ZA+RP+' +k=1'+h+Ae+i+CW+E+A,1,D+ZA+UJ+' +k=1'+h+Ae+i+CW+E+A,1,D+ZA+II+' +k=1'+h+Ae+i+CW+E+A,2,H+GW+GX+GY+GA+e+N+i+Je+J+A,1,H+GW+GX+GY+GA+e+Pv+i+Je+J+A,2,JU+' +lon_0=100 +lat_ts=-41'+s+N+S+E+A,1,BP+Hr+' +lat_ts=71'+HN+' +k=1'+s+N+S+E+A,1,BP+Hr+' +lat_ts=75'+HN+' +k=1'+s+N+S+E+A,1,D+L+' +lon_0=55.33333333333334 +k=1'+O+N+S+E+A,4,K+PV+A,1,K+Ok+A,1,K+x+A,1,K+Y+A,1,K+Hn+EL+A,1,K+HB+A,1,K+Ee+Ef+A,1,K+i+A,2,K+Nc+Nd+A,1,K+AU+BN+A,1,K+c+A,1,K+Bc+BS+A,1,K+AU+' +b=6356514.996941779'+A,1,K+By+Ay+A,1,K+Lo+A,2,K+GL+Bz+A,1,K+C+A,1,K+Gn+A,1,K+IR+Bh+A,1,K+R+A,1,K+C+B+A,0,K+C+B+A,1,K+M+A,1,K+aJ+A,1,D+L+' +lon_0=28.4 +k=0.9999400000000001'+h+EO+C+B+E+A,1,K+' +a=6376523'+RA+A,1,K+Zx+Qy+A,1,K+Qj+Ho+A,1,K+j+A,1,K+j+A,1,K+' +a=6378136.2 +b=6356751.516927429'+A,1,K+' +a=6378136.3 +b=6356751.616592146'+A,1,K+RB+RC+A,2,K+aK+A,1,I+Ki+S+E+A,1,I+Mf+S+E+A,3,K+Pd+Gq+A,1,K+HK+Gv+A,1,K+T+A,1,K+Lp+Hp+A,1,K+Go+CT+A,1,K+C+B+A,1,K+' +a=6371007 +b=6371007'+A,1,D+L+IH+V+O+Ak+C+B+E+A,1,D+L+' +lon_0=14'+V+O+Ak+C+B+E+A,1,D+L+' +lon_0=16'+V+O+Ak+C+B+E+A,1,D+L+QR+V+O+Ak+C+B+E+A,1,K+' +a=6370997 +b=6370997'+A,1,K+ZX+ZY+A,1,K+ZZ+Ri+A,2,D+L+UI+V+O+Ak+C+B+E+A,1,D+L+Yx+V+O+Ak+C+B+E+A,1,D+L+II+V+O+Ak+C+B+E+A,1,D+L+UJ+V+O+Ak+C+B+E+A,1,D+L+RP+V+O+Ak+C+B+E+A,1,I+KC+o+C+B+E+A,1,I+NR+o+C+B+E+A,1,I+Ki+o+C+B+E+A,8,I+MB+o+R+TF+E+A,4,K+C+B+A,6,K+C+B+A,1,I+SL+C+B+E+A,1,I+Ja+C+B+E+A,4,'+proj=eqc +lat_ts=0'+L+HN+s+N+S+E+A,1,'+proj=eqc +lat_ts=0'+L+HN+s+N+' +a=6371007 +b=6371007'+E+A,5,D+L+KB+JE+h+EO+C+B+E+A,1,D+L+Lu+JE+u+EO+C+B+E+A,1,D+L+' +lon_0=11.75'+JE+a+EO+C+B+E+A,1,D+L+Gj+' +k=1'+CX+EO+C+B+E+A,24,K+Y+A,1,K+C+Qb+A,1,K+Pd+Gq+A,1,K+R+At+A,1,K+Y+BW+A,3,K+i+HF+A,1,K+i+A,1,K+i+A,1,K+j+KR+A,1,K+By+Ay+JP+A,1,K+c+QC+A,1,K+C+Lw+A,1,K+c+Gg+A,1,K+i+GB+A,1,K+i+A,1,K+i+A,1,K+i+A,1,K+i+Je+A,2,K+C+UC+A,1,K+c+JO+A,1,K+c+IE+A,1,K+By+Ay+JQ+A,1,K+Lp+Hp+GQ+A,1,K+Go+CT+BT+A,1,K+M+HG+A,1,K+j+B+A,1,K+Y+Gf+A,1,K+Y+Py+A,1,K+C+B+A,1,K+C+B+A,1,K+R+Pz+A,1,K+R+Gy+A,1,K+AU+BN+Nm+A,1,K+Y+Gh+A,1,K+Ee+Ef+A,1,K+R+QA+A,1,K+R+v+A,1,K+R+A,1,K+R+SD+A,1,K+Y+A,1,K+j+B+A,1,K+M+NK+A,1,K+R+TM+A,1,K+j+B+A,1,K+C+B+A,1,K+Qj+Ho+NI+A,1,K+i+TC+A,1,K+C+B+A,1,K+C+B+A,2,K+C+B+A,1,K+Qj+Ho+A,1,K+c+OW+A,1,K+C+B+A,2,K+M+Ar+A,1,K+M+b+A,1,K+C+B+A,1,K+R+Jx+A,1,K+R+Sw+A,1,K+R+Sx+A,1,K+R+TN+A,4,K+PV+Bb+A,1,K+C+B+A,1,K+C+B+A,1,K+M+A,1,K+R+Qe+A,1,K+AU+BN+RD+A,1,K+R+NG+A,1,K+R+' +towgs84=105,326,-102.5,0,0,0.814,-0.6'+A,1,K+R+' +towgs84=-45,417,-3.5,0,0,0.814,-0.6'+A,1,K+c+A,1,K+c+A,1,K+R+A,1,K+M+G+A,1,K+c+HX+A,1,K+x+r+A,1,K+x+CB+A,1,K+R+Cm+A,1,K+M+NL+A,1,K+AU+BN+A,1,K+R+EV+A,1,K+R+Ec+A,1,K+Bc+BS+In+A,1,K+c+ER+A,1,K+Y+Cj+A,1,K+c+Jw+A,1,K+AU+BN+Sy+A,1,K+M+U+A,1,K+R+A,1,K+i+TQ+A,1,D+L+Lf+AP+k+N+C+B+J+A,0,D+L+Lf+AP+k+N+C+B+J+A,1,K+R+ES+A,1,K+Y+' +towgs84=-384,664,-48,0,0,0,0'+A,1,K+c+GO+A,1,K+R+Bs+A,1,K+Bc+BS+Ax+A,1,K+AU+BN+Gi+A,1,K+R+TF+A,1,K+R+GR+A,2,K+AU+BN+HI+A,2,K+Gn+HY+A,1,K+R+n+A,1,K+R+' +towgs84=-83.11,-97.38,-117.22,0.00569291,-0.0446976,0.0442851,0.1218'+A,1,K+c+NM+A,4,K+R+Rq+A,1,K+aK+RE+A,1,K+IR+Bh+Av+A,1,K+By+Ay+JR+A,1,K+By+Ay+NN+A,1,K+RB+RC+A,1,K+i+TG+A,1,K+HK+Gv+A,1,K+By+Ay+Tb+A,1,K+GL+Bz+BV+A,1,K+c+Qh+A,1,K+R+Hc+A,1,K+R+AX+A,1,K+R+A,1,K+c+TR+A,1,K+c+' +towgs84=-90,40,88,0,0,0,0'+A,1,K+AU+BN+A,1,K+i+GC+A,1,K+R+OV+A,1,K+R+' +towgs84=-333,-222,114,0,0,0,0'+A,1,K+c+' +towgs84=41,-220,-134,0,0,0,0'+A,1,K+Y+HZ+A,1,K+C+B+A,1,K+R+Qd+A,2,K+AU+BN+IO+A,1,K+Y+Tc+A,1,K+c+GS+A,2,K+R+CK+A,1,K+AU+BN+NO+A,1,K+X+A,2,K+C+B+A,1,K+c+DO+A,1,K+R+TS+A,1,K+R+W+A,1,K+Hn+EL+Aa+A,1,K+R+JL+A,1,K+AU+BN+Bk+A,1,K+aJ+A,1,K+PV+Lx+A,1,K+PV+A,1,K+PV+A,1,K+Y+A,1,K+Nc+Nd+DS+A,1,K+AU+BN+TH+A,1,K+C+B+A,1,K+M+F+A,1,K+R+QO+A,1,K+Gn+A,2,K+R+A,1,K+Y+Fv+A,3,K+R+Nn+A,1,K+HB+Bt+A,2,K+Y+A,2,K+R+HD+A,1,K+Lo+GD+A,1,K+Ok+Bb+A,1,K+Ok+Bb+A,1,K+Y+g+A,1,K+Ee+Ef+JK+A,1,K+Gn+A,1,K+AU+BN+JC+A,2,K+Y+A,1,K+c+Af+A,1,K+Y+A,1,K+R+' +towgs84=-155,171,37,0,0,0,0'+A,1,K+AU+BN+A,1,K+R+HE+A,1,K+Y+z+A,1,K+R+GP+A,1,K+Y+AC+A,1,K+AU+BN+No+A,1,K+R+QP+A,2,K+j+MR+A,1,K+C+Rr+A,3,K+T+P+A,2,K+T+Q+A,2,K+S+A,64,Ck+' +lat_0=2.042583333333333 +lon_0=103.5627583333333'+s+N+GL+Bz+BV+E+A,1,Ck+' +lat_0=2.712283333333334 +lon_0=101.9411666666667 +x_0=-242.005 +y_0=-948.547'+GL+Bz+BV+E+A,1,Ck+' +lat_0=3.710972222222222 +lon_0=102.4361777777778'+s+N+GL+Bz+BV+E+A,1,Ck+' +lat_0=3.680344444444444 +lon_0=101.5082444444444 +x_0=-21759.438 +y_0=55960.906'+GL+Bz+BV+E+A,1,Ck+' +lat_0=4.946141666666667 +lon_0=102.8952083333333'+s+N+GL+Bz+BV+E+A,1,Ck+' +lat_0=5.421325 +lon_0=100.3458694444444'+s+N+GL+Bz+BV+E+A,1,Ck+' +lat_0=5.965147222222223 +lon_0=100.6375944444444'+s+N+GL+Bz+BV+E+A,1,Ck+' +lat_0=4.859380555555555 +lon_0=100.8167666666667'+s+' +y_0=133453.669'+GL+Bz+BV+E+A,1,Ck+' +lat_0=5.893922222222222 +lon_0=102.1772916666667'+s+N+GL+Bz+BV+E+A,1,D+L+Lf+AP+k+N+X+J+A,1,D+L+KG+AP+k+N+X+J+A,1,D+L+KH+AP+k+N+X+J+A,1,D+L+Lh+AP+k+N+X+J+A,1,D+L+SX+AP+k+N+X+J+A,1,D+L+' +lon_0=-159'+AP+k+N+X+J+A,0,D+L+' +lon_0=-159'+AP+k+N+X+J+A,1,D+L+YJ+AP+k+N+X+J+A,1,D+L+Qr+AP+k+N+X+J+A,1,D+L+' +lon_0=-141'+AP+k+N+X+J+A,1,D+L+YK+AP+k+N+X+J+A,1,D+L+YT+AP+k+N+X+J+A,1,D+L+' +lon_0=-123'+AP+k+N+X+J+A,1,D+L+Lj+AP+k+N+X+J+A,1,D+L+KK+AP+k+N+X+J+A,1,D+L+' +lon_0=-105'+AP+k+N+X+J+A,1,D+' +lat_0=13.5 +lon_0=144.75 +k=1'+BU+IK+C+B+E+A,1,H+' +lat_1=-6.5 +lat_2=-11.5'+ZA+UJ+O+Ae+i+CW+E+A,2,D+L+Gl+' +k=1'+IM+N+M+Ar+E+A,1,D+L+UR+AP+k+N+X+J+A,1,D+L+MP+AP+k+N+X+J+A,1,D+L+KG+AP+k+N+C+B+J+A,1,D+L+KH+AP+k+N+C+B+J+A,1,D+L+Lh+AP+k+N+C+B+J+A,1,D+L+SX+AP+k+N+C+B+J+A,1,D+L+' +lon_0=-159'+AP+k+N+C+B+J+A,1,D+L+YJ+AP+k+N+C+B+J+A,1,D+L+Qr+AP+k+N+C+B+J+A,1,D+L+' +lon_0=-141'+AP+k+N+C+B+J+A,1,D+L+YK+AP+k+N+C+B+J+A,1,D+L+YT+AP+k+N+C+B+J+A,1,D+L+' +lon_0=-123'+AP+k+N+C+B+J+A,1,D+L+Lj+AP+k+N+C+B+J+A,1,D+L+KK+AP+k+N+C+B+J+A,1,D+L+' +lon_0=-105'+AP+k+N+C+B+J+A,1,D+L+II+' +k=1'+MS+N+M+Ar+E+A,3,H+GW+GX+GY+GA+h+IK+C+B+E+A,1,D+L+UR+AP+k+N+C+B+J+A,1,D+L+MP+AP+k+N+C+B+J+A,16,H+Dp+Dq+y+Ea+Z+N+X+J+A,1,H+Dl+Dm+CA+Oc+Z+Pv+X+J+A,1,H+Fd+Fe+AL+CS+a+N+C+B+J+A,5,H+' +lat_1=-18'+ZT+' +lat_0=-27'+Il+s+N+S+E+A,1,K+C+B+A,4,I+ID+C+B+E+A,3,K+C+B+A,1,I+JZ+o+C+B+E+A,4,K+R+PJ+A,8,K+C+B+A,1,I+Ns+C+B+E+A,1,I+Nt+C+B+E+A,1,I+Nu+C+B+E+A,1,I+Nw+C+B+E+A,1,I+NP+C+B+E+A,1,I+NQ+C+B+E+A,1,K+C+A,1,D+L+HP+' +k=1'+HU+N+C+E+A,1,D+L+HQ+' +k=1'+Gw+N+C+E+A,1,D+L+Hd+' +k=1'+Hu+N+C+E+A,1,D+L+HR+' +k=1'+Hv+N+C+E+A,1,D+L+HS+' +k=1'+It+N+C+E+A,1,D+L+EN+' +k=1'+Hs+N+C+E+A,1,D+L+Fy+' +k=1'+Ht+N+C+E+A,1,D+L+Fm+' +k=1'+HV+N+C+E+A,1,D+L+Fr+' +k=1'+Hw+N+C+E+A,1,D+L+Ed+' +k=1'+HW+N+C+E+A,1,D+L+Fn+' +k=1'+Hx+N+C+E+A,1,D+L+HP+' +k=1'+O+N+C+E+A,1,D+L+HQ+' +k=1'+O+N+C+E+A,1,D+L+Hd+' +k=1'+O+N+C+E+A,1,D+L+HR+' +k=1'+O+N+C+E+A,1,D+L+HS+' +k=1'+O+N+C+E+A,1,D+L+EN+' +k=1'+O+N+C+E+A,1,D+L+Fy+' +k=1'+O+N+C+E+A,1,D+L+Fm+' +k=1'+O+N+C+E+A,1,D+L+Fr+' +k=1'+O+N+C+E+A,1,D+L+Ed+' +k=1'+O+N+C+E+A,1,D+L+Fn+' +k=1'+O+N+C+E+A,1,D+L+HP+' +k=1'+Hy+N+C+E+A,1,D+L+Lt+' +k=1'+Hz+N+C+E+A,1,D+L+HQ+' +k=1'+IA+N+C+E+A,1,D+L+Ni+' +k=1'+IB+N+C+E+A,1,D+L+Hd+' +k=1'+Gx+N+C+E+A,1,D+L+Hq+' +k=1'+IT+N+C+E+A,1,D+L+HR+' +k=1'+Gc+N+C+E+A,1,D+L+Mj+' +k=1'+IU+N+C+E+A,1,D+L+HS+' +k=1'+Iu+N+C+E+A,1,D+L+Jj+' +k=1'+Mu+N+C+E+A,1,D+L+EN+' +k=1'+Mv+N+C+E+A,1,D+L+Le+' +k=1'+Mw+N+C+E+A,1,D+L+Fy+' +k=1'+Mx+N+C+E+A,1,D+L+Im+' +k=1'+My+N+C+E+A,1,D+L+Fm+' +k=1'+Mz+N+C+E+A,1,D+L+KF+' +k=1'+NA+N+C+E+A,1,D+L+Fr+' +k=1'+NB+N+C+E+A,1,D+L+Jk+' +k=1'+Oh+N+C+E+A,1,D+L+Ed+' +k=1'+NC+N+C+E+A,1,D+L+Il+' +k=1'+Oi+N+C+E+A,1,D+L+Fn+' +k=1'+ND+N+C+E+A,1,D+L+HP+' +k=1'+O+N+C+E+A,1,D+L+Lt+' +k=1'+O+N+C+E+A,1,D+L+HQ+' +k=1'+O+N+C+E+A,1,D+L+Ni+' +k=1'+O+N+C+E+A,1,D+L+Hd+' +k=1'+O+N+C+E+A,1,D+L+Hq+' +k=1'+O+N+C+E+A,1,D+L+HR+' +k=1'+O+N+C+E+A,1,D+L+Mj+' +k=1'+O+N+C+E+A,1,D+L+HS+' +k=1'+O+N+C+E+A,1,D+L+Jj+' +k=1'+O+N+C+E+A,1,D+L+EN+' +k=1'+O+N+C+E+A,1,D+L+Le+' +k=1'+O+N+C+E+A,1,D+L+Fy+' +k=1'+O+N+C+E+A,1,D+L+Im+' +k=1'+O+N+C+E+A,1,D+L+Fm+' +k=1'+O+N+C+E+A,1,D+L+KF+' +k=1'+O+N+C+E+A,1,D+L+Fr+' +k=1'+O+N+C+E+A,1,D+L+Jk+' +k=1'+O+N+C+E+A,1,D+L+Ed+' +k=1'+O+N+C+E+A,1,D+L+Il+' +k=1'+O+N+C+E+A,1,D+L+Fn+' +k=1'+O+N+C+E+A,1,K+M+A,3,K+C+B+A,1,I+Gz+C+B+E+A,9,D+L+HP+' +k=1'+HU+N+M+E+A,1,D+L+HQ+' +k=1'+Gw+N+M+E+A,1,D+L+Hd+' +k=1'+Hu+N+M+E+A,1,D+L+HR+' +k=1'+Hv+N+M+E+A,1,D+L+HS+' +k=1'+It+N+M+E+A,1,D+L+EN+' +k=1'+Hs+N+M+E+A,1,D+L+Fy+' +k=1'+Ht+N+M+E+A,1,D+L+Fm+' +k=1'+HV+N+M+E+A,1,D+L+Fr+' +k=1'+Hw+N+M+E+A,1,D+L+Ed+' +k=1'+HW+N+M+E+A,1,D+L+Fn+' +k=1'+Hx+N+M+E+A,1,D+L+HP+' +k=1'+O+N+M+E+A,1,D+L+HQ+' +k=1'+O+N+M+E+A,1,D+L+Hd+' +k=1'+O+N+M+E+A,1,D+L+HR+' +k=1'+O+N+M+E+A,1,D+L+HS+' +k=1'+O+N+M+E+A,1,D+L+EN+' +k=1'+O+N+M+E+A,1,D+L+Fy+' +k=1'+O+N+M+E+A,1,D+L+Fm+' +k=1'+O+N+M+E+A,1,D+L+Fr+' +k=1'+O+N+M+E+A,1,D+L+Ed+' +k=1'+O+N+M+E+A,1,D+L+Fn+' +k=1'+O+N+M+E+A,11,K+c+A,1,K+c+TI+A,1,K+c+TJ+A,1,K+c+TK+A,1,K+c+TL+A,1,K+c+UB+A,1,K+c+Sv+A,1,K+c+Ps+A,1,K+i+A,1,K+i+A,1,K+As+d+A,1,K+R+Jg+A,1,K+C+B+A,1,K+Y+Hf+A,1,K+R+Jy+A,1,K+R+SE+A,1,K+R+Sz+A,1,K+C+B+A,1,K+x+Al+A,1,K+C+B+A,1,K+c+' +towgs84=-106,-129,165,0,0,0,0'+A,1,K+R+TA+A,1,K+R+SF+A,1,K+R+NH+A,1,K+C+B+A,1,K+R+TO+A,1,K+R+SJ+A,1,K+C+B+A,1,K+R+TP+A,1,K+R+Lr+A,1,K+R+UD+A,2,K+R+SG+A,1,K+R+QM+A,3,K+R+' +towgs84=365,194,166,0,0,0,0'+A,1,K+R+' +towgs84=325,154,172,0,0,0,0'+A,1,K+i+TZ+A,1,K+R+SH+A,2,K+R+Jf+A,1,K+R+TB+A,1,K+R+Ke+A,1,K+R+HH+A,2,K+R+SI+A,1,D+L+KB+AP+IU+N+C+B+E+A,5,D+L+HP+' +k=1'+Hy+N+M+E+A,1,D+L+Lt+' +k=1'+Hz+N+M+E+A,1,D+L+HQ+' +k=1'+IA+N+M+E+A,1,D+L+Ni+' +k=1'+IB+N+M+E+A,1,D+L+Hd+' +k=1'+Gx+N+M+E+A,1,K+' +a=6377019.27 +b=6355762.5391 +towgs84=-28,199,5,0,0,0,0'+A,1,K+R+Jd+A,1,K+C+B+A,1,K+R+Jz+A,1,K+C+B+A,1,K+R+Qc+A,1,K+R+PI+A,1,K+R+Pt+A,1,K+R+Pa+A,1,K+Y+Pb+A,1,K+j+B+A,1,K+R+' +towgs84=-86,-98,-119,0,0,0,0'+A,1,K+C+B+A,1,K+j+B+A,1,K+AU+BN+A,1,K+R+TT+A,1,K+R+Np+A,1,K+C+B+A,1,K+i+' +towgs84=-100,-248,259,0,0,0,0'+A,1,K+M+A,1,K+M+A,1,K+M+' +towgs84=44.585,-131.212,-39.544,0,0,0,0'+A,1,K+c+' +towgs84=-80.01,253.26,291.19,0,0,0,0'+A,1,K+c+' +towgs84=124.5,-63.5,-281,0,0,0,0'+A,2,K+By+Ay+RF+A,1,K+i+BX+A,1,K+R+' +towgs84=-133,-321,50,0,0,0,0'+A,2,K+C+B+A,1,K+C+Bm+A,1,K+R+Kc+A,1,K+R+Lq+A,1,K+R+Kg+A,1,K+R+Kh+A,1,K+R+QN+A,1,K+j+TD+A,1,K+j+B+A,1,K+i+CW+A,1,K+c+A,1,K+c+A,1,K+R+TE+A,1,K+c+Qf+A,1,K+c+A,1,K+c+GN+A,1,K+C+B+A,1,K+c+A,1,K+R+A,1,K+R+A,1,K+Gn+Qg+A,1,K+R+' +towgs84=114,-116,-333,0,0,0,0'+A,1,K+x+' +towgs84=-491,-22,435,0,0,0,0'+A,1,K+R+' +towgs84=145,75,-272,0,0,0,0'+A,1,K+R+' +towgs84=-320,550,-494,0,0,0,0'+A,1,K+R+' +towgs84=124,-234,-25,0,0,0,0'+A,1,K+R+' +towgs84=-205,107,53,0,0,0,0'+A,1,K+c+' +towgs84=-79,-129,145,0,0,0,0'+A,1,K+R+' +towgs84=-127,-769,472,0,0,0,0'+A,1,K+R+' +towgs84=-104,-129,239,0,0,0,0'+A,1,K+R+' +towgs84=298,-304,-375,0,0,0,0'+A,1,K+i+' +towgs84=-2,151,181,0,0,0,0'+A,1,K+R+' +towgs84=230,-199,-752,0,0,0,0'+A,1,K+R+' +towgs84=211,147,111,0,0,0,0'+A,1,K+T+P+A,1,K+R+JD+A,1,K+R+' +towgs84=-794,119,-298,0,0,0,0'+A,1,K+i+Lg+A,1,K+R+' +towgs84=208,-435,-229,0,0,0,0'+A,1,K+R+' +towgs84=189,-79,-202,0,0,0,0'+A,1,K+i+Ly+A,1,K+R+' +towgs84=403,-81,277,0,0,0,0'+A,1,K+R+' +towgs84=-307,-92,127,0,0,0,0'+A,1,K+R+Ta+A,1,K+R+' +towgs84=170,42,84,0,0,0,0'+A,2,K+' +a=6378270 +b=6356794.343434343 +towgs84=102,52,-38,0,0,0,0'+A,1,K+R+' +towgs84=276,-57,149,0,0,0,0'+A,1,K+R+' +towgs84=-632,438,-609,0,0,0,0'+A,1,K+R+' +towgs84=647,1777,-1124,0,0,0,0'+A,1,K+c+' +towgs84=260,12,-147,0,0,0,0'+A,1,K+C+B+A,1,K+Ee+Ef+A,1,K+R+' +towgs84=-156,-271,-189,0,0,0,0'+A,1,K+' +a=6378136 +b=6356751.361745712 +towgs84=0,0,1.5,-0,-0,0.076,0'+A,1,K+R+A,1,K+C+A,1,K+c+EU+A,1,K+c+A,1,K+Y+A,1,K+Y+A,1,K+C+B+A,1,K+UW+Ym+Nl+A,1,K+C+B+A,1,K+j+QB+A,1,K+Yn+Qz+A,1,K+UW+Ym+Nl+A,1,K+R+A,1,K+R+w+A,1,K+j+B+A,1,K+j+Fu+A,1,K+j+A,1,K+j+B+A,1,K+C+B+A,1,K+aJ+A,1,K+C+B+A,1,K+j+B+A,1,K+j+B+A,1,K+C+B+A,1,K+C+B+A,1,D+L+Hq+' +k=1'+IT+N+M+E+A,1,D+L+HR+' +k=1'+Gc+N+M+E+A,1,D+L+Mj+' +k=1'+IU+N+M+E+A,1,D+L+HS+' +k=1'+Iu+N+M+E+A,1,D+L+Jj+' +k=1'+Mu+N+M+E+A,1,D+L+EN+' +k=1'+Mv+N+M+E+A,1,D+L+Le+' +k=1'+Mw+N+M+E+A,1,D+L+Fy+' +k=1'+Mx+N+M+E+A,1,D+L+Im+' +k=1'+My+N+M+E+A,1,D+L+Fm+' +k=1'+Mz+N+M+E+A,1,D+L+KF+' +k=1'+NA+N+M+E+A,1,D+L+Fr+' +k=1'+NB+N+M+E+A,1,D+L+Jk+' +k=1'+Oh+N+M+E+A,1,D+L+Ed+' +k=1'+NC+N+M+E+A,1,D+L+Il+' +k=1'+Oi+N+M+E+A,1,D+L+Fn+' +k=1'+ND+N+M+E+A,1,D+L+HP+' +k=1'+O+N+M+E+A,1,D+L+Lt+' +k=1'+O+N+M+E+A,1,D+L+HQ+' +k=1'+O+N+M+E+A,1,D+L+Ni+' +k=1'+O+N+M+E+A,1,D+L+Hd+' +k=1'+O+N+M+E+A,1,D+L+Hq+' +k=1'+O+N+M+E+A,1,D+L+HR+' +k=1'+O+N+M+E+A,1,D+L+Mj+' +k=1'+O+N+M+E+A,1,D+L+HS+' +k=1'+O+N+M+E+A,1,D+L+Jj+' +k=1'+O+N+M+E+A,1,D+L+EN+' +k=1'+O+N+M+E+A,1,D+L+Le+' +k=1'+O+N+M+E+A,1,D+L+Fy+' +k=1'+O+N+M+E+A,1,D+L+Im+' +k=1'+O+N+M+E+A,1,D+L+Fm+' +k=1'+O+N+M+E+A,1,D+L+KF+' +k=1'+O+N+M+E+A,1,D+L+Fr+' +k=1'+O+N+M+E+A,1,D+L+Jk+' +k=1'+O+N+M+E+A,1,D+L+Ed+' +k=1'+O+N+M+E+A,1,K+Y+Gf+' +pm=bern'+A,1,K+R+ES+' +pm=bogota'+A,1,K+R+EV+Zb+A,1,K+Y+HZ+PW+A,1,K+Y+Aw+Ls+A,1,K+R+CK+' +pm=rome'+A,1,K+AU+BN+Bk+Lv+A,1,K+Y+PW+A,1,K+R+' +pm=brussels'+A,1,K+R+HD+Lv+A,1,K+AU+BN+JC+Lv+A,1,D+L+Il+' +k=1'+O+N+M+E+A,0,D+L+Il+' +k=1'+O+N+M+E+A,1,K+Y+Cj+PW+A,1,K+Y+' +pm=stockholm'+A,1,K+Y+' +pm=athens'+A,1,K+AU+BN+Gi+Lv+A,1,K+Hn+EL+Aa+SN+A,1,K+Y+Gh+Ls+A,2,K+Y+Hf+PW+A,1,K+AU+BN+Lv+A,1,D+L+Fn+' +k=1'+O+N+M+E+A,1,K+R+A,1,K+R+A,2,H+' +lat_1=15 +lat_2=16.66666666666667 +lat_0=15.83333333333333 +lon_0=-24 +x_0=161587.83 +y_0=128511.202'+S+E+A,13,H+WK+WL+UK+YH+s+N+C+B+E+A,62,K+' +a=6376523'+RA+ZM+A,2,K+Zx+Qy+' +pm=madrid'+A,1,K+Y+Pb+Zb+A,109,K+C+B+A,1,I+Nr+C+B+E+A,1,I+Os+C+B+E+A,1,I+Ja+C+B+E+A,2,D+BY+UZ+' +k=1'+s+N+R+EV+E+A,23,BP+Hr+Qm+HN+Rd+Bd+Cl+S+E+A,1,BP+m+' +lat_ts=-90'+HN+Rd+Bd+Cl+S+E+A,6,I+Ki+C+B+E+A,21,DT+Sa+Hl+ZB+OZ+s+N+X+E+A,1,DT+Sa+Hl+ZB+OZ+s+N+C+B+E+A,1,DT+Sa+Hl+ZB+OZ+s+N+C+B+E+A,1,DT+Sa+Hl+ZB+OZ+s+N+C+B+E+A,33,D+Fk+' +lon_0=5.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=6.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=7.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=8.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=9.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+YH+' +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=11.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=12.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=13.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=14.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=15.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+YE+' +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=17.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=18.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=19.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=20.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=21.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=22.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=23.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=24.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=25.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=26.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=27.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=28.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=29.5 +k=1'+BU+AH+C+B+E+A,1,D+Fk+' +lon_0=30.5 +k=1'+BU+AH+C+B+E+A,2,K+Y+A,35,D+Ch+NX+' +k=1'+h+Ae+Y+E+A,1,D+Ch+Rt+' +k=1'+h+' +y_0=550000'+Y+E+A,1,D+Ch+Ru+' +k=1'+h+Ae+Y+E+A,1,D+Ch+Rt+' +k=1'+h+Ae+Y+E+A,1,D+Ch+Ed+' +k=1'+h+Ae+Y+E+A,1,D+Ch+NX+' +k=1'+h+Ae+Y+E+A,1,D+Ch+' +lon_0=125.0028902777778 +k=1'+h+Ae+Y+E+A,1,D+Ch+WM+' +k=1'+h+Ae+Y+E+A,1,D+Ch+WM+' +k=1'+h+' +y_0=550000'+Y+E+A,1,D+Ch+' +lon_0=129.0028902777778 +k=1'+h+Ae+Y+E+A,1,D+Ch+' +lon_0=131.0028902777778 +k=1'+h+Ae+Y+E+A,1,D+Ch+Pj+AP+BZ+Cl+Y+E+A,1,D+Ch+Pj+AP+BZ+Cl+C+B+E+A,1,D+Ch+Ru+' +k=1'+h+Ae+C+B+E+A,1,D+Ch+Rt+' +k=1'+h+Ae+C+B+E+A,1,D+Ch+Rt+' +k=1'+h+' +y_0=550000'+C+B+E+A,1,D+Ch+Ed+' +k=1'+h+Ae+C+B+E+A,1,D+Ch+NX+' +k=1'+h+Ae+C+B+E+A,1,D+Ch+Ru+' +k=1'+h+Qn+C+B+E+A,1,D+Ch+Rt+' +k=1'+h+Qn+C+B+E+A,1,D+Ch+Ed+' +k=1'+h+Qn+C+B+E+A,1,D+Ch+NX+' +k=1'+h+Qn+C+B+E+A,33,Rp+SS+' +lon_0=42.5'+Kk+V+s+N+Y+Gh+Ls+E+A,2,D+L+IH+AP+O+Ae+S+E+A,5,K+Y+Lz+A,1,K+Y+Lz+Ls+A,4,K+By+Ay+Kf+A,1,D+' +lat_0=7.000480277777778 +lon_0=80.77171111111112 +k=0.9999238418'+h+IK+By+Ay+Tb+E+A,1,D+' +lat_0=7.000471527777778 +lon_0=80.77171308333334 +k=0.9999238418'+O+Ae+By+Ay+Kf+E+A,8,H+WK+WL+UK+YH+s+N+C+B+E+A,3,K+C+A,1,CU+Qi+Yz+aU+Ph+s+N+KE+If+C+E+A,5,K+C+B+A,1,D+L+HO+' +k=1'+O+N+C+B+E+A,1,D+L+Ia+' +k=1'+O+N+C+B+E+A,1,D+L+IG+' +k=1'+O+N+C+B+E+A,1,D+L+PN+' +k=1'+O+N+C+B+E+A,1,D+L+LN+' +k=1'+O+N+C+B+E+A,1,D+L+PO+' +k=1'+O+N+C+B+E+A,1,D+L+JS+' +k=1'+O+N+C+B+E+A,5,K+C+B+A,2,D+L+Hq+' +k=1'+Bv+N+C+B+E+A,3,D+L+HO+' +k=1'+MT+N+C+B+E+A,1,D+L+Ia+' +k=1'+LY+N+C+B+E+A,1,D+L+IG+' +k=1'+Jp+N+C+B+E+A,1,D+L+PN+' +k=1'+LZ+N+C+B+E+A,1,D+L+LN+' +k=1'+HU+N+C+B+E+A,1,D+L+PO+' +k=1'+Gw+N+C+B+E+A,1,D+L+JS+' +k=1'+Hu+N+C+B+E+A,17,D+L+' +lon_0=90.73333333333333 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=89.55 +k=1'+Bv+DU+C+B+E+A,1,D+L+WN+' +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=90.03333333333333 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=90.15000000000001 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=91.13333333333334 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=91.23333333333333 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=89.34999999999999 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=91.34999999999999 +k=1'+Bv+DU+C+B+E+A,1,D+L+WN+' +k=1'+Bv+DU+C+B+E+A,1,D+L+WO+' +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=89.06666666666666 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=90.26666666666667 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=89.55 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=91.75 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=90.5 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=90.16666666666667 +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=90.11666666666666 +k=1'+Bv+DU+C+B+E+A,1,D+L+WO+' +k=1'+Bv+DU+C+B+E+A,1,D+L+' +lon_0=90.86666666666666 +k=1'+Bv+DU+C+B+E+A,5,D+L+' +lon_0=-7 +k=0.999997'+h+' +y_0=-6000000'+C+B+E+A,4,H+YI+' +lat_2=54.5'+L+NV+BZ+N+C+B+E+A,1,H+YI+' +lat_2=54.5'+L+NV+BZ+N+C+B+E+A,3,K+C+B+A,1,H+' +lat_1=64.25 +lat_2=65.75 +lat_0=65 +lon_0=-19'+Jv+Hk+C+B+E+A,4,JU+PC+ZP+Pl+Qp+Y+Hf+PW+E+A,1,JU+PC+ZP+Pl+Qp+Y+Cj+PW+E+A,1,JU+PC+ZP+Pl+Qp+Y+HZ+PW+E+A,6,I+Nr+o+R+Ec+E+A,3,K+C+B+A,3,D+m+UQ+' +k=1'+AV+N+C+B+E+A,1,D+m+MP+' +k=1'+Ci+N+C+B+E+A,1,D+m+Pe+' +k=1'+Bo+N+C+B+E+A,1,D+m+Qk+' +k=1'+DP+N+C+B+E+A,1,D+m+US+' +k=1'+Eg+N+C+B+E+A,1,D+m+Zc+' +k=1'+Jt+N+C+B+E+A,1,D+m+Nb+' +k=1'+IM+N+C+B+E+A,5,K+C+B+A,1,I+Gz+o+C+B+E+A,1,I+Hi+o+C+B+E+A,1,I+ID+o+C+B+E+A,3,K+C+B+A,1,I+Hi+o+C+B+E+A,1,I+IC+o+C+B+E+A,3,K+j+B+A,2,D+L+NV+V+O+N+j+B+E+A,4,K+C+B+A,2,K+C+B+A,8,K+j+B+A,1,I+ID+o+j+B+E+A,1,I+Io+o+j+B+E+A,4,I+IC+o+C+B+E+A,2,I+Hi+o+C+B+E+A,4,K+C+B+A,3,I+Os+o+C+B+E+A,55,K+i+Bp+A,5,H+' +lat_1=10.46666666666667 +lat_0=10.46666666666667 +lon_0=-84.33333333333333 +k_0=0.99995696'+O+' +y_0=271820.522'+i+Bp+E+A,1,H+' +lat_1=9 +lat_0=9'+Ua+' +k_0=0.99995696'+O+' +y_0=327987.436'+i+Bp+E+A,2,H+' +lat_1=14.9 +lat_0=14.9'+Bx+' +k_0=0.99989906'+O+' +y_0=325992.681'+i+Bp+E+A,1,H+' +lat_1=13.78333333333333 +lat_0=13.78333333333333 +lon_0=-89 +k_0=0.99996704'+O+' +y_0=295809.184'+i+Bp+E+A,1,H+' +lat_1=13.86666666666667 +lat_0=13.86666666666667'+To+' +k_0=0.99990314'+O+' +y_0=359891.816'+i+Bp+E+A,1,H+' +lat_1=11.73333333333333 +lat_0=11.73333333333333'+To+' +k_0=0.9999222800000001'+O+' +y_0=288876.327'+i+Bp+E+A,1,I+Ik+x+Al+E+A,1,K+Ee+Ef+A,3,K+i+A,2,H+' +lat_1=8.416666666666666 +lat_0=8.416666666666666 +lon_0=-80 +k_0=0.99989909'+O+' +y_0=294865.303'+i+E+A,3,UU+' +lat_0=8.25'+CR+' +x_0=914391.7962 +y_0=999404.7217154861'+i+' +to_meter=0.9143917962'+A,7,H+Ai+Aj+' +lat_0=-78 +lon_0=163'+Tp+Ju+C+B+E+A,1,H+' +lat_1=-73.66666666666667'+AZ+' +lat_0=-74.5'+NZ+LX+Fq+C+B+E+A,1,H+' +lat_1=-70.66666666666667 +lat_2=-72.33333333333333 +lat_0=-71.5'+ZW+aH+AH+C+B+E+A,1,BP+m+' +lat_ts=-90'+Ry+Rd+LX+AH+C+B+E+A,7,K+C+B+A,1,I+Gz+C+B+E+A,23,Rp+SS+WP+Kk+V+s+N+Y+Gh+E+A,1,Rp+SS+WP+Kk+V+s+N+Y+Gh+E+A,4,D+Za+Si+' +k=1'+Qo+' +y_0=650000'+R+TT+E+A,1,D+Za+Si+' +k=1'+Qo+' +y_0=650000'+R+Np+E+A,1,D+L+Or+' +k=1'+AV+N+Y+AC+E+A,3,D+L+' +lon_0=11.5'+AP+AV+EM+S+E+A,1,K+R+A,3,K+x+BK+A,3,UU+L+Nb+LX+Ak+x+BK+E+A,1,I+ID+o+x+BK+E+A,2,I+MB+o+x+BK+E+A,1,I+Nx+o+x+BK+E+A,1,I+Nr+o+x+BK+E+A,1,I+ID+o+R+E+A,1,I+Io+o+R+E+A,1,I+MB+o+R+E+A,1,I+Nx+o+R+E+A,7,K+C+B+A,4,I+Nv+o+C+B+E+A,1,I+PM+o+C+B+E+A,1,I+Re+o+C+B+E+A,7,H+' +lat_1=16.81666666666667 +lat_0=16.81666666666667'+Bx+' +k_0=0.99992226'+O+' +y_0=292209.579'+i+Bp+E+A,2,K+M+BO+A,1,D+L+Gl+' +k=1'+DP+N+M+BO+E+A,1,D+L+HO+' +k=1'+Eg+N+M+BO+E+A,1,D+L+IG+' +k=1'+Jt+N+M+BO+E+A,1,D+L+LN+' +k=1'+IM+N+M+BO+E+A,1,D+L+Gl+' +k=1'+O+N+M+BO+E+A,1,D+L+HO+' +k=1'+O+N+M+BO+E+A,1,D+L+IG+' +k=1'+O+N+M+BO+E+A,1,D+L+LN+' +k=1'+O+N+M+BO+E+A,19,GU+Iq+Zy+ST+Ab+' +y_0=304800'+X+t+A,1,D+' +lat_0=17.06124194444444 +lon_0=-88.6318575 +k=1 +x_0=66220.02833082761 +y_0=135779.5099885299'+Ee+Ef+ML+A,4,K+C+B+A,3,D+L+' +lon_0=11.33333333333333 +k=1'+BZ+N+C+B+E+A,27,D+Fo+Ua+' +k=0.999942857'+e+N+X+J+A,1,D+Fo+EY+Hm+e+N+X+J+A,1,D+Fo+' +lon_0=-88.75'+Hm+e+N+X+J+A,2,D+L+ZO+AP+O+N+R+n+E+A,2,I+JZ+o+j+KR+E+A,2,D+L+KB+' +k=1'+Ci+N+M+b+E+A,1,H+Yw+QY+PU+Lu+LU+RU+C+B+E+A,1,He+PU+Lu+RV+RW+C+B+E+A,1,H+Yw+QY+PU+Lu+LU+RU+C+B+E+A,1,He+PU+Lu+RV+RW+C+B+E+A,1,He+PU+Lu+RV+RW+C+B+E+A,1,H+Yw+QY+PU+Lu+LU+RU+C+B+E+A,1,He+PU+Lu+RV+RW+C+B+E+A,1,H+Yw+QY+PU+Lu+LU+RU+C+B+E+A,2,JU+' +lon_0=-43 +lat_ts=-2'+LX+Ak+C+B+E+A,2,H+' +lat_1=52.66666666666666 +lat_2=54.33333333333334 +lat_0=48'+Lu+' +x_0=815000'+N+R+n+E+A,1,I+JM+o+C+B+E+A,2,D+Fp+LW+JA+AG+N+C+B+J+A,3,D+L+Or+AP+Gc+N+C+B+E+A,1,D+L+Gj+AP+Iu+N+C+B+E+A,1,D+L+Or+AP+Gc+N+C+B+E+A,1,D+L+KB+AP+IU+N+C+B+E+A,1,D+L+Gj+AP+Iu+N+C+B+E+A,1,D+Fp+LW+JA+AG+N+C+B+J+A,1,D+Fp+LW+JA+AG+N+C+B+J+A,4,D+L+KB+AP+' +x_0=500053 +y_0=-3999820'+R+CK+E+A,4,D+L+Gj+' +k=1'+Bo+N+M+b+E+A,1,D+L+KB+' +k=1'+Ci+N+M+Ar+E+A,1,D+L+Gj+' +k=1'+Bo+N+M+Ar+E+A,1,D+L+KB+' +k=1'+Bo+N+Y+E+A,1,D+L+IH+' +k=1'+DP+N+Y+E+A,1,D+L+IH+' +k=1'+DP+N+Y+E+A,1,D+L+Gj+' +k=1'+Eg+N+Y+E+A,1,D+L+KB+' +k=1'+Bo+N+M+b+E+A,1,D+L+IH+' +k=1'+DP+N+M+b+E+A,1,D+L+Gj+' +k=1'+Eg+N+M+b+E+A,1,D+L+KB+' +k=1'+Bo+N+M+Ar+E+A,1,D+L+IH+' +k=1'+DP+N+M+Ar+E+A,1,D+L+Gj+' +k=1'+Eg+N+M+Ar+E+A,1,D+L+ZO+' +k=1'+Ci+N+Y+AC+E+A,1,D+L+KB+' +k=1'+Bo+N+Y+AC+E+A,1,D+L+IH+' +k=1'+DP+N+Y+AC+E+A,1,D+L+Gj+' +k=1'+Eg+N+Y+AC+E+A,1,D+L+Or+' +k=1'+AV+N+Y+AC+E+A,1,K+Y+A,1,D+L+ZO+' +k=1'+Ci+N+Y+E+A,1,D+L+KB+' +k=1'+Bo+N+Y+E+A,1,D+L+IH+' +k=1'+DP+N+Y+E+A,1,D+L+Gj+' +k=1'+Eg+N+Y+E+A,15,I+SK+o+C+B+E+A,125,D+' +lat_0=-35.31773627777778 +lon_0=149.0092948305555 +k=1.000086'+h+Qn+x+r+E+A,11,I+KD+j+B+E+A,1,I+Me+j+B+E+A,2,I+Ik+o+C+B+E+A,3,D+L+IH+AP+O+Ak+S+E+A,2,D+L+Ia+V+O+Ak+C+B+E+A,14,I+Io+o+x+BK+E+A,17,I+IC+o+x+BK+E+A,1,I+Hi+o+x+BK+E+A,1,I+Gz+o+x+BK+E+A,2,I+JZ+o+R+PJ+E+A,1,UU+L+Nb+LX+Ak+C+B+E+A,6,K+C+A,1,D+L+KH+AP+AV+Ju+C+E+A,3,BP+Hr+' +lat_ts=70'+Hq+' +k=1'+s+N+ZZ+Ri+E+A,31,H+ZC+IJ+Ih+KK+s+N+S+E+A,1,H+ZC+IJ+Ih+UT+s+N+S+E+A,1,H+ZC+IJ+Ih+IG+s+N+S+E+A,1,H+ZC+IJ+Ih+EN+s+N+S+E+A,1,H+ZC+IJ+Ih+KG+s+N+S+E+A,1,H+Ic+ZD+Ii+KK+s+N+S+E+A,1,H+Ic+ZD+Ii+UT+s+N+S+E+A,1,H+Ic+ZD+Ii+IG+s+N+S+E+A,1,H+Ic+ZD+Ii+EN+s+N+S+E+A,1,H+Ic+ZD+Ii+KG+s+N+S+E+A,1,H+ZE+ZF+Ij+KK+s+N+S+E+A,1,H+ZE+ZF+Ij+UT+s+N+S+E+A,1,H+ZE+ZF+Ij+IG+s+N+S+E+A,1,H+ZE+ZF+Ij+EN+s+N+S+E+A,1,H+ZE+ZF+Ij+KG+s+N+S+E+A,1,BP+Hr+Qm+ON+Rd+Bd+Cl+S+E+A,1,BP+Hr+Qm+CS+Rd+Bd+Cl+S+E+A,1,BP+Hr+Qm+' +lon_0=-33'+Rd+Bd+Cl+S+E+A,1,BP+Hr+Qm+QR+Rd+Bd+Cl+S+E+A,1,BP+Hr+Qm+EN+Rd+Bd+Cl+S+E+A,110,H+UL+Ha+Hb+' +lon_0=-30'+Hy+DQ+C+B+E+A,1,H+Ce+Cf+Cg+' +lon_0=-52'+Hs+JH+C+B+E+A,1,H+Ce+Cf+Cg+' +lon_0=-12'+HV+JH+C+B+E+A,1,H+Bf+IJ+Bg+MP+Gx+IN+C+B+E+A,1,H+Bf+IJ+Bg+UT+Gc+IN+C+B+E+A,1,H+Bf+IJ+Bg+' +lon_0=-10'+Iu+IN+C+B+E+A,1,H+Ic+BL+BM+' +lon_0=-64'+HV+Gb+C+B+E+A,1,H+Ic+BL+BM+UT+HW+Gb+C+B+E+A,1,H+Ic+BL+BM+' +lon_0=-14'+La+Gb+C+B+E+A,1,H+AR+AS+AT+NU+NB+EM+C+B+E+A,1,H+AR+AS+AT+' +lon_0=-42'+NC+EM+C+B+E+A,1,H+AR+AS+AT+' +lon_0=-22'+ND+EM+C+B+E+A,1,H+CI+OY+CJ+Zd+Hz+JI+C+B+E+A,1,H+CI+OY+CJ+' +lon_0=-38'+IB+JI+C+B+E+A,1,H+CI+OY+CJ+' +lon_0=-20'+IT+JI+C+B+E+A,1,H+' +lat_1=67'+WQ+WR+' +lon_0=-51'+Jp+aE+C+B+E+A,1,H+' +lat_1=67'+WQ+WR+' +lon_0=-34'+HU+aE+C+B+E+A,1,H+WS+WT+WU+' +lon_0=-52'+HV+' +y_0=8500000'+C+B+E+A,1,H+WS+WT+WU+' +lon_0=-37'+HW+' +y_0=8500000'+C+B+E+A,1,H+Ce+Cf+Cg+' +lon_0=16'+HW+JH+C+B+E+A,1,H+Bf+IJ+Bg+Gl+Jp+IN+C+B+E+A,1,H+Ic+BL+BM+Lu+Hz+Gb+C+B+E+A,1,H+Ic+BL+BM+ZG+IB+Gb+C+B+E+A,1,H+AR+AS+AT+' +lon_0=14'+Jp+EM+C+B+E+A,1,H+AR+AS+AT+ZG+HU+EM+C+B+E+A,1,H+Ce+Cf+Cg+' +lon_0=53'+La+JH+S+E+A,1,H+Ce+Cf+Cg+HR+Hz+JH+S+E+A,1,H+Bf+IJ+Bg+' +lon_0=52'+HU+IN+S+E+A,1,H+Bf+IJ+Bg+' +lon_0=83'+Hu+IN+S+E+A,1,H+Bf+IJ+Bg+Im+It+IN+S+E+A,1,H+Bf+IJ+Bg+' +lon_0=145'+Ht+IN+S+E+A,1,H+Ic+BL+BM+' +lon_0=58'+IT+Gb+S+E+A,1,H+Ic+BL+BM+' +lon_0=82'+IU+Gb+S+E+A,1,H+Ic+BL+BM+ZQ+Mu+Gb+S+E+A,1,H+Ic+BL+BM+' +lon_0=130'+Mw+Gb+S+E+A,1,H+Ic+BL+BM+ZR+My+Gb+S+E+A,1,H+Ic+BL+BM+' +lon_0=179'+NA+Gb+S+E+A,1,H+AR+AS+AT+SR+Hu+EM+S+E+A,1,H+AR+AS+AT+' +lon_0=74'+It+EM+S+E+A,1,H+AR+AS+AT+' +lon_0=95'+Ht+EM+S+E+A,1,H+AR+AS+AT+' +lon_0=116'+Hw+EM+S+E+A,1,H+AR+AS+AT+' +lon_0=137'+Hx+EM+S+E+A,1,H+AR+AS+AT+' +lon_0=158'+Hy+EM+S+E+A,1,H+AR+AS+AT+' +lon_0=179'+IA+EM+S+E+A,1,H+AR+AS+AT+' +lon_0=-163'+Gx+EM+C+B+E+A,1,H+AR+AS+AT+Qr+Gc+EM+C+B+E+A,1,H+CI+OY+CJ+SX+Gw+JI+C+B+E+A,1,H+CI+OY+CJ+Qr+Hv+JI+C+B+E+A,1,H+UL+Ha+Hb+Bu+Hx+DQ+C+B+E+A,1,H+Ce+Cf+Cg+SZ+Gw+JH+C+B+E+A,1,H+Ce+Cf+Cg+UR+Hv+JH+C+B+E+A,1,H+Bf+IJ+Bg+YT+Hy+IN+C+B+E+A,1,H+Bf+IJ+Bg+Ji+IA+IN+C+B+E+A,1,H+Bf+IJ+Bg+MP+Gx+IN+C+B+E+A,1,H+Ic+BL+BM+YT+Gw+Gb+C+B+E+A,1,H+Ic+BL+BM+' +lon_0=-104'+Hv+Gb+C+B+E+A,1,H+Ic+BL+BM+NW+Hs+Gb+C+B+E+A,1,H+AR+AS+AT+' +lon_0=-131'+Iu+EM+C+B+E+A,1,H+AR+AS+AT+KK+Mv+EM+C+B+E+A,1,H+AR+AS+AT+' +lon_0=-91'+Mx+EM+C+B+E+A,1,H+AR+AS+AT+' +lon_0=-71'+Mz+EM+C+B+E+A,1,H+CI+OY+CJ+' +lon_0=-132'+Hs+JI+C+B+E+A,1,H+CI+OY+CJ+' +lon_0=-113'+HV+JI+C+B+E+A,1,H+CI+OY+CJ+Na+HW+JI+C+B+E+A,1,H+CI+OY+CJ+UR+La+JI+C+B+E+A,1,H+UL+Ha+Hb+Ia+IA+DQ+S+E+A,1,H+UL+Ha+Hb+Hq+Gx+DQ+S+E+A,1,H+UL+Ha+Hb+Oe+Gc+DQ+S+E+A,1,H+UL+Ha+Hb+ON+Hw+DQ+S+E+A,1,H+Ce+Cf+Cg+' +lon_0=133'+IB+JH+S+E+A,1,H+Ce+Cf+Cg+ZW+LY+JH+S+E+A,1,H+Ce+Cf+Cg+Ms+LZ+JH+S+E+A,1,H+Bf+IJ+Bg+' +lon_0=176'+Hw+IN+S+E+A,1,H+Bf+IJ+Bg+YJ+Hx+IN+S+E+A,1,H+Ic+BL+BM+' +lon_0=-155'+LZ+Gb+S+E+A,1,H+AR+AS+AT+' +lon_0=-5'+ZK+EM+C+B+E+A,3,I+Ik+i+Lg+t+A,1,I+Ik+i+Ly+t+A,6,K+C+B+A,69,D+L+Gl+V+O+N+Y+Aw+E+A,3,K+By+Ay+' +towgs84=293.17,726.18,245.36,0,0,0,0'+A,3,I+MB+C+B+E+A,1,I+Nx+C+B+E+A,96,H+GW+GX+GY+GA+h+IK+C+E+A,4,K+j+Kd+A,1,D+L+IG+CP+h+' +y_0=-3500000'+j+Kd+E+A,4,D+L+Gl+V+IM+N+Y+Aw+E+A,2,K+C+A,4,K+C+A,3,K+C+A,3,I+Nq+C+E+A,1,I+PL+C+E+A,1,I+SK+C+E+A,1,I+TV+C+E+A,1,I+Xz+C+E+A,1,I+TY+C+E+A,1,I+RG+C+E+A,1,I+Ro+C+E+A,1,I+RH+C+E+A,1,I+TW+C+E+A,1,I+TX+C+E+A,1,I+QE+C+E+A,1,I+Ns+C+E+A,1,I+Nt+C+E+A,1,I+Nu+C+E+A,1,I+Nw+C+E+A,1,I+NP+C+E+A,1,I+NQ+C+E+A,1,I+Ik+C+E+A,1,I+IC+C+E+A,1,I+Hi+C+E+A,2,DT+Sa+Hl+ZB+OZ+s+N+C+E+A,1,H+AR+AS+AT+' +lon_0=-163'+Gx+EM+C+E+A,1,H+AR+AS+AT+Qr+Gc+EM+C+E+A,1,H+CI+OY+CJ+SX+Gw+JI+C+E+A,1,H+CI+OY+CJ+Qr+Hv+JI+C+E+A,1,D+IY+IV+Pc+h+N+C+E+A,1,D+Gm+OS+BG+a+N+C+E+A,6,H+' +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102'+Ci+N+C+B+E+A,3,K+C+B+A,1,I+Ns+C+B+E+A,1,I+Nt+C+B+E+A,1,I+Nu+C+B+E+A,1,I+Nw+C+B+E+A,1,I+NP+C+B+E+A,1,I+NQ+C+B+E+A,1,H+' +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102'+Ci+N+C+B+E+A,9,D+L+Gl+' +k=1'+AI+N+M+CC+E+A,1,D+L+II+' +k=1'+AI+N+M+CC+E+A,1,D+L+HO+' +k=1'+AI+N+M+CC+E+A,1,D+L+Ia+' +k=1'+AI+N+M+CC+E+A,1,D+L+IG+' +k=1'+AI+N+M+CC+E+A,1,D+L+PN+' +k=1'+AI+N+M+CC+E+A,1,D+L+LN+' +k=1'+AI+N+M+CC+E+A,4,H+' +lat_1=19.33333333333333 +lat_2=19.7 +lat_0=19.33333333333333 +lon_0=-80.56666666666666 +x_0=899160 +y_0=579120'+C+B+t+A,2,DT+' +lat_1=55'+QY+Yu+Ms+s+N+C+E+A,1,CU+' +lat_0=57'+Ku+Kv+V+LX+EO+KE+GZ+C+E+A,1,D+Ft+YN+V+O+N+C+E+A,1,D+Ft+YO+V+O+N+C+E+A,1,D+Ft+ON+V+O+N+C+E+A,1,D+Ft+Ms+V+O+N+C+E+A,1,D+Ft+KI+V+O+N+C+E+A,1,D+Ft+YP+V+O+N+C+E+A,1,D+Ft+YQ+V+O+N+C+E+A,1,D+Ft+SW+V+O+N+C+E+A,1,H+Kw+Kx+UK+YR+BZ+N+C+E+A,1,D+Bl+Co+V+EX+N+C+E+A,1,D+Bl+Co+V+EX+N+C+t+A,1,D+Bl+Cn+V+EX+N+C+E+A,1,D+Bl+Cn+V+EX+N+C+t+A,1,D+Bl+Iv+BG+EX+N+C+E+A,1,D+Bl+Iv+BG+EX+N+C+t+A,1,H+Dx+Dy+BC+IF+u+N+C+E+A,1,H+Dx+Dy+BC+IF+Au+N+C+J+A,1,H+Dz+Mq+EA+IF+u+Is+C+E+A,1,H+Dz+Mq+EA+IF+Au+Gt+C+J+A,1,DT+Yy+SY+L+Mt+s+QZ+C+E+A,1,H+DW+Jn+y+HA+Bd+Ae+C+E+A,1,H+DW+Jn+y+HA+Ac+AD+C+J+A,1,H+DX+DY+AA+HA+Bd+Ae+C+E+A,1,H+DX+DY+AA+HA+Ac+AD+C+J+A,1,H+Ap+DZ+Ml+AJ+Bd+Ae+C+E+A,1,H+Ap+DZ+Ml+AJ+Ac+AD+C+J+A,1,H+LO+QS+Da+Mm+Bd+Ae+C+E+A,1,H+LO+QS+Da+Mm+Ac+AD+C+J+A,1,H+Db+Dc+Mn+Ir+Bd+Ae+C+E+A,1,H+Db+Dc+Mn+Ir+Ac+AD+C+J+A,1,H+Dd+De+Df+Iw+Bd+Ae+C+E+A,1,H+Dd+De+Df+Iw+Ac+AD+C+J+A,1,H+LP+LQ+CY+Ba+Fw+Fx+C+E+A,1,H+LP+LQ+CY+Ba+Bw+CL+C+J+A,1,H+Eh+Ei+y+Ba+Fw+Fx+C+E+A,1,H+Eh+Ei+y+Ba+Bw+CL+C+J+A,1,H+Ap+Dg+f+Ba+Fw+Fx+C+E+A,1,H+Ap+Dg+f+Ba+Bw+CL+C+J+A,1,H+Dh+Mo+Di+Jq+QG+QH+C+E+A,1,H+Dh+Mo+Di+Jq+MC+MD+C+J+A,1,D+Ch+Cp+Mp+h+N+C+E+A,1,D+Ch+Cp+Mp+AE+N+C+J+A,1,D+Aq+CR+Am+h+N+C+E+A,1,D+Aq+CR+Am+AE+N+C+J+A,1,DT+' +lat_1=24'+YG+' +lat_0=24'+NV+u+N+C+E+A,1,H+LR+Dj+QT+LS+a+N+C+E+A,1,H+LR+Dj+QT+LS+a+N+C+J+A,1,D+Aq+Ob+Am+h+N+C+E+A,1,D+Aq+Ob+Am+AE+N+C+J+A,1,D+Gm+Cq+V+h+N+C+E+A,1,D+Gm+Cq+V+AE+N+C+J+A,1,D+Gm+Cr+V+EW+N+C+E+A,1,D+Gm+Cr+V+CM+N+C+J+A,1,D+p+Jb+BJ+O+N+C+E+A,1,D+p+Jb+BJ+AF+N+C+J+A,1,D+p+Cs+BJ+h+N+C+E+A,1,D+p+Cs+BJ+AE+N+C+J+A,1,D+p+Ix+BG+CX+N+C+E+A,1,D+p+Ix+BG+ME+N+C+J+A,1,D+f+Cz+EQ+AI+N+C+E+A,1,D+f+Cz+EQ+AI+N+C+J+A,1,D+f+DA+Am+EW+N+C+E+A,1,D+f+DA+Am+MO+N+C+J+A,1,D+DM+DB+AO+BU+KJ+C+E+A,1,D+DM+DB+AO+MM+GI+C+J+A,1,D+DM+DC+AO+HT+KJ+C+E+A,1,D+DM+DC+AO+HT+GI+C+J+A,1,H+EB+EC+Fo+GG+AV+AH+C+E+A,1,H+EB+EC+Fo+GG+AV+GJ+C+J+A,1,H+AY+ED+Fs+GG+O+N+C+E+A,1,H+AY+ED+Fs+GG+AG+N+C+J+A,1,H+EE+EF+AQ+Fl+u+N+C+E+A,1,H+EE+EF+AQ+Fl+Au+N+C+J+A,1,H+EG+EH+f+CV+u+Is+C+E+A,1,H+EG+EH+f+CV+Au+Gt+C+J+A,1,H+Az+DV+DM+Jo+O+N+C+E+A,1,H+Az+DV+DM+Jo+AF+N+C+J+A,1,H+Fi+Fj+AB+EY+AV+AH+C+E+A,1,H+Fi+Fj+AB+EY+AV+CN+C+J+A,1,H+Ej+Ek+AB+EY+O+Ae+C+E+A,1,H+Ej+Ek+AB+EY+AF+AD+C+J+A,1,H+FS+FT+IY+Hg+BZ+N+C+E+A,1,H+FS+FT+IY+Hg+Eb+N+C+J+A,1,H+OH+OI+OJ+Bi+BZ+N+C+E+A,1,H+OH+OI+OJ+Bi+Eb+N+C+J+A,1,D+YM+Rj+JE+O+N+C+E+A,1,D+AL+Rf+JE+EW+N+C+E+A,1,D+BD+Rg+JE+AI+N+C+E+A,1,D+AK+HJ+V+AI+N+C+E+A,1,D+AK+HJ+V+AI+N+C+J+A,1,D+BD+DD+AO+HT+N+C+E+A,1,D+BD+DD+AO+HT+N+C+J+A,1,H+MU+Nz+AA+Ld+u+N+C+E+A,1,H+MU+Nz+AA+Ld+MF+N+C+J+A,1,H+Em+En+Ip+IL+O+N+C+E+A,1,H+Em+En+Ip+IL+AF+N+C+J+A,1,H+El+Dk+Ip+GE+h+Mk+C+E+A,1,H+El+Dk+Ip+GE+AE+Mk+C+J+A,1,H+OA+Er+Es+BE+Pk+N+C+E+A,1,H+OA+Er+Es+BE+MH+N+C+t+A,1,H+Eo+Ep+Eq+Jh+Tl+N+C+E+A,1,H+Eo+Ep+Eq+Jh+MG+N+C+t+A,1,CU+Kr+' +lonc=-86'+QI+AP+QJ+PY+KE+QK+C+E+A,1,H+Bq+OB+Fo+BE+LU+N+C+E+A,1,H+Bq+OB+Fo+BE+OT+N+C+t+A,1,H+Ma+FW+IP+Js+CX+EK+C+E+A,1,H+Ma+FW+IP+Js+An+Ao+C+J+A,1,H+FU+FV+Iq+DE+CX+EK+C+E+A,1,H+FU+FV+Iq+DE+An+Ao+C+J+A,1,H+FX+FY+Nj+Na+CX+EK+C+E+A,1,H+FX+FY+Nj+Na+An+Ao+C+J+A,1,D+Hj+Ct+CP+AI+N+C+E+A,1,D+Hj+Ct+CP+AI+N+C+J+A,1,D+Li+Sj+Tn+O+Pm+C+E+A,1,D+Hj+Bx+CP+EW+N+C+E+A,1,D+Hj+Bx+CP+CM+N+C+J+A,1,D+Cd+Hg+BG+O+N+C+E+A,1,D+Cd+RS+BG+Bv+N+C+E+A,1,D+Id+RT+Am+YC+N+C+E+A,1,H+LM+RK+MV+IS+a+N+C+E+A,1,H+LM+RK+MV+IS+DR+N+C+t+A,1,H+JT+Jn+FZ+CS+O+N+C+E+A,2,D+CQ+DG+V+O+Hh+C+E+A,1,D+CQ+DG+V+AG+Hh+C+J+A,1,D+CQ+DF+V+h+Tm+C+E+A,1,D+CQ+DF+V+Gu+MN+C+J+A,1,D+CQ+DH+V+CX+LV+C+E+A,1,D+CQ+DH+V+An+NE+C+J+A,1,D+Fp+DI+AO+AI+N+C+E+A,1,D+Fp+DI+AO+AI+N+C+J+A,1,D+BA+Gp+V+Bn+N+C+E+A,1,D+BA+Gp+V+Bn+N+C+J+A,1,D+Bl+Iy+V+O+N+C+E+A,1,D+Bl+Iy+V+AF+N+C+J+A,1,D+Bl+Cu+Hm+OC+N+C+E+A,1,D+Bl+Cu+Hm+OC+N+C+J+A,1,D+Bl+Cv+Iz+YD+N+C+E+A,1,D+Bl+Cv+Iz+MI+N+C+J+A,1,D+Fs+Cw+Ad+Bv+N+C+E+A,1,D+Fs+Cw+Ad+MJ+N+C+J+A,1,D+BA+Gp+V+Bn+N+C+E+A,1,D+BA+Gp+V+Bn+N+C+J+A,1,H+Dl+Dm+BB+Oc+AI+N+C+E+A,1,H+Dl+Dm+BB+Oc+AI+N+C+J+A,1,D+Fs+Cx+Ad+Qo+N+C+E+A,1,D+Fs+Cx+Ad+MK+N+C+J+A,1,H+Et+Eu+LT+NW+Rh+N+C+E+A,1,H+Et+Eu+LT+NW+Z+N+C+J+A,1,H+BH+Ev+Ib+EZ+a+N+C+E+A,1,H+BH+Ev+Ib+EZ+DR+N+C+t+A,1,H+Ew+Ex+Be+EZ+a+N+C+E+A,1,H+Ew+Ex+Be+EZ+DR+N+C+t+A,1,H+OK+Fa+BY+ET+a+N+C+E+A,1,H+OK+Fa+BY+ET+a+N+C+J+A,1,H+Fb+Fc+Ch+ET+a+N+C+E+A,1,H+Fb+Fc+Ch+ET+a+N+C+J+A,1,H+Dn+Ey+QU+Fl+a+N+C+E+A,1,H+Dn+Ey+QU+Fl+a+N+C+J+A,1,H+Ez+FA+Do+Fl+a+N+C+E+A,1,H+Ez+FA+Do+Fl+a+N+C+J+A,1,H+JT+Hl+GH+AJ+u+N+C+E+A,1,H+JT+Hl+GH+AJ+Lc+N+C+t+A,1,H+PP+CZ+AK+AJ+Ci+N+C+E+A,1,H+PP+CZ+AK+AJ+KL+N+C+t+A,1,H+PQ+Ca+p+AJ+AV+N+C+E+A,1,H+PQ+Ca+p+AJ+KM+N+C+t+A,1,H+MW+FB+BB+Ea+a+N+C+E+A,1,H+MW+FB+BB+Ea+a+N+C+J+A,1,H+Dp+Dq+y+Ea+a+N+C+E+A,1,H+Dp+Dq+y+Ea+a+N+C+J+A,1,H+GW+GX+GY+GA+h+IK+C+E+A,1,D+EI+GE+Lb+BU+N+C+E+A,1,D+EI+GE+Lb+JV+N+C+J+A,1,H+FC+OD+Dr+CR+OE+N+C+E+A,1,H+FC+OD+Dr+CR+OE+N+C+t+A,1,H+Fd+Fe+AL+CS+a+N+C+E+A,1,H+Fd+Fe+AL+CS+a+N+C+J+A,1,H+OL+Ff+EJ+Ag+a+N+C+E+A,1,H+OL+Ff+EJ+Ag+a+N+C+J+A,1,H+FD+MX+BC+MQ+a+N+C+E+A,1,H+FD+MX+BC+MQ+a+N+C+J+A,1,H+FH+FI+Cb+Ag+EW+Fq+C+E+A,1,H+FH+FI+Cb+Ag+CM+Fq+C+J+A,1,DT+OM+RO+OX+CS+AV+Hh+C+E+A,1,H+OM+RO+OX+CS+AV+Ju+C+E+A,1,H+FE+MY+QV+Jr+h+AH+C+E+A,1,H+FE+MY+QV+Jr+AE+CN+C+J+A,1,H+FF+FG+Ds+CV+a+Cl+C+E+A,1,H+FF+FG+Ds+CV+a+Gr+C+J+A,1,H+CD+CE+Cc+CV+AI+Ju+C+E+A,1,H+CD+CE+Cc+CV+AI+Nf+C+J+A,1,H+FJ+FK+Dt+Ji+a+LV+C+E+A,1,H+FJ+FK+Dt+Ji+a+Ne+C+J+A,1,D+Fp+LW+JA+O+N+C+E+A,1,D+Fp+LW+JA+AG+N+C+J+A,1,H+' +lat_1=37'+YS+GM+Ga+s+N+C+E+A,1,H+OF+FL+AA+GF+Bo+Cl+C+E+A,1,H+OF+FL+AA+GF+Gs+Gr+C+J+A,1,H+Az+Du+AB+GF+Bo+AH+C+E+A,1,H+Az+Du+AB+GF+Gs+CN+C+J+A,1,H+BH+OG+Ib+Cy+O+N+C+E+A,1,H+BH+OG+Ib+Cy+AF+N+C+J+A,1,H+FM+FN+Dv+AJ+O+N+C+E+A,1,H+FM+FN+Dv+AJ+AF+N+C+J+A,1,H+Mb+RN+Mr+Ga+a+N+C+E+A,1,H+Mb+RN+Mr+Ga+a+N+C+J+A,1,H+Fg+Fh+QX+CR+a+N+C+E+A,1,H+Fg+Fh+QX+CR+a+N+C+J+A,2,H+Jc+MZ+AL+Bu+a+N+C+J+A,1,H+FO+FP+Dw+Bu+a+N+C+E+A,1,H+FO+FP+Dw+Bu+a+N+C+J+A,1,H+FQ+FR+PR+Bu+a+N+C+E+A,1,H+FQ+FR+PR+Bu+a+N+C+J+A,1,D+L+Bu+AP+YF+Sh+C+E+A,1,D+CA+DJ+Ad+h+N+C+E+A,1,D+CA+DJ+Ad+Gu+N+C+J+A,1,D+CA+DK+Ad+u+EK+C+E+A,1,D+CA+DK+Ad+Au+Ao+C+J+A,1,D+CA+DL+Ad+CX+EK+C+E+A,1,D+CA+DL+Ad+An+Ao+C+J+A,1,D+CA+JB+Ad+a+N+C+E+A,1,D+CA+JB+Ad+a+N+C+J+A,1,H+JF+CG+AQ+BI+O+Cl+C+E+A,1,H+AY+CF+Br+BI+O+AH+C+E+A,1,H+JG+CH+f+BI+O+Fq+C+E+A,1,H+UF+Nh+IZ+HJ+s+N+C+B+E+A,1,DT+UF+Nh+IZ+HJ+s+N+C+B+E+A,1,DT+UF+Nh+IZ+HJ+s+N+C+B+E+A,1,H+JF+CG+AQ+BI+AG+NF+C+J+A,1,H+AY+CF+Br+BI+AG+GJ+C+J+A,1,H+JG+CH+f+BI+AG+Fq+C+J+A,1,D+Kn+Sf+AO+O+N+C+E+A,1,D+Ko+KO+AO+O+N+C+E+A,1,D+GV+KI+Jl+O+N+C+E+A,1,D+Kp+Sg+Jl+O+N+C+E+A,1,D+Kq+KP+' +k=1'+O+N+C+E+A,1,D+GV+KI+Jl+AG+N+C+J+A,1,I+TY+C+E+A,1,I+RG+C+E+A,1,I+TV+o+C+E+A,1,D+' +lat_0=13.5 +lon_0=144.75 +k=1'+BU+IK+C+E+A,9,D+WJ+' +lon_0=46.5 +k=0.9994'+CX+N+Bc+Ge+EU+E+A,22,K+C+A,1,D+PT+Zz+V+s+N+C+E+A,1,D+PT+NX+V+s+N+C+E+A,1,D+GM+Ox+V+s+N+C+E+A,1,D+PT+Tk+V+s+N+C+E+A,1,D+GM+Oy+V+s+N+C+E+A,1,D+GM+Rw+V+s+N+C+E+A,1,D+GM+Oz+V+s+N+C+E+A,1,D+GM+aA+V+s+N+C+E+A,1,D+GM+PA+V+s+N+C+E+A,1,D+Fs+PB+V+s+N+C+E+A,1,D+IZ+ZH+V+s+N+C+E+A,1,D+IZ+ZI+V+s+N+C+E+A,1,D+IZ+ZJ+V+s+N+C+E+A,1,D+IQ+' +lon_0=142'+V+s+N+C+E+A,1,D+IQ+Pj+V+s+N+C+E+A,1,D+IQ+' +lon_0=124'+V+s+N+C+E+A,1,D+IQ+NX+V+s+N+C+E+A,1,D+' +lat_0=20'+Rw+V+s+N+C+E+A,1,D+IQ+ZR+V+s+N+C+E+A,1,I+Mg+C+E+A,1,I+NT+C+E+A,1,I+Ot+C+E+A,1,I+Nv+C+E+A,1,I+PM+C+E+A,11,D+L+US+AP+O+Ak+j+B+E+A,3,K+C+B+A,1,I+JN+C+B+E+A,1,I+KC+C+B+E+A,1,I+NR+C+B+E+A,11,D+L+' +lon_0=105.625 +k=1.000024'+Jm+Pm+j+B+E+A,1,D+L+' +lon_0=105.625 +k=1.00002514'+Jm+Pm+C+B+E+A,1,D+L+' +lon_0=96.875 +k=1'+Jm+' +y_0=1400000'+j+B+E+A,1,D+L+' +lon_0=96.875 +k=0.99999387'+Jm+DQ+C+B+E+A,13,I+QF+o+C+B+E+A,1,I+Ny+o+C+B+E+A,1,I+Nq+o+C+B+E+A,45,K+C+A,1,D+OO+KS+SB+Of+N+C+E+A,1,D+OO+KS+SB+JJ+N+C+t+A,1,D+OO+KS+SB+Of+N+C+E+A,1,D+OO+KS+SB+JJ+N+C+t+A,1,D+GH+Rk+' +k=1.0002'+Oa+N+C+E+A,1,D+GH+Rk+' +k=1.0002'+HL+N+C+t+A,1,D+GH+Rk+' +k=1.0002'+Oa+N+C+E+A,1,D+GH+Rk+' +k=1.0002'+HL+N+C+t+A,1,H+Ky+Kz+Rl+Mc+Oa+' +y_0=130000'+C+E+A,1,H+Ky+Kz+Rl+Mc+HL+Zo+C+t+A,1,H+Ky+Kz+Rl+Mc+Oa+' +y_0=130000'+C+E+A,1,H+Ky+Kz+Rl+Mc+HL+Zo+C+t+A,1,H+Bq+AK+Rm+YU+' +x_0=120000 +y_0=60000'+C+E+A,1,H+Bq+AK+Rm+YU+Zp+aM+C+t+A,1,H+Bq+AK+Rm+YU+' +x_0=120000 +y_0=60000'+C+E+A,1,H+Bq+AK+Rm+YU+Zp+aM+C+t+A,1,D+Fp+Bj+Ze+Of+N+C+E+A,1,D+Fp+Bj+Ze+JJ+N+C+t+A,1,D+Fp+Bj+Ze+Of+N+C+E+A,1,D+Fp+Bj+Ze+JJ+N+C+t+A,1,H+LA+Be+AJ+Sk+Bn+' +y_0=30000'+C+E+A,1,H+LA+Be+AJ+Sk+Ng+aN+C+t+A,1,H+LA+Be+AJ+Sk+Bn+' +y_0=30000'+C+E+A,1,H+LA+Be+AJ+Sk+Ng+aN+C+t+A,1,CU+LB+Zf+Zg+' +k=1'+Tp+ZL+KE+Zh+C+E+A,1,CU+LB+Zf+Zg+' +k=1'+ZN+Zq+KE+Zh+C+t+A,1,CU+LB+Zf+Zg+' +k=1'+Tp+ZL+KE+Zh+C+E+A,1,CU+LB+Zf+Zg+' +k=1'+ZN+Zq+KE+Zh+C+t+A,1,D+BD+Bj+YV+Jm+N+C+E+A,1,D+BD+Bj+YV+HM+N+C+t+A,1,D+BD+Bj+YV+Jm+N+C+E+A,1,D+BD+Bj+YV+HM+N+C+t+A,1,D+OO+YW+Zi+Oa+N+C+E+A,1,D+OO+YW+Zi+HL+N+C+t+A,1,D+OO+YW+Zi+Oa+N+C+E+A,1,D+OO+YW+Zi+HL+N+C+t+A,1,D+Tq+KT+Lk+Jm+N+C+E+A,1,D+Tq+KT+Lk+HM+N+C+t+A,1,D+Tq+KT+Lk+Jm+N+C+E+A,1,D+Tq+KT+Lk+HM+N+C+t+A,1,D+GH+Bj+Qs+Jm+N+C+E+A,1,D+GH+Bj+Qs+HM+N+C+t+A,1,D+GH+Bj+Qs+Jm+N+C+E+A,1,D+GH+Bj+Qs+HM+N+C+t+A,1,D+IP+KU+Zj+' +x_0=10000'+N+C+E+A,1,D+IP+KU+Zj+aV+N+C+t+A,1,D+IP+KU+Zj+' +x_0=10000'+N+C+E+A,1,D+IP+KU+Zj+aV+N+C+t+A,1,D+IP+Ir+Zk+Of+N+C+E+A,1,D+IP+Ir+Zk+JJ+N+C+t+A,1,D+IP+Ir+Zk+Of+N+C+E+A,1,D+IP+Ir+Zk+JJ+N+C+t+A,1,D+Tr+Lj+' +k=1.0001'+Oa+N+C+E+A,1,D+Tr+Lj+' +k=1.0001'+HL+N+C+t+A,1,D+Tr+Lj+' +k=1.0001'+Oa+N+C+E+A,1,D+Tr+Lj+' +k=1.0001'+HL+N+C+t+A,1,CU+Pn+Sl+' +alpha=5 +k=1 +x_0=-300000 +y_0=-4600000'+KE+' +gamma=5'+C+E+A,1,CU+Pn+Sl+' +alpha=5 +k=1'+Zr+Yp+KE+' +gamma=5'+C+t+A,1,CU+Pn+Sl+' +alpha=5 +k=1 +x_0=-300000 +y_0=-4600000'+KE+' +gamma=5'+C+E+A,1,CU+Pn+Sl+' +alpha=5 +k=1'+Zr+Yp+KE+' +gamma=5'+C+t+A,1,D+Ts+KV+Sb+' +x_0=60000'+N+C+E+A,1,D+Ts+KV+Sb+aO+N+C+t+A,1,D+Ts+KV+Sb+' +x_0=60000'+N+C+E+A,1,D+Ts+KV+Sb+aO+N+C+t+A,1,D+LC+IW+YX+Zl+N+C+E+A,1,D+LC+IW+YX+aP+N+C+t+A,1,D+LC+IW+YX+Zl+N+C+E+A,1,D+LC+IW+YX+aP+N+C+t+A,1,H+Jc+YY+Rn+Sm+BU+Rz+C+E+A,1,H+Jc+YY+Rn+Sm+JW+Ra+C+t+A,1,H+Jc+YY+Rn+Sm+BU+Rz+C+E+A,1,H+Jc+YY+Rn+Sm+JW+Ra+C+t+A,1,D+LD+KW+Zm+Jm+N+C+E+A,1,D+LD+KW+Zm+HM+N+C+t+A,1,D+LD+KW+Zm+Jm+N+C+E+A,1,D+LD+KW+Zm+HM+N+C+t+A,1,D+LE+Sn+YZ+s+N+C+E+A,1,D+LE+Sn+YZ+s+N+C+t+A,1,D+LE+Sn+YZ+s+N+C+E+A,1,D+LE+Sn+YZ+s+N+C+t+A,4,H+JT+Hl+GH+AJ+u+N+C+E+A,1,H+JT+Hl+GH+AJ+Lc+N+C+t+A,2,D+L+UI+' +k=1'+O+N+C+B+E+A,5,D+L+IH+' +k=0.9985000000000001'+Tp+N+C+B+E+A,1,D+L+IH+' +k=1'+aH+N+C+B+E+A,3,H+Jc+MZ+AL+Bu+a+N+C+E+A,1,H+JT+Jn+FZ+CS+AG+N+C+J+A,1,K+Bc+Ge+' +towgs84=-24,-203,268,0,0,0,0'+A,1,K+Bc+Ge+' +towgs84=-183,-15,273,0,0,0,0'+A,1,K+R+' +towgs84=-235,-110,393,0,0,0,0'+A,1,H+PP+CZ+AK+AJ+Ci+N+C+E+A,1,H+PP+CZ+AK+AJ+KL+N+C+t+A,1,H+PQ+Ca+p+AJ+AV+N+C+E+A,1,H+PQ+Ca+p+AJ+KM+N+C+t+A,5,K+Bc+Ge+PK+A,2,K+Bc+Ge+' +towgs84=-63,176,185,0,0,0,0'+A,21,I+Me+Bc+Ge+PK+E+A,7,H+Sc+Ya+GM+So+u+N+C+B+E+A,1,H+Sc+Ya+GM+So+Au+N+C+B+J+A,1,H+Sc+Ya+GM+So+u+N+C+E+A,1,H+Sc+Ya+GM+So+Au+N+C+J+A,6,He+Hr+HN+s+N+j+B+E+A,1,He+m+HN+s+N+j+B+E+A,1,'+proj=cea'+HN+' +lat_ts=30'+s+N+j+B+E+A,29,H+' +lat_1=39 +lat_2=43'+Ip+UI+s+N+C+B+E+A,21,K+C+A,1,D+Ou+Ov+Zw+UV+Yl+C+E+A,6,K+C+A,1,D+Ou+Ov+Zw+UV+Yl+C+E+A,14,I+KD+Bc+Ge+DO+E+A,1,I+JZ+Bc+Ge+DO+E+A,1,I+JM+Bc+Ge+DO+E+A,28,K+C+A,2,K+C+A,2,K+C+A,2,K+C+A,16,H+' +lat_1=43.2 +lat_0=43.2 +lon_0=-95.25 +k_0=1.000052 +x_0=3505207.010414021 +y_0=2926085.852171705'+C+J+A,1,H+' +lat_1=43.16666666666666 +lat_0=43.16666666666666 +lon_0=-92.75 +k_0=1.000043 +x_0=3810007.62001524 +y_0=2987045.974091948'+C+J+A,1,D+Md+' +lon_0=-91.2 +k=1.000035 +x_0=4114808.229616459 +y_0=2529845.05969012'+C+J+A,1,H+' +lat_1=42.53333333333333 +lat_0=42.53333333333333 +lon_0=-94.83333333333333 +k_0=1.000045 +x_0=4419608.839217679 +y_0=2621285.242570485'+C+J+A,1,H+' +lat_1=42.65 +lat_0=42.65 +lon_0=-92.25 +k_0=1.000032 +x_0=4724409.448818898 +y_0=2712725.425450851'+C+J+A,1,D+Md+' +lon_0=-95.73333333333333 +k=1.000039 +x_0=5029210.058420117 +y_0=2011684.023368047'+C+J+A,1,D+Md+' +lon_0=-94.63333333333334'+Sb+' +x_0=5334010.668021336 +y_0=2072644.145288291'+C+J+A,1,D+Md+' +lon_0=-93.71666666666667 +k=1.000033 +x_0=5638811.277622555 +y_0=2133604.267208535'+C+J+A,1,D+Md+' +lon_0=-92.81666666666666'+OP+' +x_0=5943611.887223775 +y_0=2194564.389128779'+C+J+A,1,H+' +lat_1=41.83333333333334 +lat_0=41.83333333333334 +lon_0=-91.66666666666667 +k_0=1.00002 +x_0=6248412.496824994 +y_0=2438404.876809754'+C+J+A,1,D+Md+' +lon_0=-90.53333333333333'+OP+' +x_0=6553213.106426213 +y_0=2316484.632969266'+C+J+A,1,H+' +lat_1=40.91666666666666 +lat_0=40.91666666666666 +lon_0=-93.75 +k_0=1.000037 +x_0=6858013.716027432'+Yq+C+J+A,1,D+Md+Oo+Og+' +x_0=7162814.325628651 +y_0=1950723.901447803'+C+J+A,1,D+Md+' +lon_0=-91.25 +k=1.000018 +x_0=7467614.93522987'+Yq+C+J+A,3,K+C+A,1,I+KD+o+C+E+A,1,I+JZ+o+C+E+A,1,I+JM+o+C+E+A,1,I+Me+o+C+E+A,1,I+Rb+o+C+E+A,1,I+Rc+o+C+E+A,1,I+SO+o+C+E+A,1,I+Td+o+C+E+A,3,K+C+A,2,K+C+A,23,D+Qt+Sp+SB+Bn+N+C+E+A,1,D+' +lat_0=48'+Sp+' +k=1.00019'+BU+N+C+E+A,1,H+Yb+Qt+KK+' +k_0=1.000145'+Bn+IK+C+E+A,1,H+Yb+Qt+' +lon_0=-108.5'+Mc+h+' +y_0=150000'+C+E+A,1,H+LF+LG+Ba+Mc+h+EK+C+E+A,1,H+LF+LG+Ba+' +k_0=1.00009'+BU+Rz+C+E+A,1,D+Pn+' +lon_0=-107.75 +k=1.000148'+h+N+C+E+A,1,H+aI+' +lat_0=46.25 +lon_0=-111.25 +k_0=1.000185'+BU+EK+C+E+A,1,H+WV+WW+Ub+' +k_0=1.0001515'+h+Rz+C+E+A,1,D+WX+Uc+' +k=1.00024'+BU+N+C+E+A,1,D+Qt+Sp+SB+Ng+N+C+t+A,1,D+' +lat_0=48'+Sp+' +k=1.00019'+JW+N+C+t+A,1,H+Yb+Qt+KK+' +k_0=1.000145'+Ng+' +y_0=199999.9999992'+C+t+A,1,H+Yb+Qt+' +lon_0=-108.5'+Mc+OU+' +y_0=150000.00001464'+C+t+A,1,H+LF+LG+Ba+Mc+OU+Yr+C+t+A,1,H+LF+LG+Ba+' +k_0=1.00009'+JW+' +y_0=49999.99971024'+C+t+A,1,D+Pn+' +lon_0=-107.75 +k=1.000148'+OU+N+C+t+A,1,H+aI+' +lat_0=46.25 +lon_0=-111.25 +k_0=1.000185'+JW+Yr+C+t+A,1,H+WV+WW+Ub+' +k_0=1.0001515'+OU+Ra+C+t+A,1,D+WX+Uc+' +k=1.00024'+JV+N+C+J+A,3,D+Po+' +lon_0=-122.45 +k=1.000007 +x_0=48000 +y_0=24000'+C+E+A,1,D+Po+' +lon_0=-122.45 +k=1.000007 +x_0=48000 +y_0=24000'+C+J+A,1,K+C+A,3,K+j+A,3,K+j+A,3,D+LH+LI+' +k=1'+Qx+' +y_0=126867.909'+Nc+Nd+' +towgs84=-275.7224,94.7824,340.8944,-8.001,-4.42,-11.821,1'+E+A,115,D+Pp+Sq+Ll+l+q+C+E+A,1,D+Pp+Sq+Ll+l+q+C+J+A,1,D+Qu+Oj+Lm+l+q+C+E+A,1,D+Qu+Oj+Lm+l+q+C+J+A,1,D+' +lat_0=39'+KX+Ln+l+q+C+E+A,1,D+' +lat_0=39'+KX+Ln+l+q+C+J+A,1,D+' +lat_0=40.45'+Pq+Yc+l+q+C+E+A,1,D+' +lat_0=40.45'+Pq+Yc+l+q+C+J+A,1,D+' +lat_0=40.05'+Ud+OQ+l+q+C+E+A,1,D+' +lat_0=40.05'+Ud+OQ+l+q+C+J+A,1,D+Yd+Pr+OR+l+q+C+E+A,1,D+Yd+Pr+OR+l+q+C+J+A,1,D+' +lat_0=39'+Tt+Zn+l+q+C+E+A,1,D+' +lat_0=39'+Tt+Zn+l+q+C+J+A,1,D+' +lat_0=40.4'+Ue+Ln+l+q+C+E+A,1,D+' +lat_0=40.4'+Ue+Ln+l+q+C+J+A,1,D+Pp+Uf+Qv+l+q+C+E+A,1,D+Pp+Uf+Qv+l+q+C+J+A,1,D+Tu+Ug+' +k=1.000021'+l+q+C+E+A,1,D+Tu+Ug+' +k=1.000021'+l+q+C+J+A,1,D+Tv+Uh+' +k=1.000024'+l+q+C+E+A,1,D+Tv+Uh+' +k=1.000024'+l+q+C+J+A,1,D+' +lat_0=40.15'+Ui+' +k=1.000032'+l+q+C+E+A,1,D+' +lat_0=40.15'+Ui+' +k=1.000032'+l+q+C+J+A,1,D+' +lat_0=38.1'+Pr+Qw+l+q+C+E+A,1,D+' +lat_0=38.1'+Pr+Qw+l+q+C+J+A,1,D+' +lat_0=38.45'+KY+' +k=1.000018'+l+q+C+E+A,1,D+' +lat_0=38.45'+KY+' +k=1.000018'+l+q+C+J+A,1,D+' +lat_0=38.65'+Uj+Yc+l+q+C+E+A,1,D+' +lat_0=38.65'+Uj+Yc+l+q+C+J+A,1,D+' +lat_0=39.1'+Uk+OR+l+q+C+E+A,1,D+' +lat_0=39.1'+Uk+OR+l+q+C+J+A,1,D+Tw+Sq+OR+l+q+C+E+A,1,D+Tw+Sq+OR+l+q+C+J+A,1,D+' +lat_0=38.2'+Sr+Og+l+q+C+E+A,1,D+' +lat_0=38.2'+Sr+Og+l+q+C+J+A,1,D+Tx+KX+' +k=1.000033'+l+q+C+E+A,1,D+Tx+KX+' +k=1.000033'+l+q+C+J+A,1,D+Ty+Oj+OQ+l+q+C+E+A,1,D+Ty+Oj+OQ+l+q+C+J+A,1,D+' +lat_0=39.95'+Pq+Qw+l+q+C+E+A,1,D+' +lat_0=39.95'+Pq+Qw+l+q+C+J+A,1,D+Qu+Tt+Lm+l+q+C+E+A,1,D+Qu+Tt+Lm+l+q+C+J+A,1,D+Tu+Ul+Ye+l+q+C+E+A,1,D+Tu+Ul+Ye+l+q+C+J+A,1,D+Tz+' +lon_0=-85.7'+Ll+l+q+C+E+A,1,D+Tz+' +lon_0=-85.7'+Ll+l+q+C+J+A,1,D+' +lat_0=39.9'+MQ+Ll+l+q+C+E+A,1,D+' +lat_0=39.9'+MQ+Ll+l+q+C+J+A,1,D+' +lat_0=39.65'+UA+OR+l+q+C+E+A,1,D+' +lat_0=39.65'+UA+OR+l+q+C+J+A,1,D+' +lat_0=37.95'+HC+OP+l+q+C+E+A,1,D+' +lat_0=37.95'+HC+OP+l+q+C+J+A,1,D+' +lat_0=39.75'+Ss+Qs+l+q+C+E+A,1,D+' +lat_0=39.75'+Ss+Qs+l+q+C+J+A,1,D+Tz+HC+Lm+l+q+C+E+A,1,D+Tz+HC+Lm+l+q+C+J+A,1,D+Tx+To+Ll+l+q+C+E+A,1,D+Tx+To+Ll+l+q+C+J+A,1,D+' +lat_0=38.7 +lon_0=-85.95'+Yf+l+q+C+E+A,1,D+' +lat_0=38.7 +lon_0=-85.95'+Yf+l+q+C+J+A,1,D+Yg+KY+OP+l+q+C+E+A,1,D+Yg+KY+OP+l+q+C+J+A,1,D+' +lat_0=40.3'+SA+OQ+l+q+C+E+A,1,D+' +lat_0=40.3'+SA+OQ+l+q+C+J+A,1,D+' +lat_0=38.55'+Um+Qv+l+q+C+E+A,1,D+' +lat_0=38.55'+Um+Qv+l+q+C+J+A,1,D+' +lat_0=38.8'+UA+Qw+l+q+C+E+A,1,D+' +lat_0=38.8'+UA+Qw+l+q+C+J+A,1,D+Yh+HC+Lm+l+q+C+E+A,1,D+Yh+HC+Lm+l+q+C+J+A,1,D+' +lat_0=38.4'+St+Lk+l+q+C+E+A,1,D+' +lat_0=38.4'+St+Lk+l+q+C+J+A,1,D+Tw+Ss+' +k=1.000037'+l+q+C+E+A,1,D+Tw+Ss+' +k=1.000037'+l+q+C+J+A,1,D+Yg+Un+Ln+l+q+C+E+A,1,D+Yg+Un+Ln+l+q+C+J+A,1,D+Qu+' +lon_0=-86.75'+OP+l+q+C+E+A,1,D+Qu+' +lon_0=-86.75'+OP+l+q+C+J+A,1,D+' +lat_0=38.95'+Pr+Qv+l+q+C+E+A,1,D+' +lat_0=38.95'+Pr+Qv+l+q+C+J+A,1,D+' +lat_0=39.45'+Sr+Lm+l+q+C+E+A,1,D+' +lat_0=39.45'+Sr+Lm+l+q+C+J+A,1,D+Tv+KZ+Ln+l+q+C+E+A,1,D+Tv+KZ+Ln+l+q+C+J+A,1,D+Yd+Uo+Yf+l+q+C+E+A,1,D+Yd+Uo+Yf+l+q+C+J+A,1,D+Yi+' +lon_0=-86.7'+Og+l+q+C+E+A,1,D+Yi+' +lon_0=-86.7'+Og+l+q+C+J+A,1,D+' +lat_0=37.85'+Pq+Lk+l+q+C+E+A,1,D+' +lat_0=37.85'+Pq+Lk+l+q+C+J+A,1,D+Po+' +lon_0=-87.95'+Ye+l+q+C+E+A,1,D+Po+' +lon_0=-87.95'+Ye+l+q+C+J+A,1,D+' +lat_0=39.7'+Oj+' +k=1.000044'+l+q+C+E+A,1,D+' +lat_0=39.7'+Oj+' +k=1.000044'+l+q+C+J+A,1,D+Yj+' +lon_0=-85.3'+OQ+l+q+C+E+A,1,D+Yj+' +lon_0=-85.3'+OQ+l+q+C+J+A,1,D+Yh+Up+Zn+l+q+C+E+A,1,D+Yh+Up+Zn+l+q+C+J+A,1,D+Po+' +lon_0=-87.05 +k=1.000014'+l+q+C+E+A,1,D+Po+' +lon_0=-87.05 +k=1.000014'+l+q+C+J+A,1,D+Fo+SA+' +k=1.000041'+l+q+C+E+A,1,D+Fo+SA+' +k=1.000041'+l+q+C+J+A,1,D+Yj+OS+' +k=1.000017'+l+q+C+E+A,1,D+Yj+OS+' +k=1.000017'+l+q+C+J+A,1,D+' +lat_0=40.2'+KZ+Ln+l+q+C+E+A,1,D+' +lat_0=40.2'+KZ+Ln+l+q+C+J+A,1,D+Yi+Su+Lk+l+q+C+E+A,1,D+Yi+Su+Lk+l+q+C+J+A,1,D+Ty+St+Og+l+q+C+E+A,1,D+Ty+St+Og+l+q+C+J+A,1,D+Pp+' +lon_0=-85.25'+Ll+l+q+C+E+A,1,D+Pp+' +lon_0=-85.25'+Ll+l+q+C+J+A,3,K+C+B+A,1,I+JM+C+B+E+A,1,I+Me+C+B+E+A,1,I+Rb+C+B+E+A,152,D+WY+Bu+' +k=1.0000365285 +x_0=147218.6942 +y_0=0.0037'+C+E+A,1,D+WZ+Uq+' +k=1.0000495683 +x_0=172821.9461 +y_0=0.0017'+C+E+A,1,D+Wa+Ur+' +k=1.0000486665 +x_0=93150 +y_0=0.0029'+C+E+A,1,H+Wb+Wc+Us+' +k_0=1.0000331195 +x_0=228600.4575 +y_0=148551.4837'+C+E+A,1,D+Nj+' +lon_0=-88'+Og+' +x_0=31600 +y_0=4600'+C+E+A,1,D+Wd+Ut+' +k=1.0000382778 +x_0=175260.3502 +y_0=0.0048'+C+E+A,1,H+We+Wf+Uu+' +k_0=1.0000383841 +x_0=64008.1276 +y_0=59445.9043'+C+E+A,1,D+Wg+' +lon_0=-88.5 +k=1.0000286569 +x_0=244754.8893 +y_0=0.0049'+C+E+A,1,H+Wh+Wi+Uv+' +k_0=1.0000391127 +x_0=60045.72 +y_0=44091.4346'+C+E+A,1,D+' +lat_0=43.6'+Uw+' +k=1.0000463003 +x_0=199949.1989 +y_0=0.0086'+C+E+A,1,H+Wj+Wk+Ux+' +k_0=1.00003498 +x_0=169164.3381 +y_0=111569.6134'+C+E+A,1,H+aQ+aR+Wl+' +k_0=1.0000349151 +x_0=113690.6274 +y_0=53703.1201'+C+E+A,1,H+Zs+Zt+Uy+' +k_0=1.0000384786 +x_0=247193.2944 +y_0=146591.9896'+C+E+A,1,D+Wm+Uz+' +k=1.0000346418 +x_0=263347.7263 +y_0=0.0076'+C+E+A,1,D+' +lat_0=44.4'+VA+' +k=1.0000187521 +x_0=158801.1176 +y_0=0.0023'+C+E+A,1,D+Wn+Oo+' +k=1.0000385418 +x_0=59131.3183 +y_0=0.0041'+C+E+A,1,D+Wo+VB+' +k=1.0000410324 +x_0=51816.104 +y_0=0.003'+C+E+A,1,H+Wp+Wq+VC+' +k_0=1.000035079 +x_0=120091.4402 +y_0=91687.92389999999'+C+E+A,1,D+Wr+VD+' +k=1.0000552095 +x_0=133502.6683 +y_0=0.0063'+C+E+A,1,D+Ws+VE+' +k=1.0000673004 +x_0=275844.5533 +y_0=0.0157'+C+E+A,1,D+Wt+' +lon_0=-90.8 +k=1.0000349452 +x_0=242316.4841 +y_0=0.01'+C+E+A,1,H+Wu+Wv+VF+' +k_0=1.0000390487 +x_0=170078.7403 +y_0=45830.2947'+C+E+A,1,H+Ww+Wx+Ka+' +k_0=1.0000344057 +x_0=150876.3018 +y_0=79170.7795'+C+E+A,1,D+Wy+VG+' +k=1.0000394961 +x_0=113081.0261 +y_0=0.0045'+C+E+A,1,D+Wz+VH+' +k=1.0000677153 +x_0=220980.4419 +y_0=0.008500000000000001'+C+E+A,1,D+XA+VI+' +k=1.0000353 +x_0=27000 +y_0=25000'+C+E+A,1,D+XB+VJ+' +k=1.0000260649 +x_0=185928.3728 +y_0=0.0009'+C+E+A,1,D+XC+Su+' +k=1.0000233704 +x_0=79857.7614 +y_0=0.0012'+C+E+A,1,D+XD+VK+' +k=1.0000319985 +x_0=130454.6598 +y_0=0.0033'+C+E+A,1,H+XE+XF+VL+' +k_0=1.0000627024 +x_0=198425.197 +y_0=105279.7829'+C+E+A,1,D+XG+VM+' +k=1.0000599003 +x_0=116129.0323 +y_0=0.0058'+C+E+A,1,H+XH+XI+' +lon_0=-89.77 +k_0=1.000053289 +x_0=74676.1493 +y_0=55049.2669'+C+E+A,1,D+XJ+VN+' +k=1.0000234982 +x_0=238658.8794 +y_0=0.0032'+C+E+A,1,D+XK+VO+' +k=1.0000362499 +x_0=105461.0121 +y_0=0.0029'+C+E+A,1,H+XL+XM+VP+' +k_0=1.0000434122 +x_0=204521.209 +y_0=121923.9861'+C+E+A,1,D+XN+VQ+' +k=1.0000236869 +x_0=182880.3676 +y_0=0.0033'+C+E+A,1,H+XO+XP+VR+' +k_0=1.0000686968 +x_0=70104.1401 +y_0=57588.0346'+C+E+A,1,H+XQ+XR+VS+' +k_0=1.0000362977 +x_0=167640.3354 +y_0=86033.0876'+C+E+A,1,D+XS+Kb+' +k=1.0000433849 +x_0=141732.2823 +y_0=0.0059'+C+E+A,1,H+XT+XU+' +lon_0=-89.5 +k_0=1.000039936 +x_0=56388.1128 +y_0=50022.1874'+C+E+A,1,D+XV+VT+' +k=1.0000649554 +x_0=227990.8546 +y_0=0.0109'+C+E+A,1,H+Zu+Zv+VU+' +k_0=1.0000375653 +x_0=202387.6048 +y_0=134255.4253'+C+E+A,1,D+XW+VV+' +k=1.0000337311 +x_0=146304.2926 +y_0=0.0068'+C+E+A,1,D+XX+VW+' +k=1.0000495976 +x_0=250546.1013 +y_0=0.0234'+C+E+A,1,D+XY+VX+' +k=1.0000373868 +x_0=185623.5716 +y_0=0.0051'+C+E+A,1,H+XZ+Xa+VY+' +k_0=1.0000573461 +x_0=216713.2336 +y_0=120734.1631'+C+E+A,1,D+LJ+VZ+' +k=1.000032144 +x_0=262433.3253 +y_0=0.009599999999999999'+C+E+A,1,D+LJ+Kb+' +k=1.0000381803 +x_0=165506.7302 +y_0=0.0103'+C+E+A,1,H+Xb+Xc+Va+' +k_0=1.0000597566 +x_0=187147.5744 +y_0=107746.7522'+C+E+A,1,D+Xd+Vb+' +k=1.0000361538 +x_0=256946.9138 +y_0=0.0041'+C+E+A,1,H+Xe+Xf+Vc+' +k_0=1.0000408158 +x_0=222504.4451 +y_0=47532.0602'+C+E+A,1,H+Xg+Xh+Vd+' +k_0=1.0000730142 +x_0=134417.0689 +y_0=50337.1092'+C+E+A,1,H+Xi+Xj+Ve+' +k_0=1.0000367192 +x_0=232562.8651 +y_0=111088.2224'+C+E+A,1,H+Xk+Xl+Vf+' +k_0=1.0000475376 +x_0=234086.8682 +y_0=188358.6058'+C+E+A,1,D+Xm+Vg+' +k=1.00003738 +x_0=120091.4415 +y_0=0.003'+C+E+A,1,D+Xn+Vh+' +k=1.0000346179 +x_0=208788.418 +y_0=0.0034'+C+E+A,1,D+Xo+Vi+' +k=1.0000333645 +x_0=185013.9709 +y_0=0.007'+C+E+A,1,H+Xp+Xq+Ka+' +k_0=1.0000392096 +x_0=120091.4402 +y_0=45069.7587'+C+E+A,1,H+Xr+Xs+Bu+' +k_0=1.0000421209 +x_0=208483.6173 +y_0=134589.754'+C+E+A,1,D+WY+Bu+' +k=1.0000365285 +x_0=147218.6941325883 +y_0=0.00365760731521463'+C+J+A,1,D+WZ+Uq+' +k=1.0000495683 +x_0=172821.945948692 +y_0=0.001828803657607315'+C+J+A,1,D+Wa+Ur+' +k=1.0000486665 +x_0=93150'+IX+C+J+A,1,H+Wb+Wc+Us+' +k_0=1.0000331195 +x_0=228600.4575057151 +y_0=148551.4835661671'+C+J+A,1,D+Nj+' +lon_0=-88'+Og+' +x_0=31599.99989839979 +y_0=4599.999898399797'+C+J+A,1,D+Wd+Ut+' +k=1.0000382778 +x_0=175260.3502159004'+Vj+C+J+A,1,H+We+Wf+Uu+' +k_0=1.0000383841 +x_0=64008.12771145543 +y_0=59445.90419100838'+C+J+A,1,D+Wg+' +lon_0=-88.5 +k=1.0000286569 +x_0=244754.8892049784'+Vj+C+J+A,1,H+Wh+Wi+Uv+' +k_0=1.0000391127 +x_0=60045.72009144018 +y_0=44091.43449326898'+C+J+A,1,D+' +lat_0=43.6'+Uw+' +k=1.0000463003 +x_0=199949.198983998'+Vk+C+J+A,1,H+Wj+Wk+Ux+' +k_0=1.00003498 +x_0=169164.338023876 +y_0=111569.613512827'+C+J+A,1,H+aQ+aR+Wl+' +k_0=1.0000349151 +x_0=113690.6273812548 +y_0=53703.12024384048'+C+J+A,1,H+Zs+Zt+Uy+' +k_0=1.0000384786 +x_0=247193.2943865888 +y_0=146591.9896367793'+C+J+A,1,D+Wm+Uz+' +k=1.0000346418 +x_0=263347.7263906528 +y_0=0.00762001524003048'+C+J+A,1,D+' +lat_0=44.4'+VA+' +k=1.0000187521 +x_0=158801.1176022352 +y_0=0.002438404876809754'+C+J+A,1,D+Wn+Oo+' +k=1.0000385418 +x_0=59131.31826263652'+Vl+C+J+A,1,D+Wo+VB+' +k=1.0000410324 +x_0=51816.10393700787'+IX+C+J+A,1,H+Wp+Wq+VC+' +k_0=1.000035079'+Ys+' +y_0=91687.92390144781'+C+J+A,1,D+Wr+VD+' +k=1.0000552095 +x_0=133502.6682245364 +y_0=0.006400812801625603'+C+J+A,1,D+Ws+VE+' +k=1.0000673004 +x_0=275844.5532131065 +y_0=0.0158496316992634'+C+J+A,1,D+Wt+' +lon_0=-90.8 +k=1.0000349452 +x_0=242316.484023368 +y_0=0.01005842011684023'+C+J+A,1,H+Wu+Wv+VF+' +k_0=1.0000390487 +x_0=170078.7401574803 +y_0=45830.29484378968'+C+J+A,1,H+Ww+Wx+Ka+' +k_0=1.0000344057 +x_0=150876.3017526035 +y_0=79170.77937515875'+C+J+A,1,D+Wy+VG+' +k=1.0000394961 +x_0=113081.0261620523 +y_0=0.004572009144018288'+C+J+A,1,D+Wz+VH+' +k=1.0000677153 +x_0=220980.4419608839'+Vk+C+J+A,1,D+XA+VI+' +k=1.0000353 +x_0=27000 +y_0=24999.99989839979'+C+J+A,1,D+XB+VJ+' +k=1.0000260649 +x_0=185928.3727711455 +y_0=0.0009144018288036576'+C+J+A,1,D+XC+Su+' +k=1.0000233704 +x_0=79857.76154432308 +y_0=0.001219202438404877'+C+J+A,1,D+XD+VK+' +k=1.0000319985 +x_0=130454.6596901194'+Op+C+J+A,1,H+XE+XF+VL+' +k_0=1.0000627024 +x_0=198425.1968503937 +y_0=105279.7828803657'+C+J+A,1,D+XG+VM+' +k=1.0000599003 +x_0=116129.0322580645'+Vm+C+J+A,1,H+XH+XI+' +lon_0=-89.77 +k_0=1.000053289 +x_0=74676.1493522987 +y_0=55049.26695453391'+C+J+A,1,D+XJ+VN+' +k=1.0000234982 +x_0=238658.8794513589'+IX+C+J+A,1,D+XK+VO+' +k=1.0000362499 +x_0=105461.0121412243'+IX+C+J+A,1,H+XL+XM+VP+' +k_0=1.0000434122 +x_0=204521.2090424181 +y_0=121923.9861823724'+C+J+A,1,D+XN+VQ+' +k=1.0000236869 +x_0=182880.3675895352'+Op+C+J+A,1,H+XO+XP+VR+' +k_0=1.0000686968 +x_0=70104.14020828041 +y_0=57588.03474726949'+C+J+A,1,H+XQ+XR+VS+' +k_0=1.0000362977 +x_0=167640.3352806706 +y_0=86033.08773177546'+C+J+A,1,D+XS+Kb+' +k=1.0000433849 +x_0=141732.2822453645'+Vm+C+J+A,1,H+XT+XU+' +lon_0=-89.5 +k_0=1.000039936 +x_0=56388.11277622555 +y_0=50022.1874523749'+C+J+A,1,D+XV+VT+' +k=1.0000649554 +x_0=227990.8544577089 +y_0=0.01097282194564389'+C+J+A,1,H+Zu+Zv+VU+' +k_0=1.0000375653 +x_0=202387.6047752095 +y_0=134255.4254508509'+C+J+A,1,D+XW+VV+' +k=1.0000337311 +x_0=146304.2926085852 +y_0=0.006705613411226822'+C+J+A,1,D+XX+VW+' +k=1.0000495976 +x_0=250546.1013970028 +y_0=0.02346964693929388'+C+J+A,1,D+XY+VX+' +k=1.0000373868 +x_0=185623.5715519431 +y_0=0.005181610363220727'+C+J+A,1,H+XZ+Xa+VY+' +k_0=1.0000573461 +x_0=216713.2337312675 +y_0=120734.1631699263'+C+J+A,1,D+LJ+VZ+' +k=1.000032144 +x_0=262433.3251714504 +y_0=0.009448818897637795'+C+J+A,1,D+LJ+Kb+' +k=1.0000381803 +x_0=165506.7300990602 +y_0=0.01036322072644145'+C+J+A,1,H+Xb+Xc+Va+' +k_0=1.0000597566 +x_0=187147.5742951486 +y_0=107746.7521463043'+C+J+A,1,D+Xd+Vb+' +k=1.0000361538 +x_0=256946.9138938278'+Vl+C+J+A,1,H+Xe+Xf+Vc+' +k_0=1.0000408158 +x_0=222504.44500889 +y_0=47532.0603505207'+C+J+A,1,H+Xg+Xh+Vd+' +k_0=1.0000730142 +x_0=134417.0688341377 +y_0=50337.10927101854'+C+J+A,1,H+Xi+Xj+Ve+' +k_0=1.0000367192 +x_0=232562.8651257302 +y_0=111088.2224028448'+C+J+A,1,H+Xk+Xl+Vf+' +k_0=1.0000475376 +x_0=234086.8681737363 +y_0=188358.6059436119'+C+J+A,1,D+Xm+Vg+' +k=1.00003738 +x_0=120091.4414020828'+IX+C+J+A,1,D+Xn+Vh+' +k=1.0000346179 +x_0=208788.4178816358'+Op+C+J+A,1,D+Xo+Vi+' +k=1.0000333645 +x_0=185013.9709423419 +y_0=0.007010414020828041'+C+J+A,1,H+Xp+Xq+Ka+' +k_0=1.0000392096'+Ys+' +y_0=45069.7588011176'+C+J+A,1,H+Xr+Xs+Bu+' +k_0=1.0000421209 +x_0=208483.6172720346 +y_0=134589.7539243078'+C+J+A,41,K+C+A,6,D+L+' +lon_0=68.51666666666667 +k=1 +x_0=1300000'+RX+C+E+A,1,D+L+' +lon_0=71.51666666666667 +k=1'+aB+RX+C+E+A,1,D+L+' +lon_0=74.51666666666667 +k=1'+aC+RX+C+E+A,1,D+L+' +lon_0=77.51666666666667 +k=1'+aD+RX+C+E+A,1,D+L+' +lon_0=80.51666666666667 +k=1 +x_0=5300000'+RX+C+E+A,12308,D+L+Gl+' +k=1'+DP+N+M+G+E+A,1,D+L+HO+' +k=1'+Eg+N+M+G+E+A,1,D+L+IG+' +k=1'+Jt+N+M+G+E+A,1,D+L+LN+' +k=1'+IM+N+M+G+E+A,1,D+L+JS+' +k=1'+MS+N+M+G+E+A,1,D+L+PS+' +k=1'+MT+N+M+G+E+A,1,D+L+RL+' +k=1'+LY+N+M+G+E+A,1,D+L+QW+' +k=1'+Jp+N+M+G+E+A,1,D+L+RM+' +k=1'+LZ+N+M+G+E+A,1,D+L+HP+' +k=1'+HU+N+M+G+E+A,1,D+L+HQ+' +k=1'+Gw+N+M+G+E+A,1,D+L+Hd+' +k=1'+Hu+N+M+G+E+A,1,D+L+HR+' +k=1'+Hv+N+M+G+E+A,1,D+L+HS+' +k=1'+It+N+M+G+E+A,1,D+L+EN+' +k=1'+Hs+N+M+G+E+A,1,D+L+Fy+' +k=1'+Ht+N+M+G+E+A,1,D+L+Fm+' +k=1'+HV+N+M+G+E+A,1,D+L+Fr+' +k=1'+Hw+N+M+G+E+A,1,D+L+Ed+' +k=1'+HW+N+M+G+E+A,1,D+L+Fn+' +k=1'+Hx+N+M+G+E+A,1,D+L+Pf+' +k=1'+La+N+M+G+E+A,1,D+L+Od+' +k=1'+Hy+N+M+G+E+A,1,D+L+NY+' +k=1'+Hz+N+M+G+E+A,1,D+L+Pg+' +k=1'+IA+N+M+G+E+A,1,D+L+NZ+' +k=1'+IB+N+M+G+E+A,1,D+L+Lf+' +k=1'+Gx+N+M+G+E+A,1,D+L+KG+' +k=1'+IT+N+M+G+E+A,1,D+L+KH+' +k=1'+Gc+N+M+G+E+A,1,D+L+Lh+' +k=1'+IU+N+M+G+E+A,103,I+Ki+c+HX+E+A,1,I+Mf+c+HX+E+A,1,I+KD+c+HX+E+A,1,I+JZ+c+HX+E+A,111,I+Mi+o+x+r+E+A,1,I+NS+o+x+r+E+A,1,I+Mg+o+x+r+E+A,1,I+NT+o+x+r+E+A,1,I+Ot+o+x+r+E+A,1,I+Nv+o+x+r+E+A,1,I+PM+o+x+r+E+A,1,I+Re+o+x+r+E+A,1,I+SM+o+x+r+E+A,1,I+MA+o+x+r+E+A,91,I+Mi+o+x+CB+E+A,1,I+NS+o+x+CB+E+A,1,I+Mg+o+x+CB+E+A,1,I+NT+o+x+CB+E+A,1,I+Ot+o+x+CB+E+A,1,I+Nv+o+x+CB+E+A,1,I+PM+o+x+CB+E+A,1,I+Re+o+x+CB+E+A,80,I+Mf+R+Cm+E+A,1,I+KD+R+Cm+E+A,1,I+JZ+R+Cm+E+A,1,I+JM+R+Cm+E+A,1,I+Me+R+Cm+E+A,59,I+JM+R+Cm+E+A,39,I+JZ+M+NL+E+A,1,I+JM+M+NL+E+A,251,D+BY+' +lon_0=1 +k=1'+h+Hk+R+EV+Zb+E+A,1,D+BY+' +lon_0=1 +k=1'+s+N+R+EV+Zb+E+A,31,I+Io+o+R+Ec+E+A,1,I+MB+o+R+Ec+E+A,1,I+Nx+o+R+Ec+E+A,110,I+NR+o+Bc+BS+In+E+A,1,I+Ki+o+Bc+BS+In+E+A,1,I+Mf+o+Bc+BS+In+E+A,99,I+Ki+o+c+ER+E+A,1,I+Mf+o+c+ER+E+A,1,I+KD+o+c+ER+E+A,58,I+Ki+c+ER+E+A,1,I+Mf+c+ER+E+A,1,I+KD+c+ER+E+A,51,I+Mh+o+Y+Cj+E+A,1,I+Mi+o+Y+Cj+E+A,1,I+NS+o+Y+Cj+E+A,141,D+L+NU+EP+u+N+c+Jw+E+A,1,D+' +lat_0=13.17638888888889 +lon_0=-59.55972222222222 +k=0.9999986'+Zl+' +y_0=75000'+c+Jw+E+A,121,D+L+HP+' +k=1'+HU+N+M+U+E+A,1,D+L+HQ+' +k=1'+Gw+N+M+U+E+A,1,D+L+Hd+' +k=1'+Hu+N+M+U+E+A,1,D+L+HR+' +k=1'+Hv+N+M+U+E+A,1,D+L+HS+' +k=1'+It+N+M+U+E+A,1,D+L+EN+' +k=1'+Hs+N+M+U+E+A,1,D+L+Fy+' +k=1'+Ht+N+M+U+E+A,1,D+L+Fm+' +k=1'+HV+N+M+U+E+A,1,D+L+Fr+' +k=1'+Hw+N+M+U+E+A,1,D+L+Ed+' +k=1'+HW+N+M+U+E+A,1,D+L+Fn+' +k=1'+Hx+N+M+U+E+A,30,D+L+HP+' +k=1'+O+N+M+U+E+A,1,D+L+HQ+' +k=1'+O+N+M+U+E+A,1,D+L+Hd+' +k=1'+O+N+M+U+E+A,1,D+L+HR+' +k=1'+O+N+M+U+E+A,1,D+L+HS+' +k=1'+O+N+M+U+E+A,1,D+L+EN+' +k=1'+O+N+M+U+E+A,1,D+L+Fy+' +k=1'+O+N+M+U+E+A,1,D+L+Fm+' +k=1'+O+N+M+U+E+A,1,D+L+Fr+' +k=1'+O+N+M+U+E+A,1,D+L+Ed+' +k=1'+O+N+M+U+E+A,1,D+L+Fn+' +k=1'+O+N+M+U+E+A,37,H+Ks+Kt+Hr+HN+Bn+' +y_0=5400000'+R+' +pm=brussels'+E+A,280,Pu+Kj+HN+' +k_0=1'+s+N+Y+Gf+' +pm=bern'+E+A,1,Pu+Kj+Ow+' +k_0=1'+a+IK+Y+Gf+E+A,1,Pu+Kj+Ow+' +k_0=1'+s+N+Y+Gf+E+A,36,I+IC+R+ES+E+A,78,D+LK+' +lon_0=-77.08091666666667 +k=1'+BZ+AH+R+ES+E+A,1,D+LK+' +lon_0=-74.08091666666667 +k=1'+BZ+AH+R+ES+E+A,1,D+LK+' +lon_0=-71.08091666666667 +k=1'+BZ+AH+R+ES+E+A,1,D+LK+' +lon_0=-68.08091666666667 +k=1'+BZ+AH+R+ES+E+A,133,I+JN+o+c+GO+E+A,1,I+KC+o+c+GO+E+A,58,D+L+' +lon_0=11.5'+AP+O+Ak+c+GO+E+A,1,D+L+IH+AP+O+Ak+c+GO+E+A,79,D+m+UQ+' +k=1'+AV+N+C+B+E+A,1,D+m+MP+' +k=1'+Ci+N+C+B+E+A,1,D+m+Pe+' +k=1'+Bo+N+C+B+E+A,1,D+m+Qk+' +k=1'+DP+N+C+B+E+A,1,D+m+US+' +k=1'+Eg+N+C+B+E+A,1,D+m+Zc+' +k=1'+Jt+N+C+B+E+A,1,D+m+Nb+' +k=1'+IM+N+C+B+E+A,4,D+m+UQ+' +k=1'+AV+N+j+B+E+A,1,D+m+MP+' +k=1'+Ci+N+j+B+E+A,1,D+m+Pe+' +k=1'+Bo+N+j+B+E+A,1,D+m+Qk+' +k=1'+DP+N+j+B+E+A,1,D+m+US+' +k=1'+Eg+N+j+B+E+A,1,D+m+Zc+' +k=1'+Jt+N+j+B+E+A,1,D+m+Nb+' +k=1'+IM+N+j+B+E+A,4,D+m+UQ+' +k=1'+AV+N+R+Bs+E+A,1,D+m+MP+' +k=1'+Ci+N+R+Bs+E+A,1,D+m+Pe+' +k=1'+Bo+N+R+Bs+E+A,1,D+m+Qk+' +k=1'+DP+N+R+Bs+E+A,1,D+m+US+' +k=1'+Eg+N+R+Bs+E+A,1,D+m+Zc+' +k=1'+Jt+N+R+Bs+E+A,1,D+m+Nb+' +k=1'+IM+N+R+Bs+E+A,37,I+NR+o+Bc+BS+Ax+E+A,1,I+Ki+o+Bc+BS+Ax+E+A,40,D+L+Gj+' +k=1'+s+N+Gk+Bc+BS+Ax+E+A,2,D+L+UE+' +k=1'+s+N+Gk+Bc+BS+Ax+E+A,2,D+L+RI+' +k=1'+s+N+Gk+Bc+BS+Ax+E+A,2,D+L+Gl+' +k=1'+s+N+Gk+Bc+BS+Ax+E+A,2,D+L+SP+' +k=1'+s+N+Gk+Bc+BS+Ax+E+A,2,D+L+RJ+' +k=1'+s+N+Gk+Bc+BS+Ax+E+A,2,D+L+HO+' +k=1'+s+N+Gk+Bc+BS+Ax+E+A,2,D+L+' +lon_0=29 +k=1'+s+N+Gk+Bc+BS+Ax+E+A,2,D+L+QQ+' +k=1'+s+N+Gk+Bc+BS+Ax+E+A,2,D+L+IG+' +k=1'+s+N+Gk+Bc+BS+Ax+E+A,39,I+JN+AU+BN+Gi+E+A,59,H+' +lat_1=36'+GM+' +lon_0=9.9'+QL+O+Hk+AU+BN+Gi+E+A,1,H+Sd+Se+' +lon_0=9.9'+Nk+O+Hk+AU+BN+Gi+E+A,129,I+ID+o+R+GR+E+A,1,I+Io+o+R+GR+E+A,1,I+MB+o+R+GR+E+A,1,I+Nx+o+R+GR+E+A,1,I+Nr+o+R+GR+E+A,175,H+aL+' +lat_0=34.65 +lon_0=37.35 +k_0=0.9996256'+AI+Hk+AU+BN+HI+E+A,70,H+aL+' +lat_0=34.65 +lon_0=37.35 +k_0=0.9996256'+AI+Hk+AU+BN+HI+E+A,10,GU+' +lat_0=34.2 +lon_0=39.15 +k=0.9995341'+s+N+AU+BN+HI+E+A,211,D+Gm+' +lon_0=35 +k=1'+AI+' +y_0=1100000'+Gn+HY+E+A,1,D+Gm+QQ+' +k=1 +x_0=615000 +y_0=810000'+Gn+HY+E+A,1,D+Gm+HO+' +k=1'+EW+IK+Gn+HY+E+A,1,D+Gm+HO+' +k=1'+EW+Tj+Gn+HY+E+A,34,I+Ja+R+n+E+A,1,I+KA+R+n+E+A,1,I+Oq+R+n+E+A,1,I+QD+R+n+E+A,1,I+JN+R+n+E+A,1,I+KC+R+n+E+A,1,I+NR+R+n+E+A,1,I+Ki+R+n+E+A,1,I+Mf+R+n+E+A,1,I+KD+R+n+E+A,1,I+JZ+R+n+E+A,52,D+L+HN+AP+O+N+R+n+E+A,5,D+L+' +lon_0=5'+AP+O+N+R+n+E+A,144,I+JM+c+NM+E+A,1,I+Me+c+NM+E+A,460,Pu+' +lat_0=47.14439372222222 +lon_0=19.04857177777778 +k_0=0.99993 +x_0=650000'+IK+aK+RE+E+A,130,D+L+' +lon_0=94.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=97.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=100.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=103.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=106.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=109.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=112.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=115.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=118.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=121.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=124.5'+V+h+DQ+j+B+E+A,1,D+L+Pj+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=130.5'+V+h+DQ+j+B+E+A,1,D+L+Tk+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=136.5'+V+h+DQ+j+B+E+A,1,D+L+' +lon_0=139.5'+V+h+DQ+j+B+E+A,1,I+QF+IR+Bh+Av+E+A,1,I+Ny+IR+Bh+Av+E+A,1,I+Mh+IR+Bh+Av+E+A,1,I+Mi+IR+Bh+Av+E+A,1,I+NS+IR+Bh+Av+E+A,1,I+Mg+IR+Bh+Av+E+A,1,I+NT+IR+Bh+Av+E+A,14,I+QF+j+B+E+A,1,I+Ny+j+B+E+A,1,I+Mh+j+B+E+A,1,I+Mi+j+B+E+A,1,I+NS+j+B+E+A,1,I+Mg+j+B+E+A,1,I+NT+j+B+E+A,5,I+Ny+o+j+B+E+A,1,I+Mh+o+j+B+E+A,1,I+Mi+o+j+B+E+A,1,I+NS+o+j+B+E+A,1,I+Mg+o+j+B+E+A,1,I+NT+o+j+B+E+A,1,I+Ot+o+j+B+E+A,1,I+Nv+o+j+B+E+A,3,I+Ny+o+IR+Bh+Av+E+A,1,I+Mh+o+IR+Bh+Av+E+A,1,I+Mi+o+IR+Bh+Av+E+A,1,I+NS+o+IR+Bh+Av+E+A,1,I+Mg+o+IR+Bh+Av+E+A,1,I+NT+o+IR+Bh+Av+E+A,1,I+Ot+o+IR+Bh+Av+E+A,1,I+Nv+o+IR+Bh+Av+E+A,52,I+QF+By+Ay+JR+E+A,1,I+Ny+By+Ay+JR+E+A,1,I+Mh+By+Ay+JR+E+A,99,I+Ny+By+Ay+NN+E+A,1,I+Mh+By+Ay+NN+E+A,52,H+' +lat_1=18'+OX+Ld+' +k_0=1 +x_0=167638.49597 +y_0=121918.90616'+RB+RC+ML+A,100,H+' +lat_1=18'+OX+Ld+' +k_0=1'+Bv+' +y_0=150000'+i+TG+E+A,105,I+Te+By+Ay+JQ+E+A,1,I+QF+By+Ay+JQ+E+A,5,I+Rb+Lp+Hp+GQ+E+A,1,I+Rc+Lp+Hp+GQ+E+A,1,I+SO+Lp+Hp+GQ+E+A,29,I+Rc+Go+CT+BT+E+A,1,I+SO+Go+CT+BT+E+A,1,I+Td+Go+CT+BT+E+A,1,I+Te+Go+CT+BT+E+A,1,I+QF+Go+CT+BT+E+A,1,I+Ny+Go+CT+BT+E+A,23,H+Sc+' +lat_0=39.5 +lon_0=68 +k_0=0.99846154 +x_0=2153865.73916853 +y_0=2368292.194628102'+HK+Gv+GT+A,1,H+Qq+Li+' +lon_0=68'+Fz+JX+JY+HK+Gv+GT+A,1,H+UM+IQ+' +lon_0=74'+Fz+JX+JY+HK+Gv+GT+A,1,H+' +lat_1=19 +lat_0=19 +lon_0=80'+Fz+JX+JY+HK+Gv+GT+A,1,H+' +lat_1=12 +lat_0=12 +lon_0=80'+Fz+JX+JY+HK+Gv+GT+A,1,H+UM+IQ+Hq+Fz+' +x_0=2743185.69 +y_0=914395.23'+By+Ay+JQ+E+A,1,H+Qq+Li+' +lon_0=68'+Fz+' +x_0=2743196.4 +y_0=914398.8'+Lp+Hp+GQ+E+A,1,H+UM+IQ+' +lon_0=74'+Fz+' +x_0=2743196.4 +y_0=914398.8'+Lp+Hp+GQ+E+A,1,H+Qq+Li+' +lon_0=68'+Fz+PX+Qa+Go+CT+BT+E+A,1,H+UM+IQ+' +lon_0=74'+Fz+PX+Qa+Go+CT+BT+E+A,1,H+UM+IQ+Hq+Fz+PX+Qa+Go+CT+BT+E+A,1,H+' +lat_1=19 +lat_0=19 +lon_0=80'+Fz+PX+Qa+Go+CT+BT+E+A,1,H+UM+IQ+Hq+Fz+JX+JY+HK+Gv+GT+A,1,H+' +lat_1=12 +lat_0=12 +lon_0=80'+Fz+PX+Qa+Go+CT+BT+E+A,117,Ck+' +lat_0=1.287646666666667 +lon_0=103.8530022222222'+Zl+' +y_0=30000'+GL+Bz+BV+E+A,47,I+Ny+GL+Bz+BV+E+A,1,I+Mh+GL+Bz+BV+E+A,52,H+Qq+Li+JS+PZ+AV+aG+c+Qh+E+A,118,I+IC+R+Hc+E+A,1,I+Hi+R+Hc+E+A,1,I+Gz+R+Hc+E+A,97,I+Ik+R+AX+E+A,1,I+IC+R+AX+E+A,1,I+Hi+R+AX+E+A,1,I+Gz+R+AX+E+A,1,I+ID+R+AX+E+A,56,I+Ik+o+R+AX+E+A,1,I+IC+o+R+AX+E+A,1,I+Hi+o+R+AX+E+A,1,I+Gz+o+R+AX+E+A,1,I+ID+o+R+AX+E+A,1,I+Io+o+R+AX+E+A,9,D+' +lat_0=-6 +lon_0=-80.5 +k=0.99983008 +x_0=222000 +y_0=1426834.743'+R+AX+E+A,1,D+' +lat_0=-9.5 +lon_0=-76 +k=0.99932994 +x_0=720000 +y_0=1039979.159'+R+AX+E+A,1,D+' +lat_0=-9.5'+IL+' +k=0.99952992 +x_0=1324000 +y_0=1040084.558'+R+AX+E+A,107,D+Vp+' +lon_0=-1'+Rv+' +x_0=274319.51'+N+c+TR+E+A,231,I+QD+AU+BN+E+A,160,D+L+Fm+CP+O+N+i+GC+E+A,1,D+L+ZU+CP+O+N+i+GC+E+A,1,D+L+ZV+CP+O+N+i+GC+E+A,1,D+L+Fr+CP+O+N+i+GC+E+A,1,D+L+Ru+CP+O+N+i+GC+E+A,433,I+Ja+C+B+E+A,1,I+KA+C+B+E+A,1,I+Oq+C+B+E+A,1,I+QD+C+B+E+A,1,I+JN+C+B+E+A,1,I+KC+C+B+E+A,1,I+NR+C+B+E+A,1,I+Ki+C+B+E+A,1,I+Mf+C+B+E+A,1,I+KD+C+B+E+A,47,D+L+II+AP+O+N+C+B+E+A,48,I+JN+o+R+Qd+E+A,259,H+Sd+Se+Yk+Nk+O+Hk+AU+BN+IO+E+A,1,H+' +lat_1=29.7 +lat_0=29.7'+Yk+' +k_0=0.9996155960000001'+O+Hk+AU+BN+IO+E+A,2,H+' +lat_1=26.1 +lat_0=26.1'+Yk+' +k_0=0.999616304 +x_0=1200000'+Is+AU+BN+IO+E+A,1,H+' +lat_1=22.5 +lat_0=22.5'+Yk+' +k_0=0.999616437'+AV+Is+AU+BN+IO+E+A,42,I+KD+Y+Tc+E+A,94,I+QD+c+GS+E+A,1,I+JN+c+GS+E+A,59,D+Qi+' +lon_0=4.5'+Rv+' +x_0=230738.26'+N+c+GS+E+A,1,D+Qi+' +lon_0=8.5'+Rv+' +x_0=670553.98'+N+c+GS+E+A,1,D+Qi+' +lon_0=12.5'+Rv+' +x_0=1110369.7'+N+c+GS+E+A,239,I+JN+AU+BN+NO+E+A,60,I+JN+o+AU+BN+NO+E+A,9,I+SK+X+E+A,1,I+TV+X+E+A,1,I+Xz+X+E+A,1,I+TY+X+E+A,1,I+RG+X+E+A,1,I+Ro+X+E+A,1,I+RH+X+E+A,1,I+TW+X+E+A,1,I+TX+X+E+A,1,I+QE+X+E+A,1,I+Ns+X+E+A,1,I+Nt+X+E+A,1,I+Nu+X+E+A,1,I+Nw+X+E+A,1,I+NP+X+E+A,1,I+NQ+X+E+A,1,I+Ik+X+E+A,1,I+IC+X+E+A,1,I+Hi+X+E+A,1,I+Gz+X+E+A,1,I+ID+X+E+A,1,I+Io+X+E+A,7,D+IY+IV+Pc+e+N+X+J+A,1,D+Gm+OS+BG+e+N+X+J+A,1,CU+' +lat_0=57'+Ku+Kv+V+' +x_0=5000000.001016002 +y_0=-5000000.001016002'+KE+GZ+X+J+A,1,D+Ft+YN+V+e+N+X+J+A,1,D+Ft+YO+V+e+N+X+J+A,1,D+Ft+ON+V+e+N+X+J+A,1,D+Ft+Ms+V+e+N+X+J+A,1,D+Ft+KI+V+e+N+X+J+A,1,D+Ft+YP+V+' +x_0=213360.4267208534'+N+X+J+A,1,D+Ft+YQ+V+e+N+X+J+A,1,D+Ft+SW+V+Px+N+X+J+A,1,H+Kw+Kx+UK+YR+Bw+N+X+J+A,1,H+DW+Jn+y+HA+Z+N+X+J+A,1,H+DX+DY+AA+HA+Z+N+X+J+A,1,H+Ap+DZ+Ml+AJ+Z+N+X+J+A,1,H+LO+QS+Da+Mm+Z+N+X+J+A,1,H+Db+Dc+Mn+Ir+Z+N+X+J+A,1,H+Dd+De+Df+Iw+Z+N+X+J+A,2,D+Bl+Cn+V+e+N+X+J+A,1,D+Bl+Co+V+e+N+X+J+A,1,D+Bl+Iv+BG+e+N+X+J+A,1,H+Dx+Dy+BC+IF+Z+N+X+J+A,1,H+Dz+Mq+EA+IF+Z+N+X+J+A,1,H+' +lat_1=39.71666666666667 +lat_2=40.78333333333333'+y+Ba+Z+N+X+J+A,1,H+LP+LQ+CY+Ba+Z+N+X+J+A,1,H+Ap+Dg+f+Ba+Z+N+X+J+A,1,H+Dh+Mo+Di+Jq+Px+N+X+J+A,1,D+Ch+Cp+Mp+e+N+X+J+A,1,D+Aq+CR+Am+e+N+X+J+A,1,D+Aq+Ob+Am+e+N+X+J+A,1,H+LR+Dj+QT+LS+Z+N+X+J+A,6,D+Gm+Cq+V+e+N+X+J+A,1,D+Gm+Cr+V+e+N+X+J+A,1,D+p+Cs+BJ+e+N+X+J+A,1,D+p+Jb+BJ+e+N+X+J+A,1,D+p+Ix+BG+e+N+X+J+A,1,D+f+Cz+EQ+e+N+X+J+A,1,D+f+DA+Am+e+N+X+J+A,1,D+DM+DB+AO+e+N+X+J+A,1,D+DM+DC+AO+e+N+X+J+A,1,H+EB+EC+Fo+GG+Z+N+X+J+A,1,H+AY+ED+Fs+GG+Z+N+X+J+A,1,H+EE+EF+AQ+Fl+Z+N+X+J+A,1,H+EG+EH+f+CV+Z+N+X+J+A,1,H+Az+DV+DM+Jo+Z+N+X+J+A,1,H+' +lat_1=36.73333333333333 +lat_2=37.93333333333333'+AB+EY+Z+N+X+J+A,1,H+' +lat_1=31.16666666666667 +lat_2=32.66666666666666 +lat_0=30.66666666666667'+Hg+Z+N+X+J+A,1,H+' +lat_1=29.3 +lat_2=30.7 +lat_0=28.66666666666667'+Bi+Z+N+X+J+A,1,D+AL+HJ+V+e+N+X+J+A,1,D+BD+DD+AO+e+N+X+J+A,1,H+' +lat_1=38.3 +lat_2=39.45'+CY+Ld+' +x_0=243840.4876809754'+N+X+J+A,1,H+' +lat_1=41.71666666666667 +lat_2=42.68333333333333'+Ip+GE+Px+N+X+J+A,1,H+' +lat_1=41.28333333333333 +lat_2=41.48333333333333'+Ip+IL+' +x_0=60960.12192024384'+N+X+J+A,4,H+' +lat_1=47.03333333333333 +lat_2=48.63333333333333'+Iq+DE+Z+N+X+J+A,1,H+' +lat_1=45.61666666666667 +lat_2=47.05'+IP+Js+Z+N+X+J+A,1,H+' +lat_1=43.78333333333333 +lat_2=45.21666666666667'+Nj+Na+Z+N+X+J+A,1,D+Cb+Ct+Pc+e+N+X+J+A,1,D+IY+Bx+Am+e+N+X+J+A,1,D+Cd+RS+BG+e+N+X+J+A,1,D+Cd+Hg+BG+e+N+X+J+A,1,D+Id+RT+Am+e+N+X+J+A,1,H+' +lat_1=34.41666666666666 +lat_2=33.86666666666667 +lat_0=34.13333333333333'+IW+' +x_0=1276106.450596901 +y_0=1268253.006858014'+X+J+A,48,D+AK+HJ+V+BF+N+C+B+J+A,1,D+BD+DD+AO+HT+N+C+B+J+A,1,H+FU+FV+Iq+DE+An+Ao+C+B+J+A,1,H+Ma+FW+IP+Js+An+Ao+C+B+J+A,1,H+FX+FY+Nj+Na+An+Ao+C+B+J+A,1,H+JT+Jn+FZ+CS+AG+N+C+B+J+A,1,H+Mb+RN+Mr+Ga+a+N+C+B+J+A,1,H+Fg+Fh+QX+CR+a+N+C+B+J+A,1,D+AK+HJ+V+BF+N+C+B+J+A,1,D+BD+DD+AO+HT+N+C+B+J+A,1,H+FU+FV+Iq+DE+An+Ao+C+B+J+A,1,H+Ma+FW+IP+Js+An+Ao+C+B+J+A,1,H+FX+FY+Nj+Na+An+Ao+C+B+J+A,1,H+JT+Jn+FZ+CS+AG+N+C+B+J+A,1,H+Mb+RN+Mr+Ga+a+N+C+B+J+A,1,H+Fg+Fh+QX+CR+a+N+C+B+J+A,1,D+AK+HJ+V+BF+N+C+B+J+A,1,D+BD+DD+AO+HT+N+C+B+J+A,1,H+FU+FV+Iq+DE+An+Ao+C+B+J+A,1,H+Ma+FW+IP+Js+An+Ao+C+B+J+A,1,H+FX+FY+Nj+Na+An+Ao+C+B+J+A,1,H+JT+Jn+FZ+CS+AG+N+C+B+J+A,1,H+Mb+RN+Mr+Ga+a+N+C+B+J+A,1,H+Fg+Fh+QX+CR+a+N+C+B+J+A,21,D+L+ET+V+Ab+N+C+B+E+A,1,D+L+CR+V+Ab+N+C+B+E+A,1,D+L+NV+V+Ab+N+C+B+E+A,1,D+L+Jh+V+Ab+N+C+B+E+A,1,D+L+Bu+V+Ab+N+C+B+E+A,1,D+L+Rs+V+Ab+N+C+B+E+A,1,D+L+OZ+V+Ab+N+C+B+E+A,1,D+L+' +lon_0=-53'+V+Ab+N+C+B+E+A,1,D+L+Zd+V+Ab+N+C+B+E+A,2,I+SK+C+B+E+A,1,I+TV+C+B+E+A,1,I+Xz+C+B+E+A,1,I+TY+C+B+E+A,1,I+RG+C+B+E+A,1,I+Ro+C+B+E+A,1,I+RH+C+B+E+A,1,I+TW+C+B+E+A,1,I+TX+C+B+E+A,1,I+QE+C+B+E+A,1,I+Ns+C+B+E+A,1,I+Nt+C+B+E+A,1,I+Nu+C+B+E+A,1,I+Nw+C+B+E+A,1,I+NP+C+B+E+A,1,I+NQ+C+B+E+A,1,I+Ik+C+B+E+A,1,I+IC+C+B+E+A,1,I+Hi+C+B+E+A,1,I+Gz+C+B+E+A,1,I+ID+C+B+E+A,1,I+Io+C+B+E+A,1,I+MB+C+B+E+A,6,D+IY+IV+Pc+h+N+C+B+E+A,1,D+Gm+OS+BG+a+N+C+B+E+A,1,CU+' +lat_0=57'+Ku+Kv+V+LX+EO+KE+GZ+C+B+E+A,1,D+Ft+YN+V+O+N+C+B+E+A,1,D+Ft+YO+V+O+N+C+B+E+A,1,D+Ft+ON+V+O+N+C+B+E+A,1,D+Ft+Ms+V+O+N+C+B+E+A,1,D+Ft+KI+V+O+N+C+B+E+A,1,D+Ft+YP+V+O+N+C+B+E+A,1,D+Ft+YQ+V+O+N+C+B+E+A,1,D+Ft+SW+V+O+N+C+B+E+A,1,H+Kw+Kx+UK+YR+BZ+N+C+B+E+A,1,H+DW+Jn+y+HA+Bd+Ae+C+B+E+A,1,H+DX+DY+AA+HA+Bd+Ae+C+B+E+A,1,H+Ap+DZ+Ml+AJ+Bd+Ae+C+B+E+A,1,H+LO+QS+Da+Mm+Bd+Ae+C+B+E+A,1,H+Db+Dc+Mn+Ir+Bd+Ae+C+B+E+A,1,H+Dd+De+Df+Iw+Bd+Ae+C+B+E+A,2,D+Bl+Cn+V+EX+N+C+B+E+A,1,D+Bl+Co+V+EX+N+C+B+E+A,1,D+Bl+Iv+BG+EX+N+C+B+E+A,1,H+Dx+Dy+BC+IF+u+N+C+B+E+A,1,H+Dz+Mq+EA+IF+u+Is+C+B+E+A,1,H+Eh+Ei+y+Ba+Fw+Fx+C+B+E+A,1,H+LP+LQ+CY+Ba+Fw+Fx+C+B+E+A,1,H+Ap+Dg+f+Ba+Fw+Fx+C+B+E+A,1,H+Dh+Mo+Di+Jq+QG+QH+C+B+E+A,1,D+Ch+Cp+Mp+h+N+C+B+E+A,1,D+Aq+CR+Am+h+N+C+B+E+A,1,D+Aq+Ob+Am+h+N+C+B+E+A,1,H+LR+Dj+QT+LS+a+N+C+B+E+A,1,D+Kn+Sf+AO+O+N+C+B+E+A,1,D+Ko+KO+AO+O+N+C+B+E+A,1,D+GV+KI+Jl+O+N+C+B+E+A,1,D+Kp+Sg+Jl+O+N+C+B+E+A,1,D+Kq+KP+' +k=1'+O+N+C+B+E+A,1,D+Gm+Cq+V+h+N+C+B+E+A,1,D+Gm+Cr+V+EW+N+C+B+E+A,1,D+p+Cs+BJ+h+N+C+B+E+A,1,D+p+Jb+BJ+O+N+C+B+E+A,1,D+p+Ix+BG+CX+N+C+B+E+A,1,D+f+Cz+EQ+AI+N+C+B+E+A,1,D+f+DA+Am+EW+N+C+B+E+A,1,D+DM+DB+AO+BU+KJ+C+B+E+A,1,D+DM+DC+AO+HT+KJ+C+B+E+A,1,H+EB+EC+Fo+GG+AV+AH+C+B+E+A,1,H+AY+ED+Fs+GG+O+N+C+B+E+A,1,H+EE+EF+AQ+Fl+u+N+C+B+E+A,1,H+EG+EH+f+CV+u+Is+C+B+E+A,2,H+Ej+Ek+AB+EY+O+Ae+C+B+E+A,1,H+FS+FT+IY+Hg+BZ+N+C+B+E+A,1,H+OH+OI+OJ+Bi+BZ+N+C+B+E+A,1,D+AK+HJ+V+AI+N+C+B+E+A,1,D+BD+DD+AO+HT+N+C+B+E+A,1,H+MU+Nz+AA+Ld+u+N+C+B+E+A,1,H+El+Dk+Ip+GE+h+Mk+C+B+E+A,1,H+Em+En+Ip+IL+O+N+C+B+E+A,1,H+Eo+Ep+Eq+Jh+Tl+N+C+B+E+A,1,H+OA+Er+Es+BE+Pk+N+C+B+E+A,1,H+Bq+OB+Fo+BE+LU+N+C+B+E+A,1,H+FU+FV+Iq+DE+CX+EK+C+B+E+A,1,H+Ma+FW+IP+Js+CX+EK+C+B+E+A,1,H+FX+FY+Nj+Na+CX+EK+C+B+E+A,1,D+Hj+Ct+CP+AI+N+C+B+E+A,1,D+Hj+Bx+CP+EW+N+C+B+E+A,1,D+Cd+RS+BG+Bv+N+C+B+E+A,1,D+Cd+Hg+BG+O+N+C+B+E+A,1,D+Id+RT+Am+YC+N+C+B+E+A,41,I+JM+c+DO+E+A,1,I+Me+c+DO+E+A,80,I+Gz+R+TS+E+A,80,'+proj=nzmg +lat_0=-41 +lon_0=173 +x_0=2510000 +y_0=6023150'+R+W+E+A,5,D+' +lat_0=-36.87986527777778 +lon_0=174.7643393611111'+V+AI+DN+R+W+E+A,1,D+' +lat_0=-37.76124980555556 +lon_0=176.46619725 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-38.62470277777778 +lon_0=177.8856362777778 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-39.65092930555556 +lon_0=176.6736805277778 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-39.13575830555556 +lon_0=174.22801175 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-39.51247038888889 +lon_0=175.6400368055556 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-40.24194713888889 +lon_0=175.4880996111111 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-40.92553263888889 +lon_0=175.6473496666667 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-41.30131963888888 +lon_0=174.7766231111111 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-40.71475905555556 +lon_0=172.6720465 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-41.27454472222222 +lon_0=173.2993168055555 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-41.28991152777778 +lon_0=172.1090281944444 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-41.81080286111111 +lon_0=171.5812600555556 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-42.33369427777778 +lon_0=171.5497713055556 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-42.68911658333333 +lon_0=173.0101333888889 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-41.54448666666666 +lon_0=173.8020741111111 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-42.88632236111111 +lon_0=170.9799935 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-43.11012813888889 +lon_0=170.2609258333333 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-43.97780288888889 +lon_0=168.606267 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-43.59063758333333 +lon_0=172.7271935833333 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-43.74871155555556 +lon_0=171.3607484722222 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-44.40222036111111 +lon_0=171.0572508333333 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-44.73526797222222 +lon_0=169.4677550833333 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-45.13290258333333 +lon_0=168.3986411944444 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-45.56372616666666 +lon_0=167.7388617777778 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-45.81619661111111 +lon_0=170.6285951666667 +k=1'+AI+DN+R+W+E+A,1,D+' +lat_0=-45.86151336111111 +lon_0=170.2825891111111'+Pc+AI+DN+R+W+E+A,1,D+' +lat_0=-46.60000961111111 +lon_0=168.342872 +k=1 +x_0=300002.66 +y_0=699999.58'+R+W+E+A,26,I+MA+o+R+W+E+A,1,I+Nq+o+R+W+E+A,1,I+PL+o+R+W+E+A,31,D+' +lat_0=-39 +lon_0=175.5 +k=1 +x_0=274319.5243848086 +y_0=365759.3658464114'+R+W+TU+A,1,D+Za+' +lon_0=171.5 +k=1 +x_0=457199.2073080143 +y_0=457199.2073080143'+R+W+TU+A,99,D+Fk+' +lon_0=-4.666666666666667 +k=1'+s+N+Hn+EL+Aa+SN+E+A,1,D+Fk+' +lon_0=-2.333333333333333 +k=1'+s+N+Hn+EL+Aa+SN+E+A,1,D+Fk+HN+' +k=1'+s+N+Hn+EL+Aa+SN+E+A,1,D+Fk+' +lon_0=2.5 +k=1'+s+N+Hn+EL+Aa+SN+E+A,1,D+Fk+Vr+' +k=1'+s+N+Hn+EL+Aa+SN+E+A,1,D+Fk+' +lon_0=10.16666666666667 +k=1'+s+N+Hn+EL+Aa+SN+E+A,1,D+Fk+' +lon_0=14.16666666666667 +k=1'+s+N+Hn+EL+Aa+SN+E+A,1,D+Fk+' +lon_0=18.33333333333333 +k=1'+s+N+Hn+EL+Aa+SN+E+A,31,I+KA+R+JL+E+A,64,D+BY+UZ+' +k=1 +x_0=180.598 +y_0=-86.98999999999999'+R+JL+E+A,7,H+PD+PE+' +lon_0=5.399999999999999 +k_0=0.99950908'+O+Hk+' +a=6376523'+RA+ZM+E+A,61,H+PD+PE+HN+' +k_0=0.999877341'+a+IK+AU+BN+Bk+Lv+E+A,1,H+' +lat_1=46.8 +lat_0=46.8'+HN+' +k_0=0.99987742'+a+IK+AU+BN+Bk+Lv+E+A,1,H+Xt+Xu+HN+' +k_0=0.999877499'+a+IK+AU+BN+Bk+Lv+E+A,1,H+Xv+Xw+HN+' +k_0=0.99994471 +x_0=234.358 +y_0=185861.369'+AU+BN+Bk+Lv+E+A,7,H+PD+PE+HN+' +k_0=0.999877341'+a+Tj+AU+BN+Bk+Lv+E+A,1,H+' +lat_1=46.8 +lat_0=46.8'+HN+' +k_0=0.99987742'+a+' +y_0=2200000'+AU+BN+Bk+Lv+E+A,1,H+Xt+Xu+HN+' +k_0=0.999877499'+a+' +y_0=3200000'+AU+BN+Bk+Lv+E+A,1,H+Xv+Xw+HN+' +k_0=0.99994471 +x_0=234.358 +y_0=4185861.369'+AU+BN+Bk+Lv+E+A,126,D+' +lat_0=49 +lon_0=-2 +k=0.9996012717'+u+' +y_0=-100000'+PV+Lx+E+A,491,Ck+LH+LI+Qx+' +y_0=126867.909'+Nc+Nd+DS+E+A,1,D+LH+LI+' +k=1'+Qx+' +y_0=1126867.909'+Nc+Nd+DS+E+A,1,Ck+LH+LI+Qx+' +y_0=1126867.909'+Nc+Nd+DS+E+A,39,I+JN+o+AU+BN+TH+E+A,116,I+Mh+o+C+B+E+A,1,I+Mi+o+C+B+E+A,1,I+NS+o+C+B+E+A,1,I+Mg+o+C+B+E+A,1,I+NT+o+C+B+E+A,1,I+Ot+o+C+B+E+A,1,I+Nv+o+C+B+E+A,1,I+PM+o+C+B+E+A,1,I+Re+o+C+B+E+A,1,I+SM+o+C+B+E+A,1,I+MA+o+C+B+E+A,46,D+L+Gl+' +k=1'+DP+N+M+F+E+A,1,D+L+HO+' +k=1'+Eg+N+M+F+E+A,1,D+L+IG+' +k=1'+Jt+N+M+F+E+A,1,D+L+LN+' +k=1'+IM+N+M+F+E+A,1,D+L+JS+' +k=1'+MS+N+M+F+E+A,1,D+L+PS+' +k=1'+MT+N+M+F+E+A,1,D+L+RL+' +k=1'+LY+N+M+F+E+A,1,D+L+QW+' +k=1'+Jp+N+M+F+E+A,1,D+L+RM+' +k=1'+LZ+N+M+F+E+A,1,D+L+HP+' +k=1'+HU+N+M+F+E+A,1,D+L+HQ+' +k=1'+Gw+N+M+F+E+A,1,D+L+Hd+' +k=1'+Hu+N+M+F+E+A,1,D+L+HR+' +k=1'+Hv+N+M+F+E+A,1,D+L+HS+' +k=1'+It+N+M+F+E+A,1,D+L+EN+' +k=1'+Hs+N+M+F+E+A,1,D+L+Fy+' +k=1'+Ht+N+M+F+E+A,1,D+L+Fm+' +k=1'+HV+N+M+F+E+A,1,D+L+Fr+' +k=1'+Hw+N+M+F+E+A,1,D+L+Ed+' +k=1'+HW+N+M+F+E+A,1,D+L+Fn+' +k=1'+Hx+N+M+F+E+A,1,D+L+Pf+' +k=1'+La+N+M+F+E+A,1,D+L+Od+' +k=1'+Hy+N+M+F+E+A,1,D+L+NY+' +k=1'+Hz+N+M+F+E+A,1,D+L+Pg+' +k=1'+IA+N+M+F+E+A,1,D+L+NZ+' +k=1'+IB+N+M+F+E+A,1,D+L+Lf+' +k=1'+Gx+N+M+F+E+A,1,D+L+KG+' +k=1'+IT+N+M+F+E+A,1,D+L+KH+' +k=1'+Gc+N+M+F+E+A,1,D+L+Lh+' +k=1'+IU+N+M+F+E+A,168,D+' +lat_0=24.45'+Vv+Jl+h+Hk+R+QO+E+A,391,GU+Xx+Yo+' +k=0.9999079'+s+N+Y+Fv+E+A,1,GU+Xx+Yo+' +k=0.9999079 +x_0=155000 +y_0=463000'+Y+Fv+E+A,109,UU+L+Nb+LX+Ak+x+Al+E+A,67,I+IC+x+Al+E+A,1,I+Hi+x+Al+E+A,1,I+Gz+x+Al+E+A,1,I+ID+x+Al+E+A,1,I+Io+x+Al+E+A,15,I+Ik+o+x+Al+E+A,1,I+IC+o+x+Al+E+A,1,I+Hi+o+x+Al+E+A,1,I+Gz+o+x+Al+E+A,1,I+ID+o+x+Al+E+A,1,I+Io+o+x+Al+E+A,1,I+MB+o+x+Al+E+A,1,I+Nx+o+x+Al+E+A,1,I+Nr+o+x+Al+E+A,25,I+Gz+o+R+Nn+E+A,1,I+ID+o+R+Nn+E+A,112,I+KC+o+HB+Bt+E+A,38,D+Pi+' +lon_0=11 +k=1'+s+N+Gk+HB+Bt+GK+A,2,D+Pi+' +lon_0=13 +k=1'+s+N+Gk+HB+Bt+GK+A,2,D+Pi+Gj+' +k=1'+s+N+Gk+HB+Bt+GK+A,2,D+Pi+UE+' +k=1'+s+N+Gk+HB+Bt+GK+A,2,D+Pi+RI+' +k=1'+s+N+Gk+HB+Bt+GK+A,2,D+Pi+Gl+' +k=1'+s+N+Gk+HB+Bt+GK+A,2,D+Pi+SP+' +k=1'+s+N+Gk+HB+Bt+GK+A,2,D+Pi+RJ+' +k=1'+s+N+Gk+HB+Bt+GK+A,317,CU+' +lat_0=-18.9 +lonc=44.10000000000001 +alpha=18.9'+EP+u+CO+' +gamma=18.9'+R+HD+Lv+E+A,36,I+JZ+o+R+HD+E+A,1,I+JM+o+R+HD+E+A,110,I+Mi+Lo+GD+E+A,1,I+NS+Lo+GD+E+A,21,CU+Qi+Yz+PF+Ph+' +x_0=590476.8714630401 +y_0=442857.653094361'+If+Lo+GD+' +to_meter=20.11676512155263'+A,1,CU+Qi+Yz+PF+Ph+' +x_0=590476.8727431979 +y_0=442857.6545573985'+If+Lo+GD+' +to_meter=0.3047994715386762'+A,1,CU+Qi+Yz+PF+Ph+' +x_0=590476.87 +y_0=442857.65'+If+Lo+GD+E+A,28,D+YA+' +lon_0=-8 +k=1'+h+KJ+PV+Bb+E+A,1,D+YA+' +lon_0=-8 +k=1.000035'+h+KJ+Ok+Bb+E+A,1,D+YA+' +lon_0=-8 +k=1.000035'+h+KJ+Ok+Bb+E+A,258,D+PT+Zz+V+s+N+Y+g+E+A,1,D+PT+NX+V+s+N+Y+g+E+A,1,D+GM+Ox+V+s+N+Y+g+E+A,1,D+PT+Tk+V+s+N+Y+g+E+A,1,D+GM+Oy+V+s+N+Y+g+E+A,1,D+GM+Rw+V+s+N+Y+g+E+A,1,D+GM+Oz+V+s+N+Y+g+E+A,1,D+GM+aA+V+s+N+Y+g+E+A,1,D+GM+PA+V+s+N+Y+g+E+A,1,D+Fs+PB+V+s+N+Y+g+E+A,1,D+IZ+ZH+V+s+N+Y+g+E+A,1,D+IZ+ZI+V+s+N+Y+g+E+A,1,D+IZ+ZJ+V+s+N+Y+g+E+A,1,D+IQ+' +lon_0=142'+V+s+N+Y+g+E+A,1,D+IQ+Pj+V+s+N+Y+g+E+A,1,D+IQ+' +lon_0=124'+V+s+N+Y+g+E+A,1,D+IQ+NX+V+s+N+Y+g+E+A,1,D+' +lat_0=20'+Rw+V+s+N+Y+g+E+A,1,D+IQ+ZR+V+s+N+Y+g+E+A,21,Ck+Vs+UX+' +x_0=86501.46392051999'+aS+Ee+Ef+JK+Vo+A,139,I+JM+Gn+E+A,1,I+Me+Gn+E+A,151,H+' +lat_1=36'+GM+SC+QL+O+Hk+AU+BN+JC+E+A,1,H+Sd+Se+SC+Nk+O+Hk+AU+BN+JC+E+A,1,H+' +lat_1=36'+GM+SC+QL+O+Hk+AU+BN+E+A,1,H+Sd+Se+SC+Nk+O+Hk+AU+BN+E+A,235,I+KA+c+Af+E+A,1,I+Oq+c+Af+E+A,1,I+QD+c+Af+E+A,1,I+JN+c+Af+E+A,59,H+' +lat_1=36'+GM+SC+QL+' +x_0=500135 +y_0=300090'+c+Af+E+A,1,H+Sd+Se+SC+Nk+' +x_0=500135 +y_0=300090'+c+Af+E+A,236,I+Ja+AU+BN+E+A,93,I+ID+R+HE+E+A,33,D+L+Nb+AP+O+N+R+HE+E+A,16,D+L+Vn+AP+O+N+R+HE+E+A,1,D+L+Vn+V+O+N+R+HE+E+A,80,D+L+RP+' +k=1'+s+EO+Y+Aw+Ls+E+A,1,D+L+QQ+' +k=1'+s+EO+Y+Aw+Ls+E+A,1,D+L+ZG+' +k=1'+s+EO+Y+Aw+Ls+E+A,1,D+L+PG+' +k=1'+s+EO+Y+z+E+A,1,D+L+Ig+' +k=1'+s+EO+Y+z+E+A,1,D+L+PH+' +k=1'+s+EO+Y+z+E+A,1,D+L+PG+' +k=1'+Bn+EO+Y+z+E+A,1,D+L+Ig+' +k=1 +x_0=450000'+EO+Y+z+E+A,1,D+L+PH+' +k=1'+YL+EO+Y+z+E+A,22,D+L+RP+' +k=1'+s+N+Y+Aw+Ls+E+A,1,D+L+QQ+' +k=1'+s+N+Y+Aw+Ls+E+A,1,D+L+ZG+' +k=1'+s+N+Y+Aw+Ls+E+A,1,D+L+PG+' +k=1'+Bn+N+Y+z+E+A,1,D+L+Ig+' +k=1 +x_0=450000'+N+Y+z+E+A,1,D+L+PH+' +k=1'+YL+N+Y+z+E+A,1,H+LM+Nh+' +lat_0=47.5'+Ig+u+Is+Y+z+E+A,1,D+L+RP+' +k=1'+Bn+N+Y+Aw+Ls+E+A,1,D+L+QQ+' +k=1 +x_0=450000'+N+Y+Aw+Ls+E+A,1,D+L+ZG+' +k=1'+YL+N+Y+Aw+Ls+E+A,10,H+Ks+Kt+Hr+' +lon_0=4.356939722222222 +x_0=150000.01256 +y_0=5400088.4378'+R+GP+E+A,70,H+' +lat_1=51.16666723333333 +lat_2=49.8333339'+Hr+' +lon_0=4.367486666666666 +x_0=150000.013 +y_0=5400088.438'+R+GP+E+A,96,D+L+ZO+' +k=1'+Ci+N+Y+AC+E+A,1,D+L+KB+' +k=1'+Bo+N+Y+AC+E+A,1,D+L+IH+' +k=1'+DP+N+Y+AC+E+A,1,D+L+Gj+' +k=1'+Eg+N+Y+AC+E+A,59,I+Ja+AU+BN+No+E+A,1,I+KA+AU+BN+No+E+A,71,GU+' +lat_0=45.9 +lon_0=25.39246588888889 +k=0.9996667'+O+Ae+R+QP+E+A,238,I+JZ+j+MR+E+A,1,I+JM+j+MR+E+A,62,D+L+SQ+' +k=1'+O+N+C+Rr+E+A,64,I+Ns+C+B+E+A,1,I+Nt+C+B+E+A,1,I+Nu+C+B+E+A,1,I+Nw+C+B+E+A,1,I+NP+C+B+E+A,1,I+NQ+C+B+E+A,1,I+Ik+C+B+E+A,1,I+IC+C+B+E+A,1,I+Hi+C+B+E+A,1,I+Gz+C+B+E+A,1,I+ID+C+B+E+A,1,I+Io+C+B+E+A,1,I+Ik+o+C+B+E+A,1,I+IC+o+C+B+E+A,1,I+Hi+o+C+B+E+A,1,I+Gz+o+C+B+E+A,1,I+ID+o+C+B+E+A,1,I+Io+o+C+B+E+A,1,I+MB+o+C+B+E+A,1,I+Nx+o+C+B+E+A,1,I+Nr+o+C+B+E+A,1,I+Ik+C+B+E+A,1,I+IC+C+B+E+A,1,I+Hi+C+B+E+A,1,I+Gz+C+B+E+A,1,I+ID+C+B+E+A,1,I+Io+C+B+E+A,1,I+Ik+o+C+B+E+A,1,I+IC+o+C+B+E+A,1,I+Hi+o+C+B+E+A,1,I+Gz+o+C+B+E+A,1,I+ID+o+C+B+E+A,1,I+Io+o+C+B+E+A,1,I+MB+o+C+B+E+A,1,I+Nx+o+C+B+E+A,1,I+Nr+o+C+B+E+A,1,H+' +lat_1=48.71666666666667 +lat_2=47.85'+Ib+IS+Z+N+X+J+A,1,H+' +lat_1=47.88333333333333 +lat_2=46.45 +lat_0=45.83333333333334'+IS+Z+N+X+J+A,1,H+' +lat_1=46.4 +lat_2=44.86666666666667'+IZ+IS+Z+N+X+J+A,2,H+' +lat_1=41.85 +lat_2=42.81666666666667 +lat_0=41.33333333333334'+CS+Z+N+X+J+A,1,H+' +lat_1=40.28333333333333'+Dk+BY+' +lon_0=-99.5'+Z+N+X+J+A,1,D+CQ+DF+V+e+N+X+J+A,1,D+CQ+DG+V+e+N+X+J+A,1,D+CQ+DH+V+e+N+X+J+A,1,D+Fp+DI+AO+e+N+X+J+A,1,D+BA+' +lon_0=-74.66666666666667'+EQ+Z+N+X+J+A,1,D+Bl+Cu+Hm+e+N+X+J+A,1,D+Bl+Iy+V+e+N+X+J+A,1,D+Bl+Cv+Iz+e+N+X+J+A,1,D+Fs+' +lon_0=-74.33333333333333'+AO+e+N+X+J+A,1,D+Fs+Cw+Ad+e+N+X+J+A,1,D+Fs+Cx+Ad+e+N+X+J+A,2,H+' +lat_1=34.33333333333334 +lat_2=36.16666666666666'+LT+NW+Z+N+X+J+A,1,H+' +lat_1=47.43333333333333'+Xy+Ib+EZ+Z+N+X+J+A,1,H+' +lat_1=46.18333333333333 +lat_2=47.48333333333333'+Be+EZ+Z+N+X+J+A,1,H+' +lat_1=40.43333333333333 +lat_2=41.7'+BY+ET+Z+N+X+J+A,1,H+' +lat_1=38.73333333333333 +lat_2=40.03333333333333'+Ch+ET+Z+N+X+J+A,1,H+' +lat_1=35.56666666666667'+Du+QU+Fl+Z+N+X+J+A,1,H+' +lat_1=33.93333333333333 +lat_2=35.23333333333333'+Do+Fl+Z+N+X+J+A,1,H+' +lat_1=44.33333333333334'+Nh+AK+AJ+Z+N+X+J+A,1,H+' +lat_1=42.33333333333334 +lat_2=44'+p+AJ+Z+N+X+J+A,1,H+' +lat_1=40.88333333333333 +lat_2=41.95'+BB+Ea+Z+N+X+J+A,2,D+EI+GE+' +k=0.9999938'+e+N+X+J+A,1,H+' +lat_1=33.76666666666667 +lat_2=34.96666666666667'+PT+CR+Z+N+X+J+A,2,H+' +lat_1=32.33333333333334 +lat_2=33.66666666666666'+Dr+CR+Z+N+X+J+A,1,H+' +lat_1=44.41666666666666 +lat_2=45.68333333333333'+AL+CS+Z+N+X+J+A,1,H+' +lat_1=42.83333333333334 +lat_2=44.4'+EJ+Ag+Z+N+X+J+A,2,H+aL+' +lat_2=36.18333333333333'+QV+Jr+Z+N+X+J+A,1,H+' +lat_1=32.13333333333333 +lat_2=33.96666666666667'+Ds+' +lon_0=-97.5'+Z+N+X+J+A,1,H+' +lat_1=30.11666666666667 +lat_2=31.88333333333333'+Cb+Ag+Z+N+X+J+A,1,H+' +lat_1=28.38333333333333 +lat_2=30.28333333333333'+Dt+Ji+Z+N+X+J+A,1,H+' +lat_1=26.16666666666667 +lat_2=27.83333333333333'+Cc+CV+Z+N+X+J+A,1,H+' +lat_1=40.71666666666667 +lat_2=41.78333333333333'+Br+BI+Z+N+X+J+A,1,H+' +lat_1=39.01666666666667 +lat_2=40.65'+AQ+BI+Z+N+X+J+A,1,H+' +lat_1=37.21666666666667 +lat_2=38.35'+f+BI+Z+N+X+J+A,1,D+Fp+LW+JA+e+N+X+J+A,1,H+' +lat_1=38.03333333333333 +lat_2=39.2'+AA+GF+Z+N+X+J+A,1,H+Dn+' +lat_2=37.96666666666667'+AB+GF+Z+N+X+J+A,1,H+' +lat_1=47.5'+Xy+Ib+Cy+Z+N+X+J+A,1,H+' +lat_1=45.83333333333334 +lat_2=47.33333333333334'+Dv+AJ+Z+N+X+J+A,1,H+' +lat_1=39 +lat_2=40.25'+Mr+Ga+Z+N+X+J+A,1,H+' +lat_1=37.48333333333333 +lat_2=38.88333333333333'+QX+CR+Z+N+X+J+A,1,H+' +lat_1=45.56666666666667 +lat_2=46.76666666666667'+Dw+Bu+Z+N+X+J+A,1,H+' +lat_1=44.25'+Hl+AL+Bu+Z+N+X+J+A,1,H+' +lat_1=42.73333333333333 +lat_2=44.06666666666667'+PR+Bu+Z+N+X+J+A,1,D+LL+DJ+Am+e+N+X+J+A,1,D+LL+DK+Am+e+N+X+J+A,1,D+LL+JB+Am+e+N+X+J+A,1,D+LL+DL+Am+e+N+X+J+A,6,D+L+Ji+AP+k+N+X+J+A,1,D+L+Rs+AP+k+N+X+J+A,1,D+L+Jh+AP+k+N+X+J+A,1,D+L+CR+AP+k+N+X+J+A,14,D+L+' +lon_0=-53'+V+Ab+N+X+E+A,1,D+L+Zd+V+Ab+N+X+E+A,1,D+L+Tf+V+Ab+N+X+E+A,1,D+L+RQ+V+Ab+N+X+E+A,1,D+L+RR+V+Ab+N+X+E+A,1,D+L+Tg+V+Ab+N+X+E+A,12,H+UF+Nh+IZ+HJ+s+N+X+E+A,1,H+CD+CE+Cc+Bi+Z+N+X+J+A,1,H+LM+RK+MV+IS+a+N+C+B+E+A,4,H+JT+Jn+FZ+CS+O+N+C+B+E+A,3,D+CQ+DF+V+h+Tm+C+B+E+A,1,D+CQ+DG+V+O+Hh+C+B+E+A,1,D+CQ+DH+V+CX+LV+C+B+E+A,1,D+Fp+DI+AO+AI+N+C+B+E+A,1,D+BA+Gp+V+Bn+N+C+B+E+A,1,D+Bl+Cu+Hm+OC+N+C+B+E+A,1,D+Bl+Iy+V+O+N+C+B+E+A,1,D+Bl+Cv+Iz+YD+N+C+B+E+A,1,D+BA+Gp+V+Bn+N+C+B+E+A,1,D+Fs+Cw+Ad+Bv+N+C+B+E+A,1,D+Fs+Cx+Ad+Qo+N+C+B+E+A,1,H+Dl+Dm+BB+Oc+AI+N+C+B+E+A,1,H+Et+Eu+LT+NW+Rh+N+C+B+E+A,1,H+BH+Ev+Ib+EZ+a+N+C+B+E+A,1,H+Ew+Ex+Be+EZ+a+N+C+B+E+A,1,H+OK+Fa+BY+ET+a+N+C+B+E+A,1,H+Fb+Fc+Ch+ET+a+N+C+B+E+A,1,H+Dn+Ey+QU+Fl+a+N+C+B+E+A,1,H+Ez+FA+Do+Fl+a+N+C+B+E+A,1,H+PP+CZ+AK+AJ+Ci+N+C+B+E+A,1,H+PQ+Ca+p+AJ+AV+N+C+B+E+A,1,H+MW+FB+BB+Ea+a+N+C+B+E+A,1,H+Dp+Dq+y+Ea+a+N+C+B+E+A,1,D+EI+GE+Lb+BU+N+C+B+E+A,3,H+FC+OD+Dr+CR+OE+N+C+B+E+A,1,H+Fd+Fe+AL+CS+a+N+C+B+E+A,1,H+OL+Ff+EJ+Ag+a+N+C+B+E+A,1,H+FD+MX+BC+MQ+a+N+C+B+E+A,1,H+FE+MY+QV+Jr+h+AH+C+B+E+A,1,H+FF+FG+Ds+CV+a+Cl+C+B+E+A,1,H+FH+FI+Cb+Ag+EW+Fq+C+B+E+A,1,H+FJ+FK+Dt+Ji+a+LV+C+B+E+A,1,H+CD+CE+Cc+CV+AI+Ju+C+B+E+A,1,H+AY+CF+Br+BI+O+AH+C+B+E+A,1,H+JF+CG+AQ+BI+O+Cl+C+B+E+A,1,H+JG+CH+f+BI+O+Fq+C+B+E+A,1,D+Fp+LW+JA+O+N+C+B+E+A,1,H+OF+FL+AA+GF+Bo+Cl+C+B+E+A,1,H+Az+Du+AB+GF+Bo+AH+C+B+E+A,1,H+BH+OG+Ib+Cy+O+N+C+B+E+A,1,H+FM+FN+Dv+AJ+O+N+C+B+E+A,1,H+Mb+RN+Mr+Ga+a+N+C+B+E+A,1,H+Fg+Fh+QX+CR+a+N+C+B+E+A,1,H+FO+FP+Dw+Bu+a+N+C+B+E+A,1,H+Jc+MZ+AL+Bu+a+N+C+B+E+A,1,H+FQ+FR+PR+Bu+a+N+C+B+E+A,1,D+CA+DJ+Ad+h+N+C+B+E+A,1,D+CA+DK+Ad+u+EK+C+B+E+A,1,D+CA+JB+Ad+a+N+C+B+E+A,1,D+CA+DL+Ad+CX+EK+C+B+E+A,3,H+GW+GX+GY+GA+h+IK+C+B+E+A,3,D+L+Ji+AP+k+N+C+B+J+A,1,D+L+Rs+AP+k+N+C+B+J+A,1,D+L+Jh+AP+k+N+C+B+J+A,1,D+L+CR+AP+k+N+C+B+J+A,14,D+L+' +lon_0=-53'+V+Ab+N+C+B+E+A,1,D+L+Zd+V+Ab+N+C+B+E+A,1,D+L+Tf+V+Ab+N+C+B+E+A,1,D+L+RQ+V+Ab+N+C+B+E+A,1,D+L+RR+V+Ab+N+C+B+E+A,1,D+L+Tg+V+Ab+N+C+B+E+A,1,D+L+IL+V+Ab+N+C+B+E+A,1,D+L+Th+V+Ab+N+C+B+E+A,1,D+L+Ti+V+Ab+N+C+B+E+A,1,D+L+Ga+V+Ab+N+C+B+E+A,1,D+L+ET+V+Ab+N+C+B+E+A,1,D+L+CR+V+Ab+N+C+B+E+A,1,D+L+NV+V+Ab+N+C+B+E+A,1,D+L+Jh+V+Ab+N+C+B+E+A,1,D+L+Bu+V+Ab+N+C+B+E+A,1,D+L+Rs+V+Ab+N+C+B+E+A,1,D+L+OZ+V+Ab+N+C+B+E+A,1,H+UF+Nh+IZ+HJ+s+N+C+B+E+A,1,H+CD+CE+' +lat_0=25.5'+Bi+BZ+N+C+B+E+A,2,I+SK+T+P+E+A,1,I+TV+T+P+E+A,1,I+Xz+T+P+E+A,1,I+TY+T+P+E+A,1,I+RG+T+P+E+A,1,I+Ro+T+P+E+A,1,I+RH+T+P+E+A,1,I+TW+T+P+E+A,1,I+TX+T+P+E+A,1,I+QE+T+P+E+A,1,I+Ns+T+P+E+A,1,I+Nt+T+P+E+A,1,I+Nu+T+P+E+A,1,I+Nw+T+P+E+A,1,I+NP+T+P+E+A,1,I+NQ+T+P+E+A,1,I+Ik+T+P+E+A,1,I+IC+T+P+E+A,1,I+Hi+T+P+E+A,1,I+Gz+T+P+E+A,1,I+ID+T+P+E+A,1,I+Io+T+P+E+A,1,I+MB+T+P+E+A,1,I+Nx+T+P+E+A,1,I+Nr+T+P+E+A,1,I+Os+T+P+E+A,1,I+SL+T+P+E+A,1,I+Ja+T+P+E+A,1,I+KA+T+P+E+A,1,I+Oq+T+P+E+A,1,I+QD+T+P+E+A,1,I+JN+T+P+E+A,1,I+KC+T+P+E+A,1,I+NR+T+P+E+A,1,I+Ki+T+P+E+A,1,I+Mf+T+P+E+A,1,I+KD+T+P+E+A,1,I+JZ+T+P+E+A,1,I+JM+T+P+E+A,1,I+Me+T+P+E+A,1,I+Rb+T+P+E+A,1,I+Rc+T+P+E+A,1,I+SO+T+P+E+A,1,I+Td+T+P+E+A,1,I+Te+T+P+E+A,1,I+QF+T+P+E+A,1,I+Ny+T+P+E+A,1,I+Mh+T+P+E+A,1,I+Mi+T+P+E+A,1,I+NS+T+P+E+A,1,I+Mg+T+P+E+A,1,I+NT+T+P+E+A,1,I+Ot+T+P+E+A,1,I+Nv+T+P+E+A,1,I+PM+T+P+E+A,1,I+Re+T+P+E+A,1,I+SM+T+P+E+A,1,I+MA+T+P+E+A,1,I+Nq+T+P+E+A,1,I+PL+T+P+E+A,41,I+SK+o+T+P+E+A,1,I+TV+o+T+P+E+A,1,I+Xz+o+T+P+E+A,1,I+TY+o+T+P+E+A,1,I+RG+o+T+P+E+A,1,I+Ro+o+T+P+E+A,1,I+RH+o+T+P+E+A,1,I+TW+o+T+P+E+A,1,I+TX+o+T+P+E+A,1,I+QE+o+T+P+E+A,1,I+Ns+o+T+P+E+A,1,I+Nt+o+T+P+E+A,1,I+Nu+o+T+P+E+A,1,I+Nw+o+T+P+E+A,1,I+NP+o+T+P+E+A,1,I+NQ+o+T+P+E+A,1,I+Ik+o+T+P+E+A,1,I+IC+o+T+P+E+A,1,I+Hi+o+T+P+E+A,1,I+Gz+o+T+P+E+A,1,I+ID+o+T+P+E+A,1,I+Io+o+T+P+E+A,1,I+MB+o+T+P+E+A,1,I+Nx+o+T+P+E+A,1,I+Nr+o+T+P+E+A,1,I+Os+o+T+P+E+A,1,I+SL+o+T+P+E+A,1,I+Ja+o+T+P+E+A,1,I+KA+o+T+P+E+A,1,I+Oq+o+T+P+E+A,1,I+QD+o+T+P+E+A,1,I+JN+o+T+P+E+A,1,I+KC+o+T+P+E+A,1,I+NR+o+T+P+E+A,1,I+Ki+o+T+P+E+A,1,I+Mf+o+T+P+E+A,1,I+KD+o+T+P+E+A,1,I+JZ+o+T+P+E+A,1,I+JM+o+T+P+E+A,1,I+Me+o+T+P+E+A,1,I+Rb+o+T+P+E+A,1,I+Rc+o+T+P+E+A,1,I+SO+o+T+P+E+A,1,I+Td+o+T+P+E+A,1,I+Te+o+T+P+E+A,1,I+QF+o+T+P+E+A,1,I+Ny+o+T+P+E+A,1,I+Mh+o+T+P+E+A,1,I+Mi+o+T+P+E+A,1,I+NS+o+T+P+E+A,1,I+Mg+o+T+P+E+A,1,I+NT+o+T+P+E+A,1,I+Ot+o+T+P+E+A,1,I+Nv+o+T+P+E+A,1,I+PM+o+T+P+E+A,1,I+Re+o+T+P+E+A,1,I+SM+o+T+P+E+A,1,I+MA+o+T+P+E+A,1,I+Nq+o+T+P+E+A,1,I+PL+o+T+P+E+A,41,I+SK+T+Q+E+A,1,I+TV+T+Q+E+A,1,I+Xz+T+Q+E+A,1,I+TY+T+Q+E+A,1,I+RG+T+Q+E+A,1,I+Ro+T+Q+E+A,1,I+RH+T+Q+E+A,1,I+TW+T+Q+E+A,1,I+TX+T+Q+E+A,1,I+QE+T+Q+E+A,1,I+Ns+T+Q+E+A,1,I+Nt+T+Q+E+A,1,I+Nu+T+Q+E+A,1,I+Nw+T+Q+E+A,1,I+NP+T+Q+E+A,1,I+NQ+T+Q+E+A,1,I+Ik+T+Q+E+A,1,I+IC+T+Q+E+A,1,I+Hi+T+Q+E+A,1,I+Gz+T+Q+E+A,1,I+ID+T+Q+E+A,1,I+Io+T+Q+E+A,1,I+MB+T+Q+E+A,1,I+Nx+T+Q+E+A,1,I+Nr+T+Q+E+A,1,I+Os+T+Q+E+A,1,I+SL+T+Q+E+A,1,I+Ja+T+Q+E+A,1,I+KA+T+Q+E+A,1,I+Oq+T+Q+E+A,1,I+QD+T+Q+E+A,1,I+JN+T+Q+E+A,1,I+KC+T+Q+E+A,1,I+NR+T+Q+E+A,1,I+Ki+T+Q+E+A,1,I+Mf+T+Q+E+A,1,I+KD+T+Q+E+A,1,I+JZ+T+Q+E+A,1,I+JM+T+Q+E+A,1,I+Me+T+Q+E+A,1,I+Rb+T+Q+E+A,1,I+Rc+T+Q+E+A,1,I+SO+T+Q+E+A,1,I+Td+T+Q+E+A,1,I+Te+T+Q+E+A,1,I+QF+T+Q+E+A,1,I+Ny+T+Q+E+A,1,I+Mh+T+Q+E+A,1,I+Mi+T+Q+E+A,1,I+NS+T+Q+E+A,1,I+Mg+T+Q+E+A,1,I+NT+T+Q+E+A,1,I+Ot+T+Q+E+A,1,I+Nv+T+Q+E+A,1,I+PM+T+Q+E+A,1,I+Re+T+Q+E+A,1,I+SM+T+Q+E+A,1,I+MA+T+Q+E+A,1,I+Nq+T+Q+E+A,1,I+PL+T+Q+E+A,41,I+SK+o+T+Q+E+A,1,I+TV+o+T+Q+E+A,1,I+Xz+o+T+Q+E+A,1,I+TY+o+T+Q+E+A,1,I+RG+o+T+Q+E+A,1,I+Ro+o+T+Q+E+A,1,I+RH+o+T+Q+E+A,1,I+TW+o+T+Q+E+A,1,I+TX+o+T+Q+E+A,1,I+QE+o+T+Q+E+A,1,I+Ns+o+T+Q+E+A,1,I+Nt+o+T+Q+E+A,1,I+Nu+o+T+Q+E+A,1,I+Nw+o+T+Q+E+A,1,I+NP+o+T+Q+E+A,1,I+NQ+o+T+Q+E+A,1,I+Ik+o+T+Q+E+A,1,I+IC+o+T+Q+E+A,1,I+Hi+o+T+Q+E+A,1,I+Gz+o+T+Q+E+A,1,I+ID+o+T+Q+E+A,1,I+Io+o+T+Q+E+A,1,I+MB+o+T+Q+E+A,1,I+Nx+o+T+Q+E+A,1,I+Nr+o+T+Q+E+A,1,I+Os+o+T+Q+E+A,1,I+SL+o+T+Q+E+A,1,I+Ja+o+T+Q+E+A,1,I+KA+o+T+Q+E+A,1,I+Oq+o+T+Q+E+A,1,I+QD+o+T+Q+E+A,1,I+JN+o+T+Q+E+A,1,I+KC+o+T+Q+E+A,1,I+NR+o+T+Q+E+A,1,I+Ki+o+T+Q+E+A,1,I+Mf+o+T+Q+E+A,1,I+KD+o+T+Q+E+A,1,I+JZ+o+T+Q+E+A,1,I+JM+o+T+Q+E+A,1,I+Me+o+T+Q+E+A,1,I+Rb+o+T+Q+E+A,1,I+Rc+o+T+Q+E+A,1,I+SO+o+T+Q+E+A,1,I+Td+o+T+Q+E+A,1,I+Te+o+T+Q+E+A,1,I+QF+o+T+Q+E+A,1,I+Ny+o+T+Q+E+A,1,I+Mh+o+T+Q+E+A,1,I+Mi+o+T+Q+E+A,1,I+NS+o+T+Q+E+A,1,I+Mg+o+T+Q+E+A,1,I+NT+o+T+Q+E+A,1,I+Ot+o+T+Q+E+A,1,I+Nv+o+T+Q+E+A,1,I+PM+o+T+Q+E+A,1,I+Re+o+T+Q+E+A,1,I+SM+o+T+Q+E+A,1,I+MA+o+T+Q+E+A,1,I+Nq+o+T+Q+E+A,1,I+PL+o+T+Q+E+A,41,I+SK+S+E+A,1,I+TV+S+E+A,1,I+Xz+S+E+A,1,I+TY+S+E+A,1,I+RG+S+E+A,1,I+Ro+S+E+A,1,I+RH+S+E+A,1,I+TW+S+E+A,1,I+TX+S+E+A,1,I+QE+S+E+A,1,I+Ns+S+E+A,1,I+Nt+S+E+A,1,I+Nu+S+E+A,1,I+Nw+S+E+A,1,I+NP+S+E+A,1,I+NQ+S+E+A,1,I+Ik+S+E+A,1,I+IC+S+E+A,1,I+Hi+S+E+A,1,I+Gz+S+E+A,1,I+ID+S+E+A,1,I+Io+S+E+A,1,I+MB+S+E+A,1,I+Nx+S+E+A,1,I+Nr+S+E+A,1,I+Os+S+E+A,1,I+SL+S+E+A,1,I+Ja+S+E+A,1,I+KA+S+E+A,1,I+Oq+S+E+A,1,I+QD+S+E+A,1,I+JN+S+E+A,1,I+KC+S+E+A,1,I+NR+S+E+A,1,I+Ki+S+E+A,1,I+Mf+S+E+A,1,I+KD+S+E+A,1,I+JZ+S+E+A,1,I+JM+S+E+A,1,I+Me+S+E+A,1,I+Rb+S+E+A,1,I+Rc+S+E+A,1,I+SO+S+E+A,1,I+Td+S+E+A,1,I+Te+S+E+A,1,I+QF+S+E+A,1,I+Ny+S+E+A,1,I+Mh+S+E+A,1,I+Mi+S+E+A,1,I+NS+S+E+A,1,I+Mg+S+E+A,1,I+NT+S+E+A,1,I+Ot+S+E+A,1,I+Nv+S+E+A,1,I+PM+S+E+A,1,I+Re+S+E+A,1,I+SM+S+E+A,1,I+MA+S+E+A,1,I+Nq+S+E+A,1,I+PL+S+E+A,1,BP+Hr+Qm+HN+Rd+Bd+Cl+S+E+A,3,D+L+Ji+AP+k+N+S+J+A,1,D+L+Rs+AP+k+N+S+J+A,1,D+L+Jh+AP+k+N+S+J+A,1,D+L+CR+AP+k+N+S+J+A,34,I+SK+o+S+E+A,1,I+TV+o+S+E+A,1,I+Xz+o+S+E+A,1,I+TY+o+S+E+A,1,I+RG+o+S+E+A,1,I+Ro+o+S+E+A,1,I+RH+o+S+E+A,1,I+TW+o+S+E+A,1,I+TX+o+S+E+A,1,I+QE+o+S+E+A,1,I+Ns+o+S+E+A,1,I+Nt+o+S+E+A,1,I+Nu+o+S+E+A,1,I+Nw+o+S+E+A,1,I+NP+o+S+E+A,1,I+NQ+o+S+E+A,1,I+Ik+o+S+E+A,1,I+IC+o+S+E+A,1,I+Hi+o+S+E+A,1,I+Gz+o+S+E+A,1,I+ID+o+S+E+A,1,I+Io+o+S+E+A,1,I+MB+o+S+E+A,1,I+Nx+o+S+E+A,1,I+Nr+o+S+E+A,1,I+Os+o+S+E+A,1,I+SL+o+S+E+A,1,I+Ja+o+S+E+A,1,I+KA+o+S+E+A,1,I+Oq+o+S+E+A,1,I+QD+o+S+E+A,1,I+JN+o+S+E+A,1,I+KC+o+S+E+A,1,I+NR+o+S+E+A,1,I+Ki+o+S+E+A,1,I+Mf+o+S+E+A,1,I+KD+o+S+E+A,1,I+JZ+o+S+E+A,1,I+JM+o+S+E+A,1,I+Me+o+S+E+A,1,I+Rb+o+S+E+A,1,I+Rc+o+S+E+A,1,I+SO+o+S+E+A,1,I+Td+o+S+E+A,1,I+Te+o+S+E+A,1,I+QF+o+S+E+A,1,I+Ny+o+S+E+A,1,I+Mh+o+S+E+A,1,I+Mi+o+S+E+A,1,I+NS+o+S+E+A,1,I+Mg+o+S+E+A,1,I+NT+o+S+E+A,1,I+Ot+o+S+E+A,1,I+Nv+o+S+E+A,1,I+PM+o+S+E+A,1,I+Re+o+S+E+A,1,I+SM+o+S+E+A,1,I+MA+o+S+E+A,1,I+Nq+o+S+E+A,1,I+PL+o+S+E+A,1,BP+m+' +lat_ts=-90'+HN+Rd+Bd+Cl+S+E+A,5,D+L+PN+AP+O+Ak+S+E+A]\n.reduce((acc, it, i) => {\n  if (i % 2 === 0) {\n    // v is the addition in EPSG code\n    const cur = acc.prev + it;\n    const code = \"EPSG:\" + cur;\n    acc.defs.push([code]);\n    acc.prev = cur;\n  } else {\n    // v is the proj4 text\n    acc.defs[acc.defs.length - 1].push(it);\n  }\n  return acc;\n}, { defs: [], prev: 0 }).defs;", "let proj4 = require(\"proj4\");\nconst defs = require(\"proj4js-definitions\");\n\n// - inside an Angular project, proj4 could be an object\n// - inside a Vite project, proj4 could be the proj4 function\n//   but with the defs property/function mysteriously removed\nif ((typeof proj4 === \"object\" || typeof proj4 === \"function\") && typeof proj4.defs !== \"function\" && typeof proj4.default === \"function\" && typeof proj4.default.defs === \"function\") {\n  proj4 = proj4.default;\n}\n\nproj4.defs(defs);\n\nif (typeof define === \"function\" && define.amd) {\n  define(function() { return proj4; });\n}\n\nif (typeof module === \"object\") {\n  module.exports = proj4;\n  module.exports.default = proj4;\n}\n\n", "const merge = require(\"proj4-merge\");\nconst _proj4 = require(\"proj4\");\nconst proj4_fully_loaded = require(\"proj4-fully-loaded\");\n\nfunction proj4collect(instances) {\n  if (!instances) instances = [];\n\n  if (_proj4) instances.push(_proj4);\n\n  if (proj4_fully_loaded) instances.push(proj4_fully_loaded);\n\n  if (typeof global === \"object\" && global.proj4) instances.push(global.proj4);\n\n  if (typeof globalThis === \"object\" && globalThis.proj4) instances.push(globalThis.proj4);\n\n  if (typeof self === \"object\" && self.proj4) instances.push(self.proj4);\n\n  if (typeof window === \"object\" && window.proj4) instances.push(window.proj4);\n\n  // filters out nullish values and empty objects\n  // sometimes you'll have a null object if using webpack's null-loader\n  instances = instances.filter(it => ![undefined, null].includes(it) && (typeof it !== \"object\" || Object.keys(it).length > 0));\n\n  const merged = merge(instances);\n\n  return merged;\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return proj4collect;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = proj4collect;\n  module.exports.default = proj4collect;\n}\n\nif (typeof window === \"object\") {\n  window.proj4collect = proj4collect;\n}\n\nif (typeof self === \"object\") {\n  self.proj4collect = proj4collect;\n}\n", "module.exports = function getDepth(arr) {\n  const isArray = (arr) =>\n    Array.isArray(arr) ||\n    arr instanceof Int8Array ||\n    arr instanceof Uint8Array ||\n    arr instanceof Uint8ClampedArray ||\n    arr instanceof Int16Array ||\n    arr instanceof Uint16Array ||\n    arr instanceof Int32Array ||\n    arr instanceof Uint32Array ||\n    arr instanceof Float32Array ||\n    arr instanceof Float64Array ||\n    arr instanceof BigInt64Array ||\n    arr instanceof BigUint64Array;\n\n  let depth = 0;\n  let part = arr;\n  while (isArray(part)) {\n    depth++;\n    part = part[0];\n  }\n  return depth;\n};\n", "function reproject_line(coords, reproject, options) {\n  const debug_level =\n    typeof options === \"object\" && typeof options.debug_level === \"number\"\n      ? options.debug_level\n      : 0;\n  let densify =\n    typeof options === \"object\" && typeof options.densify === \"number\"\n      ? options.densify\n      : 0;\n  const strategy =\n    typeof options === \"object\" && typeof options.strategy === \"string\"\n      ? options.strategy\n      : \"auto\";\n\n  // just in case densify isn't a round number\n  densify = Math.round(densify);\n\n  if (debug_level >= 1) {\n    console.log(\"[reproject-line] debug_level:\", debug_level);\n    console.log(\"[reproject-line] densify:\", densify);\n    console.log(\"[reproject-line] strategy:\", strategy);\n  }\n\n  // algorithm\n  // drop point when the slope changes (and at the end)\n  const out = [];\n\n  let [xprev, yprev] = reproject(coords[0]);\n  let mprev = null;\n  let m = null;\n\n  for (let i = 1; i < coords.length; i++) {\n    const [x1, y1] = coords[i - 1];\n    const [x2, y2] = coords[i];\n\n    const xdist = x2 - x1;\n    const ydist = y2 - y1;\n\n    const xstep = xdist / (densify + 1);\n    const ystep = ydist / (densify + 1);\n\n    for (let ii = 1; ii <= densify; ii++) {\n      const [rx, ry] = reproject([x1 + ii * xstep, y1 + ii * ystep]);\n      m = (ry - yprev) / (rx - xprev);\n\n      if (strategy === \"always\" || m !== mprev) {\n        out.push([xprev, yprev]);\n        mprev = m;\n      }\n      xprev = rx;\n      yprev = ry;\n    }\n\n    // try with last coord in segment\n    const [rx2, ry2] = reproject([x2, y2]);\n    m = (ry2 - yprev) / (rx2 - xprev);\n\n    // if slope changes, drop point\n    if (strategy === \"always\" || m !== mprev) {\n      out.push([xprev, yprev]);\n      mprev = m;\n    }\n\n    xprev = rx2;\n    yprev = ry2;\n  }\n\n  // drop last point\n  out.push([xprev, yprev]);\n\n  if (debug_level >= 3) {\n    console.log(\"[reproject-line] returning\", out);\n  }\n\n  return out;\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return reproject_line;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = reproject_line;\n  module.exports.default = reproject_line;\n}\n", "const getDepth = require(\"get-depth\");\nconst reprojectLine = require(\"reproject-line\");\n\nfunction reprojectGeoJSONPluggable(data, { densify, reproject }) {\n  if (typeof reproject !== \"function\") {\n    throw new Error(`[reproject-geojson] you must specify a reproject function`);\n  }\n  if (data.type === \"FeatureCollection\") {\n    return {\n      ...data,\n      features: data.features.map(feature => reprojectGeoJSONPluggable(feature, { densify, reproject }))\n    };\n  } else if (data.type === \"Feature\") {\n    return {\n      ...data,\n      geometry: reprojectGeoJSONPluggable(data.geometry, { densify, reproject })\n    };\n  } else if (data.type === \"LineString\") {\n    return {\n      ...data,\n      coordinates: reprojectLine(data.coordinates, reproject, { densify })\n    };\n  } else if (data.type === \"MultiLineString\") {\n    return {\n      ...data,\n      coordinates: data.coordinates.map(line => reprojectLine(line, reproject, { densify }))\n    };\n  } else if (data.type === \"MultiPoint\") {\n    return {\n      ...data,\n      coordinates: data.coordinates.map(point => reproject(point))\n    };\n  } else if (data.type === \"MultiPolygon\") {\n    return {\n      ...data,\n      coordinates: data.coordinates.map(polygon => {\n        return polygon.map(ring => reprojectLine(ring, reproject, { densify }));\n      })\n    };\n  } else if (data.type === \"Point\") {\n    return {\n      ...data,\n      coordinates: reproject(data.coordinates)\n    };\n  } else if (data.type === \"Polygon\") {\n    return {\n      ...data,\n      coordinates: data.coordinates.map(ring => reprojectLine(ring, reproject, { densify }))\n    };\n  } else if (Array.isArray(data)) {\n    const depth = getDepth(data);\n\n    if (depth === 1) {\n      // coord\n      return reproject(data);\n    } else if (depth === 2) {\n      // ring\n      return data.map(coord => reproject(coord));\n    } else if (depth === 3) {\n      // polygon\n      return data.map(ring => reprojectLine(ring, reproject, { densify }));\n    } else if (depth === 4) {\n      // multi-polygon\n      return data.map(polygon => {\n        return polygon.map(ring => reprojectLine(ring, reproject, { densify }));\n      });\n    }\n  }\n  return data;\n}\n\nif (typeof define === \"function\" && define.amd)\n  define(function () {\n    return reprojectGeoJSONPluggable;\n  });\nif (typeof module === \"object\") module.exports = reprojectGeoJSONPluggable;\nif (typeof window === \"object\") window.reprojectGeoJSONPluggable = reprojectGeoJSONPluggable;\nif (typeof self === \"object\") self.reprojectGeoJSONPluggable = reprojectGeoJSONPluggable;\n", "const proj4 = require(\"proj4-fully-loaded\");\nconst reprojectGeoJSONPluggable = require(\"./pluggable.js\");\n\nfunction reprojectGeoJSON(data, { densify, from: _from = \"EPSG:4326\", to: _to = \"EPSG:4326\" }) {\n  if (typeof _from === \"number\" || _from.match(/^\\d+$/)) _from = \"EPSG:\" + _from;\n  if (typeof _to === \"number\" || _to.match(/^\\d+$/)) _to = \"EPSG:\" + _to;\n  return reprojectGeoJSONPluggable(data, {\n    densify,\n    reproject: proj4(_from, _to).forward\n  });\n}\n\nif (typeof define === \"function\" && define.amd)\n  define(function () {\n    return reprojectGeoJSON;\n  });\nif (typeof module === \"object\") module.exports = reprojectGeoJSON;\nif (typeof window === \"object\") window.reprojectGeoJSON = reprojectGeoJSON;\nif (typeof self === \"object\") self.reprojectGeoJSON = reprojectGeoJSON;\n", "\"use strict\";\n\n/**\n * @name bboxes\n * @param {Array} bboxes - an array of bounding boxes\n * @return {bbox} a bbox in form [xmin, ymin, xmax, ymax] that covers the extent of all bboxes\n */\nfunction merge(bboxes) {\n  if (bboxes.length === 0) return;\n\n  if (bboxes.length === 1) return bboxes[0];\n\n  let [xmin, ymin, xmax, ymax] = bboxes[0];\n\n  for (let i = 1; i < bboxes.length; i++) {\n    const bbox = bboxes[i];\n    if (bbox[0] < xmin) xmin = bbox[0];\n    if (bbox[1] < ymin) ymin = bbox[1];\n    if (bbox[2] > xmax) xmax = bbox[2];\n    if (bbox[3] > ymax) ymax = bbox[3];\n  }\n  return [xmin, ymin, xmax, ymax];\n}\n\nmodule.exports = merge;\nmodule.exports.default = merge;\n", "// convert bbox in [xmin, ymin, xmax, ymax] format to a GeoJSON-like Polygon\nfunction polygon([x0, y0, x1, y1]) {\n  return [\n    [\n      [x0, y1], // top-left\n      [x0, y0], // bottom-left\n      [x1, y0], // bottom-right\n      [x1, y1], // top-right\n      [x0, y1] // top-left\n    ]\n  ];\n}\n\nmodule.exports = polygon;\nmodule.exports.default = polygon;\n", "const THEORETICAL_MINIMUMS = {\n  Int8Array: -128, // Math.pow(-2, 8 - 1)\n  Uint8Array: 0,\n  Uint8ClampedArray: 0,\n  Int16Array: -32768, // Math.pow(-2, 16 - 1)\n  Uint16Array: 0,\n  Int32Array: -2147483648, // Math.pow(-2, 32 - 1)\n  Uint32Array: 0,\n  // skipping Float32Array and Float64Array because it appears to be platform dependent\n  BigInt64Array: -9223372036854776000, // Math.pow(-2, 63)\n  BigUint64Array: 0,\n};\n\nconst getMin = array => {\n  if (typeof array !== \"string\" && array.constructor) array = array.constructor.name;\n  return THEORETICAL_MINIMUMS[array];\n};\n\nmodule.exports = getMin;\n", "const getTheoreticalMin = require(\"typed-array-ranges/get-min\");\n\nfunction fastMin(\n  numbers,\n  { debug = false, no_data = undefined, theoretical_min = undefined } = {\n    debug: false,\n    no_data: undefined,\n    theoretical_min: undefined\n  }\n) {\n  if (debug) console.log(\"[fast-min] starting with numbers:\", numbers.slice(0, 10));\n\n  if (!numbers.length) {\n    if (debug) console.error(\"[fast-min] Instead of an array of numbers, you passed in\", numbers);\n    throw new Error(\"[fast-min] You didn't pass in an array of numbers\");\n  }\n  if (numbers.length === 0) throw new Error(\"[fast-min] You passed in an empty array\");\n\n  if (Array.isArray(no_data) === false) {\n    if (typeof no_data === \"number\") {\n      no_data = [no_data];\n    } else {\n      no_data = [];\n    }\n  }\n\n  let min;\n  const length = numbers.length;\n\n  if (debug) console.log(\"[fast-min] constructor:\", numbers.constructor.name);\n\n  if (theoretical_min === undefined || theoretical_min === null)\n    theoretical_min = getTheoreticalMin(numbers.constructor.name);\n  if (debug) console.log(\"[fast-min] theoretical minimunm is\", theoretical_min);\n\n  for (let i = 0; i < length; i++) {\n    const value = numbers[i];\n    if (typeof value === \"number\" && value === value && no_data.indexOf(value) === -1) {\n      if (typeof min === \"undefined\") {\n        min = value;\n      } else if (value < min) {\n        min = value;\n      }\n      if (typeof theoretical_min === \"number\" && value <= theoretical_min) {\n        if (debug) console.log(\"[fast-min] found minimum value of \" + value + \" at index \" + i + \" of \" + length);\n        min = value;\n        break;\n      }\n    }\n  }\n\n  if (debug) console.log(\"[fast-min] returning\", min);\n  return min;\n}\n\nif (typeof module === \"object\") {\n  module.exports = fastMin;\n  module.exports.default = fastMin;\n}\n\nif (typeof self === \"object\") {\n  self.fastMin = fastMin;\n}\n\nif (typeof window === \"object\") {\n  window.fastMin = fastMin;\n}\n", "const THEORETICAL_MAXIMUMS = {\n  Int8Array: 127, // Math.pow(2, 8 - 1) - 1\n  Uint8Array: 255, // Math.pow(2, 8) - 1\n  Uint8ClampedArray: 255, // Math.pow(2, 8) - 1\n  Int16Array: 32767, // Math.pow(2, 16 - 1) - 1\n  Uint16Array: 65535, // Math.pow(2, 16) - 1\n  Int32Array: 2147483647, // Math.pow(2, 32 - 1) - 1\n  Uint32Array: 4294967295, // Math.pow(2, 32) - 1\n  Float32Array: 3.4e38, // 3.4 * Math.pow(10, 38)\n  Float64Array: 1.8 * Math.pow(10, 308) === Infinity ? undefined : 1.8 * Math.pow(10, 308),\n  BigInt64Array: 9223372036854776000, // Math.pow(2, 64 - 1) - 1\n  BigUint64Array: 18446744073709552000, // Math.pow(2, 64) - 1\n};\n\nconst getMax = array => {\n  if (typeof array !== \"string\" && array.constructor) array = array.constructor.name;\n  return THEORETICAL_MAXIMUMS[array];\n};\n\nmodule.exports = getMax;\n", "const getTheoreticalMax = require(\"typed-array-ranges/get-max\");\n\nfunction fastMax(\n  numbers,\n  { debug = false, no_data = undefined, theoretical_max = undefined } = {\n    debug: false,\n    no_data: undefined,\n    theoretical_max: undefined\n  }\n) {\n  if (debug) console.log(\"[fast-max] starting with numbers:\", numbers.slice(0, 10));\n\n  if (!numbers.length) {\n    if (debug) console.error(\"[fast-max] Instead of an array of numbers, you passed in\", numbers);\n    throw new Error(\"[fast-max] You didn't pass in an array of numbers\");\n  }\n  if (numbers.length === 0) throw new Error(\"[fast-max] You passed in an empty array\");\n\n  if (Array.isArray(no_data) === false) {\n    if (typeof no_data === \"number\") {\n      no_data = [no_data];\n    } else {\n      no_data = [];\n    }\n  }\n\n  let max;\n  const length = numbers.length;\n\n  if (debug) console.log(\"[fast-max] constructor:\", numbers.constructor.name);\n\n  if (theoretical_max === undefined || theoretical_max === null)\n    theoretical_max = getTheoreticalMax(numbers.constructor.name);\n  if (debug) console.log(\"[fast-max] theoretical maximunm is\", theoretical_max);\n\n  for (let i = 0; i < length; i++) {\n    const value = numbers[i];\n    if (typeof value === \"number\" && value === value && no_data.indexOf(value) === -1) {\n      if (typeof max === \"undefined\") {\n        max = value;\n      } else if (value > max) {\n        max = value;\n      }\n      if (typeof theoretical_max === \"number\" && value >= theoretical_max) {\n        if (debug) console.log(\"[fast-max] found maximum value of \" + value + \" at index \" + i + \" of \" + length);\n        max = value;\n        break;\n      }\n    }\n  }\n\n  if (debug) console.log(\"[fast-max] returning\", max);\n  return max;\n}\n\nif (typeof module === \"object\") {\n  module.exports = fastMax;\n  module.exports.default = fastMax;\n}\n\nif (typeof self === \"object\") {\n  self.fastMax = fastMax;\n}\n\nif (typeof window === \"object\") {\n  window.fastMax = fastMax;\n}\n", "\"use strict\";\n\n// given:\n//  - a and b are positive numbers\n//  - a and b have been cleaned (i.e. no + or leading zeros)\nfunction compare_positive(a, b) {\n  const alen = a.length;\n  const blen = b.length;\n\n  const aidx = a.indexOf(\".\");\n  const bidx = b.indexOf(\".\");\n\n  // basically where would the dot be\n  // if we add a dot at the end of integers\n  // like 123.\n  const a_adjusted_dot_index = aidx === -1 ? alen : aidx;\n  const b_adjusted_dot_index = bidx === -1 ? blen : bidx;\n\n  // how much you need to shift the second number\n  // to line up the decimal with the first\n  //        0.12345\n  //    12345.0\n\n  const offset = a_adjusted_dot_index - b_adjusted_dot_index;\n\n  let left = Math.max(a_adjusted_dot_index, b_adjusted_dot_index);\n\n  let right = Math.max(alen - a_adjusted_dot_index, blen - b_adjusted_dot_index);\n\n  let aoffset = offset < 0 ? -1 * offset : 0;\n  let boffset = offset <= 0 ? 0 : offset;\n\n  let imax = left + 1 + right - 1; // -1 for zero-index\n\n  let i = 0;\n  while (i < imax) {\n    const ai = i - aoffset;\n    const achar = ai === a_adjusted_dot_index ? \".\" : a[ai] || \"0\";\n    const bi = i - boffset;\n    const bchar = bi === b_adjusted_dot_index ? \".\" : b[bi] || \"0\";\n    if (achar !== bchar) {\n      if (achar > bchar) return \">\";\n      else if (achar < bchar) return \"<\";\n    }\n    i++;\n  }\n\n  return \"=\";\n}\n\nmodule.exports = compare_positive;\nmodule.exports.default = compare_positive;\n", "\"use strict\";\n\n// convert exponential notation to normal string\n// not optimized yet and no support for big numbers\nfunction expand(n) {\n  // remove + from beginning\n  if (n[0] === \"+\") n = n.substring(1);\n\n  const sign = n[0] === \"-\" ? \"-\" : \"\";\n  if (sign === \"-\") n = n.substring(1);\n\n  const index_of_e = n.indexOf(\"e\");\n\n  // number not in exponential notation\n  if (index_of_e === -1) return sign + n;\n\n  let index_of_dot = n.indexOf(\".\");\n\n  // if number doesn't include a period dot\n  // then just assume it at the end\n  // such that 3e4 has index of dot at 1\n  if (index_of_dot === -1) index_of_dot = index_of_e;\n\n  const shift = Number(n.substring(index_of_e + 1));\n\n  // remove old decimal place\n  const base = n.substring(0, index_of_e).replace(\".\", \"\");\n\n  // normalize shift to start of the string at index zero\n  const normshift = index_of_dot + shift;\n\n  const baselen = base.length;\n\n  if (normshift >= baselen) {\n    const zct = normshift - baselen;\n    let result = base;\n    for (let i = 0; i < zct; i++) result += \"0\";\n    return sign + result;\n  } else if (normshift < 0) {\n    // need to add zeros in decimal places\n    let result = \"0.\";\n    for (let i = 0; i > normshift; i--) result += \"0\";\n    result += base;\n    return sign + result;\n  } else {\n    // shifting within the base\n    return sign + base.substring(0, normshift) + \".\" + base.substring(normshift);\n  }\n}\n\nmodule.exports = expand;\nmodule.exports.default = expand;\n", "\"use strict\";\n\nconst expand = require(\"./expand.js\");\n\nmodule.exports = function clean(n) {\n  // remove + from beginning\n  if (n[0] === \"+\") n = n.substring(1);\n\n  n = expand(n);\n\n  // remove extra zero in front\n  // 03938.123 => 3938.123\n  n = n.replace(/^0+(?=\\d)/, \"\");\n\n  // remove extra zero at end\n  if (n.includes(\".\")) n = n.replace(/\\.?0+$/, \"\");\n\n  // should improve this, so it identifies zero earlier\n  if (n === \"\") n = \"0\";\n\n  if (n === \"-0\") n = \"0\";\n\n  return n;\n};\n", "\"use strict\";\n\n// Internet Explorer doesn't support Number.MAX_SAFE_INTEGER\n// so we just define the constant ourselves\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\nmodule.exports = { MAX_SAFE_INTEGER };\n", "\"use strict\";\n\nconst { MAX_SAFE_INTEGER } = require(\"./max_safe_integer.js\")\n\n// the greatest number of digits an integer can have\n// and be guaranteed to be stored safely as a floating point.\n// subtract 1 because MAX_SAFE_INTEGER isn't all 9's\nconst MAX_SAFE_INTEGER_LENGTH = MAX_SAFE_INTEGER.toString().length - 1;\n\nmodule.exports = { MAX_SAFE_INTEGER_LENGTH };\n", "\"use strict\";\n\nconst { MAX_SAFE_INTEGER_LENGTH } = require(\"./constants/max_safe_integer_length.js\");\n\n// assumes both numbers are positive numbers\nfunction long_addition(a, b) {\n  const alen = a.length;\n  const blen = b.length;\n\n  const aidx = a.indexOf(\".\");\n  const bidx = b.indexOf(\".\");\n\n  // basically where would the dot be\n  // if we add a dot at the end of integers\n  // like 123.\n  const a_adjusted_dot_index = aidx === -1 ? alen : aidx;\n  const b_adjusted_dot_index = bidx === -1 ? blen : bidx;\n\n  // just use floating point arithmetic for small integers\n  if (aidx === -1 && bidx === -1 && alen < MAX_SAFE_INTEGER_LENGTH && blen < MAX_SAFE_INTEGER_LENGTH) {\n    return (Number(a) + Number(b)).toFixed();\n  }\n\n  // how much you need to shift the second number\n  // to line up the decimal with the first\n  //        0.12345\n  //    12345.0\n\n  const offset = a_adjusted_dot_index - b_adjusted_dot_index;\n\n  let left = Math.max(a_adjusted_dot_index, b_adjusted_dot_index);\n\n  let right = Math.max(alen - a_adjusted_dot_index - 1, blen - b_adjusted_dot_index - 1);\n\n  let aoffset = offset < 0 ? -1 * offset : 0;\n  let boffset = offset <= 0 ? 0 : offset;\n\n  let imax = left + 1 + right - 1; // -1 for zero-index\n\n  let result = \"\";\n\n  let carried = 0;\n\n  // to the right of the period\n  //        0.12345\n  //    12345.0\n  let i = imax;\n  if (right > 0) {\n    while (i > imax - right) {\n      const achar = a[i - aoffset] || \"0\";\n      const bchar = b[i - boffset] || \"0\";\n      let n = Number(achar) + Number(bchar) + carried;\n      if (n >= 10) {\n        n -= 10;\n        carried = 1;\n      } else {\n        carried = 0;\n      }\n      if (result !== \"\" || n !== 0) {\n        result = n + result;\n      }\n      i--;\n    }\n    if (result) result = \".\" + result;\n    i--; // substract 1 for dot\n  }\n\n  if (left > 0) {\n    while (i >= 0) {\n      const achar = a[i - aoffset] || \"0\";\n      const bchar = b[i - boffset] || \"0\";\n      let n = Number(achar) + Number(bchar) + carried;\n      if (n >= 10) {\n        n -= 10;\n        carried = 1;\n      } else {\n        carried = 0;\n      }\n      result = n + result;\n      i--;\n    }\n  }\n\n  if (carried === 1) {\n    result = carried + result;\n  }\n\n  if (result[0] === \".\") result = \"0\" + result;\n\n  return result;\n}\n\nmodule.exports = long_addition;\nmodule.exports.default = long_addition;\n", "\"use strict\";\n\n// const lookup = {};\n// const vals = [undefined, 0, 1, 2, 3, 4, 5, 6, 8, 9];\n// vals.forEach(top => {\n//   lookup[top] = {};\n//   vals.forEach(bottom => {\n//     lookup[top][bottom] = (top || 0) - (bottom || 0);\n//   })\n// });\n\nconst { MAX_SAFE_INTEGER_LENGTH } = require(\"./constants/max_safe_integer_length.js\");\n\n// assumes (1) both a and b are positive numbers\n// and (2) a is larger than b\nfunction long_subtraction(a, b) {\n  const alen = a.length;\n  const blen = b.length;\n\n  const aidx = a.indexOf(\".\");\n  const bidx = b.indexOf(\".\");\n\n  // basically where would the dot be\n  // if we add a dot at the end of integers\n  // like 123.\n  const a_adjusted_dot_index = aidx === -1 ? alen : aidx;\n  const b_adjusted_dot_index = bidx === -1 ? blen : bidx;\n  // console.log({a_adjusted_dot_index, b_adjusted_dot_index});\n\n  // how much you need to shift the second number\n  // to line up the decimal with the first\n  //        0.12345\n  //    12345.0\n\n  // just use floating point arithmetic for small integers\n  if (aidx === -1 && bidx === -1 && alen < MAX_SAFE_INTEGER_LENGTH && blen < MAX_SAFE_INTEGER_LENGTH) {\n    return (Number(a) - Number(b)).toFixed();\n  }\n\n  const offset = a_adjusted_dot_index - b_adjusted_dot_index;\n  // console.log(\"offset:\", offset);\n\n  let left = Math.max(a_adjusted_dot_index, b_adjusted_dot_index);\n  // console.log(\"left:\", left);\n\n  let right = Math.max(alen - a_adjusted_dot_index - 1, blen - b_adjusted_dot_index - 1);\n  // console.log(\"right:\", right);\n\n  let aoffset = offset < 0 ? -1 * offset : 0;\n  let boffset = offset <= 0 ? 0 : offset;\n  // console.log({aoffset, boffset});\n\n  let imax = left + 1 + right - 1; // -1 for zero-index\n  // console.log({imax});\n\n  let result = \"\";\n\n  // number of borrowings\n  let borrowed = 0;\n\n  // to the right of the period\n  //  100.5  6  7\n  //    2.2  9  3\n  //        (-3 + 10)  4\n  let i = imax;\n  if (right > 0) {\n    while (i > imax - right) {\n      // console.log(\"\\n\\n\", {i});\n      let top = a[i - aoffset] || \"0\";\n      let bottom = b[i - boffset] || \"0\";\n\n      // console.log(\"pre borrowing\", {top, bottom});\n      top -= borrowed;\n      borrowed = 0;\n\n      // console.log(\"after borrowing\", {top, bottom});\n      let n = top - bottom;\n\n      // console.log({n});\n      if (n < 0) {\n        while (n < 0) {\n          borrowed++;\n          n += 10;\n        }\n      } else if (borrowed) {\n        borrowed--;\n      }\n      // console.log({n});\n      if (result !== \"\" || n !== 0) {\n        result = n + result;\n      }\n      i--;\n    }\n    if (result !== \"\") {\n      result = \".\" + result;\n    }\n    i--; // substract 1 for dot\n  }\n\n  // console.log({result});\n\n  if (left > 0) {\n    while (i > 0) {\n      // console.log(\"\\n\\n\", {i});\n      let top = a[i - aoffset] || \"0\";\n      let bottom = b[i - boffset] || \"0\";\n\n      // console.log(\"pre borrowing\", {top, bottom});\n      top -= borrowed;\n      borrowed = 0;\n\n      // console.log(\"after borrowing\", {top, bottom});\n      let n = top - bottom;\n\n      // console.log({n});\n      if (n < 0) {\n        while (n < 0) {\n          borrowed++;\n          n += 10;\n        }\n      } else if (borrowed) {\n        borrowed--;\n      }\n      // console.log({n});\n      result = n + result;\n      i--;\n    }\n\n    // console.log({borrowed});\n    // special rule for last one\n    const achar = a[0 - aoffset] || \"0\";\n    const bchar = b[0 - boffset] || \"0\";\n    let n = Number(achar) - (borrowed > 0 ? 1 : 0) - Number(bchar);\n    if (n !== 0) {\n      result = n + result;\n    }\n\n    // remove any zeros in front like in 0123\n    result = result.replace(/^0+/, \"\");\n  }\n\n  // if decimal number add zero\n  if (result[0] === \".\") result = \"0\" + result;\n\n  return result;\n}\n\nmodule.exports = long_subtraction;\nmodule.exports.default = long_subtraction;\n", "\"use strict\";\n\nfunction is_infinity(n) {\n  return !!n.match(/^(|-|\\+)inf(inity)?$/i);\n}\n\nmodule.exports = is_infinity;\nmodule.exports.default = is_infinity;\n", "\"use strict\";\n\nconst compare_positive = require(\"./compare_positive.js\");\nconst clean = require(\"./clean.js\");\nconst long_addition = require(\"./long_addition.js\");\nconst long_subtraction = require(\"./long_subtraction.js\");\nconst is_infinity = require(\"./is_infinity.js\");\n\nfunction add(a, b, { infinity_minus_infinity = \"NaN\" } = {}) {\n  a = clean(a);\n  b = clean(b);\n\n  const apos = a[0] !== \"-\";\n  const bpos = b[0] !== \"-\";\n\n  const aneg = !apos;\n  const bneg = !bpos;\n\n  const ainf = is_infinity(a);\n  const binf = is_infinity(b);\n\n  if (ainf && binf) {\n    if (apos && bpos) return \"Infinity\";\n    else if (aneg & bneg) return \"-Infinity\";\n    else return infinity_minus_infinity;\n  } else if (ainf) {\n    if (apos) return \"Infinity\";\n    else return \"-Infinity\";\n  } else if (binf) {\n    if (bpos) return \"Infinity\";\n    else return \"-Infinity\";\n  } else if (apos && bpos) {\n    return long_addition(a, b);\n  } else if (aneg && bneg) {\n    return \"-\" + long_addition(a.substring(1), b.substring(1));\n  } else if (aneg && bpos) {\n    a = a.substring(1);\n    switch (compare_positive(a, b)) {\n      case \"=\":\n        return \"0\";\n      case \"<\":\n        return long_subtraction(b, a);\n      case \">\":\n        return \"-\" + long_subtraction(a, b);\n    }\n  } else if (apos && !bpos) {\n    b = b.substring(1);\n    switch (compare_positive(a, b)) {\n      case \"=\":\n        return \"0\";\n      case \"<\":\n        return \"-\" + long_subtraction(b, a);\n      case \">\":\n        return long_subtraction(a, b);\n    }\n  }\n}\n\nmodule.exports = add;\nmodule.exports.default = add;\n", "\"use strict\";\n\nconst clean = require(\"./clean.js\");\n\nfunction absolute(n) {\n  n = clean(n);\n  if (n[0] === \"-\") return n.substring(1);\n  else return n;\n}\n\nmodule.exports = absolute;\nmodule.exports.default = absolute;\n", "\"use strict\";\n\nconst clean = require(\"./clean\");\nconst compare_positive = require(\"./compare_positive.js\");\nconst is_infinity = require(\"./is_infinity.js\");\nconst long_addition = require(\"./long_addition.js\");\nconst long_subtraction = require(\"./long_subtraction.js\");\n\nfunction subtract(a, b, { infinity_minus_infinity = \"NaN\" } = {}) {\n  a = clean(a);\n  b = clean(b);\n\n  const a_is_negative = a[0] === \"-\";\n  const b_is_negative = b[0] === \"-\";\n\n  const a_is_positive = !a_is_negative;\n  const b_is_positive = !b_is_negative;\n\n  const ainf = is_infinity(a);\n  const binf = is_infinity(b);\n\n  if (ainf && binf) {\n    if (a_is_positive === b_is_positive) {\n      return infinity_minus_infinity;\n    } else if (a_is_positive) {\n      return \"Infinity\"; // inf - -inf\n    } else if (b_is_positive) {\n      return \"-Infinity\"; // -inf - inf\n    }\n  } else if (ainf) {\n    return a;\n  } else if (binf) {\n    return b_is_positive ? \"-Infinity\" : \"Infinity\";\n  }\n\n  if (a_is_positive) {\n    if (b_is_positive) {\n      const comparison = compare_positive(a, b);\n      if (comparison === \">\") {\n        return long_subtraction(a, b);\n      } else if (comparison === \"<\") {\n        return \"-\" + long_subtraction(b, a);\n      } else {\n        return \"0\";\n      }\n    } else {\n      return long_addition(a, b.substring(1));\n    }\n  } else if (b_is_positive) {\n    return \"-\" + long_addition(a.substring(1), b);\n  } else {\n    a = a.substring(1);\n    b = b.substring(1);\n    const comparison = compare_positive(a, b);\n    if (comparison === \">\") {\n      return \"-\" + long_subtraction(a, b);\n    } else if (comparison === \"<\") {\n      return long_subtraction(b, a);\n    } else {\n      return \"0\";\n    }\n  }\n}\n\nmodule.exports = subtract;\nmodule.exports.default = subtract;\n", "\"use strict\";\n\n// given n is a decimal number\nfunction truncate_decimal(n) {\n  return n.substring(0, n.indexOf(\".\"));\n}\n\nmodule.exports = truncate_decimal;\nmodule.exports.default = truncate_decimal;\n", "\"use strict\";\n\nconst add = require(\"./add.js\");\nconst truncate_decimal = require(\"./truncate_decimal.js\");\n\n// given n is a positive decimal number\nconst up = [\"5\", \"6\", \"7\", \"8\", \"9\"];\n\nfunction round_last_decimal(n) {\n  // will round up to an integer\n  if (n.match(/\\.9+$/)) {\n    return add(truncate_decimal(n), \"1\");\n  }\n\n  // remove + from beginning\n  if (n[0] === \"+\") n = n.substring(1);\n\n  //console.log(\"rounding:\", {n});\n  const len = n.length;\n  //console.log({len});\n  let result = \"\";\n\n  const last_char = n[n.length - 1];\n  //console.log({last_char});\n\n  if (up.includes(last_char)) {\n    let i;\n    for (i = len - 2; i >= 0; i--) {\n      const char = n[i];\n      //console.log({char});\n      // skip over . or -\n      if (char === \".\" || char === \"-\") continue;\n\n      const nchar = Number(char) + 1;\n      //console.log({nchar});\n\n      if (nchar === 10) {\n        result = \"0\" + result;\n        // keep rounding up\n      } else {\n        result = nchar + result;\n        break;\n      }\n    }\n    //console.log({i});\n    if (i > 0) result = n.substring(0, i) + result;\n  } else {\n    result = n.substring(0, len - 1);\n  }\n\n  if (result[result.length - 1] === \".\") result = result.substring(0, result.length - 1);\n\n  // remove trailing zeros in decimal number\n  // 0.50 => 0.5\n  if (result.indexOf(\".\") > -1) result = result.replace(/0+$/, \"\");\n\n  return result;\n}\n\nmodule.exports = round_last_decimal;\nmodule.exports.default = round_last_decimal;\n", "\"use strict\";\n\nconst compare_positive = require(\"./compare_positive.js\");\nconst add = require(\"./add.js\");\nconst subtract = require(\"./subtract.js\");\nconst round_last_decimal = require(\"./round_last_decimal.js\");\n\n// given dividend and divisor are positive numberical strings\nfunction long_division(dividend, divisor, { format = \"string\", max_decimal_digits = 100, ellipsis = false } = {}) {\n  // remove unnecessary starting zeros\n  // ex: 0.5 => .5\n  if (dividend[0] === \"0\") dividend = dividend.substring(1);\n  if (divisor[0] === \"0\") divisor = divisor.substring(1);\n\n  const dividend_index_of_dot = dividend.indexOf(\".\");\n  const divisor_index_of_dot = divisor.indexOf(\".\");\n\n  const adjusted_dividend_index_of_dot = dividend_index_of_dot === -1 ? dividend.length : dividend_index_of_dot;\n  const divisor_num_decimal_places = divisor_index_of_dot === -1 ? 0 : divisor.length - 1 - divisor_index_of_dot;\n\n  // whether the result has a repeating decimal\n  // e.g. 1/3 is repeating as in \"0.333...\"\n  let repeating = false;\n\n  // remove decimals\n  dividend = dividend.replace(/\\./, \"\");\n  divisor = divisor.replace(/\\./, \"\");\n\n  const dividend_length = dividend.length;\n\n  let current = \"\";\n  let quotient = \"\";\n  let comparison;\n  let offset = -1 * divisor_num_decimal_places;\n  let skip = 0;\n  for (let i = 0; i < dividend_length; i++) {\n    const char = dividend[i];\n\n    current += char;\n\n    comparison = compare_positive(current, divisor);\n\n    if (comparison === \">\") {\n      // same as const times = Math.floor(current / divisor);\n      // but without floating point problems\n      let times = 1;\n      let product = add(divisor, divisor);\n      let passed_product = divisor;\n      while (compare_positive(product, current) !== \">\") {\n        times++;\n        passed_product = product;\n        product = add(product, divisor);\n      }\n      times = times.toString();\n\n      if (quotient !== \"\") {\n        for (let i = times.length; i <= skip; i++) quotient += \"0\";\n      }\n      quotient += times; // string concatentation\n\n      current = subtract(current, passed_product);\n\n      skip = 0;\n    } else if (comparison === \"<\") {\n      if (quotient === \"\") {\n        offset++;\n      }\n      skip++;\n\n      // outside greater than inside\n      continue;\n    } else if (comparison === \"=\") {\n      if (quotient !== \"\") {\n        for (let i = 0; i < skip; i++) quotient += \"0\";\n      }\n      quotient += \"1\";\n      current = \"0\";\n      skip = 0;\n    }\n  }\n\n  if (current.match(/^0+$/g)) {\n    if (comparison === \"<\") {\n      quotient += current.substring(0, current.length - 1);\n    }\n  } else {\n    const previous = {};\n\n    // keep dividing until we have an answer\n    // figure out current place of decimal number\n    const idot = adjusted_dividend_index_of_dot - offset;\n    const qlen = quotient.length;\n    // add 1 extra for rounding purposes\n    const imax = idot - qlen + max_decimal_digits + 1;\n\n    // reset skip if just \"\" so far because don't want to count 0 in 0.\n    if (quotient === \"\") {\n      skip = 0;\n    }\n\n    for (let i = 0; i < imax; i++) {\n      current += \"0\";\n      if (ellipsis) {\n        if (current in previous) {\n          previous[current]++;\n          if (previous[current] > 3) {\n            quotient += \"...\";\n            repeating = true;\n            break;\n          }\n        } else {\n          previous[current] = 1;\n        }\n      }\n      const comparison = compare_positive(current, divisor);\n\n      if (comparison === \">\") {\n        // inside greater than outside\n\n        // how many times the divisor goes into the current\n        let times = 1;\n        let product = add(divisor, divisor);\n        let passed_product = divisor;\n        while (compare_positive(product, current) !== \">\") {\n          times++;\n          passed_product = product;\n          product = add(product, divisor);\n        }\n\n        times = times.toString();\n\n        // pad left zeros\n        for (let i = times.length; i <= skip; i++) quotient += \"0\";\n        quotient += times; // string concatentation\n        current = subtract(current, passed_product);\n\n        if (current === \"0\") {\n          break;\n        }\n\n        skip = 0;\n      } else if (comparison === \"<\") {\n        // outside greater than inside\n        skip++;\n        continue;\n      } else if (comparison === \"=\") {\n        // fill in previous with zeros\n        for (let i = 0; i < skip; i++) quotient += \"0\";\n        quotient += \"1\";\n        skip = 0;\n        break;\n      }\n    }\n  }\n\n  // reinsert decimal place\n\n  const idot = adjusted_dividend_index_of_dot - offset;\n  const qlen = quotient.length;\n\n  let num_decimals;\n\n  if (idot === qlen) {\n    // integer number so don't do anything\n    num_decimals = 0;\n  } else if (idot < 0) {\n    quotient = \"0.\" + \"0\".repeat(Math.abs(idot)) + quotient;\n    num_decimals = qlen - idot; // idot is negative, so adding\n  } else if (idot > qlen) {\n    // add more zeros to integer\n    for (let i = qlen; i < idot; i++) quotient += \"0\";\n    num_decimals = 0;\n  } else if (idot < qlen) {\n    quotient = quotient.substring(0, idot) + \".\" + quotient.substring(idot);\n    num_decimals = qlen - idot;\n  } else if (idot === 0) {\n    quotient = \"0.\" + quotient;\n    num_decimals = qlen;\n  }\n\n  // remove zeros from front\n  // 03938.123 => 3938.123\n  quotient = quotient.replace(/^0+/, \"\");\n\n  // remove extra zeros from the end\n  quotient = quotient.replace(/\\.\\d+0+$/, \"\");\n\n  const extra_decimals = num_decimals - max_decimal_digits;\n\n  // round if necessary\n  if (!repeating) {\n    if (extra_decimals > 0) {\n      quotient = round_last_decimal(quotient.substring(0, quotient.length - extra_decimals + 1));\n    }\n  }\n\n  if (quotient[0] === \".\") quotient = \"0\" + quotient;\n\n  if (format === \"object\") {\n    return { quotient, extra_decimals };\n  } else {\n    return quotient;\n  }\n}\n\nmodule.exports = long_division;\nmodule.exports.default = long_division;\n", "\"use strict\";\n\nconst absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\nconst is_infinity = require(\"./is_infinity.js\");\nconst long_division = require(\"./long_division.js\");\n\n/**\n * @name divide\n * @param {String} dividend\n * @param {String} divisor\n * @param {Object} options\n * @param {Number} options.max_decimal_digits\n * @param {Boolean} options.ellipsis\n * @returns {String} - quotient\n */\nfunction divide(dividend, divisor, options) {\n  dividend = clean(dividend);\n  divisor = clean(divisor);\n\n  const dividend_is_positive = dividend[0] !== \"-\";\n  const divisor_is_positive = divisor[0] !== \"-\";\n\n  const dividend_is_infinity = is_infinity(dividend);\n  const divisor_is_infinity = is_infinity(divisor);\n\n  if (dividend_is_infinity || divisor_is_infinity) {\n    if (dividend_is_positive == divisor_is_positive) {\n      return \"Infinity\";\n    } else {\n      return \"-Infinity\";\n    }\n  }\n\n  if (divisor === \"0\") throw new Error(\"[preciso] division by zero\");\n\n  // sometimes dividend can be cleaned to \"\"\n  if (dividend === \"\" || dividend === \"0\") return \"0\";\n\n  const out_sign = dividend_is_positive !== divisor_is_positive ? \"-\" : \"\";\n\n  if (!dividend_is_positive) dividend = absolute(dividend);\n  if (!divisor_is_positive) divisor = absolute(divisor);\n\n  return out_sign + long_division(dividend, divisor, options);\n}\n\nmodule.exports = divide;\nmodule.exports.default = divide;\n", "\"use strict\";\n\nfunction is_imaginary(n) {\n  return n.includes(\"i\");\n}\n\nmodule.exports = is_imaginary;\nmodule.exports.default = is_imaginary;\n", "\"use strict\";\n\nconst clean = require(\"./clean.js\");\nconst is_infinity = require(\"./is_infinity.js\");\n\nfunction is_integer(n) {\n  if (is_infinity(n)) return false;\n  n = clean(n);\n  return !n.includes(\".\") && !n.includes(\"/\");\n}\n\nmodule.exports = is_integer;\nmodule.exports.default = is_integer;\n", "const clean = require(\"./clean.js\");\nconst is_integer = require(\"./is_integer.js\");\n\nfunction is_odd(n) {\n  n = clean(n);\n\n  if (!is_integer(n)) throw new Error(\"can't call is_odd on decimal\");\n\n  return [\"1\", \"3\", \"5\", \"7\", \"9\"].includes(n.charAt(n.length - 1));\n}\n\nmodule.exports = is_odd;\nmodule.exports.default = is_odd;\n", "\"use strict\";\n\nfunction is_zero(n) {\n  return /^[-+]?0(\\.0+)?(e[\\.\\d]+)?$/.test(n);\n}\n\nmodule.exports = is_zero;\nmodule.exports.default = is_zero;\n", "\"use strict\";\n\nconst { MAX_SAFE_INTEGER_LENGTH } = require(\"./constants/max_safe_integer_length.js\");\n\nconst CHUNK_SIZE = 15;\n\n/**\n *\n * @param {String} a - numerical string larger or equal to b\n * @param {String} b - numerical string smaller or equal to a\n * @returns {String} product - result of multiplying a with b\n */\n\nfunction long_multiplication(a, b) {\n  if (a === \"0\" || b === \"0\") return \"0\";\n\n  const top_index_of_dot = a.indexOf(\".\");\n  const bottom_index_of_dot = b.indexOf(\".\");\n\n  const a_num_integer_places = top_index_of_dot === -1 ? a.length : top_index_of_dot;\n  const b_num_integer_places = bottom_index_of_dot === -1 ? b.length : bottom_index_of_dot;\n  const max_total_num_integer_places = a_num_integer_places + b_num_integer_places;\n\n  const a_num_decimal_places = top_index_of_dot === -1 ? 0 : a.length - 1 - top_index_of_dot;\n  const b_num_decimal_places = bottom_index_of_dot === -1 ? 0 : b.length - 1 - bottom_index_of_dot;\n\n  const out_num_decimal_places = a_num_decimal_places + b_num_decimal_places;\n\n  if (out_num_decimal_places === 0 && max_total_num_integer_places < MAX_SAFE_INTEGER_LENGTH) {\n    return (Number(a) * Number(b)).toFixed(0);\n  }\n\n  // remove decimals\n  const aint = a.replace(\".\", \"\");\n  const bint = b.replace(\".\", \"\");\n\n  const alen = aint.length;\n  const blen = bint.length;\n\n  const chunks = [];\n  let i = alen;\n  while (i >= 0) {\n    const end = i;\n    const start = (i -= CHUNK_SIZE);\n    const str = aint.substring(start, end);\n    chunks.push([Number(str), str.length]);\n  }\n\n  const partial_products = [];\n  const partials = [];\n\n  // for each number in multiplier\n  for (let i = 0, ireverse = blen - 1; ireverse >= 0; ireverse--, i++) {\n    const bstr = bint[ireverse];\n\n    const bnum = Number(bstr);\n\n    let carried = 0;\n    let partial = \"\";\n    const ichunklast = chunks.length - 1;\n    chunks.forEach(([chunk, chunklen], c) => {\n      const subpartial = carried + bnum * chunk;\n      let subpartstr = subpartial.toString();\n      const subpartcharlen = subpartstr.length;\n      if (subpartcharlen > chunklen && c !== ichunklast) {\n        const islice = -1 * chunklen;\n        partial = subpartstr.slice(islice) + partial;\n        carried = Number(subpartstr.slice(0, islice));\n      } else {\n        const imax = chunklen - subpartcharlen;\n        for (let i = 0; i < imax; i++) {\n          subpartstr = \"0\" + subpartstr;\n        }\n        carried = 0;\n        partial = subpartstr + partial;\n      }\n    });\n\n    // add number of zeros at end\n    partial += \"0\".repeat(i);\n\n    partial_products.push(partial);\n\n    partials.push([Array.from(partial).map(char => Number(char)), partial.length]);\n  }\n\n  // back to front, iterate through columns\n  // and add partial products together\n  const num_partials = partial_products.length;\n\n  const number_of_columns = partials[partials.length - 1][1] + num_partials;\n\n  let result = \"\";\n  let carried = 0;\n  for (let icol = 0; icol < number_of_columns; icol++) {\n    let sum = carried;\n    const pmax = Math.min(icol, num_partials - 1);\n    for (let p = 0; p <= pmax; p++) {\n      const [pnums, plen] = partials[p];\n      const i = plen - 1 - icol;\n      if (i >= 0) {\n        sum += pnums[i];\n      }\n    }\n\n    if (sum >= 10) {\n      sum = sum.toString();\n      result = sum[sum.length - 1] + result;\n      carried = Number(sum.slice(0, -1));\n    } else {\n      result = sum + result;\n      carried = 0;\n    }\n  }\n\n  // add decimal back in\n  if (out_num_decimal_places === 0) {\n    // integer\n    // remove extra zeros\n    result = result.replace(/^0+/, \"\");\n  } else {\n    // decimal number\n    const idot = result.length - out_num_decimal_places;\n\n    result = result.substring(0, idot) + \".\" + result.substring(idot);\n\n    // remove zeros from front\n    result = result.replace(/^0+/, \"\");\n\n    // remove extra zeros from the end\n    result = result.replace(/\\.?0+$/, \"\");\n\n    if (result[0] === \".\") result = \"0\" + result;\n  }\n\n  return result;\n}\n\nmodule.exports = long_multiplication;\nmodule.exports.default = long_multiplication;\n", "\"use strict\";\n\nconst clean = require(\"./clean.js\");\n\nfunction count_decimal_digits(n) {\n  n = clean(n);\n\n  const i = n.indexOf(\".\");\n\n  // n is an integer\n  if (i === -1) return \"0\";\n\n  return (n.length - i - 1).toString();\n}\n\nmodule.exports = count_decimal_digits;\nmodule.exports.default = count_decimal_digits;\n", "\"use strict\";\n\nconst clean = require(\"./clean\");\n\nfunction is_negative(n) {\n  n = clean(n);\n  return n[0] === \"-\";\n}\n\nmodule.exports = is_negative;\nmodule.exports.default = is_negative;\n", "\"use strict\";\n\nconst clean = require(\"./clean.js\");\nconst count_decimal_digits = require(\"./count_decimal_digits.js\");\nconst absolute = require(\"./absolute.js\");\nconst is_negative = require(\"./is_negative.js\");\nconst round_last_decimal = require(\"./round_last_decimal.js\");\n\nconst UP = [\"5\", \"6\", \"7\", \"8\", \"9\"];\n\nfunction round_rational(n, { digits = 0 } = { digits: 0 }) {\n  n = clean(n);\n\n  const orig = n;\n\n  const sign = is_negative(n) ? \"-\" : \"\";\n\n  // convert to positive because\n  // round_last_decimal only works on positive decimals\n  n = absolute(n);\n\n  const idec = n.indexOf(\".\");\n\n  // integer, already rounded\n  if (idec === -1) return orig;\n\n  // decimal, but already rounded enough\n  if (count_decimal_digits(n) <= digits) return orig;\n\n  const v = n[idec + digits + 1];\n\n  if (UP.includes(v)) {\n    const clip = n.substring(0, idec + digits + 2);\n    return sign + round_last_decimal(clip);\n  } else if (digits === 0) {\n    return sign + n.substring(0, idec);\n  } else {\n    const clip = n.substring(0, idec + digits + 1);\n    return sign + clip;\n  }\n}\n\nmodule.exports = round_rational;\nmodule.exports.default = round_rational;\n", "\"use strict\";\n\nconst is_imaginary = require(\"./is_imaginary.js\");\nconst round_rational = require(\"./round_rational.js\");\n\nfunction round(n, { digits = 0 } = {}) {\n  // in case you pass in a numerical string for digits\n  digits = Number(digits);\n\n  if (is_imaginary(n)) {\n    return round_rational(n.substring(0, n.length - 1), { digits }) + \"i\";\n  } else {\n    return round_rational(n, { digits });\n  }\n}\n\nmodule.exports = round;\nmodule.exports.default = round;\n", "\"use strict\";\n\nconst absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\nconst compare_positive = require(\"./compare_positive.js\");\nconst long_multiplication = require(\"./long_multiplication.js\");\nconst round = require(\"./round.js\");\n\n/**\n * @name multiply\n * @returns {String} product\n */\nfunction multiply_rational(nums, { max_decimal_digits } = {}) {\n  let product = clean(nums[0]);\n  let product_absolute = absolute(product);\n  let product_sign = product[0] === \"-\" ? \"-\" : \"\";\n\n  const imax = nums.length;\n  for (let i = 1; i < imax; i++) {\n    const current = clean(nums[i]);\n    const current_sign = current[0] === \"-\" ? \"-\" : \"\";\n    const current_absolute = absolute(current);\n    product_sign = product_sign !== current_sign ? \"-\" : \"\";\n\n    const comparison = compare_positive(product_absolute, current_absolute);\n\n    product_absolute = comparison === \"<\" ? long_multiplication(current_absolute, product_absolute) : long_multiplication(product_absolute, current_absolute);\n\n    product = product_sign + product_absolute;\n  }\n  if (typeof max_decimal_digits === \"number\") product = round(product, { digits: max_decimal_digits });\n  return product;\n}\n\nmodule.exports = multiply_rational;\nmodule.exports.default = multiply_rational;\n", "\"use strict\";\n\n// assume n is not zero\nfunction sign_nonzero(n) {\n  return n[0] === \"-\" ? \"-\" : \"+\";\n}\n\nmodule.exports = sign_nonzero;\nmodule.exports.default = sign_nonzero;\n", "\"use strict\";\n\nconst is_imaginary = require(\"./is_imaginary.js\");\nconst is_infinity = require(\"./is_infinity.js\");\nconst is_odd = require(\"./is_odd.js\");\nconst is_zero = require(\"./is_zero.js\");\nconst multiply_rational = require(\"./multiply_rational.js\");\nconst sign_nonzero = require(\"./sign_nonzero.js\");\n\n/**\n * @name multiply_array\n * @private\n * @description Multiply an array of numbers together\n * @param {Array.<String>} nums - array of numerical strings\n * @returns {String} product as a numerical string\n */\nfunction multiply_array(nums, { max_decimal_digits, infinity_times_zero = \"NaN\" } = {}) {\n  const has_inf = nums.some(n => is_infinity(n));\n  const has_zero = nums.some(n => is_zero(n));\n\n  if (has_inf && has_zero) {\n    return infinity_times_zero;\n  } else if (has_inf) {\n    const ct = nums.filter(n => sign_nonzero(n) === \"-\").length;\n    return ct % 2 === 0 ? \"Infinity\" : \"-Infinity\";\n  } else if (has_zero) {\n    return \"0\";\n  }\n\n  const imaginary = is_odd(nums.filter(n => is_imaginary(n)).length.toString());\n  let product = multiply_rational(\n    nums.map(n => n.replace(/i$/, \"\")),\n    { max_decimal_digits }\n  );\n  if (imaginary) product += \"i\";\n  return product;\n}\n\nmodule.exports = multiply_array;\nmodule.exports.default = multiply_array;\n", "\"use strict\";\n\nconst multiply_array = require(\"./multiply_array.js\");\n\nfunction multiply() {\n  const args = Array.from(arguments);\n  const options = typeof args[args.length - 1] === \"object\" ? args[args.length - 1] : undefined;\n  const nums = Array.isArray(args[0]) ? args[0] : options ? args.slice(0, args.length - 1) : args;\n  return multiply_array(nums, options);\n}\n\nmodule.exports = multiply;\nmodule.exports.default = multiply;\n", "\"use strict\";\n\n/**\n * @name bboxArray\n * @param {Array} points - an array (aka ring) of points\n * @return {bbox} bbox in form [xmin, ymin, xmax, ymax]\n */\nfunction bboxArray(points, { nan_strategy = \"throw\" } = { nan_strategy: \"throw\" }) {\n  const count = points.length;\n  let xmin = null;\n  let xmax = null;\n\n  let ymin = null;\n  let ymax = null;\n  for (let i = 0; i < count; i++) {\n    const [x, y] = points[i];\n    if (isNaN(x)) {\n      if (nan_strategy === \"throw\") {\n        throw new Error(\"[bbox-fns/bbox-array] encountered point with a NaN value: [\" + x + \", \" + y + \"]\");\n      }\n    } else if (xmin === null) {\n      xmin = x;\n      xmax = x;\n    } else {\n      if (x < xmin) xmin = x;\n      else if (x > xmax) xmax = x;\n    }\n    if (isNaN(y)) {\n      if (nan_strategy === \"throw\") {\n        throw new Error(\"[bbox-fns/bbox-array] encountered point with a NaN value: [\" + x + \", \" + y + \"]\");\n      }\n    } else if (ymin === null) {\n      ymin = y;\n      ymax = y;\n    } else {\n      if (y < ymin) ymin = y;\n      else if (y > ymax) ymax = y;\n    }\n  }\n  return [xmin, ymin, xmax, ymax];\n}\n\nmodule.exports = bboxArray;\nmodule.exports.default = bboxArray;\n", "\"use_strict\";\n\n// check if the first bbox completely contains the second\nfunction booleanContains([axmin, aymin, axmax, aymax], [bxmin, bymin, bxmax, bymax], { exclusive = false } = { exclusive: false }) {\n  if (exclusive) {\n    const xContained = bxmin > axmin && bxmax < axmax;\n    const yContained = bymin > aymin && bymax < aymax;\n    return xContained && yContained;\n  } else {\n    const xContained = bxmin >= axmin && bxmax <= axmax;\n    const yContained = bymin >= aymin && bymax <= aymax;\n    return xContained && yContained;\n  }\n}\n\nmodule.exports = booleanContains;\nmodule.exports.default = booleanContains;\n", "\"use_strict\";\n\n// check if two bounding boxes overlap at all\nfunction booleanIntersects([axmin, aymin, axmax, aymax], [bxmin, bymin, bxmax, bymax]) {\n  const yOverlaps = bymin <= aymax && bymax >= aymin;\n  const xOverlaps = bxmin <= axmax && bxmax >= axmin;\n  return xOverlaps && yOverlaps;\n}\n\nmodule.exports = booleanIntersects;\nmodule.exports.default = booleanIntersects;\n", "function shift([xmin, ymin, xmax, ymax], dist) {\n  const x = Array.isArray(dist) && dist.length >= 1 ? dist[0] : typeof dist.x === \"number\" ? dist.x : 0;\n  const y = Array.isArray(dist) && dist.length >= 2 ? dist[1] : typeof dist.y === \"number\" ? dist.y : 0;\n\n  return [xmin + x, ymin + y, xmax + x, ymax + y];\n}\n\nmodule.exports = shift;\nmodule.exports.default = shift;\n", "function sort(bboxes) {\n  return bboxes.sort((a, b) => {\n    const [axmin, aymin, axmax, aymax] = a;\n    const [bxmin, bymin, bxmax, bymax] = b;\n\n    if (axmin < bxmin) return -1;\n    if (axmin > bxmin) return 1;\n    if (aymin < bymin) return 1;\n    if (aymin > bymin) return -1;\n\n    return 0;\n  });\n}\n\nmodule.exports = sort;\nmodule.exports.default = sort;\n", "\"use strict\";\n\n/**\n * @name split\n * @description break the given bounding box into pieces at given breakpoints\n * @example split(extent, { x: [-180, 180], y: [-90, 90] })\n * @param {Array} bbox - a bounding box in form [xmin, ymin, xmax, ymax]\n * @param {Object} breakpoints\n * @param {Array<Number>} breakpoints.x - array of x values to break on\n * @param {Array<Number>} breakpoints.y - array of y values to break on\n * @return {bbox} an array of bboxes in form [xmin, ymin, xmax, ymax]\n */\nfunction split(bbox, breakpoints) {\n  const [xmin, ymin, xmax, ymax] = bbox;\n  if (!breakpoints) throw new Error(\"[bbox-fns/split.js] missing breakpoints\");\n  const xbrks = breakpoints.x || [];\n  const ybrks = breakpoints.y || [];\n\n  const xedges = [xmin].concat(xbrks.filter(x => x > xmin && x < xmax)).concat([xmax]);\n  const yedges = [ymin].concat(ybrks.filter(y => y > ymin && y < ymax)).concat([ymax]);\n\n  const bboxes = [];\n\n  for (let i = 1; i < xedges.length; i++) {\n    const xmin = xedges[i - 1];\n    const xmax = xedges[i];\n    for (let ii = 1; ii < yedges.length; ii++) {\n      const ymin = yedges[ii - 1];\n      const ymax = yedges[ii];\n      bboxes.push([xmin, ymin, xmax, ymax]);\n    }\n  }\n\n  return bboxes;\n}\n\nmodule.exports = split;\nmodule.exports.default = split;\n", "\"use strict\";\n\nconst booleanIntersects = require(\"./boolean-intersects.js\");\nconst merge = require(\"./merge.js\");\n\n/**\n * @name bboxes\n * @param {Array} bboxes - an array of bounding boxes\n * @return {bbox} an array of bboxes in form [xmin, ymin, xmax, ymax]\n */\nfunction union(bboxes) {\n  if (bboxes.length === 0) return [];\n\n  if (bboxes.length === 1) return [bboxes[0]];\n\n  let results = [bboxes[0]];\n\n  for (let i = 1; i < bboxes.length; i++) {\n    const bbox = bboxes[i];\n    const matches = results.filter(it => booleanIntersects(bbox, it));\n    const merged = merge(matches.concat([bbox]));\n    const unmatched = results.filter(it => !matches.includes(it));\n    results = [merged].concat(unmatched);\n  }\n\n  return results;\n}\n\nmodule.exports = union;\nmodule.exports.default = union;\n", "\"use_strict\";\n\nconst shift = require(\"./shift.js\");\nconst sort = require(\"./sort.js\");\nconst split = require(\"./split.js\");\nconst union = require(\"./union.js\");\n\nfunction unwrap(bbox, container) {\n  const [global_xmin, global_ymin, global_xmax, global_ymax] = container;\n\n  const global_width = global_xmax - global_xmin;\n  const global_height = global_ymax - global_ymin;\n\n  const breakpoints = {\n    x: [global_xmin - global_width, global_xmin, global_xmax, global_xmax + global_width],\n    y: [global_ymin - global_height, global_ymin, global_ymax, global_ymax + global_height]\n  };\n\n  let bboxes = split(bbox, breakpoints);\n\n  // normalize bboxes to world boundaries\n  bboxes = bboxes.map(b => {\n    const [xmin, ymin, xmax, ymax] = b;\n    return shift(b, {\n      x: Math.ceil((global_xmin - xmin) / global_width) * global_width,\n      y: Math.ceil((global_ymin - ymin) / global_height) * global_height\n    });\n  });\n\n  // combine bboxes if they overlap\n  bboxes = union(bboxes);\n\n  bboxes = sort(bboxes);\n\n  return bboxes;\n}\n\nmodule.exports = unwrap;\nmodule.exports.default = unwrap;\n", "var b64ab = {};\n\nb64ab.char2bits = {\n  0: \"110100\", 1: \"110101\", 2: \"110110\", 3: \"110111\", 4: \"111000\",\n  5: \"111001\", 6: \"111010\", 7: \"111011\", 8: \"111100\", 9: \"111101\",\n  A: \"000000\", Q: \"010000\", g: \"100000\", w: \"110000\", B: \"000001\",\n  R: \"010001\", h: \"100001\", x: \"110001\", C: \"000010\", S: \"010010\",\n  i: \"100010\", y: \"110010\", D: \"000011\", T: \"010011\", j: \"100011\",\n  z: \"110011\", E: \"000100\", U: \"010100\", k: \"100100\", F: \"000101\",\n  V: \"010101\", l: \"100101\", G: \"000110\", W: \"010110\", m: \"100110\",\n  H: \"000111\", X: \"010111\", n: \"100111\", I: \"001000\", Y: \"011000\",\n  o: \"101000\", J: \"001001\", Z: \"011001\", p: \"101001\", K: \"001010\",\n  a: \"011010\", q: \"101010\", L: \"001011\", b: \"011011\", r: \"101011\",\n  M: \"001100\", c: \"011100\", s: \"101100\", N: \"001101\", d: \"011101\",\n  t: \"101101\", O: \"001110\", e: \"011110\", u: \"101110\", \"+\": \"111110\",\n  P: \"001111\", f: \"011111\", v: \"101111\", \"/\": \"111111\"\n};\n\nb64ab.toArrayBuffer = function toArrayBuffer (b64) {\n  var char2bits = b64ab.char2bits;\n  var eqct = 0;\n  for (let i = b64.length; i >= 0; i--) if (b64[i] === \"=\") eqct++;\n  var slen = (b64.length - eqct);\n  var l = Math.floor(.75 * slen);\n  var u8 = new Uint8Array(l);\n  var s = \"\";\n  for (var i = 0; i < slen; i++) {\n    var char = b64[i];\n    if (char === \"=\") break;\n    s += char2bits[char];\n    if (s.length >= 8) {\n      u8[Math.floor(.75 * i)] = parseInt(s.substring(0, 8), 2);\n      s = s.substring(8);\n    }\n  }\n  return u8.buffer;\n};\n\nb64ab.toBase64String = function toBase64String(ab) {\n  if (!b64ab.bits2char) {\n    b64ab.bits2char = {};\n    for (let char in b64ab.char2bits) b64ab.bits2char[b64ab.char2bits[char]] = char;\n  }\n  var bits2char = b64ab.bits2char;\n  var u8 = new Uint8Array(ab);\n  var s = \"\";\n  var b = \"\";\n  for (var i = 0; i < u8.length; i++) {\n    var n = u8[i].toString(2);\n    while (n.length < 8) n = \"0\" + n;\n    b += n;\n    while (b.length >= 6) {\n      s += bits2char[b.substring(0, 6)];\n      b = b.substring(6);\n    }\n  }\n  if (b.length > 0) {\n    while (b.length < 6) b += \"0\";\n    s += bits2char[b];\n  }\n  while (s.length % 4 !== 0) {\n    s += \"=\"\n  }\n  return s;\n};\n\nif (typeof define === \"function\" && define.amd) {\n  define(function() { return b64ab })\n}\n\nif (typeof module === \"object\") module.exports = b64ab;\nif (typeof window === \"object\") window.b64ab = b64ab;\nif (typeof self === \"object\") self.b64ab = b64ab;\n", "function indexOfMatch(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index;\n  else return -1;\n}\n\nmodule.exports = indexOfMatch;\nmodule.exports.default = indexOfMatch;\n", "function indexOfMatchEnd(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index + match[0].length - 1;\n  else return -1;\n}\n\nmodule.exports = indexOfMatchEnd;\nmodule.exports.default = indexOfMatchEnd;\n", "function countSubstring(string, substring) {\n  const pattern = new RegExp(substring, \"g\");\n  const match = string.match(pattern);\n  return match ? match.length : 0;\n}\n\nmodule.exports = countSubstring;\nmodule.exports.default = countSubstring;\n", "const indexOfMatch = require(\"./index-of-match.js\");\nconst indexOfMatchEnd = require(\"./index-of-match-end.js\");\nconst countSubstring = require(\"./count-substring.js\");\n\nfunction findTagByName(xml, tagName, options) {\n  const debug = (options && options.debug) || false;\n  const nested = !(options && typeof options.nested === false);\n\n  const startIndex = (options && options.startIndex) || 0;\n\n  if (debug) console.log(\"[xml-utils] starting findTagByName with\", tagName, \" and \", options);\n\n  const start = indexOfMatch(xml, `\\<${tagName}[ \\n\\>\\/]`, startIndex);\n  if (debug) console.log(\"[xml-utils] start:\", start);\n  if (start === -1) return undefined;\n\n  const afterStart = xml.slice(start + tagName.length);\n\n  let relativeEnd = indexOfMatchEnd(afterStart, \"^[^<]*[ /]>\", 0);\n\n  const selfClosing = relativeEnd !== -1 && afterStart[relativeEnd - 1] === \"/\";\n  if (debug) console.log(\"[xml-utils] selfClosing:\", selfClosing);\n\n  if (selfClosing === false) {\n    // check if tag has subtags with the same name\n    if (nested) {\n      let startIndex = 0;\n      let openings = 1;\n      let closings = 0;\n      while ((relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", startIndex)) !== -1) {\n        const clip = afterStart.substring(startIndex, relativeEnd + 1);\n        openings += countSubstring(clip, \"<\" + tagName + \"[ \\n\\t>]\");\n        closings += countSubstring(clip, \"</\" + tagName + \">\");\n        // we can't have more openings than closings\n        if (closings >= openings) break;\n        startIndex = relativeEnd;\n      }\n    } else {\n      relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", 0);\n    }\n  }\n\n  const end = start + tagName.length + relativeEnd + 1;\n  if (debug) console.log(\"[xml-utils] end:\", end);\n  if (end === -1) return undefined;\n\n  const outer = xml.slice(start, end);\n  // tag is like <gml:identifier codeSpace=\"OGP\">urn:ogc:def:crs:EPSG::32617</gml:identifier>\n\n  let inner;\n  if (selfClosing) {\n    inner = null;\n  } else {\n    inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n  }\n\n  return { inner, outer, start, end };\n}\n\nmodule.exports = findTagByName;\nmodule.exports.default = findTagByName;\n", "const findTagByName = require(\"./find-tag-by-name.js\");\n\nfunction findTagsByName(xml, tagName, options) {\n  const tags = [];\n  const debug = (options && options.debug) || false;\n  const nested = options && typeof options.nested === \"boolean\" ? options.nested : true;\n  let startIndex = (options && options.startIndex) || 0;\n  let tag;\n  while ((tag = findTagByName(xml, tagName, { debug, startIndex }))) {\n    if (nested) {\n      startIndex = tag.start + 1 + tagName.length;\n    } else {\n      startIndex = tag.end;\n    }\n    tags.push(tag);\n  }\n  if (debug) console.log(\"findTagsByName found\", tags.length, \"tags\");\n  return tags;\n}\n\nmodule.exports = findTagsByName;\nmodule.exports.default = findTagsByName;\n", "const findTagsByName = require(\"./find-tags-by-name.js\");\n\nfunction findTagsByPath(xml, path, options) {\n  const debug = (options && options.debug) || false;\n  const returnOnFirst = (options && options.returnOnFirst) || false;\n  let tags = findTagsByName(xml, path.shift(), { debug, nested: false });\n  if (debug) console.log(\"first tags are:\", tags);\n  for (let pathIndex = 0; pathIndex < path.length; pathIndex++) {\n    const tagName = path[pathIndex];\n    if (debug) console.log(\"tagName:\", tagName);\n    let allSubTags = [];\n    for (let tagIndex = 0; tagIndex < tags.length; tagIndex++) {\n      const tag = tags[tagIndex];\n      const subTags = findTagsByName(tag.outer, tagName, {\n        debug,\n        startIndex: 1\n      });\n      if (debug) console.log(\"subTags.length:\", subTags.length);\n      if (subTags.length > 0) {\n        subTags.forEach(subTag => {\n          (subTag.start += tag.start), (subTag.end += tag.start);\n        });\n        if (returnOnFirst && pathIndex === path.length - 1) return [subTags[0]];\n        allSubTags = allSubTags.concat(subTags);\n      }\n    }\n    tags = allSubTags;\n  }\n  return tags;\n}\n\nmodule.exports = findTagsByPath;\nmodule.exports.default = findTagsByPath;\n", "const findTagsByPath = require(\"./find-tags-by-path.js\");\n\nfunction findTagByPath(xml, path, options) {\n  const debug = (options && options.debug) || false;\n  const found = findTagsByPath(xml, path, { debug, returnOnFirst: true });\n  if (Array.isArray(found) && found.length === 1) return found[0];\n  else return undefined;\n}\nmodule.exports = findTagByPath;\nmodule.exports.default = findTagByPath;\n", "function getAttribute(tag, attributeName, options) {\n  const debug = (options && options.debug) || false;\n  if (debug) console.log(\"[xml-utils] getting \" + attributeName + \" in \" + tag);\n\n  const xml = typeof tag === \"object\" ? tag.outer : tag;\n\n  // only search for attributes in the opening tag\n  const opening = xml.slice(0, xml.indexOf(\">\") + 1);\n\n  const quotechars = ['\"', \"'\"];\n  for (let i = 0; i < quotechars.length; i++) {\n    const char = quotechars[i];\n    const pattern = attributeName + \"\\\\=\" + char + \"([^\" + char + \"]*)\" + char;\n    if (debug) console.log(\"[xml-utils] pattern:\", pattern);\n\n    const re = new RegExp(pattern);\n    const match = re.exec(opening);\n    if (debug) console.log(\"[xml-utils] match:\", match);\n    if (match) return match[1];\n  }\n}\n\nmodule.exports = getAttribute;\nmodule.exports.default = getAttribute;\n", "'use strict';\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nfunction sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n\nvar D2R = 0.01745329251994329577;\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nvar index = function(wkt) {\n  var lisp = parseString(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n};\n\nmodule.exports = index;\n", "function getCodeFromEsriWKT(esri_wkt) {\n  if (!esri_wkt) return;\n  const match = /PROJCS\\[\\\"([^\"]+)\\\"/.exec(esri_wkt);\n  if (!match) return;\n  const name = match[1];\n  if (name.match(/^WGS_1984_UTM_Zone_\\d{1,2}(N|S)$/)) {\n    const last_part = name.split(\"_\").pop();\n    const zone = last_part.substring(0, last_part.length - 1);\n    const hemisphere = last_part.substring(last_part.length - 1) == \"N\" ? 6 : 7;\n    return Number.parseInt(\"32\" + hemisphere + zone);\n  } else if (name.match(/^NAD_1983_UTM_Zone_\\d{1,2}N$/)) {\n    const last_part = name.split(\"_\").pop();\n    const zone = last_part.substring(0, last_part.length - 1);\n    return Number.parseInt(\"269\" + zone);\n  }\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return getCodeFromEsriWKT;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = getCodeFromEsriWKT;\n  module.exports.default = getCodeFromEsriWKT;\n}\n", "function getCodeFromProjString(proj) {\n  if (proj.includes(\"+proj=utm\") && proj.includes(\"+zone=\")) {\n    const parts = proj.split(\" \");\n    const zone = parts.find(part => part.startsWith(\"+zone=\")).split(\"=\")[1];\n    const south = proj.includes(\"+south\");\n\n    let ellps = parts.find(part => part.startsWith(\"+ellps=\"));\n    if (ellps) ellps = ellps.split(\"=\")[1];\n\n    if (ellps === \"GRS80\" && south === false) {\n      return Number.parseInt(\"269\" + zone);\n    } else {\n      const hemisphere = south ? \"7\" : \"6\";\n      return Number.parseInt(\"32\" + hemisphere + zone);\n    }\n  }\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return getCodeFromProjString;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = getCodeFromProjString;\n  module.exports.default = getCodeFromProjString;\n}\n", "function hash32(string) {\n  // sometimes might have extra space at end from epsg.io\n  string = string.trim();\n\n  // replace new lines with spaces\n  string = string.replace(/\\n/g, \" \");\n\n  // replace tabs with spaces\n  string = string.replace(/\\t/g, \" \");\n\n  // remove any extra spaces\n  string = string.replace(/ +/g, \" \");\n\n  let hash = 0;\n  let i;\n  let chr;\n  if (string.length === 0) return hash;\n  const string_length = string.length;\n  for (i = 0; i < string_length; i++) {\n    chr = string.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  // convert to 16-bit\n  // hash = Math.round(hash / Math.pow(2, 16));\n\n  return hash;\n}\n\nmodule.exports = hash32;\nmodule.exports.default = hash32;\n", "function sort(data, { keywords } = {}) {\n  const keys = Object.keys(data).filter(k => !/\\d+/.test(k));\n\n  if (!keywords) {\n    keywords = [];\n    // try to find multiples\n    const counts = {};\n    if (Array.isArray(data)) {\n      data.forEach(it => {\n        if (Array.isArray(it) && it.length >= 2 && typeof it[1] === \"string\") {\n          const k = it[0];\n          if (!counts[k]) counts[k] = 0;\n          counts[k]++;\n        }\n      });\n      for (let k in counts) {\n        if (counts[k] > 0) keywords.push(k);\n      }\n    }\n  }\n\n  keys.forEach(key => {\n    data[key] = sort(data[key]);\n  });\n\n  keywords.forEach(key => {\n    const indices = [];\n    const params = [];\n    data.forEach((item, i) => {\n      if (Array.isArray(item) && item[0] === key) {\n        indices.push(i);\n        params.push(item);\n      }\n    });\n\n    params.sort((a, b) => {\n      a = a[1].toString();\n      b = b[1].toString();\n      return a < b ? -1 : a > b ? 1 : 0;\n    });\n\n    // replace in order\n    params.forEach((param, i) => {\n      data[indices[i]] = param;\n    });\n  });\n\n  return data;\n}\n\nfunction parse(wkt, options) {\n  const raw = typeof options === \"object\" && options.raw === true;\n  const debug = typeof options === \"object\" && options.debug === true;\n\n  if (debug) console.log(\"[wktcrs] parse starting with\\n\", wkt);\n\n  // move all keywords into first array item slot\n  // from PARAM[12345, 67890] to [\"PARAM\", 12345, 67890]\n  wkt = wkt.replace(/[A-Z][A-Z\\d_]+\\[/gi, function (match) {\n    return '[\"' + match.substr(0, match.length - 1) + '\",';\n  });\n\n  // wrap variables in strings\n  // from [...,NORTH] to [...,\"NORTH\"]\n  wkt = wkt.replace(/, ?([A-Z][A-Z\\d_]+[,\\]])/gi, function (match, p1) {\n    const varname = p1.substr(0, p1.length - 1);\n    return \",\" + '\"' + (raw ? \"raw:\" : \"\") + varname + '\"' + p1[p1.length - 1];\n  });\n\n  if (typeof options === \"object\" && options.raw === true) {\n    // replace all numbers with strings\n    wkt = wkt.replace(/, {0,2}(-?[\\.\\d]+)(?=,|\\])/g, function (match, p1) {\n      return \",\" + '\"' + (raw ? \"raw:\" : \"\") + p1 + '\"';\n    });\n  }\n\n  // str should now be valid JSON\n  if (debug) console.log(\"[wktcrs] json'd wkt: '\" + wkt + \"'\");\n  let data;\n  try {\n    data = JSON.parse(wkt);\n  } catch (error) {\n    console.error(`[wktcrs] failed to parse '${wkt}'`);\n    throw error;\n  }\n\n  if (debug) console.log(\"[wktcrs] json parsed: '\" + wkt + \"'\");\n\n  function process(data, parent) {\n    const kw = data[0];\n\n    // after removing the first element with .shift()\n    // data is now just an array of attributes\n\n    data.forEach(function (it) {\n      if (Array.isArray(it)) {\n        process(it, data);\n      }\n    });\n\n    const kwarr = \"MULTIPLE_\" + kw;\n\n    if (kwarr in parent) {\n      parent[kwarr].push(data);\n    } else if (kw in parent) {\n      parent[kwarr] = [parent[kw], data];\n      delete parent[kw];\n    } else {\n      parent[kw] = data;\n    }\n    return parent;\n  }\n\n  const result = process(data, [data]);\n  if (debug) console.log(\"[wktcrs] parse returning\", result);\n\n  return { data: result };\n}\n\n// convert JSON representation of Well-Known Text\n// back to standard Well-Known Text\nfunction unparse(wkt, options) {\n  if (Array.isArray(wkt) && wkt.length == 1 && Array.isArray(wkt[0])) {\n    wkt = wkt[0]; // ignore first extra wrapper array\n  }\n\n  const [kw, ...attrs] = wkt;\n  const str =\n    kw +\n    \"[\" +\n    attrs\n      .map(attr => {\n        if (Array.isArray(attr)) {\n          return unparse(attr, options).data;\n        } else if (typeof attr === \"number\") {\n          return attr.toString();\n        } else if (typeof attr === \"string\") {\n          // can't automatically convert all caps to varibale\n          // because EPSG is string in AUTHORITY[\"EPSG\", ...]\n          if (attr.startsWith(\"raw:\")) {\n            // convert \"raw:NORTH\" to NORTH\n            return attr.replace(\"raw:\", \"\");\n          } else {\n            return '\"' + attr + '\"';\n          }\n        } else {\n          throw new Error('[wktcrs] unexpected attribute \"' + attr + '\"');\n        }\n      })\n      .join(\",\") +\n    \"]\";\n  return { data: str };\n}\n\nconst _module = { parse, unparse, sort };\nif (typeof define === \"function\")\n  define(function () {\n    return _module;\n  });\nif (typeof module === \"object\") module.exports = _module;\nif (typeof window === \"object\") window.wktcrs = _module;\nif (typeof self === \"object\") self.wktcrs = _module;\n", "const wktcrs = require(\"wkt-crs\");\n\nfunction sort_wkt(wkt) {\n  const { data } = wktcrs.parse(wkt, { raw: true });\n  wktcrs.sort(data);\n  return wktcrs.unparse(data, { raw: true }).data;\n}\n\nfunction normalize_wkt(wkt, { debug = false } = { debug: false }) {\n  wkt = wkt.trim();\n\n  // replace new lines with spaces\n  wkt = wkt.replace(/\\n/g, \" \");\n\n  // replace tabs with spaces\n  wkt = wkt.replace(/\\t/g, \" \");\n\n  // remove any extra spaces\n  wkt = wkt.replace(/ +/g, \" \");\n\n  // replace spaces with underscores\n  wkt = wkt.replace(/ /g, \"_\");\n\n  wkt = wkt.replace(`GEOGCS[\"GCS_`, `GEOGCS[\"`);\n\n  wkt = wkt.replace(`DATUM[\"D_`, `DATUM[\"`);\n\n  wkt = wkt.replace(\"Gauss_Kruger\", \"GK\");\n\n  // reduce precision of decimal numbers to 15 digits\n  wkt = wkt.replace(/\\.\\d{16,}/g, n => n.substr(0, 16));\n\n  // replace \\d.0 with 0\n  wkt = wkt.replace(/\\d+\\.0[,\"'\\]]/g, s => s.substring(0, s.indexOf(\".\")) + s.charAt(s.length - 1));\n\n  // replace 1984 with 84\n  // ex: replace WGS_1984_Antarctic_Polar_Stereographic with WGS_84_Antarctic_Polar_Stereographic\n  //     which is what happened with https://epsg.io/3031.esriwkt\n  wkt = wkt.replace(/[_|\"]1984[_|\"]/g, s => s.charAt(0) + \"84\" + s.charAt(s.length - 1));\n\n  // happened in epsg.io/3031.esriwkt\n  // wkt = wkt.replace(/false_easting/g, \"False_Easting\");\n  // wkt = wkt.replace(/false_northing/g, \"False_Northing\");\n\n  // lower case value strings\n  wkt = wkt.replace(/\"[A-Za-z_\\d]+\"/g, s => '\"' + s.substring(1, s.length - 1).toLowerCase() + '\"');\n\n  // sort parameters\n  wkt = sort_wkt(wkt);\n\n  if (debug) console.log('[get-epsg-code] wkt after cleaning: \"' + wkt + '\"');\n  return wkt;\n}\n\nmodule.exports = normalize_wkt;\nmodule.exports.default = normalize_wkt;\n", "const normalize_wkt = require(\"./wkt.js\");\n\nfunction normalize_esriwkt(esriwkt, { debug = false } = { debug: false }) {\n  return normalize_wkt(esriwkt, { debug });\n}\n\nmodule.exports = normalize_esriwkt;\nmodule.exports.default = normalize_esriwkt;\n", "/**\n *\n * @param {String} str - PROJ.4 string\n * @returns {String} normalized PROJ.4 string\n */\nfunction normalize_proj4(str, { debug = false, remove_k1 = true, remove_no_defs = true, remove_title = true, remove_init = true, remove_type = true } = {}) {\n  str = str.trim();\n\n  // replace any accidental extra spaces\n  str = str.replace(/ +/g, \" \");\n\n  // sort params\n  let parts = str\n    .split(/ ?\\+/g)\n    .filter(it => it.trim() !== \"\")\n    .sort();\n\n  // seems like k=1 is interpreted as default\n  // for example https://epsg.io/3031.proj4 dropped it\n  if (remove_k1) parts = parts.filter(it => it !== \"k=1\");\n  if (remove_no_defs) parts = parts.filter(it => it !== \"no_defs\");\n  if (remove_type) parts = parts.filter(it => !it.startsWith(\"type\"));\n  if (remove_init) parts = parts.filter(it => !it.startsWith(\"init\"));\n  if (remove_title) parts = parts.filter(it => !it.startsWith(\"title\"));\n\n  str = parts.map(it => \"+\" + it).join(\" \");\n\n  if (debug) console.log('normalized proj4 string\\nfrom \"' + arguments[0] + '\"\\nto \"' + str + '\"');\n\n  return str;\n}\n\nmodule.exports = normalize_proj4;\nmodule.exports.default = normalize_proj4;\n", "// keywords are from proj4js\nconst keywords = [\n  \"PROJECTEDCRS\",\n  \"PROJCRS\",\n  \"GEOGCS\",\n  \"GEOCCS\",\n  \"PROJCS\",\n  \"LOCAL_CS\",\n  \"GEODCRS\",\n  \"GEODETICCRS\",\n  \"GEODETICDATUM\",\n  \"ENGCRS\",\n  \"ENGINEERINGCRS\",\n  \"PRIMEM\",\n  \"DATUM\"\n];\n\nfunction isWKT(str) {\n  // clean any blank spaces in beginning\n  str = str.trim();\n\n  if (\n    str.startsWith(\"PROJCS[\") ||\n    str.startsWith(\"PROJCRS[\") ||\n    str.startsWith(\"GEOGCS[\") ||\n    str.startsWith(\"GEOGCRS[\")\n  ) {\n    for (let i = 0; i < keywords.length; i++) {\n      const kw = keywords[i];\n      if (str.includes(kw + \"[\")) {\n        return true;\n      }\n    }\n  } else {\n    return false;\n  }\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return isWKT;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = isWKT;\n  module.exports.default = isWKT;\n}\nif (typeof self === \"object\") self.isWKT = isWKT;\nif (typeof window === \"object\") window.isWKT = isWKT;\n", "const FORMATS = {\n  ESRI_WKT: \"esriwkt\",\n  GEOSERVER: \"geoserver\",\n  MAPFILE: \"mapfile\",\n  MAPNIK: \"mapnik\",\n  OGC_GML: \"gml\",\n  OGC_XML: \"xml\",\n  OGC_WKT: \"wkt\",\n  POSTGIS: \"postgis\",\n  PROJ_4: \"proj4\",\n  PROJ_4_JS: \"js\",\n  PROJJSON: \"PROJJSON\",\n  WKT_2: \"wkt2\"\n};\n\nmodule.exports = {\n  FORMATS\n};\n", "const isWKT = require(\"is-wkt\");\nconst wktcrs = require(\"wkt-crs\");\n\nconst { FORMATS } = require(\"./enums.js\");\n\nconst { ESRI_WKT, GEOSERVER, MAPFILE, MAPNIK, OGC_GML, OGC_XML, OGC_WKT, POSTGIS, PROJ_4, PROJ_4_JS, PROJJSON, WKT_2 } = FORMATS;\n\nfunction getProjType(input, { debug = false } = { debug: false }) {\n  // check WKT\n  if (input.startsWith(\"{\") && input.includes(\"projjson\")) {\n    return PROJJSON;\n  } else if (isWKT(input)) {\n    const parsed = wktcrs.parse(input.toUpperCase()).data;\n    if (\"AUTHORITY\" in (parsed.PROJCS || parsed.PROJCRS || parsed.GEOGCS || parsed.GEOGCRS)) {\n      return OGC_WKT;\n    } else if (\"ID\" in parsed) {\n      return WKT_2;\n    } else {\n      // appears to be ESRI WKT\n      return ESRI_WKT;\n    }\n  } else if (input.includes(\"gml:ProjectedCRS\") || input.includes(\"gml:GeodeticCRS\") || input.includes(\"gml:GeographicCRS\")) {\n    if (input.includes(\"gml:srsID\")) {\n      return OGC_XML;\n    } else {\n      return OGC_GML;\n    }\n  } else if (input.startsWith(\"+\") && input.includes(\"+proj=\")) {\n    return PROJ_4;\n  } else if (input.startsWith(`proj4.defs(`)) {\n    return PROJ_4_JS;\n  } else if (/^\\d{1,6}\\=(PROJCS|GEOGCS)/.test(input)) {\n    return GEOSERVER;\n  } else if (input.startsWith(\"PROJECTION\") && input.endsWith(\"END\")) {\n    return MAPFILE;\n  } else if (input.endsWith(\"</Map>\")) {\n    return MAPNIK;\n  } else if (input.startsWith(\"INSERT\")) {\n    return POSTGIS;\n  } else {\n    if (debug) console.log('get-proj-type could not identify \"' + input + '\"');\n    return \"SOMETHING ELSE\";\n  }\n}\n\nmodule.exports = getProjType;\nmodule.exports.default = getProjType;\n", "function parseProj4JS(input, { debug = false } = { debug: false }) {\n  const start = input.indexOf(\":\") + 1;\n  const end = input.indexOf('\"', start + 2);\n  const str = input.substring(start, end);\n  if (debug) console.log('parseProj4JS str: \"' + str + '\"');\n  if (str) return Number(str);\n}\n\nmodule.exports = parseProj4JS;\nmodule.exports.default = parseProj4JS;\n", "{\n  \"properties\": {\n    \"columns\": [\n      \"epsg_code\",\n      \"esriwkt\",\n      \"mapfile\",\n      \"proj4\"\n    ],\n    \"key\": \"epsg_code\",\n    \"dataType\": \"int32\"\n  },\n  \"data\": \"\"\n}", "const b64ab = require(\"b64ab\");\nconst findTagByPath = require(\"xml-utils/find-tag-by-path\");\nconst findTagByName = require(\"xml-utils/find-tag-by-name\");\nconst getAttribute = require(\"xml-utils/get-attribute\");\nconst parseWKT = require(\"wkt-parser\");\nconst utmUtils_getCodeFromEsriWKT = require(\"utm-utils/src/getCodeFromEsriWKT.js\");\nconst utmUtils_getCodeFromProjString = require(\"utm-utils/src/getCodeFromProjString.js\");\n\nconst hash = require(\"./hash.js\");\nconst normalize_esriwkt = require(\"./normalize/esriwkt.js\");\nconst normalize_proj4 = require(\"./normalize/proj4.js\");\n\nconst getProjType = require(\"./get-proj-type.js\");\nconst parseProj4JS = require(\"./parse/proj4js.js\");\nconst { FORMATS } = require(\"./enums.js\");\n\nconst data = require(\"./data/esriwkt-mapfile-proj4.json\");\n\nconst getDefault = fn => fn.default || fn;\n\nconst rows = [];\n\nfunction _load_rows(debug) {\n  const decoded = b64ab.toArrayBuffer(data.data);\n  const arr = new Int32Array(decoded);\n  if (debug) console.log(\"arr:\", arr);\n\n  const num_fields = data.properties.columns.length;\n  const num_rows = arr.length / num_fields;\n\n  for (let r = 0; r < num_rows; r++) {\n    const row = {};\n    for (let f = 0; f < num_fields; f++) {\n      row[data.properties.columns[f]] = arr[r * num_fields + f];\n    }\n    rows.push(row);\n  }\n  if (debug) console.log(\"[get-epsg-code] rows:\", rows);\n\n  return rows;\n}\n\nfunction lookup(input, dataType, debug = false) {\n  if (!data.properties.columns.includes(dataType)) {\n    throw new Error(\"[get-epsg-code] \" + dataType + \" not supported\");\n  }\n\n  if (rows.length === 0) {\n    _load_rows(debug);\n  }\n\n  const hashed = hash(input);\n  if (debug) console.log(\"[get-epsg-code] hashed:\", hashed);\n\n  const found = rows.filter(row => row[dataType] === hashed);\n  if (debug) console.log(\"[get-epsg-code] found:\", found);\n\n  return found.map(row => row.epsg_code);\n}\n\nconst { ESRI_WKT, GEOSERVER, MAPFILE, MAPNIK, OGC_GML, OGC_XML, OGC_WKT, POSTGIS, PROJJSON, PROJ_4, PROJ_4_JS, WKT_2 } = FORMATS;\n\nfunction getEPSGCodes(input, options) {\n  //console.log(\"starting get-epsg-code with\", input, options);\n  var debug = options && options.debug ? options.debug : false;\n\n  if (typeof input === \"string\") input = input.trim();\n\n  const dataType = getProjType(input, { debug });\n  if (debug) console.log(\"dataType:\", dataType);\n\n  if (dataType === OGC_WKT) {\n    const parsed = getDefault(parseWKT)(input);\n    if (debug) console.log(\"parsed:\", parsed);\n    if (parsed.AUTHORITY) {\n      const authority = parsed.AUTHORITY;\n      return {\n        type: dataType,\n        codes: [Number(authority.epsg || authority.EPSG)]\n      };\n    }\n  } else if (dataType === WKT_2) {\n    const parsed = getDefault(parseWKT)(input);\n    if (debug) console.log(\"parsed:\", parsed);\n    if (typeof parsed.ID === \"object\" && typeof parsed.ID.EPSG === \"number\") {\n      return {\n        type: dataType,\n        codes: [parsed.ID.EPSG]\n      };\n    }\n  } else if (dataType == ESRI_WKT) {\n    // try utm parsing\n    const code = utmUtils_getCodeFromEsriWKT(input);\n    if (code) return { type: dataType, codes: [code] };\n\n    input = normalize_esriwkt(input, { debug });\n    return { type: dataType, codes: lookup(input, ESRI_WKT, debug) };\n  } else if (dataType === OGC_GML) {\n    const identifier = getDefault(findTagByName)(input, \"gml:identifier\", {\n      debug\n    }).inner;\n    return {\n      type: dataType,\n      codes: [Number(identifier.replace(\"urn:ogc:def:crs:EPSG::\", \"\"))]\n    };\n  } else if (dataType === OGC_XML) {\n    return {\n      type: dataType,\n      codes: [Number(getDefault(findTagByPath)(input, [\"gml:srsID\", \"gml:name\"], { debug }).inner)]\n    };\n  } else if (dataType === PROJ_4) {\n    input = normalize_proj4(input, { debug });\n\n    if (input.startsWith(\"+\") && input.includes(\"+proj=utm\")) {\n      return { type: dataType, codes: [utmUtils_getCodeFromProjString(input)] };\n    } else {\n      return { type: dataType, codes: lookup(input, PROJ_4, debug) };\n    }\n  } else if (dataType === PROJ_4_JS) {\n    const code = parseProj4JS(input);\n    return {\n      type: dataType,\n      codes: code ? [code] : []\n    };\n  } else if (dataType === GEOSERVER) {\n    return { type: dataType, codes: [Number(input.match(/^\\d{1,6}/)[0])] };\n  } else if (dataType === MAPFILE) {\n    if (input.includes(\"init=epsg:\")) {\n      return {\n        type: dataType,\n        codes: [Number.parseInt(/(\"init\\=epsg:)(\\d{1,10})(\")/.exec(input)[2])]\n      };\n    } else if (input.includes('\"proj=utm\"')) {\n      const zone = /(\"zone\\=)(\\d{1,2})(\")/.exec(input)[2];\n      const south = input.includes('\"south\"');\n      if (input.includes(\"ellps=GRS80\") && south === false) {\n        return { type: dataType, codes: [Number.parseInt(\"269\" + zone)] };\n      } else {\n        const hemisphere = south ? \"7\" : \"6\";\n        return {\n          type: dataType,\n          codes: [Number.parseInt(\"32\" + hemisphere + zone)]\n        };\n      }\n    } else {\n      return { type: dataType, codes: lookup(input, MAPFILE, debug) };\n    }\n  } else if (dataType === MAPNIK) {\n    const map = findTagByName(input, \"Map\");\n    const srs = getAttribute(map.outer, \"srs\"); // Proj.4 String\n    return { type: dataType, codes: getEPSGCodes(srs).codes };\n  } else if (dataType === POSTGIS) {\n    return {\n      type: dataType,\n      codes: [Number(input.substring(input.indexOf(\"values (\") + 8, input.indexOf(\"EPSG\") - 3).trim())]\n    };\n  } else if (dataType === PROJJSON) {\n    const data = JSON.parse(input);\n    if (typeof data.id === \"object\") {\n      if (data.id.authority === \"EPSG\" || !(\"authority\" in data.id)) {\n        if (typeof data.id.code === \"number\") {\n          return {\n            type: dataType,\n            codes: [data.id.code]\n          };\n        }\n      }\n    }\n  }\n}\n\nfunction getEPSGCode(input, options) {\n  const result = getEPSGCodes(input, options);\n  if (result) return result.codes[0];\n}\n\nif (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n  module.exports = getEPSGCode;\n  module.exports.getEPSGCode = getEPSGCode;\n  module.exports.getEPSGCodes = getEPSGCodes;\n  module.exports._load_rows = _load_rows;\n}\nif (typeof window !== \"undefined\") {\n  window[\"getEPSGCode\"] = getEPSGCode;\n  window[\"getEPSGCodes\"] = getEPSGCodes;\n} else if (typeof self !== \"undefined\") {\n  self[\"getEPSGCode\"] = getEPSGCode; // jshint ignore:line\n  self[\"getEPSGCodes\"] = getEPSGCodes; // jshint ignore:line\n}\n", "var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// node_modules/.pnpm/bbox-fns@0.6.0/node_modules/bbox-fns/polygon.js\nvar require_polygon = __commonJS({\n  \"node_modules/.pnpm/bbox-fns@0.6.0/node_modules/bbox-fns/polygon.js\"(exports, module2) {\n    function polygon([x0, y0, x1, y1]) {\n      return [\n        [\n          [x0, y1],\n          // top-left\n          [x0, y0],\n          // bottom-left\n          [x1, y0],\n          // bottom-right\n          [x1, y1],\n          // top-right\n          [x0, y1]\n          // top-left\n        ]\n      ];\n    }\n    module2.exports = polygon;\n    module2.exports.default = polygon;\n  }\n});\n\n// node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/get-attribute.js\nvar require_get_attribute = __commonJS({\n  \"node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/get-attribute.js\"(exports, module2) {\n    function getAttribute8(tag, attributeName, options) {\n      const debug = options && options.debug || false;\n      if (debug)\n        console.log(\"getting \" + attributeName + \" in \" + tag);\n      const xml = typeof tag === \"object\" ? tag.outer : tag;\n      const pattern = `${attributeName}\\\\=\"([^\"]*)\"`;\n      if (debug)\n        console.log(\"pattern:\", pattern);\n      const re = new RegExp(pattern);\n      const match = re.exec(xml);\n      if (debug)\n        console.log(\"match:\", match);\n      if (match)\n        return match[1];\n    }\n    module2.exports = getAttribute8;\n    module2.exports.default = getAttribute8;\n  }\n});\n\n// node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/index-of-match.js\nvar require_index_of_match = __commonJS({\n  \"node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/index-of-match.js\"(exports, module2) {\n    function indexOfMatch(xml, pattern, startIndex) {\n      const re = new RegExp(pattern);\n      const match = re.exec(xml.slice(startIndex));\n      if (match)\n        return startIndex + match.index;\n      else\n        return -1;\n    }\n    module2.exports = indexOfMatch;\n    module2.exports.default = indexOfMatch;\n  }\n});\n\n// node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/index-of-match-end.js\nvar require_index_of_match_end = __commonJS({\n  \"node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/index-of-match-end.js\"(exports, module2) {\n    function indexOfMatchEnd(xml, pattern, startIndex) {\n      const re = new RegExp(pattern);\n      const match = re.exec(xml.slice(startIndex));\n      if (match)\n        return startIndex + match.index + match[0].length - 1;\n      else\n        return -1;\n    }\n    module2.exports = indexOfMatchEnd;\n    module2.exports.default = indexOfMatchEnd;\n  }\n});\n\n// node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/count-substring.js\nvar require_count_substring = __commonJS({\n  \"node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/count-substring.js\"(exports, module2) {\n    function countSubstring(string, substring) {\n      const pattern = new RegExp(substring, \"g\");\n      const match = string.match(pattern);\n      return match ? match.length : 0;\n    }\n    module2.exports = countSubstring;\n    module2.exports.default = countSubstring;\n  }\n});\n\n// node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/find-tag-by-name.js\nvar require_find_tag_by_name = __commonJS({\n  \"node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/find-tag-by-name.js\"(exports, module2) {\n    var indexOfMatch = require_index_of_match();\n    var indexOfMatchEnd = require_index_of_match_end();\n    var countSubstring = require_count_substring();\n    function findTagByName4(xml, tagName, options) {\n      const debug = options && options.debug || false;\n      const nested = !(options && typeof options.nested === false);\n      const startIndex = options && options.startIndex || 0;\n      if (debug)\n        console.log(\"[xml-utils] starting findTagByName with\", tagName, \" and \", options);\n      const start = indexOfMatch(xml, `<${tagName}[ >/]`, startIndex);\n      if (debug)\n        console.log(\"[xml-utils] start:\", start);\n      if (start === -1)\n        return void 0;\n      const afterStart = xml.slice(start + tagName.length);\n      let relativeEnd = indexOfMatchEnd(afterStart, \"^[^<]*[ /]>\", 0);\n      const selfClosing = relativeEnd !== -1 && afterStart[relativeEnd - 1] === \"/\";\n      if (debug)\n        console.log(\"[xml-utils] selfClosing:\", selfClosing);\n      if (selfClosing === false) {\n        if (nested) {\n          let startIndex2 = 0;\n          let openings = 1;\n          let closings = 0;\n          while ((relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", startIndex2)) !== -1) {\n            const clip = afterStart.substring(startIndex2, relativeEnd + 1);\n            openings += countSubstring(clip, \"<\" + tagName);\n            closings += countSubstring(clip, \"/\" + tagName + \">\");\n            if (closings >= openings)\n              break;\n            startIndex2 = relativeEnd;\n          }\n        } else {\n          relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", 0);\n        }\n      }\n      const end = start + tagName.length + relativeEnd + 1;\n      if (debug)\n        console.log(\"[xml-utils] end:\", end);\n      if (end === -1)\n        return void 0;\n      const outer = xml.slice(start, end);\n      let inner;\n      if (selfClosing) {\n        inner = null;\n      } else {\n        inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n      }\n      return { inner, outer, start, end };\n    }\n    module2.exports = findTagByName4;\n    module2.exports.default = findTagByName4;\n  }\n});\n\n// node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/find-tags-by-name.js\nvar require_find_tags_by_name = __commonJS({\n  \"node_modules/.pnpm/xml-utils@1.3.0/node_modules/xml-utils/find-tags-by-name.js\"(exports, module2) {\n    var findTagByName4 = require_find_tag_by_name();\n    function findTagsByName3(xml, tagName, options) {\n      const tags = [];\n      const debug = options && options.debug || false;\n      const nested = options && typeof options.nested === \"boolean\" ? options.nested : true;\n      let startIndex = options && options.startIndex || 0;\n      let tag;\n      while (tag = findTagByName4(xml, tagName, { debug, startIndex })) {\n        if (nested) {\n          startIndex = tag.start + 1 + tagName.length;\n        } else {\n          startIndex = tag.end;\n        }\n        tags.push(tag);\n      }\n      if (debug)\n        console.log(\"findTagsByName found\", tags.length, \"tags\");\n      return tags;\n    }\n    module2.exports = findTagsByName3;\n    module2.exports.default = findTagsByName3;\n  }\n});\n\n// index.js\nvar geography_markup_language_exports = {};\n__export(geography_markup_language_exports, {\n  Envelope: () => Envelope,\n  Geometry: () => Geometry,\n  LineString: () => LineString3,\n  Point: () => Point3,\n  Polygon: () => Polygon4,\n  findGeometries: () => geometries\n});\nmodule.exports = __toCommonJS(geography_markup_language_exports);\n\n// geometry/Envelope.js\nvar import_polygon = __toESM(require_polygon(), 1);\n\n// parse/envelope.js\nvar import_get_attribute = __toESM(require_get_attribute(), 1);\n\n// utils/find.js\nvar import_find_tags_by_name = __toESM(require_find_tags_by_name(), 1);\nfunction find(xml, names) {\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    const tags = (0, import_find_tags_by_name.default)(xml, name);\n    if (tags.length >= 1) {\n      return tags;\n    }\n  }\n  return [];\n}\n\n// enums/Envelope.js\nvar Envelope_default = [\"gml:envelope\", \"envelope\", \"gml:Envelope\", \"Envelope\"];\n\n// find/Envelope.js\nfunction envelope(xml) {\n  return find(xml, Envelope_default)[0];\n}\n\n// parse/lowerCorner.js\nvar import_find_tag_by_name = __toESM(require_find_tag_by_name(), 1);\n\n// utils/reorder.js\nfunction reorder(point) {\n  const y = point[0];\n  const x = point[1];\n  const rest = point.slice(2);\n  return [x, y].concat(rest);\n}\n\n// parse/lowerCorner.js\nfunction lowerCorner(xml, { order = \"default\", raw = false } = {}) {\n  const tag = (0, import_find_tag_by_name.default)(xml, \"gml:lowerCorner\") || (0, import_find_tag_by_name.default)(\"lowerCorner\");\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  let point = inner.trim().split(/[ ,]+/g);\n  if (!raw)\n    point = point.map((n) => Number(n));\n  if (order === \"geojson\")\n    point = reorder(point);\n  return point;\n}\n\n// parse/upperCorner.js\nvar import_find_tag_by_name2 = __toESM(require_find_tag_by_name(), 1);\nfunction upperCorner(xml, { order = \"default\", raw = false } = {}) {\n  const tag = (0, import_find_tag_by_name2.default)(xml, \"gml:upperCorner\") || (0, import_find_tag_by_name2.default)(\"upperCorner\");\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  let point = inner.trim().split(/[ ,]+/g);\n  if (!raw)\n    point = point.map((n) => Number(n));\n  if (order === \"geojson\")\n    point = reorder(point);\n  return point;\n}\n\n// parse/envelope.js\nfunction envelope2(xml, { raw = false } = {}) {\n  const tag = envelope(xml);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  const lowerCorner2 = lowerCorner(inner, { raw });\n  if (!lowerCorner2)\n    return;\n  const upperCorner2 = upperCorner(inner, { raw });\n  if (!upperCorner2)\n    return;\n  if (lowerCorner2.length !== upperCorner2.length) {\n    throw new Error(\"[geography-markup-language/parse/envelope] inconsistent number of dimensions\");\n  }\n  const srs2 = (0, import_get_attribute.default)(tag.outer, \"srsName\") || null;\n  return { srs: srs2, corners: [lowerCorner2, upperCorner2] };\n}\n\n// geometry/Envelope.js\nfunction Envelope(xml, { format = \"default\" } = {}) {\n  let order = \"default\";\n  let raw = false;\n  if (format === \"geojson\") {\n    order = \"geojson\";\n  }\n  const obj = envelope2(xml, { order, raw });\n  if (!obj)\n    return;\n  if (!format || format === \"default\")\n    return obj;\n  const { srs: srs2, corners } = obj;\n  const [lowerCorner2, upperCorner2] = corners;\n  if (format === \"bbox\" || format === \"geojson\") {\n    const [ymin, xmin, ...lowerCornerRest] = lowerCorner2;\n    const [ymax, xmax, ...upperCornerRest] = upperCorner2;\n    if (format === \"bbox\") {\n      return [xmin, ymin, ...lowerCornerRest, xmax, ymax, ...upperCornerRest];\n    } else if (format === \"geojson\") {\n      const bbox = [xmin, ymin, xmax, ymax];\n      const feature = {\n        type: \"Feature\",\n        bbox,\n        properties: {},\n        geometry: {\n          type: \"Polygon\",\n          coordinates: (0, import_polygon.default)(bbox)\n        }\n      };\n      if (srs2) {\n        feature.properties.srsName = srs2;\n        feature.crs = {\n          type: \"name\",\n          properties: {\n            name: srs2\n          }\n        };\n      }\n      return feature;\n    }\n  }\n}\n\n// parse/LineString.js\nvar import_get_attribute4 = __toESM(require_get_attribute(), 1);\n\n// enums/LineString.js\nvar LineString_default = [\"gml:LineString\", \"LineString\", \"gml:lineString\", \"lineString\", \"gml:linestring\", \"linestring\"];\n\n// find/LineString.js\nfunction LineString(xml) {\n  return find(xml, LineString_default)[0];\n}\n\n// parse/coordinates.js\nvar import_get_attribute2 = __toESM(require_get_attribute(), 1);\n\n// find/coordinates.js\nfunction coordinates(xml) {\n  return find(xml, [\"gml:coordinates\", \"coordinates\", \"gml:Coordinates\", \"Coordinates\"])[0];\n}\n\n// utils/chunk.js\nfunction chunk(arr, chunkSize = 2) {\n  const result = [];\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    const chunk2 = [];\n    for (let c = 0; c < chunkSize; c++) {\n      chunk2.push(arr[i + c]);\n    }\n    result.push(chunk2);\n  }\n  return result;\n}\n\n// parse/coordinates.js\nfunction coordinates2(xml, { debug = false, order = \"default\", raw = false } = {}) {\n  const tag = coordinates(xml);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  let nums = inner.trim().split(/[ ,\\t\\n]+/g);\n  if (!raw) {\n    if (debug)\n      console.log(\"[geography-markup-language] converting to numbers\");\n    nums = nums.map((n) => Number(n));\n  }\n  const srsDimension = (0, import_get_attribute2.default)(tag, \"srsDimension\");\n  const chunkSize = srsDimension ? Number(srsDimension) : 2;\n  let points = chunk(nums, chunkSize);\n  if (order === \"geojson\") {\n    points = points.map((pt) => reorder(pt));\n  }\n  if (points.length === 1) {\n    return points[0];\n  } else {\n    return points;\n  }\n}\n\n// parse/posList.js\nvar import_get_attribute3 = __toESM(require_get_attribute(), 1);\n\n// find/posLists.js\nfunction posLists(xml) {\n  return find(xml, [\"gml:posList\", \"posList\", \"gml:PosList\", \"PosList\", \"gml:poslist\", \"poslist\"]);\n}\n\n// find/posList.js\nfunction posList(xml) {\n  return posLists(xml)[0];\n}\n\n// parse/posList.js\nfunction posList2(xml, { debug = false, order = \"default\", raw = false } = {}) {\n  const tag = posList(xml);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  let nums = inner.trim().split(/[ ,\\t\\n]+/g);\n  if (!raw) {\n    if (debug)\n      console.log(\"[geography-markup-language] converting to numbers\");\n    nums = nums.map((n) => Number(n));\n  }\n  const srsDimension = (0, import_get_attribute3.default)(tag, \"srsDimension\");\n  const chunkSize = srsDimension ? Number(srsDimension) : 2;\n  let points = chunk(nums, chunkSize);\n  if (order === \"geojson\") {\n    points = points.map((pt) => reorder(pt));\n  }\n  return points;\n}\n\n// parse/LineString.js\nfunction LineString2(xml, { debug, order, raw } = {}) {\n  const tag = LineString(xml);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  const coords = posList2(inner, { debug, order, raw }) || coordinates2(inner, { debug, order, raw });\n  const result = {\n    type: \"LineString\",\n    coords\n  };\n  const srsName = (0, import_get_attribute4.default)(tag.outer, \"srsName\");\n  if (debug)\n    console.log(\"[geography-markup-language] srsName:\", srs);\n  if (srsName) {\n    result.srs = srsName;\n  }\n  return result;\n}\n\n// geometry/LineString.js\nfunction LineString3(xml, { format = \"default\" } = { format: \"default \" }) {\n  if (format === \"geojson\") {\n    const { coords, srs: srs2 } = LineString2(xml, { order: \"geojson\" });\n    const feature = {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"LineString\",\n        coordinates: coords\n      }\n    };\n    if (srs2) {\n      feature.properties.srsName = srs2;\n      feature.crs = {\n        type: \"name\",\n        properties: {\n          name: srs2\n        }\n      };\n    }\n    return feature;\n  } else {\n    const obj = LineString2(xml);\n    return obj;\n  }\n}\n\n// parse/Point.js\nvar import_get_attribute5 = __toESM(require_get_attribute(), 1);\n\n// enums/Point.js\nvar Point_default = [\"gml:Point\", \"Point\", \"gml:point\", \"point\"];\n\n// find/Points.js\nfunction Points(xml) {\n  return find(xml, Point_default);\n}\n\n// find/Point.js\nfunction Point(xml) {\n  return Points(xml)[0];\n}\n\n// parse/pos.js\nvar import_find_tag_by_name3 = __toESM(require_find_tag_by_name(), 1);\nfunction pos(xml, { order = \"default\", raw = false } = {}) {\n  const tag = (0, import_find_tag_by_name3.default)(xml, \"gml:pos\") || (0, import_find_tag_by_name3.default)(\"pos\");\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  let point = inner.trim().split(/[ ,]+/g);\n  if (!raw)\n    point = point.map((n) => Number(n));\n  if (order === \"geojson\")\n    point = reorder(point);\n  return point;\n}\n\n// parse/Point.js\nfunction Point2(xml, { debug, raw } = {}) {\n  const tag = Point(xml);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  const point = pos(inner, { debug, raw }) || (posList2(inner, { debug, raw }) || [])[0] || coordinates2(inner, { debug, raw });\n  if (!point || point.length === 0)\n    return;\n  const [y, x, z = null] = point;\n  return {\n    type: \"Point\",\n    srs: (0, import_get_attribute5.default)(tag.outer, \"srsName\") || null,\n    coord: point,\n    x,\n    y,\n    z\n  };\n}\n\n// geometry/Point.js\nfunction Point3(xml, { format = \"default\" } = { format: \"default\" }) {\n  const obj = Point2(xml);\n  if (!format || format === \"default\")\n    return obj;\n  const { x, y, srs: srs2 } = obj;\n  if (format === \"geojson\") {\n    const feature = {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [x, y]\n      }\n    };\n    if (srs2) {\n      feature.properties.srsName = srs2;\n      feature.crs = {\n        type: \"name\",\n        properties: {\n          name: srs2\n        }\n      };\n    }\n    return feature;\n  }\n}\n\n// parse/Polygon.js\nvar import_get_attribute7 = __toESM(require_get_attribute(), 1);\n\n// find/innerBoundaries.js\nfunction innerBoundaries(xml) {\n  return find(xml, [\"gml:innerBoundaryIs\", \"innerBoundaryIs\", \"gml:InnerBoundaryIs\", \"InnerBoundaryIs\", \"gml:innerboundaryis\", \"innerboundaryis\"]);\n}\n\n// find/interiors.js\nfunction interiors(xml) {\n  return find(xml, [\"gml:interior\", \"interior\", \"gml:Interior\", \"Interior\"]);\n}\n\n// enums/Polygon.js\nvar Polygon_default = [\"gml:Polygon\", \"polygon\", \"gml:polygon\", \"polygon\"];\n\n// find/Polygons.js\nfunction Polygon(xml) {\n  return find(xml, Polygon_default);\n}\n\n// find/Polygon.js\nfunction Polygon2(xml) {\n  return Polygon(xml)[0];\n}\n\n// find/exteriors.js\nfunction exteriors(xml) {\n  return find(xml, [\"gml:exterior\", \"exterior\", \"gml:Exterior\", \"Exterior\"]);\n}\n\n// find/exterior.js\nfunction exterior(xml) {\n  return exteriors(xml)[0];\n}\n\n// parse/LinearRing.js\nvar import_get_attribute6 = __toESM(require_get_attribute(), 1);\n\n// find/LinearRing.js\nfunction LinearRing(xml) {\n  return find(xml, [\"gml:LinearRing\", \"LinearRing\", \"gml:linearRing\", \"linearRing\", \"gml:linearring\", \"linearring\"])[0];\n}\n\n// parse/LinearRing.js\nfunction LinearRing2(xml, { debug, order = \"default\", raw } = {}) {\n  const tag = LinearRing(xml);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  const coordinatesTag = coordinates(inner);\n  if (coordinatesTag) {\n    return coordinates2(coordinatesTag.outer, { debug, order, raw });\n  }\n  const posListTag = posList(xml);\n  if (posListTag) {\n    return posList2(posListTag.outer, { debug, order, raw });\n  }\n  let nums = inner.trim().split(/[ ,\\t\\n]+/g);\n  if (!raw) {\n    if (debug)\n      console.log(\"[geography-markup-language] converting to numbers\");\n    nums = nums.map((n) => Number(n));\n  }\n  const srsDimension = (0, import_get_attribute6.default)(tag, \"srsDimension\");\n  const chunkSize = srsDimension ? Number(srsDimension) : 2;\n  let points = chunk(nums, chunkSize);\n  if (order === \"geojson\") {\n    points = points.map((pt) => reorder(pt));\n  }\n  return points;\n}\n\n// parse/exterior.js\nfunction exterior2(xml, { debug, order, raw } = {}) {\n  const tag = exterior(xml);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  return LinearRing2(inner, { debug, order, raw });\n}\n\n// find/innerBoundaryIs.js\nfunction innerBoundaries2(xml) {\n  return innerBoundaries(xml)[0];\n}\n\n// parse/innerBoundaryIs.js\nfunction innerBoundaryIs(xml, { debug, order, raw } = {}) {\n  const tag = innerBoundaries2(xml.outer);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  return LinearRing2(inner, { debug, order, raw });\n}\n\n// find/interior.js\nfunction interior(xml) {\n  return interiors(xml)[0];\n}\n\n// parse/interior.js\nfunction interior2(xml, { debug, order, raw } = {}) {\n  const tag = interior(xml);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  return LinearRing2(inner, { debug, order, raw });\n}\n\n// find/outerBoundaryIs.js\nfunction outerBoundaryIs(xml) {\n  return find(xml, [\"gml:outerBoundaryIs\", \"outerBoundaryIs\", \"gml:OuterBoundaryIs\", \"OuterBoundaryIs\", \"gml:outerboundaryis\", \"outerboundaryis\"])[0];\n}\n\n// parse/outerBoundaryIs.js\nfunction outerBoundaryIs2(xml, { debug, order, raw } = {}) {\n  const tag = outerBoundaryIs(xml);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  return LinearRing2(inner, { debug, order, raw });\n}\n\n// parse/Polygon.js\nfunction Polygon3(xml, { debug, order, raw } = {}) {\n  const tag = Polygon2(xml);\n  if (!tag)\n    return;\n  const { inner } = tag;\n  if (!inner)\n    return;\n  const exterior3 = exterior2(xml, { debug, order, raw }) || outerBoundaryIs2(xml, { debug, order, raw });\n  let holes = interiors(xml).map((interior3) => interior2(interior3, { debug, order, raw }));\n  if (holes.length === 0) {\n    holes = innerBoundaries(xml).map((boundary) => innerBoundaryIs(boundary, { debug, order, raw }));\n  }\n  const rings = [exterior3].concat(holes);\n  const result = {\n    type: \"Polygon\",\n    rings\n  };\n  const srsName = (0, import_get_attribute7.default)(tag.outer, \"srsName\");\n  if (debug)\n    console.log(\"[geography-markup-language] srsName:\", srs);\n  if (srsName) {\n    result.srs = srsName;\n  }\n  return result;\n}\n\n// geometry/Polygon.js\nfunction Polygon4(xml, { format = \"default\" } = {}) {\n  if (format === \"geojson\") {\n    const { rings, srs: srs2 } = Polygon3(xml, { order: \"geojson\" });\n    const feature = {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Polygon\",\n        coordinates: rings\n      }\n    };\n    if (srs2) {\n      feature.properties.srsName = srs2;\n      feature.crs = {\n        type: \"name\",\n        properties: {\n          name: srs2\n        }\n      };\n    }\n    return feature;\n  } else {\n    const obj = Polygon3(xml);\n    return obj;\n  }\n}\n\n// geometry/Geometry.js\nfunction Geometry(xml, { format = \"default\" } = { format: \"default\" }) {\n  const envelope3 = envelope(xml);\n  if (envelope3) {\n    const result = Envelope(envelope3.outer, { format });\n    if (result) {\n      return result;\n    }\n  }\n  const lineString = LineString(xml);\n  if (lineString) {\n    const result = LineString3(lineString.outer, { format });\n    if (result) {\n      return result;\n    }\n  }\n  const point = Point(xml);\n  if (point) {\n    const result = Point3(point.outer, { format });\n    if (result) {\n      return result;\n    }\n  }\n  const polygon = Polygon2(xml);\n  if (polygon) {\n    const result = Polygon4(polygon.outer, { format });\n    if (result) {\n      return result;\n    }\n  }\n}\n\n// utils/findAll.js\nvar import_find_tags_by_name2 = __toESM(require_find_tags_by_name(), 1);\nfunction find2(xml, names) {\n  let tags = [];\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    tags = tags.concat((0, import_find_tags_by_name2.default)(xml, name));\n  }\n  return tags;\n}\n\n// find/geometries.js\nvar GEOMETRY_TAG_NAMES;\nfunction geometries(xml) {\n  if (!GEOMETRY_TAG_NAMES)\n    GEOMETRY_TAG_NAMES = Envelope_default.concat(LineString_default).concat(Point_default).concat(Polygon_default);\n  return find2(xml, GEOMETRY_TAG_NAMES).map((tag) => tag.outer);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Envelope,\n  Geometry,\n  LineString,\n  Point,\n  Polygon,\n  findGeometries\n});\n", "\"use_strict\";\n\nconst bboxArray = require(\"./bbox-array.js\");\nconst densePolygon = require(\"./dense-polygon.js\");\n\nfunction reproject(bbox, fwd, { async = false, density, nan_strategy = \"throw\" } = {}) {\n  const polygon = densePolygon(bbox, { density });\n  const ring = polygon[0];\n  const reprojected = ring.map(pt => fwd(pt));\n  if (async) {\n    return Promise.all(reprojected).then(points => bboxArray(points, { nan_strategy }));\n  } else {\n    return bboxArray(reprojected, { nan_strategy });\n  }\n}\n\nmodule.exports = reproject;\nmodule.exports.default = reproject;\n", "const merge = require(\"proj4-merge\");\nconst proj4 = require(\"proj4-fully-loaded\");\nconst bboxMerge = require(\"bbox-fns/merge.js\");\nconst bboxSplit = require(\"bbox-fns/split.js\");\nconst reproject = require(\"bbox-fns/reproject.js\");\n\nif (typeof merge !== \"function\") {\n  console.warn(\"[reproject-bbox] failed to import proj4-merge\");\n}\n\nconst CUSTOM_PROJECTION_ERROR =\n  \"[reproject-bbox] You passed in a value of 32767 for {{%s}}, which means a custom non-standard projection.  Please pass in a Well-Known Text or PROJ4JS String instead.\";\n\nfunction reprojectBoundingBox({ bbox, debug_level = 0, density, from, nan_strategy = \"throw\", proj4: _proj4, split = true, to }) {\n  if (from === 32767) throw new Error(CUSTOM_PROJECTION_ERROR.replace(\"{{%s}}\", \"from\"));\n  if (to === 32767) throw new Error(CUSTOM_PROJECTION_ERROR.replace(\"{{%s}}\", \"to\"));\n\n  if (typeof from === \"number\") from = \"EPSG:\" + from;\n  if (typeof to === \"number\") to = \"EPSG:\" + to;\n\n  const instances = [_proj4, proj4];\n  if (typeof window === \"object\" && window.proj4) instances.push(window.proj4);\n  if (typeof self === \"object\" && self.proj4) instances.push(self.proj4);\n\n  const proj = merge(instances);\n\n  const fwd = proj(from, to).forward;\n\n  const bboxes = split ? bboxSplit(bbox, { x: [0], y: [0] }) : [bbox];\n  if (debug_level >= 2) console.log(\"[reproject-bbox] bboxes:\", bboxes);\n\n  const bboxes_reprojected = bboxes.map((bbox) => {\n    return reproject(bbox, fwd, { density, nan_strategy });\n  });\n  if (debug_level >= 2) console.log(\"[reproject-bbox] bboxes_reprojected:\", bboxes_reprojected);\n\n  const merged = bboxMerge(bboxes_reprojected);\n\n  return merged;\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return reprojectBoundingBox;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = reprojectBoundingBox;\n  module.exports.default = reprojectBoundingBox;\n}\n\nif (typeof window === \"object\") {\n  window.reprojectBoundingBox = reprojectBoundingBox;\n}\n\nif (typeof self === \"object\") {\n  self.reprojectBoundingBox = reprojectBoundingBox;\n}\n", "\"use strict\";\n\n/**\n * @name bboxArea\n * @param {Array} bbox - bounding box in form [xmin, ymin, xmax, ymax]\n * @return {Number} area of the bounding box\n */\nfunction bboxArea([xmin, ymin, xmax, ymax]) {\n  return (xmax - xmin) * (ymax - ymin);\n}\n\nmodule.exports = bboxArea;\nmodule.exports.default = bboxArea;\n", "\"use strict\";\n\n/**\n * @name bboxPoint\n * @param {Array} point - a point in form [x, y] or [longitude, latitude]\n * @return {bbox} a bbox of zero width and height in form [xmin, ymin, xmax, ymax]\n */\nfunction bboxPoint([x, y]) {\n  return [x, y, x, y];\n}\n\nmodule.exports = bboxPoint;\nmodule.exports.default = bboxPoint;\n", "\"use strict\";\n\n/**\n * @name bboxSize\n * @param {Array} bbox - bounding box in form [xmin, ymin, xmax, ymax]\n * @return {bbox} size of the bounding box in form [width, height]\n */\nfunction bboxSize([xmin, ymin, xmax, ymax]) {\n  return [xmax - xmin, ymax - ymin];\n}\n\nmodule.exports = bboxSize;\nmodule.exports.default = bboxSize;\n", "\"use_strict\";\n\n// check if a bounding box contains a point\nfunction booleanContainsPoint([xmin, ymin, xmax, ymax], [x, y], { exclusive = false } = { exclusive: false }) {\n  if (exclusive) {\n    // exclude points on an exact edge of the bounding box\n    return y < ymax && y > ymin && x < xmax && x > xmin;\n  } else {\n    return y >= ymin && y <= ymax && x >= xmin && x <= xmax;\n  }\n}\n\nmodule.exports = booleanContainsPoint;\nmodule.exports.default = booleanContainsPoint;\n", "const VALID_ORDERING = [\n  // clockwise\n  \"right -> down -> left -> up\",\n  \"down -> left -> up -> right\",\n  \"left -> up -> right -> down\",\n  \"up -> right -> down -> left\",\n\n  // counter-clockwise\n  \"down -> right -> up -> left\",\n  \"right -> up -> left -> down\",\n  \"up -> left -> down -> right\",\n  \"left -> down -> right -> up\"\n];\n\nfunction booleanRectangle(coords, { debug = 0 } = { debug: 0 }) {\n  if (!Array.isArray(coords)) {\n    if (debug) {\n      console.log(\"[bbox-fns/booleanRectangle] coords is not an array\");\n    }\n    return false;\n  }\n\n  // unwrap ring from polygon\n  if (coords.length === 1) coords = coords[0];\n\n  // if multi-polygon, may need to unwrap twice\n  if (coords.length === 1) coords = coords[0];\n\n  if (!coords.every(pt => Array.isArray(pt) && pt.every(n => typeof n === \"number\"))) {\n    if (debug) console.log(\"[bbox-fns/booleanRectangle] invalid points\");\n    return false;\n  }\n\n  // first and last coordinate should be the same\n  if (JSON.stringify(coords[0]) !== JSON.stringify(coords[coords.length - 1])) {\n    if (debug) console.log(\"[bbox-fns/booleanRectangle] first and last coordinates not equal\");\n    return false;\n  }\n\n  let order = [];\n  for (let i = 1; i < coords.length; i++) {\n    const [x0, y0] = coords[i - 1];\n    const [x1, y1] = coords[i];\n    const vertical = x0 === x1;\n    const horizontal = y0 === y1;\n\n    // if both true or both false\n    if (vertical === horizontal) {\n      if (debug) console.log(\"[bbox-fns/booleanRectangle] invalid angle\");\n      return false;\n    }\n\n    let direction;\n    if (vertical) {\n      direction = y1 > y0 ? \"up\" : \"down\";\n    } else if (horizontal) {\n      direction = x1 > x0 ? \"right\" : \"left\";\n    }\n\n    if (direction !== order[order.length - 1]) {\n      if (order.length === 4) {\n        if (debug) console.log(\"[bbox-fns/booleanRectangle] more than 4 turns\");\n        return false;\n      }\n      order.push(direction);\n    }\n  }\n\n  order = order.join(\" -> \");\n  if (debug) console.log(\"[bbox-fns/booleanRectangle] order: \" + order);\n\n  if (VALID_ORDERING.indexOf(order) === -1) {\n    if (debug) console.log(\"[bbox-fns/booleanRectangle] invalid order\");\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = booleanRectangle;\nmodule.exports.default = booleanRectangle;\n", "\"use_strict\";\n\nconst merge = require(\"./merge.js\");\n\nfunction calc(geom) {\n  if (geom.geometry) geom = geom.geometry;\n  if (geom.coordinates) geom = geom.coordinates;\n\n  if (geom.paths) geom = geom.paths; // ArcGIS Polyline\n  if (geom.points) geom = geom.points; // ArcGIS Multipoint\n  if (geom.rings) geom = geom.rings; // ArcGIS Polygon\n\n  // GeoJSON FeatureCollection\n  if (Array.isArray(geom.features)) {\n    return merge(geom.features.map(calc));\n  }\n\n  // GeoJSON GeometryCollection\n  if (Array.isArray(geom.geometries)) {\n    return merge(geom.geometries.map(calc));\n  }\n\n  if (Array.isArray(geom) && Array.isArray(geom[0]) && Array.isArray(geom[0][0])) {\n    return merge(geom.map(calc));\n  }\n\n  // array of [x, y] coordinate pairs\n  if (Array.isArray(geom) && Array.isArray(geom[0]) && typeof geom[0][0] === \"number\") {\n    const [x, y] = geom[0];\n    let xmin = x;\n    let ymin = y;\n    let xmax = x;\n    let ymax = y;\n    geom.forEach(([px, py]) => {\n      if (px < xmin) xmin = px;\n      if (px > xmax) xmax = px;\n      if (py < ymin) ymin = py;\n      if (py > ymax) ymax = py;\n    });\n    return [xmin, ymin, xmax, ymax];\n  }\n\n  // point\n  if (Array.isArray(geom) && (geom.length === 2 || geom.length === 3) && typeof geom[0] === \"number\") {\n    const [x, y] = geom;\n    return [x, y, x, y];\n  }\n\n  // ArcGIS Point\n  if (typeof geom.x === \"number\" && typeof geom.y === \"number\") {\n    const { x, y } = geom;\n    return [x, y, x, y];\n  }\n\n  if ([\"xmin\", \"xmax\", \"ymin\", \"ymax\"].every(k => typeof geom[k] === \"number\")) {\n    return [geom.xmin, geom.ymin, geom.xmax, geom.ymax];\n  }\n}\n\nmodule.exports = calc;\nmodule.exports.default = calc;\n", "function dedupe(arr) {\n  const strs = [];\n  for (let i = 0; i < arr.length; i++) {\n    const it = arr[i];\n    const s = JSON.stringify(it);\n    if (strs.indexOf(s) === -1) {\n      strs.push(s);\n    }\n  }\n  return strs.map(s => JSON.parse(s));\n}\n\nmodule.exports = dedupe;\nmodule.exports.default = dedupe;\n", "\"use_strict\";\n\nconst dedupe = require(\"./dedupe.js\");\n\nfunction flatten(arr) {\n  const out = [];\n  for (let a = 0; a < arr.length; a++) {\n    const it = arr[a];\n    for (let i = 0; i < it.length; i++) {\n      out.push(it[i]);\n    }\n  }\n  return out;\n}\n\nfunction calcAll(geom) {\n  if (geom.geometry) geom = geom.geometry;\n  if (geom.coordinates) geom = geom.coordinates;\n\n  if (geom.paths) geom = geom.paths; // ArcGIS Polyline\n  if (geom.points) geom = geom.points; // ArcGIS Multipoint\n  if (geom.rings) geom = geom.rings; // ArcGIS Polygon\n\n  // GeoJSON FeatureCollection\n  if (Array.isArray(geom.features)) {\n    return dedupe(flatten(geom.features.map(calcAll)));\n  }\n\n  // GeoJSON GeometryCollection\n  if (Array.isArray(geom.geometries)) {\n    return dedupe(flatten(geom.geometries.map(calcAll)));\n  }\n\n  if (Array.isArray(geom) && Array.isArray(geom[0]) && Array.isArray(geom[0][0])) {\n    return dedupe(flatten(geom.map(calcAll)));\n  }\n\n  // array of [x, y] coordinate pairs\n  if (Array.isArray(geom) && Array.isArray(geom[0]) && typeof geom[0][0] === \"number\") {\n    const [x, y] = geom[0];\n    let xmin = x;\n    let ymin = y;\n    let xmax = x;\n    let ymax = y;\n    geom.forEach(([px, py]) => {\n      if (px < xmin) xmin = px;\n      if (px > xmax) xmax = px;\n      if (py < ymin) ymin = py;\n      if (py > ymax) ymax = py;\n    });\n    return [[xmin, ymin, xmax, ymax]];\n  }\n\n  // point\n  if (Array.isArray(geom) && (geom.length === 2 || geom.length === 3) && typeof geom[0] === \"number\") {\n    const [x, y] = geom;\n    return [[x, y, x, y]];\n  }\n\n  // ArcGIS Point\n  if (typeof geom.x === \"number\" && typeof geom.y === \"number\") {\n    const { x, y } = geom;\n    return [[x, y, x, y]];\n  }\n\n  if ([\"xmin\", \"xmax\", \"ymin\", \"ymax\"].every(k => typeof geom[k] === \"number\")) {\n    return [[geom.xmin, geom.ymin, geom.xmax, geom.ymax]];\n  }\n}\n\nmodule.exports = calcAll;\nmodule.exports.default = calcAll;\n", "\"use strict\";\n\n/**\n * @name grid\n * @param {Array} bbox - bounding box in form [xmin, ymin, xmax, ymax]\n * @return {Array<bbox>} array of bounding boxes\n */\nfunction grid([xmin, ymin, xmax, ymax], div) {\n  if (typeof div === \"number\") div = [div, div];\n  else if (typeof div === \"undefined\") div = [2, 2];\n\n  const [columns, rows] = div;\n\n  const height = ymax - ymin;\n  const width = xmax - xmin;\n\n  const cells = [];\n\n  const cell_width = width / columns;\n  const cell_height = height / rows;\n\n  for (let r = 0; r < rows; r++) {\n    const cell_ymin = ymin + r * cell_height;\n    const cell_ymax = r === rows.length - 1 ? ymax : cell_ymin + cell_height;\n    for (let c = 0; c < columns; c++) {\n      const cell_xmin = xmin + c * cell_width;\n      const cell_xmax = c === columns.length - 1 ? xmax : cell_xmin + cell_width;\n      cells.push([cell_xmin, cell_ymin, cell_xmax, cell_ymax]);\n    }\n  }\n\n  return cells;\n}\n\nmodule.exports = grid;\nmodule.exports.default = grid;\n", "\"use_strict\";\n\nconst booleanIntersects = require(\"./boolean-intersects.js\");\n\nfunction intersect(a, b) {\n  const [axmin, aymin, axmax, aymax] = a;\n  const [bxmin, bymin, bxmax, bymax] = b;\n\n  if (!booleanIntersects(a, b)) return null;\n\n  return [Math.max(axmin, bxmin), Math.max(aymin, bymin), Math.min(axmax, bxmax), Math.min(aymax, bymax)];\n}\n\nmodule.exports = intersect;\nmodule.exports.default = intersect;\n", "\"use_strict\";\n\nconst add = require(\"preciso/add.js\");\nconst divide = require(\"preciso/divide.js\");\nconst multiply = require(\"preciso/multiply.js\");\nconst subtract = require(\"preciso/subtract.js\");\n\n/**\n *\n * @param {Array<String>} bbox - [xmin, ymin, xmax, ymax]\n * @param {Object} options\n * @param {Number|[Number,Number]} options.density - number of points to add to each side\n * @returns Array<String> polygon in form [ring]\n */\nfunction preciseDensePolygon(bbox, { density = 0 } = { density: 0 }) {\n  bbox = bbox.map(n => n.toString());\n\n  let [xmin, ymin, xmax, ymax] = bbox;\n\n  if (typeof density === \"number\" || typeof density === \"string\") density = [density, density];\n\n  density = density.map(n => n.toString());\n\n  const [x_density, y_density] = density;\n\n  const height = subtract(ymax, ymin);\n  const width = subtract(xmax, xmin);\n\n  const ring = [];\n\n  // left-side, bottom-side, right-side, top-side\n  const x_distance = divide(width, add(x_density, \"1\"));\n  const y_distance = divide(height, add(y_density, \"1\"));\n\n  // add top left corner\n  ring.push([xmin, ymax]);\n\n  // left-edge\n  for (let i = 1; i <= y_density; i++) {\n    ring.push([xmin, subtract(ymax, multiply(i.toString(), y_distance))]);\n  }\n\n  // add bottom left corner\n  ring.push([xmin, ymin]);\n\n  // bottom-edge\n  for (let i = 1; i <= x_density; i++) {\n    ring.push([add(xmin, multiply(i.toString(), x_distance)), ymin]);\n  }\n\n  // add bottom right corner\n  ring.push([xmax, ymin]);\n\n  // right-edge\n  for (let i = 1; i <= y_density; i++) {\n    ring.push([xmax, add(ymin, multiply(i.toString(), y_distance))]);\n  }\n\n  // add top right corner\n  ring.push([xmax, ymax]);\n\n  // top-edge\n  for (let i = 1; i <= x_density; i++) {\n    ring.push([subtract(xmax, multiply(i.toString(), x_distance)), ymax]);\n  }\n\n  // add top left corner (repeats according to GeoJSON spec)\n  ring.push([xmin, ymax]);\n\n  return [ring];\n}\n\nmodule.exports = preciseDensePolygon;\nmodule.exports.default = preciseDensePolygon;\n", "\"use strict\";\n\nconst divide = require(\"preciso/divide.js\");\n\n/**\n * @name divide\n * @param {Array} bbox - bounding box in form [xmin, ymin, xmax, ymax]\n * @param {[number, number]} divisors - divisors in form [dx, dy] or [number] or just a number\n * @return {bbox} bbox\n */\nfunction preciseDivide([xmin, ymin, xmax, ymax], div, { ellipsis = false, max_decimal_digits = 100 } = {}) {\n  const [dx, dy] = typeof div === \"string\" || typeof div === \"number\" ? [div, div] : div.length === 1 ? [div[0].toString(), div[0].toString()] : div;\n  const opts = { ellipsis, max_decimal_digits };\n  const dxstr = dx.toString();\n  const dystr = dy.toString();\n  return [divide(xmin.toString(), dxstr, opts), divide(ymin.toString(), dystr, opts), divide(xmax.toString(), dxstr, opts), divide(ymax.toString(), dystr, opts)];\n}\n\nmodule.exports = preciseDivide;\nmodule.exports.default = preciseDivide;\n", "\"use strict\";\n\nconst clean = require(\"./clean.js\");\nconst compare_positive = require(\"./compare_positive.js\");\n\nfunction compare(a, b) {\n  a = clean(a);\n  b = clean(b);\n\n  const a_is_positive = a[0] !== \"-\";\n  const b_is_positive = b[0] !== \"-\";\n\n  if (a_is_positive) {\n    if (b_is_positive) {\n      return compare_positive(a, b);\n    } else {\n      return \">\";\n    }\n  } else if (b_is_positive) {\n    return \"<\";\n  } else {\n    return compare_positive(b.substring(1), a.substring(1));\n  }\n}\n\nmodule.exports = compare;\nmodule.exports.default = compare;\n", "\"use strict\";\n\nconst compare = require(\"preciso/compare.js\");\n\n/**\n * @name bboxArray\n * @description assumes points are stringified as [string, string]\n * @param {Array} points - an array (aka ring) of points\n * @return {bbox} bbox in form [xmin, ymin, xmax, ymax]\n */\nfunction bboxArray(points) {\n  const count = points.length;\n  const [x, y] = points[0];\n  let xmin = x;\n  let xmax = x;\n  let ymin = y;\n  let ymax = y;\n  for (let i = 1; i < count; i++) {\n    const [x, y] = points[i];\n    if (compare(x, xmin) === \"<\") xmin = x;\n    else if (compare(x, xmax) === \">\") xmax = x;\n    if (compare(y, ymin) === \"<\") ymin = y;\n    else if (compare(y, ymax) === \">\") ymax = y;\n  }\n  return [xmin, ymin, xmax, ymax];\n}\n\nmodule.exports = bboxArray;\nmodule.exports.default = bboxArray;\n", "\"use_strict\";\n\nconst preciseBboxArray = require(\"./bbox-array.js\");\nconst preciseDensePolygon = require(\"./dense-polygon.js\");\n\nfunction preciseReproject(bbox, reproject, { async = false, density } = {}) {\n  const polygon = preciseDensePolygon(bbox, { density });\n  const ring = polygon[0];\n  const reprojected = ring.map(pt => reproject(pt));\n  if (async) {\n    return Promise.all(reprojected).then(points => preciseBboxArray(points));\n  } else {\n    return preciseBboxArray(reprojected);\n  }\n}\n\nmodule.exports = preciseReproject;\nmodule.exports.default = preciseReproject;\n", "\"use strict\";\n\n/**\n * @name scale\n * @param {Array} bbox - bounding box in form [xmin, ymin, xmax, ymax]\n * @param {[number, number]} scale - scale factor in form [sx, sy] or [number] or just a number\n * @return {bbox} bbox\n */\nfunction scale([xmin, ymin, xmax, ymax], scl) {\n  const [sx, sy] = typeof scl === \"number\" ? [scl, scl] : scl.length === 1 ? [scl[0], scl[0]] : scl;\n  return [xmin * sx, ymin * sy, xmax * sx, ymax * sy];\n}\n\nmodule.exports = scale;\nmodule.exports.default = scale;\n", "\"use strict\";\n\n/**\n * @name validate\n * @param {Array} bbox - bounding box in form [xmin, ymin, xmax, ymax]\n * @return {Boolean} valid - true or false\n */\nfunction validate(bbox) {\n  if (!Array.isArray(bbox)) return false;\n\n  if (bbox.length !== 4) return false;\n\n  if (bbox.some(n => typeof n !== \"number\")) return false;\n\n  const [xmin, ymin, xmax, ymax] = bbox;\n  if (xmin > xmax) return false;\n  if (ymin > ymax) return false;\n\n  return true;\n}\n\nmodule.exports = validate;\nmodule.exports.default = validate;\n", "const compare = require(\"preciso/compare.js\");\n\nfunction preciseValidate(bbox) {\n  if (!Array.isArray(bbox)) return false;\n\n  if (bbox.length !== 4) return false;\n\n  if (bbox.some(n => typeof n !== \"string\")) return false;\n\n  const [xmin, ymin, xmax, ymax] = bbox;\n  if (compare(xmin, xmax) === \">\") return false;\n  if (compare(ymin, ymax) === \">\") return false;\n\n  return true;\n}\n\nmodule.exports = preciseValidate;\nmodule.exports.default = preciseValidate;\n", "\"use_strict\";\n\nconst bboxArea = require(\"./bbox-area.js\");\nconst bboxArray = require(\"./bbox-array.js\");\nconst bboxPoint = require(\"./bbox-point.js\");\nconst bboxSize = require(\"./bbox-size.js\");\nconst booleanContains = require(\"./boolean-contains.js\");\nconst booleanContainsPoint = require(\"./boolean-contains-point.js\");\nconst booleanIntersects = require(\"./boolean-intersects.js\");\nconst booleanRectangle = require(\"./boolean-rectangle.js\");\nconst calc = require(\"./calc.js\");\nconst calcAll = require(\"./calc-all.js\");\nconst densePolygon = require(\"./dense-polygon.js\");\nconst grid = require(\"./grid.js\");\nconst intersect = require(\"./intersect.js\");\nconst merge = require(\"./merge.js\");\nconst polygon = require(\"./polygon.js\");\nconst preciseDensePolygon = require(\"./precise/dense-polygon.js\");\nconst preciseDivide = require(\"./precise/divide.js\");\nconst preciseReproject = require(\"./precise/reproject.js\");\nconst reproject = require(\"./reproject.js\");\nconst scale = require(\"./scale.js\");\nconst shift = require(\"./shift.js\");\nconst sort = require(\"./sort.js\");\nconst split = require(\"./split.js\");\nconst validate = require(\"./validate.js\");\nconst preciseValidate = require(\"./precise/validate.js\");\nconst union = require(\"./union.js\");\nconst unwrap = require(\"./unwrap.js\");\n\nconst bboxfns = {\n  bboxArea,\n  bboxArray,\n  bboxPoint,\n  bboxSize,\n  booleanContains,\n  booleanContainsPoint,\n  booleanIntersects,\n  booleanRectangle,\n  calc,\n  calcAll,\n  densePolygon,\n  grid,\n  intersect,\n  merge,\n  polygon,\n  preciseDensePolygon,\n  preciseDivide,\n  preciseReproject,\n  reproject,\n  scale,\n  shift,\n  split,\n  validate,\n  preciseValidate,\n  sort,\n  union,\n  unwrap\n};\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return bboxfns;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = bboxfns;\n}\n\nif (typeof window === \"object\") {\n  window.bboxfns = bboxfns;\n}\n\nif (typeof self === \"object\") {\n  self.bboxfns = bboxfns;\n}\n", "\"use strict\";\n// categorize line segments that intersect a horizontal line\n// categorize as through or not\nmodule.exports = function categorizeIntersection(segments) {\n  try {\n    let through, xmin, xmax;\n\n    const n = segments.length;\n\n    const first = segments[0];\n\n    if (n === 1) {\n      through = true;\n      xmin = first.xmin;\n      xmax = first.xmax;\n    } /* n > 1 */ else {\n      const last = segments[n - 1];\n      through = first.direction === last.direction;\n      xmin = Math.min(first.xmin, last.xmin);\n      xmax = Math.max(first.xmax, last.xmax);\n    }\n\n    if (xmin === undefined || xmax === undefined || through === undefined || isNaN(xmin) || isNaN(xmax)) {\n      throw Error(\"categorizeIntersection failed with xmin\", xmin, \"and xmax\", xmax);\n    }\n\n    return { xmin, xmax, through };\n  } catch (error) {\n    console.error(\"[categorizeIntersection] segments:\", segments);\n    console.error(\"[categorizeIntersection]\", error);\n    throw error;\n  }\n};\n", "\"use strict\";\n\nmodule.exports = function clamp(n, min, max) {\n  if (n < min) return min;\n  else if (n > max) return max;\n  return n;\n};\n", "\"use strict\";\n\nmodule.exports = function cluster(items, newClusterTest) {\n  try {\n    const numberOfItems = items.length;\n    const clusters = [];\n    let cluster = [];\n    for (let i = 0; i < numberOfItems; i++) {\n      const item = items[i];\n      cluster.push(item);\n      if (newClusterTest(item)) {\n        clusters.push(cluster);\n        cluster = [];\n      }\n    }\n\n    if (cluster.length > 0) clusters.push(cluster);\n\n    return clusters;\n  } catch (error) {\n    console.error(\"[cluster]:\", error);\n  }\n};\n", "\"use strict\";\n\nconst cluster = require(\"./cluster.js\");\n\nmodule.exports = function clusterLineSegments(lineSegments, numberOfEdges, debug = false) {\n  try {\n    const clusters = cluster(lineSegments, s => s.endsOffLine);\n\n    const numberOfClusters = clusters.length;\n\n    if (numberOfClusters >= 2) {\n      const firstCluster = clusters[0];\n      const firstSegment = firstCluster[0];\n      const lastCluster = clusters[clusters.length - 1];\n      const lastSegment = lastCluster[lastCluster.length - 1];\n\n      // determine if the last segment should be added to the first\n      if (lastSegment.last_edge_in_ring && firstSegment.index === 0 && lastSegment.endsOnLine) {\n        clusters[0] = clusters.pop().concat(firstCluster);\n      }\n    }\n\n    return clusters;\n  } catch (error) {\n    console.error(\"[clusterLineSegments]\", error);\n  }\n};\n", "\"use strict\";\n\nconst getDepth = require(\"get-depth\");\n\n// call callback function for each polygon in geojson\nmodule.exports = function eachPolygon(geojson, callback) {\n  if (geojson.type === \"FeatureCollection\") {\n    geojson.features.forEach(feature => eachPolygon(feature, callback));\n  } else if (geojson.type === \"GeometryCollection\") {\n    geojson.geometries.forEach(geometry => eachPolygon(geometry, callback));\n  } else if (geojson.type === \"Feature\") {\n    eachPolygon(geojson.geometry, callback);\n  } else if (geojson.type === \"Polygon\") {\n    eachPolygon(geojson.coordinates, callback);\n  } else if (geojson.type === \"MultiPolygon\") {\n    geojson.coordinates.forEach(polygon => {\n      callback(polygon);\n    });\n  } else if (Array.isArray(geojson)) {\n    const depth = getDepth(geojson);\n    if (depth === 4) {\n      geojson.forEach(polygon => {\n        callback(polygon);\n      });\n    } else if (depth === 3) {\n      callback(geojson);\n    } else if (depth === 2) {\n      callback([geojson]);\n    }\n  }\n};\n", "\"use strict\";\n\nconst eachPolygon = require(\"./each-polygon.js\");\n\nmodule.exports = function getPolygons(geojson) {\n  const polygons = [];\n  eachPolygon(geojson, polygon => polygons.push(polygon));\n  return polygons;\n};\n", "/**\n * @name mergeConsecutive\n * @description merges integer ranges if they touch.  ranges that are within 1 of each other count as consecutive and touching\n * @param {Array<Range>} ranges \n * @returns {Array<Range>} ranges\n */\nmodule.exports = function mergeConsecutive(ranges) {\n  const numberOfRanges = ranges.length;\n\n  if (numberOfRanges === 0) return [];\n\n  const firstRange = ranges[0];\n  let previousEnd = firstRange[1];\n  const result = [firstRange];\n  for (let i = 1; i < numberOfRanges; i++) {\n    const tempRange = ranges[i];\n    const [start, end] = tempRange;\n    if (start <= previousEnd + 1) {\n      result[result.length - 1][1] = Math.max(previousEnd, end);\n    } else {\n      result.push(tempRange);\n    }\n    previousEnd = end;\n  }\n  return result;\n};\n", "/**\n * @name compare\n * @description compare two ranges, sorting from left to right (smaller to larger) by left edge, then right edge\n * @param {Range} a \n * @param {Range} b \n * @returns {Number} comparison, which can be -1, 1, or zero\n */\nmodule.exports = function compare (a, b) {\n  return Math.sign(a[0] - b[0]) || Math.sign(a[1] - b[1]);\n}\n", "const compare = require(\"./compare.js\");\n\n/**\n * @name sort\n * @description sorts the given ranges and returns them.  this mutates the original input.\n * @param {Array<Range>} ranges\n * @returns {Array<Range>} sorted ranges\n */\nmodule.exports = function sort(ranges) {\n  return ranges.sort(compare);\n};\n", "/**\n * @name overlaps\n * @description check if two ranges overlap\n * @param {Range} a \n * @param {Range} b \n * @returns {Boolean} result\n */\nmodule.exports = function overlaps(a, b) {\n  if (!Array.isArray(a)) throw new Error(\"[overlaps] a is not an array\");\n  if (!Array.isArray(b)) throw new Error(\"[overlaps] b is not an array\");  \n  return a[0] <= b[1] && b[0] <= a[1];\n};\n", "const rangeOverlap = require(\"./overlaps.js\");\n\nmodule.exports = function cut(range, hole) {\n  if (!Array.isArray(range)) throw new Error(\"[cut] range is not an array: \" + JSON.stringify(range));\n\n  if (hole === undefined) return [range];\n\n  if (!Array.isArray(hole)) throw new Error(\"[cut] hole is not an array:\" + JSON.stringify(hole));  \n\n  if (!rangeOverlap(range, hole)) return [range];\n\n  const result = [];\n\n  // check if left-side extends past hole\n  if (range[0] < hole[0]) result.push([range[0], hole[0] - 1]);\n\n  // check if right-side extends past hole\n  if (range[1] > hole[1]) result.push([hole[1] + 1, range[1]]);\n\n  return result;\n};\n", "const rangeCut = require(\"./cut.js\");\n\nmodule.exports = function carve(insides, holes) {\n  let results = insides;\n  holes.forEach(hole => {\n    results = results.map(pc => rangeCut(pc, hole)).flat();\n  });\n  return results;\n}\n", "\"use strict\";\n\n// This function takes in an array with an even number of elements and\n// returns an array that couples every two consecutive elements;\nmodule.exports = function couple(array) {\n  const couples = [];\n  const lengthOfArray = array.length;\n  for (let i = 0; i < lengthOfArray; i += 2) {\n    couples.push([array[i], array[i + 1]]);\n  }\n  return couples;\n};\n", "\"use strict\";\n\nmodule.exports = function eachPair(arr, callback) {\n  for (let i = 1; i < arr.length; i++) {\n    const a = arr[i - 1];\n    const b = arr[i];\n    callback([a, b], i - 1);\n  }\n};\n", "// This function takes in an array of number pairs and combines where there's overlap\nmodule.exports = function mergeRanges(ranges) {\n  const numberOfRanges = ranges.length;\n\n  if (numberOfRanges > 0) {\n    // Sort ranges by start, and if equal, by end\n    ranges.sort((a, b) => a[0] - b[0] || a[1] - b[1]);\n\n    const result = [];\n    let [currentStart, currentEnd] = ranges[0];\n\n    for (let i = 1; i < numberOfRanges; i++) {\n      const [start, end] = ranges[i];\n\n      // If the current range overlaps or is contiguous with the previous one\n      if (start <= currentEnd) {\n        currentEnd = Math.max(currentEnd, end); // Extend the range\n      } else {\n        // Push the current range to the result and start a new one\n        result.push([currentStart, currentEnd]);\n        currentStart = start;\n        currentEnd = end;\n      }\n    }\n\n    // Push the last range\n    result.push([currentStart, currentEnd]);\n\n    return result;\n  }\n};\n", "\"use strict\";\n\n/**\n * @name partition\n * @description break items into two groups based on\n * whether they pass or fail a provided filter function\n * @param {Array} array\n * @param {Function} filter function\n * @returns {Array} partitioned items - [array_passed, array_unpassed]\n */\nmodule.exports = function partition(array, filter) {\n  const passed = [];\n  const unpassed = [];\n  const len = array.length;\n  for (let i = 0; i < len; i++) {\n    const item = array[i];\n    if (filter(item)) passed.push(item);\n    else unpassed.push(item);\n  }\n  return [passed, unpassed];\n};\n", "\"use strict\";\n\n/**\n * @name roundDown\n * @description like Math.round, but numbers in the middle are rounded down not up\n * @param {Number} n\n * @returns {Number} rounded number\n */\nmodule.exports = function roundDown(n) {\n  return -1 * Math.round(-1 * n);\n};\n", "\"use strict\";\n\nconst roundDown = require(\"./round-down.js\");\n\n/**\n * @name prepareSnap\n * @description snap horizontal range in crs to model space\n * @private\n * @param {Number} raster_xmin\n * @param {Number} pixel_width\n * @return {([Number, Number]) => [Number, Number]}\n */\nmodule.exports = function prepareSnap(raster_xmin, pixel_width) {\n  return ([xmin, xmax]) => {\n    // use roundDown so 1.5 is rounded to 1 not 2\n    xmin = roundDown((xmin - raster_xmin) / pixel_width);\n    if (xmin === -0) xmin = 0;\n\n    xmax = Math.round((xmax - raster_xmin) / pixel_width);\n    if (xmax === -0) xmax = 0;\n\n    return [xmin, xmax];\n  };\n};\n", "\"use strict\";\nconst categorizeIntersection = require(\"./categorize-intersection.js\");\nconst clamp = require(\"./clamp.js\");\nconst couple = require(\"./couple.js\");\nconst clusterLineSegments = require(\"./cluster-line-segments.js\");\nconst eachPair = require(\"./each-pair.js\");\nconst mergeRanges = require(\"./range/merge.js\");\nconst partition = require(\"./partition.js\");\nconst prepareSnap = require(\"./prepare-snap.js\");\n\nmodule.exports = function calculateCore({\n  debug_level = 0,\n  raster_bbox,\n  raster_height, // number of rows of pixels in the raster\n  raster_width, // number of columns of pixels in the raster\n  pixel_height,\n  pixel_width,\n  ring, // array of points\n  per_pixel,\n  per_row_segment\n}) {\n  const [raster_xmin, raster_ymin, raster_xmax, raster_ymax] = raster_bbox;\n\n  // iterate through the list of polygon vertices, convert them to\n  // lines, and compute the intersections with each image row\n  const intersectionsByRow = [];\n  for (let i = 0; i < raster_height; i++) intersectionsByRow.push([]);\n\n  eachPair(ring, (edge, iedge) => {\n    const [startPoint, endPoint] = edge;\n    const [x1, y1] = startPoint;\n    const [x2, y2] = endPoint;\n\n    const direction = Math.sign(y2 - y1);\n    const horizontal = y1 === y2;\n    const vertical = x1 === x2;\n    const slope = (y2 - y1) / (x2 - x1);\n\n    const edgeY = y1;\n\n    const edgeYMin = Math.min(y1, y2);\n    const edgeYMax = Math.max(y1, y2);\n\n    let startLng, startLat, endLat, endLng;\n    if (x1 < x2) {\n      [startLng, startLat] = startPoint;\n      [endLng, endLat] = endPoint;\n    } else {\n      [startLng, startLat] = endPoint;\n      [endLng, endLat] = startPoint;\n    }\n\n    if (startLng === undefined) throw Error(\"startLng is \" + startLng);\n\n    // find the y values in the image coordinate space\n    const imageY1 = Math.round((raster_bbox[3] - 0.5 * pixel_height - startLat) / pixel_height);\n    const imageY2 = Math.round((raster_bbox[3] - 0.5 * pixel_height - endLat) / pixel_height);\n\n    // make sure to set the start and end points so that we are\n    // incrementing upwards through rows\n    let rowStart, rowEnd;\n    if (imageY1 < imageY2) {\n      rowStart = imageY1;\n      rowEnd = imageY2;\n    } else {\n      rowStart = imageY2;\n      rowEnd = imageY1;\n    }\n\n    rowStart = clamp(rowStart, 0, raster_height - 1);\n    rowEnd = clamp(rowEnd, 0, raster_height - 1);\n    // iterate through image lines within the change in y of\n    // the edge line and find all intersections\n    for (let j = rowStart; j < rowEnd + 1; j++) {\n      const imageLineY = raster_ymax - pixel_height * j - pixel_height / 2;\n\n      const startsOnLine = y1 === imageLineY;\n      const endsOnLine = y2 === imageLineY;\n      const endsOffLine = !endsOnLine;\n\n      let xminOnLine, xmaxOnLine;\n      if (horizontal) {\n        if (edgeY === imageLineY) {\n          xminOnLine = startLng;\n          xmaxOnLine = endLng;\n        } else {\n          continue; // stop running calculations for this horizontal line because it doesn't intersect at all\n        }\n      } else if (vertical) {\n        /* we have to have a seprate section for vertical because of floating point arithmetic probs with get_inter...\" */\n        if (imageLineY >= edgeYMin && imageLineY <= edgeYMax) {\n          xminOnLine = startLng;\n          xmaxOnLine = endLng;\n        }\n      } else if (startsOnLine) {\n        // we know that the other end is not on the line because then it would be horizontal\n        xminOnLine = xmaxOnLine = x1;\n      } else if (endsOnLine) {\n        // we know that the other end is not on the line because then it would be horizontal\n        xminOnLine = xmaxOnLine = x2;\n      } else {\n        try {\n          xminOnLine = xmaxOnLine = x1 + (imageLineY - y1) / slope;\n        } catch (error) {\n          throw error;\n        }\n      }\n\n      // check to see if the intersection point is within the range of\n      // the edge line segment. If it is, add the intersection to the\n      // list of intersections at the corresponding index for that row\n      // in intersectionsByRow\n      if (\n        xminOnLine !== undefined &&\n        xmaxOnLine !== undefined &&\n        (horizontal || (xminOnLine >= startLng && xmaxOnLine <= endLng && imageLineY <= edgeYMax && imageLineY >= edgeYMin))\n      ) {\n        intersectionsByRow[j].push({\n          direction,\n          index: iedge,\n          edge,\n          // e.g: if there are 5 points (last repeated), there are 4 edges, with the last index being 3 (zero-indexed)\n          last_edge_in_ring: iedge === ring.length - 2,\n          endsOnLine,\n          endsOffLine,\n          horizontal,\n          startsOnLine,\n          vertical,\n          xmin: xminOnLine,\n          xmax: xmaxOnLine,\n          imageLineY\n        });\n      }\n    }\n  });\n\n  const half_pixel_width = pixel_width / 2;\n  const snap = prepareSnap(raster_xmin, pixel_width);\n\n  if (debug_level >= 1) console.log(\"[dufour-peyton-intersection] intersectionsByRow:\", intersectionsByRow);\n\n  intersectionsByRow.forEach((segmentsInRow, row_index) => {\n    if (segmentsInRow.length > 0) {\n      const clusters = clusterLineSegments(segmentsInRow);\n      const categorized = clusters.map(categorizeIntersection);\n      const [throughs, nonthroughs] = partition(categorized, item => item.through);\n\n      if (throughs.length % 2 === 1) {\n        if (debug_level >= 1) console.error(\"[dufour-peyton-intersection] throughs:\", JSON.stringify(throughs));\n        throw Error(\"throughs.length for \" + row_index + \" is odd with \" + throughs.length);\n      }\n\n      let insides = nonthroughs.map(intersection => [intersection.xmin, intersection.xmax]);\n\n      // sorts throughs from left to right in-place\n      throughs.sort((a, b) => a.xmin - b.xmin);\n\n      const couples = couple(throughs).map(couple => {\n        const [left, right] = couple;\n        return [left.xmin, right.xmax];\n      });\n\n      insides = insides.concat(couples);\n\n      /*\n        This makes sure we don't double count pixels.\n        For example, converts `[[0,10],[10,10]]` to `[[0,10]]`\n      */\n      insides = mergeRanges(insides);\n\n      insides.forEach(pair => {\n        const [xmin, xmax] = pair;\n\n        if (xmax - xmin < half_pixel_width) return;\n\n        // snap [xmin, xmax] in srs to raster coordinates\n        const [left, right] = snap(pair);\n\n        // intersection doesn't take up more than half of a pixel\n        if (left === right) return;\n\n        // skip because segment is beyond the right edge of the raster\n        if (left > raster_width) return;\n\n        // skip because segment is beyond the left edge of the raster\n        if (right <= 0) return;\n\n        const start_column_index = Math.max(left, 0);\n        const end_column_index = Math.min(right - 1, raster_width - 1);\n\n        if (per_row_segment) {\n          per_row_segment({\n            row: row_index,\n            columns: [start_column_index, end_column_index]\n          });\n        }\n\n        if (per_pixel) {\n          for (let column_index = start_column_index; column_index <= end_column_index; column_index++) {\n            per_pixel({ row: row_index, column: column_index });\n          }\n        }\n      });\n    }\n  });\n};\n", "\"use strict\";\n\nmodule.exports = function checkRanges(rows) {\n  rows.forEach((ranges, irow) => {\n    for (let irange = 0; irange < ranges.length; irange++) {\n      const range = ranges[irange];\n      const [start, end] = range;\n      if (start > end) {\n        console.warn(\"[dufour-peyton-intersection] uh oh, encountered invalid range\", range, \"at row index\", irow, \"with ranges\", ranges);\n      }\n\n      for (let iother = irange + 1; iother < ranges.length; iother++) {\n        if (iother[0] <= end) {\n          console.warn(\"[dufour-peyton-intersection] encountered range problem on row index\", irow, \":\", ranges);\n        }\n      }\n    }\n  });\n};\n", "\"use strict\";\nconst calculateCore = require(\"./calculate-core.js\");\nconst checkRows = require(\"./check-rows.js\");\nconst mergeConsecutiveRanges = require(\"./range/merge-consecutive.js\");\nconst rangeSort = require(\"./range/sort.js\");\n\nmodule.exports = function calculateRing({ debug_level = 0, raster_bbox, raster_height, raster_width, pixel_height, pixel_width, ring }) {\n  const [xmin, ymin, xmax, ymax] = raster_bbox;\n\n  if (raster_bbox.every(it => typeof it === \"string\")) {\n    throw new Error(\"[dufour-peyton-intersection] raster_bbox should be all numbers, not strings\");\n  }\n\n  if (pixel_height === undefined || pixel_height === null) pixel_height = (ymax - ymin) / raster_height;\n  if (pixel_width === undefined || pixel_width === null) pixel_width = (xmax - xmin) / raster_width;\n\n  const rows = [];\n  for (let i = 0; i < raster_height; i++) rows.push([]);\n\n  calculateCore({\n    debug_level,\n    raster_bbox,\n    raster_height,\n    raster_width,\n    pixel_height,\n    pixel_width,\n    ring,\n    per_row_segment: ({ row, columns }) => {\n      rows[row].push(columns);\n    }\n  });\n\n  for (let irow = 0; irow < rows.length; irow++) {\n    const ranges = rows[irow];\n    if (ranges) {\n      // sort from left to right\n      rangeSort(ranges);\n\n      // replace existing row with sorted and merged one\n      rows[irow] = mergeConsecutiveRanges(ranges);\n    }\n  }\n\n  if (debug_level >= 2) checkRows(rows);\n\n  return rows;\n};\n", "\"use strict\";\nconst carveHoles = require(\"./range/multicut.js\");\nconst calculateRing = require(\"./calculate-ring\");\n\nmodule.exports = function calculatePolygon({ polygon, ...options }) {\n  const { debug_level = 0 } = options;\n  const [exterior, ...holes] = polygon.map(ring => calculateRing({ ring, ...options }));\n  if (debug_level >= 2) console.log(\"[dufour-peyton-intersection] exterior:\", exterior);\n\n  // for each row inside the polygon\n  // collect the relevant holes and then carve them out of that row\n  const result = exterior.map((row_insides, irow) => {\n    const row_holes = holes.map(hole_rows => hole_rows[irow]).flat();\n    return carveHoles(row_insides, row_holes);\n  });\n\n  return result;\n};\n", "\"use strict\";\nconst getPolygons = require(\"./get-polygons.js\");\nconst mergeConsecutiveRanges = require(\"./range/merge-consecutive.js\");\nconst rangeSort = require(\"./range/sort.js\");\nconst calculatePolygon = require(\"./calculate-polygon.js\");\n\nmodule.exports = function calculate({ geometry, raster_height, per_pixel, per_row_segment, debug_level = 0, ...rest }) {\n  const polys = getPolygons(geometry);\n\n  // collect inside segments by row for each polygons\n  const inside_rows_by_polygon = polys.map(polygon =>\n    calculatePolygon({\n      polygon,\n      raster_height,\n      debug_level,\n      ...rest\n    })\n  );\n  if (debug_level >= 1) console.log(\"[dufour-peyton-intersection] inside_rows_by_polygon:\", inside_rows_by_polygon);\n\n  const results = new Array(raster_height);\n  for (let i = 0; i < raster_height; i++) {\n    const insides = inside_rows_by_polygon\n      .map(polygon_rows => polygon_rows[i])\n      .filter(it => it !== undefined && it.length > 0)\n      .flat();\n    if (insides.length > 0) {\n      const sorted = rangeSort(insides);\n      const merged = mergeConsecutiveRanges(sorted);\n      results[i] = merged;\n    }\n  }\n\n  if (per_row_segment || per_pixel) {\n    results.forEach((row_segments, row_index) => {\n      if (row_segments) {\n        row_segments.forEach((seg, iseg) => {\n          if (per_row_segment) {\n            per_row_segment({ row: row_index, columns: seg });\n          }\n\n          if (per_pixel) {\n            const [start_column_index, end_column_index] = seg;\n            for (let column_index = start_column_index; column_index <= end_column_index; column_index++) {\n              per_pixel({ row: row_index, column: column_index });\n            }\n          }\n        });\n      }\n    });\n  }\n\n  return { rows: results };\n};\n", "/**\n * @name contains\n * @description check if the first range contains the second range\n * @param {Range} a \n * @param {Range} b \n * @returns {Boolean} result\n */\nmodule.exports = function contains (a, b) {\n  return b[0] >= a[0] && b[1] <= a[1];\n}\n", "\"use strict\";\n\nconst categorizeIntersection = require(\"./categorize-intersection.js\");\nconst clamp = require(\"./clamp.js\");\nconst cluster = require(\"./cluster.js\");\nconst clusterLineSegments = require(\"./cluster-line-segments.js\");\nconst calculate = require(\"./calculate.js\");\nconst calculateCore = require(\"./calculate-core.js\");\nconst couple = require(\"./couple.js\");\nconst eachPair = require(\"./each-pair.js\");\nconst eachPolygon = require(\"./each-polygon.js\");\nconst mergeRanges = require(\"./range/merge.js\");\nconst mergeConsecutiveRanges = require(\"./range/merge-consecutive.js\");\nconst partition = require(\"./partition.js\");\nconst prepareSnap = require(\"./prepare-snap.js\");\nconst rangeContains = require(\"./range/contains.js\");\nconst rangeCut = require(\"./range/cut.js\");\nconst carveHoles = require(\"./range/multicut.js\");\nconst rangeOverlap = require(\"./range/overlaps.js\");\nconst roundDown = require(\"./round-down.js\");\nconst rangeSort = require(\"./range/sort.js\");\n\nconst dufour_peyton_intersection = {\n  calculate,\n  calculateCore,\n  carveHoles,\n  categorizeIntersection,\n  clamp,\n  cluster,\n  clusterLineSegments,\n  couple,\n  eachPair,\n  eachPolygon,\n  mergeRanges,\n  mergeConsecutiveRanges,\n  partition,\n  prepareSnap,\n  rangeContains,\n  rangeCut,\n  rangeOverlap,\n  rangeSort,\n  roundDown\n};\n\nif (typeof define === \"function\" && define.amd) define(() => dufour_peyton_intersection);\nif (typeof module === \"object\") module.exports = dufour_peyton_intersection;\nif (typeof self == \"object\") self.dufour_peyton_intersection = dufour_peyton_intersection;\nif (typeof window == \"object\") window.dufour_peyton_intersection = dufour_peyton_intersection;\n", "function transform(geotransform, point) {\n  const [a, b, c, d, e, f] = geotransform;\n  const [x, y] = point;\n  return [a + b * x + c * y, d + e * x + f * y];\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return transform;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = transform;\n  module.exports.default = transform;\n}\n", "function invert(geotransform) {\n  const [a, b, c, d, e, f] = geotransform;\n  const g = b * f - c * e;\n  const h = -1 * g;\n  return [(c * d - a * f) / g, f / g, c / h, (b * d - a * e) / h, e / h, b / g];\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return invert;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = invert;\n  module.exports.default = invert;\n}\n", "const apply = require(\"./fn/apply.js\");\nconst invert = require(\"./fn/invert.js\");\n\nfunction Geotransform(geotransform) {\n  const inversion = invert(geotransform);\n  return {\n    forward: function forward(point) {\n      return apply(geotransform, point);\n    },\n    inverse: function inverse(point, { floor = false, round = false } = { floor: false, round: false }) {\n      let result = apply(inversion, point);\n      if (round) result = result.map(n => Math.round(n));\n      if (floor) result = result.map(n => Math.floor(n));\n      return result;\n    }\n  };\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return Geotransform;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = Geotransform;\n  module.exports.default = Geotransform;\n}\n", "function count(nums) {\n  const counts = {};\n  let total = 0;\n  for (let n of nums) {\n    total++;\n    if (n in counts) counts[n][1]++;\n    else counts[n] = [n, 1];\n  }\n  return { counts, total };\n}\n\nmodule.exports = count;\nmodule.exports.default = count;\n", "const add = require(\"preciso/add\");\nconst divide = require(\"preciso/divide\");\n\nfunction mean(a, b, { precise = false } = { precise: false }) {\n  if (precise) {\n    return divide(add(a.toString(), b.toString()), \"2\");\n  } else {\n    return (a + b) / 2;\n  }\n}\n\nmodule.exports = mean;\nmodule.exports.default = mean;\n", "const count = require(\"./count\");\nconst mean = require(\"./mean\");\n\nfunction calculate(nums, { no_data = undefined, precise = false } = { no_data: undefined, precise: false }) {\n  const { counts, total } = count(nums);\n\n  let total_valid = total;\n\n  if (\"NaN\" in counts) {\n    total_valid -= counts[\"NaN\"][1];\n    delete counts[\"NaN\"];\n  }\n\n  if (\"undefined\" in counts) {\n    total_valid -= counts[\"undefined\"][1];\n    delete counts[\"undefined\"];\n  }\n\n  if (\"null\" in counts) {\n    total_valid -= counts[\"null\"][1];\n    delete counts[\"null\"];\n  }\n\n  if (\"\" in counts) {\n    total_valid -= counts[\"\"][1];\n    delete counts[\"\"];\n  }\n\n  // delete no data value(s), so they'll be ignored later\n  if (Array.isArray(no_data)) {\n    for (let i = 0; i < no_data.length; i++) {\n      const n = no_data[i];\n      if (n in counts) {\n        total_valid -= counts[n][1];\n        delete counts[n];\n      }\n    }\n  } else if (no_data in counts) {\n    total_valid -= counts[no_data][1];\n    delete counts[no_data];\n  }\n\n  // sort counts by value\n  const countArray = Object.values(counts).sort((a, b) => a[0] - b[0]);\n  const half = total_valid / 2;\n  const number_of_unique_values = countArray.length;\n  if (number_of_unique_values === 0) {\n    return undefined;\n  } else if (number_of_unique_values === 1) {\n    return precise ? countArray[0][0].toString() : countArray[0][0];\n  } else {\n    let x = 0;\n\n    if (total % 2 === 0) {\n      for (let i = 0; i < number_of_unique_values; i++) {\n        const [n, ct] = countArray[i];\n        x += ct;\n        if (x > half) {\n          // handle if odd or even\n          // just barely pass cut off\n          if (x - ct === half) {\n            return mean(countArray[i - 1][0], n, { precise });\n          } else {\n            return precise ? n.toString() : n;\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < number_of_unique_values; i++) {\n        const [n, ct] = countArray[i];\n        x += ct;\n        if (x > half) return precise ? n.toString() : n;\n      }\n    }\n  }\n}\n\nconst mediana = { calculate };\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return mediana;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = mediana;\n  module.exports.default = { calculate };\n}\n\nif (typeof window === \"object\") {\n  window.mediana = mediana;\n}\n\nif (typeof self === \"object\") {\n  self.mediana = mediana;\n}\n", "\"use_strict\";\n\n// assuming odd number of nums\nconst median = nums => nums.sort()[Math.floor(nums.length - 2)];\n\nconst min = nums => nums.slice().sort((a, b) => Math.sign(a - b))[0];\n\nfunction turbocharge ({ bbox, debug_level = 0, quiet = false, reproject, threshold: [x_threshold, y_threshold] }) {\n  if (debug_level >= 2) console.log(\"[proj-turbo] starting\");\n  if (debug_level >= 3) console.log(\"[proj-turbo] bbox:\", bbox);\n  if (debug_level >= 3) console.log(\"[proj-turbo] reproject:\", reproject);\n  if (debug_level >= 3) console.log(\"[proj-turbo] threshold:\", [x_threshold, y_threshold]);\n  if (debug_level >= 3) console.log(\"[proj-turbo] quiet:\", quiet);\n\n  const [xmin, ymin, xmax, ymax] = bbox;\n  const width = xmax - xmin;\n  if (debug_level >= 3) console.log(\"[proj-turbo] width:\", width);\n  const height = ymax - ymin;\n  if (debug_level >= 3) console.log(\"[proj-turbo] height:\", height);\n\n  const corners = [\n    [xmin, ymax], // top-left\n    [xmax, ymax], // top-right\n    [xmax, ymin], // bottom-right\n    [xmin, ymin] // bottom-left\n  ];\n  const corner_pairs = corners.map(corner => [corner, reproject(corner)]);\n\n  // how much horizontal change between the top and bottom coordinates\n  const x_drift_left_edge = corner_pairs[0][1][0] - corner_pairs[3][1][0];\n  const x_drift_right_edge = corner_pairs[1][1][0] - corner_pairs[2][1][0];\n  const max_x_drift = Math.max(x_drift_left_edge, x_drift_right_edge);\n  if (debug_level >= 3) console.log(\"max_x_drift:\", max_x_drift);\n\n  const y_drift_top_edge = corner_pairs[1][1][1] - corner_pairs[0][1][1];\n  const y_drift_bottom_edge = corner_pairs[2][1][1] - corner_pairs[3][1][1];\n  const max_y_drift = Math.max(y_drift_top_edge, y_drift_bottom_edge);\n  if (debug_level >= 3) console.log(\"max_y_drift:\", max_y_drift);\n\n  const x_offset = width / 100;\n  if (debug_level >= 4) console.log(\"[proj-turbo] x_offset:\", x_offset);\n\n  const y_offset = height / 100;\n  if (debug_level >= 4) console.log(\"[proj-turbo] y_offset:\", y_offset);\n\n  const train_points = [\n    [xmin + width / 4, ymax - height / 4],\n    [xmax - width / 4, ymax - height / 4],\n    [xmax - width / 4, ymin + height / 4],\n    [xmin + width / 4, ymin + height / 4],  \n\n    [xmin + width / 10, ymax - height / 10],\n    [xmax - width / 10, ymax - height / 10],\n    [xmax - width / 10, ymin + height / 10],\n    [xmin + width / 10, ymin + height / 10],  \n\n    // center\n    [(xmin + xmax) / 2, (ymin + ymax) / 2]\n  ];\n  if (debug_level >= 5) console.log(\"[proj-turbo] train_points: \" + JSON.stringify(train_points));\n\n  const train_pairs = train_points.map(point => [point, reproject(point)]);\n  if (debug_level >= 5) console.log(\"[proj-turbo] train_pairs: \" + JSON.stringify(train_pairs));\n  \n  // find the origin, which is the bottom-left of all the points\n  const x_origin = min(train_pairs.concat(corner_pairs).map(([pt1, [x2, y2]]) => x2));\n  if (debug_level >= 4) console.log(\"[proj-turbo] x_origin:\", x_origin);\n  const y_origin = min(train_pairs.concat(corner_pairs).map(([pt1, [x2, y2]]) => y2));\n  if (debug_level >= 4) console.log(\"[proj-turbo] y_origin:\", y_origin);\n\n  // get scales from origin\n  let scales = train_pairs.map(([[x0, y0], [x1, y1]], i) => {\n    if (x1 < x_origin) throw new Error(\"[proj-turbo] uh oh, x1\", x1, \"is less than origin\", x_origin);\n    return [(x1 - x_origin) / (x0 - xmin), (y1 - y_origin) / (y0 - ymin)];\n  });\n  if (debug_level >= 4) console.log(\"[proj-turbo] scales: \", scales.map(([x, y]) => [x.toFixed(10), y.toFixed(10)]));\n\n  // remove any NaN which can sometimes happen at the origin\n  scales = scales.filter(([x, y]) => !(x < 0 || y < 0 || isNaN(x) || isNaN(y) || x === Infinity && y === Infinity));\n\n  if (scales.length < 3) {\n    if (debug_level >= 1) console.log(\"[proj-turbo] origin: \", [x_origin, y_origin]);\n    if (debug_level >= 1) console.log(\"[proj-turbo] scales: \", scales);\n    if (quiet) return undefined;\n    else throw new Error(\"[proj-turbo] not enough scales\");\n  }\n\n  const x_scale = median(scales.map(([x, y]) => x));\n  if (debug_level >= 4) console.log(\"[proj-turbo] median horizontal scale:\", x_scale);\n\n  const y_scale = median(scales.map(([x, y]) => y));\n  if (debug_level >= 4) console.log(\"[proj-turbo] median vertical scale:\", y_scale);\n\n  // fwiw, I created a bound function and it was slower\n  // to-do: incorporate drift when max drift exceeds error threshold\n  const reproj = ([x, y]) => [x_origin + x_scale * (x - xmin), y_origin + y_scale * (y - ymin)];\n\n  const test_pairs = [\n    ...corner_pairs, // want to test literal edge cases\n    ...train_pairs\n  ];\n\n  for (let i = 0; i < test_pairs.length; i++) {\n    const [original_point, [x_expected, y_expected]] = test_pairs[i];\n    const [predicted_x, predicted_y] = reproj(original_point);\n    const x_error = Math.abs(predicted_x - x_expected);\n    if (x_error >= x_threshold) {\n      if (debug_level >= 1) console.log(`${x_origin} + ${x_scale} * (${original_point[0]} - ${xmin})`);      \n      if (debug_level >= 1) console.log(`predicted ${predicted_x}, which is ${x_error} from ${x_expected}, which is greater than the threshold ${x_threshold}`);\n      if (quiet) return undefined;\n      else throw Error(\"[proj-turbo] linear function exceeded horizontal error threshold\");\n    }\n    const y_error = Math.abs(predicted_y - y_expected);\n    if (y_error >= y_threshold) {\n      if (debug_level >= 1) console.log(`${y_origin} + ${y_scale} * (${original_point[1]} - ${ymin})`);      \n      if (debug_level >= 1) console.log(`predicted ${predicted_y}, which is ${y_error} from ${y_expected}, which is greater than the threshold ${y_threshold}`);\n      if (quiet) return undefined;\n      else throw Error(\"[proj-turbo] linear function exceeded vertical error threshold\");\n    }\n  }\n\n  return { origin: [x_origin, y_origin], reproject: reproj, scale: [x_scale, y_scale], scales };\n}\n\nconst projturbo = { turbocharge };\n\nif (typeof define === \"function\" && define.amd) {\n  define(function() { return projturbo; });\n}\n\nif (typeof module === \"object\" && module.exports) {\n  module.exports = projturbo;\n}\n\nif (typeof self === \"object\") {\n  self.projturbo = projturbo;\n}\n\nif (typeof window === \"object\") {\n  window.projturbo = projturbo;\n}\n", "module.exports = function resolve(it) {\n  if (typeof it === \"object\" && typeof it.then === \"function\") {\n    // it appears to be a promise\n    return it;\n  } else {\n    return { then: func => func(it) };\n  }\n};\n", "// [ [0, 11], [58, 59] ],\n// [ [-1, 12], [57, 60] ] // subtract one from start and add one to end\n// [ 0, -1, 12, 57, 60, 255 ] // flatten\n// [ [0, -1], [12, 57], [60, 255] ] // pair\n// [ [12, 57], [60, 255] ] // discard bad like [0, -1]\n\nfunction segflip({ segments: segs, min = -Infinity, max = Infinity, debug = false }) {\n  if (debug) console.log(\"[segflip] segs:\", segs);\n  if (segs === undefined || segs === null || (Array.isArray(segs) && segs.length === 0)) {\n    if (debug) console.log(\"[segflip] segments are empty so return the whole row flipped\");\n    return [[min, max]];\n  }\n\n  const nums = segs.map(([start, end]) => [start - 1, end + 1]).flat();\n  nums.unshift(min);\n  nums.push(max);\n\n  if (debug) console.log(\"flattened nums:\", nums);\n\n  const results = [];\n  for (let i = 1; i < nums.length; i += 2) {\n    const start = nums[i - 1];\n    const end = nums[i];\n    if (start > end) continue; // e.g. [0, -1]\n    results.push([start, end]);\n  }\n  return results;\n}\n\nif (typeof define === \"function\" && define.amd)\n  define(function () {\n    return segflip;\n  });\nif (typeof module === \"object\") module.exports = segflip;\nif (typeof window === \"object\") window.segflip = segflip;\nif (typeof self === \"object\") self.segflip = segflip;\n", "const { booleanIntersects, calc: getBoundingBox, intersect, polygon } = require(\"bbox-fns\");\nconst dufour_peyton_intersection = require(\"dufour-peyton-intersection\");\nconst fastMax = require(\"fast-max\");\nconst fastMin = require(\"fast-min\");\nconst Geotransform = require(\"geoaffine/Geotransform.js\");\nconst getDepth = require(\"get-depth\");\nconst getTheoreticalMax = require(\"typed-array-ranges/get-max\");\nconst getTheoreticalMin = require(\"typed-array-ranges/get-min\");\nconst calcMedian = require(\"mediana\").calculate;\nconst reprojectBoundingBox = require(\"bbox-fns/reproject.js\");\nconst reprojectGeoJSON = require(\"reproject-geojson/pluggable\");\nconst { turbocharge } = require(\"proj-turbo\");\nconst quickResolve = require(\"quick-resolve\");\nconst segflip = require(\"segflip\");\nconst xdim = require(\"xdim\");\n\n// l = console.log;\n\nconst clamp = (n, min, max) => (n < min ? min : n > max ? max : n);\n\nconst isInvalid = n => n === undefined || n === null || n !== n;\n\nconst scaleInteger = (n, r) => {\n  const n2 = Math.round(n * r);\n  return [n2, n2 / n, n / n2];\n};\n\n// result as [xmin, ymin, xmax, ymax]\n// for (let column = xmin; column < xmax; column++)\nconst scalePixel = ([column, row], [x_scale, y_scale]) => [\n  Math.round(column * x_scale),\n  Math.round(row * y_scale),\n  Math.round((column + 1) * x_scale),\n  Math.round((row + 1) * y_scale)\n];\n\nconst uniq = arr => Array.from(new Set(arr)).sort((a, b) => b - a);\n\nconst range = ct => new Array(ct).fill(0).map((_, i) => i);\n\nconst forEach = (nums, no_data, cb) => {\n  const len = nums.length;\n  if (no_data) {\n    for (let i = 0; i < len; i++) {\n      const n = nums[i];\n      if (no_data.indexOf(n) === -1) cb(n);\n    }\n  } else {\n    for (let i = 0; i < len; i++) {\n      cb(nums[i]);\n    }\n  }\n};\n\nconst mean = (nums, in_no_data) => {\n  let running_sum = 0;\n  let count = 0;\n  forEach(nums, in_no_data, n => {\n    count++;\n    running_sum += n;\n  });\n  return count === 0 ? undefined : running_sum / count;\n};\n\nconst mode = (nums, no_data) => {\n  if (nums.length === 0) return undefined;\n  const counts = {};\n  if (no_data) {\n    for (let i = 0; i < nums.length; i++) {\n      const n = nums[i];\n      if (typeof n === \"number\" && n === n && no_data.indexOf(n) === -1) {\n        if (n in counts) counts[n].count++;\n        else counts[n] = { n, count: 1 };\n      }\n    }\n  } else {\n    for (let i = 0; i < nums.length; i++) {\n      const n = nums[i];\n      if (n in counts) counts[n].count++;\n      else counts[n] = { n, count: 1 };\n    }\n  }\n  const items = Object.values(counts);\n  const count = items.sort((a, b) => Math.sign(b.count - a.count))[0].count;\n  return items.filter(it => it.count === count).map(it => it.n);\n};\n\n// returns [functionCached, clearCache]\nconst cacheFunction = (f, str = it => it.toString()) => {\n  let cache = {};\n  return [xy => (cache[str(xy)] ??= f(xy)), () => (cache = {})];\n};\n\n// generate a histogram from evenly spaced sample points\n// purpose is to give us a sense of the distribution of pixel values\n// without spending a lot of time reading every point\nconst quickHistogram = ({ select, width, height }, [across, down]) => {\n  const hist = {};\n  const x_scale = width / across;\n  const y_scale = height / down;\n  const rows = new Array(down).fill(null).map((_, i) => Math.floor(i * y_scale));\n  const cols = new Array(across).fill(null).map((_, i) => Math.floor(i * x_scale));\n  rows.forEach(row => {\n    cols.forEach(column => {\n      const value = select({ row, column });\n      if (value in hist) hist[value]++;\n      else hist[value] = 1;\n    });\n  });\n  return Object.entries(hist).sort(([apx, act], [bpx, bct]) => Math.sign(bct - act));\n};\n\nconst geowarp = function geowarp({\n  debug_level = 0,\n  in_data,\n  in_bbox = undefined,\n  in_geotransform = undefined, // 6-parameter geotransform, only necessary when in_data is skewed or rotated\n  in_layout = \"[band][row,column]\",\n  in_srs,\n  in_height,\n  in_pixel_depth, // number of input bands\n  in_pixel_height, // optional, automatically calculated from in_bbox\n  in_pixel_width, // optional, automatically calculated from in_bbox\n  in_width,\n  in_no_data, // optional, supports one number or an array of unique no data values\n  out_array_types, // array of constructor names passed to internal call to xdim's prepareData function\n  out_bands, // array of bands to keep and order, default is keeping all the bands in same order\n  out_data, // single or multi-dimensional array that geowarp will fill in with the output\n  out_pixel_depth, // optional, number of output bands\n  out_pixel_height, // optional, automatically calculated from out_bbox\n  out_pixel_width, // optional, automatically calculated from out_bbox\n  out_bbox = null,\n  out_bbox_in_srs, // very optional, output bbox reprojected into the srs of the input\n  out_layout,\n  out_resolution = [1, 1],\n  out_srs,\n  out_width = 256,\n  out_height = 256,\n  out_no_data = null,\n  // out_no_data_strategy = \"keep\",\n  method = \"median\",\n  read_bands = undefined, // which bands to read, used in conjunction with expr\n  row_start = 0, // which sample row to start writing with\n  row_end, // last sample row to write\n  expr = undefined, // band expression function\n  round = false, // whether to round output\n  theoretical_min, // minimum theoretical value (e.g., 0 for unsigned integer arrays)\n  theoretical_max, // maximum values (e.g., 255 for 8-bit unsigned integer arrays),\n  inverse, // function to reproject [x, y] point from out_srs back to in_srs\n  forward, // function to reproject [x, y] point from in_srs to out_srs\n  cutline, // polygon or polygons defining areas to cut out (everything outside becomes no data)\n  cutline_bbox, // bounding box of the cutline geometry, can lead to a performance increase when combined with turbo\n  cutline_srs, // spatial reference system of the cutline\n  cutline_forward, // function to reproject [x, y] point from cutline_srs to out_srs\n  cutline_strategy = \"outside\", // cut out the pixels inside or outside the cutline\n  turbo = false, // enable experimental turbocharging via proj-turbo\n  insert_pixel, // over-ride function that inserts data into output multi-dimensional array\n  insert_sample, // over-ride function that inserts each sample into the output multi-dimensional array (calls insert)\n  insert_null_strategy = \"skip\", // whether to insert or skip null values\n  skip_no_data_strategy, // skip processing pixels if \"any\" or \"all\" values are \"no data\"\n  cache_process = false // whether to try to cache the processing step\n  // cache_functions // this really helps if functions are asynchronous and require posting to a web worker\n}) {\n  if (debug_level >= 1) console.log(\"[geowarp] starting\");\n  const start_time = debug_level >= 1 ? performance.now() : 0;\n\n  if (isNaN(out_height)) throw new Error(\"[geowarp] out_height is NaN\");\n  if (isNaN(out_width)) throw new Error(\"[geowarp] out_width is NaN\");\n\n  // track pending promises without the memory overhead\n  // of holding all the promises in memory\n  let pending = 0;\n\n  const [out_height_in_samples, y_resolution, y_scale] = scaleInteger(out_height, out_resolution[1]);\n  const [out_width_in_samples, x_resolution, x_scale] = scaleInteger(out_width, out_resolution[0]);\n\n  if (debug_level >= 1) console.log(\"[geowarp] scaled size:\", [out_width_in_samples, out_height_in_samples]);\n  if (debug_level >= 1) console.log(\"[geowarp] resolution:\", [x_resolution, y_resolution]);\n  if (debug_level >= 1) console.log(\"[geowarp] scale:\", [x_scale, y_scale]);\n\n  const same_srs = in_srs === out_srs;\n  if (debug_level >= 1) console.log(\"[geowarp] input and output srs are the same:\", same_srs);\n\n  if (debug_level >= 1) console.log(\"[geowarp] skip_no_data_strategy:\", skip_no_data_strategy);\n\n  // support for deprecated alias of inverse\n  inverse ??= arguments[0].reproject;\n\n  // support for deprecated insert\n  insert_pixel ??= arguments[0].insert;\n\n  let in_bbox_out_srs, intersect_bbox_in_srs, intersect_bbox_out_srs;\n\n  if (!same_srs) {\n    if (!in_bbox) throw new Error(\"[geowarp] can't reproject without in_bbox\");\n    if (!out_bbox) {\n      if (forward) out_bbox = in_bbox_out_srs = intersect_bbox_out_srs = reprojectBoundingBox(in_bbox, forward, { density: 100 });\n      else throw new Error(\"[geowarp] must specify out_bbox or forward\");\n    }\n  }\n\n  if (!same_srs && typeof inverse !== \"function\") {\n    throw new Error(\"[geowarp] you must specify a reproject function\");\n  }\n\n  if (!in_height) throw new Error(\"[geowarp] you must provide in_height\");\n  if (!in_width) throw new Error(\"[geowarp] you must provide in_width\");\n\n  // if no output layout is specified\n  // just return the data in the same layout as it is provided\n  if (!out_layout) out_layout = in_layout;\n\n  if (in_pixel_depth === undefined || in_pixel_depth === null) {\n    if (in_layout.startsWith(\"[band]\")) {\n      in_pixel_depth = in_data.length;\n    } else {\n      const depth = getDepth(in_data);\n      if (depth === 1) {\n        // could be [row,column,band] or [band,row,column]\n        in_pixel_depth = in_data.length / in_height / in_width;\n      } else if (depth === 2) {\n        // probably [row,column][band]\n        in_pixel_depth = in_data[0].length;\n      } else if (depth === 3) {\n        // probably [row][column][band]\n        in_pixel_depth = in_data[0][0].length;\n      }\n    }\n  }\n\n  if (debug_level >= 1) console.log(\"[geowarp] number of bands in source data:\", in_pixel_depth);\n\n  if (!read_bands) {\n    if (expr) read_bands = range(in_pixel_depth);\n    else if (out_bands) read_bands = uniq(out_bands);\n    else read_bands = range(in_pixel_depth);\n  }\n\n  out_bands ??= read_bands;\n\n  if (round && typeof out_no_data === \"number\") out_no_data = Math.round(out_no_data);\n  // if (out_no_data === null && out_no_data_strategy === \"keep\") out_no_data = in_no_data;\n\n  if (Array.isArray(in_no_data) === false) {\n    if (\"in_no_data\" in arguments[0]) {\n      in_no_data = [in_no_data];\n    } else {\n      in_no_data = [];\n    }\n  }\n  const primary_in_no_data = in_no_data[0];\n\n  // processing step after we have read the raw pixel values\n  let process;\n  if (expr) {\n    if (round) {\n      process = ({ pixel }) => quickResolve(expr({ pixel })).then(pixel => pixel.map(n => Math.round(n)));\n    } else {\n      process = expr; // maps ({ pixel }) to new pixel\n    }\n  } else {\n    // mapping index of band in output pixel to index in read band\n    const out_bands_to_read_bands = out_bands.map(iband => read_bands.indexOf(iband));\n\n    // we create a different processing pipeline depending on rounding\n    // because we don't want to check if we should round for every single pixel\n    if (round) {\n      process = ({ pixel }) =>\n        out_bands_to_read_bands.map(iband => {\n          const value = pixel[iband];\n          return isInvalid(value) || in_no_data.includes(value) ? out_no_data : Math.round(value);\n        });\n    } else {\n      // without rounding\n      process = ({ pixel }) =>\n        out_bands_to_read_bands.map(iband => {\n          const value = pixel[iband];\n          return isInvalid(value) || in_no_data.includes(value) ? out_no_data : value;\n        });\n    }\n  }\n\n  let clear_process_cache;\n  if (cache_process) {\n    // eslint-disable-next-line no-unused-vars\n    [process, clear_process_cache] = cacheFunction(process, ({ pixel }) => pixel.toString());\n  }\n\n  if (debug_level >= 1) console.log(\"[geowarp] read_bands:\", read_bands);\n  if (debug_level >= 1) console.log(\"[geowarp] out_height:\", out_height);\n  if (debug_level >= 1) console.log(\"[geowarp] out_width:\", out_width);\n\n  if (same_srs && in_bbox && !out_bbox) {\n    out_bbox = in_bbox;\n  }\n\n  const [in_xmin, in_ymin, in_xmax, in_ymax] = in_bbox;\n\n  in_pixel_height ??= (in_ymax - in_ymin) / in_height;\n  in_pixel_width ??= (in_xmax - in_xmin) / in_width;\n  if (debug_level >= 1) console.log(\"[geowarp] pixel height of source data:\", in_pixel_height);\n  if (debug_level >= 1) console.log(\"[geowarp] pixel width of source data:\", in_pixel_width);\n\n  in_geotransform ??= [in_xmin, in_pixel_width, 0, in_ymax, 0, -1 * in_pixel_height];\n\n  const { forward: in_img_pt_to_srs_pt, inverse: in_srs_pt_to_in_img_pt } = Geotransform(in_geotransform);\n\n  // convert point in output srs to image pixel coordinate in input image\n  const out_srs_pt_to_in_img_pt = same_srs ? in_srs_pt_to_in_img_pt : pt => in_srs_pt_to_in_img_pt(inv(pt));\n\n  const [out_xmin, out_ymin, out_xmax, out_ymax] = out_bbox;\n  if (debug_level >= 1) console.log(\"[geowarp] out_xmin:\", out_xmin);\n  if (debug_level >= 1) console.log(\"[geowarp] out_ymin:\", out_ymin);\n  if (debug_level >= 1) console.log(\"[geowarp] out_xmax:\", out_xmax);\n  if (debug_level >= 1) console.log(\"[geowarp] out_ymax:\", out_ymax);\n\n  out_pixel_height ??= (out_ymax - out_ymin) / out_height;\n  out_pixel_width ??= (out_xmax - out_xmin) / out_width;\n  if (debug_level >= 1) console.log(\"[geowarp] out_pixel_height:\", out_pixel_height);\n  if (debug_level >= 1) console.log(\"[geowarp] out_pixel_width:\", out_pixel_width);\n\n  const out_sample_height = out_pixel_height * y_scale;\n  const out_sample_width = out_pixel_width * x_scale;\n  if (debug_level >= 1) console.log(\"[geowarp] out_sample_height:\", out_sample_height);\n  if (debug_level >= 1) console.log(\"[geowarp] out_sample_width:\", out_sample_width);\n\n  const half_out_sample_height = out_sample_height / 2;\n  const half_out_sample_width = out_sample_width / 2;\n\n  // const out_geotransform = [out_xmin, out_pixel_width, 0, out_ymax, 0, -1 * out_pixel_height];\n  // const { forward: out_img_pt_to_srs_pt, inverse: out_srs_pt_to_img_pt } = Geotransform(out_geotransform);\n\n  const in_img_pt_to_out_srs_pt = same_srs ? in_img_pt_to_srs_pt : pt => fwd(in_img_pt_to_srs_pt(pt));\n  // const in_img_pt_to_out_img_pt = same_srs ? pt => out_srs_pt_to_img_pt(in_img_pt_to_srs_pts(pt)) : pt => out_srs_pt_to_img_pt(fwd(in_img_pt_to_srs_pt(pt)));\n\n  if (theoretical_min === undefined || theoretical_max === undefined) {\n    try {\n      const data_constructor = in_data[0].constructor.name;\n      if (debug_level >= 1) console.log(\"[geowarp] data_constructor:\", data_constructor);\n      theoretical_min ??= getTheoreticalMin(data_constructor);\n      theoretical_max ??= getTheoreticalMax(data_constructor);\n      if (debug_level >= 1) console.log(\"[geowarp] theoretical_min:\", theoretical_min);\n      if (debug_level >= 1) console.log(\"[geowarp] theoretical_max:\", theoretical_max);\n    } catch (error) {\n      // we want to log an error if it happens\n      // even if we don't strictly need it to succeed\n      console.error(error);\n    }\n  }\n\n  if (![undefined, null, \"\"].includes(cutline_forward) && typeof cutline_forward !== \"function\") {\n    throw new Error(\"[geowarp] cutline_forward must be of type function not \" + typeof cutline);\n  }\n\n  // if cutline isn't in the projection of the output, reproject it\n  let segments_by_row = new Array(out_height_in_samples).fill(0).map(() => []);\n  if (cutline && cutline_srs !== out_srs) {\n    if (!cutline_forward) {\n      // fallback to checking if we can use forward\n      if (in_srs === cutline_srs) cutline_forward = forward;\n      throw new Error(\"[geowarp] must specify cutline_forward when cutline_srs and out_srs differ\");\n    }\n\n    let cutline_forward_turbocharged;\n    if (cutline_forward && cutline_bbox) {\n      cutline_forward_turbocharged = turbocharge({\n        bbox: cutline_bbox,\n        debug_level,\n        quiet: true,\n        reproject: cutline_forward,\n        threshold: [half_out_sample_width, half_out_sample_height]\n      })?.reproject;\n    }\n\n    cutline = reprojectGeoJSON(cutline, { reproject: cutline_forward_turbocharged || cutline_forward });\n  }\n\n  const out_column_max = out_width_in_samples - 1;\n  const full_width_row_segment = [0, out_column_max];\n  const full_width_row = [full_width_row_segment];\n\n  if (cutline) {\n    const intersections = dufour_peyton_intersection.calculate({\n      raster_bbox: out_bbox,\n      raster_height: out_height_in_samples,\n      raster_width: out_width_in_samples,\n      geometry: cutline\n    });\n\n    // we don't use per_row_segment because that can lead to overlap\n    intersections.rows.forEach((segs, irow) => {\n      segments_by_row[irow] = segs;\n    });\n\n    if (cutline_strategy === \"inside\") {\n      // flip the inside/outside segments\n\n      segments_by_row = segments_by_row.map(segs => {\n        if (segs.length === 0) {\n          return full_width_row;\n        } else {\n          return segflip({\n            segments: segs,\n            min: 0,\n            max: out_column_max,\n            debug: false\n          });\n        }\n      });\n    }\n  } else {\n    for (let row_index = 0; row_index < out_height_in_samples; row_index++) {\n      segments_by_row[row_index].push(full_width_row_segment);\n    }\n  }\n\n  const in_sizes = {\n    band: in_pixel_depth,\n    row: in_height,\n    column: in_width\n  };\n\n  const select = xdim.prepareSelect({ data: in_data, layout: in_layout, sizes: in_sizes });\n\n  const selectPixel = ({ row, column }) =>\n    read_bands.map(\n      band =>\n        select({\n          point: {\n            band,\n            row,\n            column\n          }\n        }).value\n    );\n\n  const hist = quickHistogram({ select: selectPixel, width: in_width, height: in_height }, [10, 10]);\n  const { hits, total } = hist.reduce(\n    (acc, [px, ct]) => {\n      acc.total += ct;\n      acc.hits += ct - 1; // subtracting 1 because the first instance of something won't use the cache\n      return acc;\n    },\n    { hits: 0, total: 0 }\n  );\n  const predicted_cache_hit_rate = hits / total;\n\n  if (cache_process === undefined || cache_process === null) {\n    cache_process = predicted_cache_hit_rate >= 0.85;\n  }\n\n  if (typeof insert_pixel !== \"function\") {\n    let update;\n\n    // only works once update is defined later on\n    const update_pixel = ({ row, column, pixel }) => {\n      pixel.forEach((value, band) => {\n        update({\n          point: { band, row, column },\n          value\n        });\n      });\n    };\n\n    let insert_pixel_sync = ({ pixel, ...rest }) => {\n      try {\n        out_pixel_depth ??= pixel.length;\n        if (debug_level >= 1) console.log(\"[geowarp] out_pixel_depth:\", out_pixel_depth);\n\n        const out_sizes = {\n          band: out_pixel_depth,\n          row: out_height,\n          column: out_width\n        };\n        if (debug_level >= 1) console.log(\"[geowarp] out_sizes:\", out_sizes);\n\n        out_data ??= xdim.prepareData({\n          fill: out_no_data,\n          layout: out_layout,\n          sizes: out_sizes,\n          arrayTypes: out_array_types\n        }).data;\n        if (debug_level >= 1) console.log(\"[geowarp] out_data:\", typeof out_data);\n\n        update = xdim.prepareUpdate({ data: out_data, layout: out_layout, sizes: out_sizes });\n        if (debug_level >= 1) console.log(\"[geowarp] prepared update function\");\n\n        // replace self, so subsequent calls go directly to update_pixel\n        insert_pixel_sync = update_pixel;\n\n        update_pixel({ pixel, ...rest });\n      } catch (error) {\n        console.error(\"first call to insert_pixel_sync failed:\", error);\n      }\n    };\n\n    insert_pixel = ({ pixel, ...rest }) => {\n      pending++;\n      quickResolve(pixel).then(px => {\n        insert_pixel_sync({ pixel: px, ...rest });\n        pending--;\n      });\n    };\n  }\n\n  if (typeof insert_sample !== \"function\") {\n    if (x_resolution === 1 && y_resolution === 1) {\n      // we call insert_pixel instead of setting insert_sample = insert_pixel\n      // because insert_pixel might have been hot swapped\n      insert_sample = params => insert_pixel(params);\n    } else {\n      insert_sample = ({ row, column, pixel, ...rest }) => {\n        const [xmin, ymin, xmax, ymax] = scalePixel([column, row], [x_scale, y_scale]);\n        for (let y = ymin; y < ymax; y++) {\n          for (let x = xmin; x < xmax; x++) {\n            insert_pixel({ row: y, column: x, pixel, ...rest });\n          }\n        }\n      };\n    }\n  }\n\n  row_end ??= out_height_in_samples;\n\n  if (debug_level >= 1) console.log(\"[geowarp] method:\", method);\n\n  // see if can create direct pixel affine transformation\n  // skipping over spatial reference system\n  let inverse_pixel = ([c, r]) => {\n    const x = out_xmin + c * out_sample_width + half_out_sample_width;\n    const y = out_ymax - r * out_sample_height - half_out_sample_height;\n    const pt_out_srs = [x, y];\n    const pt_in_srs = same_srs ? pt_out_srs : inverse(pt_out_srs);\n    const pt_in_img = in_srs_pt_to_in_img_pt(pt_in_srs).map(n => Math.floor(n));\n    return pt_in_img;\n  };\n\n  if (turbo) {\n    const reproject = turbocharge({\n      bbox: [0, 0, out_width, out_height],\n      debug_level,\n      quiet: true,\n      reproject: inverse_pixel,\n      threshold: [0.5, 0.5]\n    })?.reproject;\n    if (reproject) inverse_pixel = pt => reproject(pt).map(n => Math.round(n));\n  }\n\n  let forward_turbocharged, inverse_turbocharged;\n  if (turbo) {\n    if (forward) {\n      out_bbox_in_srs ??= reprojectBoundingBox(out_bbox, inverse, { density: 100, nan_strategy: \"skip\" });\n      intersect_bbox_in_srs ??= intersect(in_bbox, out_bbox_in_srs);\n      forward_turbocharged = turbocharge({\n        bbox: intersect_bbox_in_srs,\n        debug_level,\n        quiet: true,\n        reproject: forward,\n        threshold: [half_out_sample_width, half_out_sample_height]\n      });\n    }\n    if (inverse) {\n      in_bbox_out_srs ??= reprojectBoundingBox(in_bbox, forward, { density: 100 });\n      intersect_bbox_out_srs ??= intersect(out_bbox, in_bbox_out_srs);\n      inverse_turbocharged = turbocharge({\n        bbox: intersect_bbox_out_srs,\n        debug_level,\n        quiet: true,\n        reproject: inverse,\n        threshold: [half_out_sample_width, half_out_sample_height]\n      });\n    }\n  }\n  if (debug_level >= 2) {\n    if (forward_turbocharged) console.log(\"[geowarp] turbocharged forward\");\n    if (inverse_turbocharged) console.log(\"[geowarp] turbocharged inverse\");\n  }\n  const fwd = forward_turbocharged?.reproject || forward;\n  const inv = inverse_turbocharged?.reproject || inverse;\n  // const [invCached, clearInvCache] = cacheFunction(inv);\n\n  let out_sample_height_in_srs, out_sample_width_in_srs, pixel_height_ratio, pixel_width_ratio;\n  if (method === \"near-vectorize\" || method === \"nearest-vectorize\") {\n    if (debug_level >= 2) console.log('[geowarp] choosing between \"near\" and \"vectorize\" for best speed');\n\n    out_bbox_in_srs ??= same_srs ? out_bbox : reprojectBoundingBox(out_bbox, inverse, { density: 100, nan_strategy: \"skip\" });\n\n    // average of how large each output pixel is in the input spatial reference system\n    out_sample_height_in_srs = (out_bbox_in_srs[3] - out_bbox_in_srs[1]) / out_height_in_samples;\n    out_sample_width_in_srs = (out_bbox_in_srs[2] - out_bbox_in_srs[0]) / out_width_in_samples;\n\n    pixel_height_ratio = out_sample_height_in_srs / in_pixel_height;\n    pixel_width_ratio = out_sample_width_in_srs / in_pixel_width;\n\n    if (debug_level >= 2) console.log(\"[geowarp] pixel_height_ratio:\", pixel_height_ratio);\n    if (debug_level >= 2) console.log(\"[geowarp] pixel_width_ratio:\", pixel_width_ratio);\n    if (pixel_height_ratio < 0.1 && pixel_width_ratio < 0.1) {\n      method = \"vectorize\";\n      if (debug_level >= 1) console.log('[geowarp] selected \"vectorize\" method as it is likely to be faster');\n    } else {\n      method = \"near\";\n      if (debug_level >= 1) console.log('[geowarp] selected \"near\" method as it is likely to be faster');\n    }\n  }\n\n  const should_skip =\n    skip_no_data_strategy === \"any\"\n      ? px => px.some(n => isInvalid(n) || in_no_data.includes(n))\n      : skip_no_data_strategy === \"all\"\n        ? px => px.every(n => isInvalid(n) || in_no_data.includes(n))\n        : () => false;\n\n  if (method === \"vectorize\") {\n    // const [cfwd, clear_forward_cache] = cacheFunction(fwd);\n\n    // reproject bounding box of output (e.g. a tile) into the spatial reference system of the input data\n    // setting nan_strategy to skip trims the box in case the output bbox extends over the bounds of the input projection\n    out_bbox_in_srs ??= same_srs ? out_bbox : reprojectBoundingBox(out_bbox, inverse, { density: 100, nan_strategy: \"skip\" });\n    let [left, bottom, right, top] = out_bbox_in_srs;\n\n    out_sample_height_in_srs ??= (top - bottom) / out_height_in_samples;\n    if (in_pixel_height < out_sample_height_in_srs) {\n      if (debug_level >= 1) {\n        console.warn(`[geowarp] normalized height of sample area of ${out_sample_height_in_srs} is larger than input pixel height of ${in_pixel_height}`);\n      }\n    }\n\n    out_sample_width_in_srs ??= (right - left) / out_width;\n    if (in_pixel_width < out_sample_width_in_srs) {\n      if (debug_level >= 1) {\n        console.warn(`[geowarp] normalized width of sample area of ${out_sample_width_in_srs} is larger than input pixel width of ${in_pixel_width}`);\n      }\n    }\n\n    // if have a cutline do additional clamping\n    const cutline_in_srs = cutline && reprojectGeoJSON(cutline, { reproject: inverse });\n\n    // in the future we might want to pull the function getBoundingBox into its own repo\n    const cutline_bbox_in_srs = cutline && getBoundingBox(cutline_in_srs);\n\n    if (!cutline || booleanIntersects(in_bbox, cutline_bbox_in_srs)) {\n      // update bounding box we sample from based on extent of cutline\n      [left, bottom, right, top] = cutline && cutline_strategy !== \"inside\" ? intersect(out_bbox_in_srs, cutline_bbox_in_srs) : out_bbox_in_srs;\n      if (debug_level >= 1) console.log(\"[geowarp] [left, bottom, right, top]:\", [left, bottom, right, top]);\n\n      if ((left < in_xmax && bottom < in_ymax && right > in_xmin) || top < in_ymin) {\n        const out_bbox_in_input_image_coords = reprojectBoundingBox(out_bbox_in_srs, in_srs_pt_to_in_img_pt);\n        if (debug_level >= 1) console.log(\"[geowarp] out_bbox_in_input_image_coords:\", out_bbox_in_input_image_coords);\n\n        // need to double check intersection in image space in case of rotation/skew\n        if (booleanIntersects(out_bbox_in_input_image_coords, [0, 0, in_width, in_height])) {\n          // snap to pixel array inidices\n          const [in_column_start, in_row_start, in_column_end, in_row_end] = out_bbox_in_input_image_coords.map(n => Math.floor(n));\n          const in_row_start_clamped = clamp(in_row_start, 0, in_height - 1);\n          const in_row_end_clamped = clamp(in_row_end, 0, in_height - 1);\n          const in_column_start_clamped = clamp(in_column_start, 0, in_width - 1);\n          const in_column_end_clamped = clamp(in_column_end, 0, in_width - 1);\n\n          for (let r = in_row_start_clamped; r <= in_row_end_clamped; r++) {\n            // if (clear_process_cache) clear_process_cache();\n            // clear_forward_cache(); // don't want cache to get too large, so just cache each row\n            for (let c = in_column_start_clamped; c <= in_column_end_clamped; c++) {\n              const raw_values = read_bands.map(band => select({ point: { band, row: r, column: c } }).value);\n\n              if (should_skip(raw_values)) continue;\n\n              const rect = polygon([c, r, c + 1, r + 1]);\n\n              // to-do: reproject to [I, J] (output image point) because\n              // intersection algorithm assumes an unskewed space\n              // we'll only have to do this if we want to support rotated/skewed output\n              const pixel_geometry_in_out_srs = reprojectGeoJSON(rect, { reproject: in_img_pt_to_out_srs_pt });\n\n              const intersect_options = {\n                debug: false,\n                raster_bbox: out_bbox,\n                raster_height: out_height_in_samples,\n                raster_width: out_width_in_samples,\n                geometry: pixel_geometry_in_out_srs\n              };\n\n              // apply band math expression, no-data mapping, and rounding when applicable\n              const pixel = process({ pixel: raw_values });\n\n              if (pixel !== null || insert_null_strategy === \"insert\") {\n                if (cutline) {\n                  intersect_options.per_pixel = ({ row, column }) => {\n                    if (segments_by_row[row].some(([start, end]) => column >= start && column <= end)) {\n                      insert_sample({ raw: raw_values, pixel, row, column });\n                    }\n                  };\n                } else {\n                  intersect_options.per_pixel = ({ row, column }) => {\n                    insert_sample({ raw: raw_values, pixel, row, column });\n                  };\n                }\n                dufour_peyton_intersection.calculate(intersect_options);\n              }\n            }\n          }\n        }\n      }\n    }\n  } else if (method === \"near\" || method === \"nearest\") {\n    const rmax = Math.min(row_end, out_height_in_samples);\n    for (let r = row_start; r < rmax; r++) {\n      // if (clear_process_cache) clear_process_cache();\n      const segments = segments_by_row[r];\n      for (let iseg = 0; iseg < segments.length; iseg++) {\n        const [cstart, cend] = segments[iseg];\n        for (let c = cstart; c <= cend; c++) {\n          const [x_in_raster_pixels, y_in_raster_pixels] = inverse_pixel([c, r]);\n\n          let raw_values = [];\n\n          if (x_in_raster_pixels < 0 || y_in_raster_pixels < 0 || x_in_raster_pixels >= in_width || y_in_raster_pixels >= in_height) {\n            // through reprojection, we can sometimes find ourselves just across the edge\n            raw_values = new Array(read_bands.length).fill(primary_in_no_data);\n          } else {\n            raw_values = selectPixel({\n              row: y_in_raster_pixels,\n              column: x_in_raster_pixels\n            });\n          }\n\n          if (should_skip(raw_values)) continue;\n          const pixel = process({ pixel: raw_values });\n          if (pixel !== null || insert_null_strategy === \"insert\") {\n            insert_sample({\n              row: r,\n              column: c,\n              pixel,\n              raw: raw_values,\n              x_in_raster_pixels,\n              y_in_raster_pixels\n            });\n          }\n        }\n      }\n    }\n  } else if (method === \"bilinear\") {\n    // see https://en.wikipedia.org/wiki/Bilinear_interpolation\n\n    const rmax = Math.min(row_end, out_height_in_samples);\n\n    let y = out_ymax + half_out_sample_height - row_start * out_sample_height;\n    for (let r = row_start; r < rmax; r++) {\n      // if (clear_process_cache) clear_process_cache();\n      y -= out_sample_height;\n      const segments = segments_by_row[r];\n      for (let iseg = 0; iseg < segments.length; iseg++) {\n        const [cstart, cend] = segments[iseg];\n        for (let c = cstart; c <= cend; c++) {\n          const x = out_xmin + c * out_sample_width + half_out_sample_width;\n          const pt_out_srs = [x, y];\n          const pt_in_srs = same_srs ? pt_out_srs : inv(pt_out_srs);\n          const [xInRasterPixels, yInRasterPixels] = in_srs_pt_to_in_img_pt(pt_in_srs);\n\n          const left = Math.floor(xInRasterPixels);\n          const right = Math.ceil(xInRasterPixels);\n          const top = Math.floor(yInRasterPixels);\n          const bottom = Math.ceil(yInRasterPixels);\n\n          // if xInRaster pixels is an integer,\n          // then leftWeight and rightWeight will equal zero\n          // that's not a problem though, because we ignore\n          // the weighting when values on each side are the same\n          const leftWeight = right - xInRasterPixels;\n          const rightWeight = xInRasterPixels - left;\n          const topWeight = top === bottom ? 0.5 : bottom - yInRasterPixels;\n          const bottomWeight = top === bottom ? 0.5 : yInRasterPixels - top;\n\n          const leftOutside = left < 0 || left >= in_width;\n          const rightOutside = right < 0 || right >= in_width;\n          const topOutside = top < 0 || top >= in_height;\n          const bottomOutside = bottom < 0 || bottom >= in_height;\n\n          const upperleftOutside = topOutside || leftOutside;\n          const upperRightOutside = topOutside || rightOutside;\n          const lowerleftOutside = bottomOutside || leftOutside;\n          const lowerRightOutside = bottomOutside || rightOutside;\n\n          const raw_values = new Array();\n          for (let i = 0; i < read_bands.length; i++) {\n            const read_band = read_bands[i];\n\n            const upperLeftValue = upperleftOutside ? primary_in_no_data : select({ point: { band: read_band, row: top, column: left } }).value;\n            const upperRightValue = upperRightOutside ? primary_in_no_data : select({ point: { band: read_band, row: top, column: right } }).value;\n            const lowerLeftValue = lowerleftOutside ? primary_in_no_data : select({ point: { band: read_band, row: bottom, column: left } }).value;\n            const lowerRightValue = lowerRightOutside ? primary_in_no_data : select({ point: { band: read_band, row: bottom, column: right } }).value;\n\n            let topValue;\n            const upperLeftInvalid = isInvalid(upperLeftValue) || in_no_data.includes(upperLeftValue);\n            const upperRightInvalid = isInvalid(upperRightValue) || in_no_data.includes(upperRightValue);\n            if (upperLeftInvalid && upperRightInvalid) {\n              // keep topValue undefined\n            } else if (upperLeftInvalid) {\n              topValue = upperRightValue;\n            } else if (upperRightInvalid) {\n              topValue = upperLeftValue;\n            } else if (upperLeftValue === upperRightValue) {\n              // because the upper-left and upper-right values are the same, no weighting is necessary\n              topValue = upperLeftValue;\n            } else {\n              topValue = leftWeight * upperLeftValue + rightWeight * upperRightValue;\n            }\n\n            let bottomValue;\n            const lowerLeftInvalid = isInvalid(lowerLeftValue) || in_no_data.includes(lowerLeftValue);\n            const lowerRightInvalid = isInvalid(lowerRightValue) || in_no_data.includes(lowerRightValue);\n            if (lowerLeftInvalid && lowerRightInvalid) {\n              // keep bottom value undefined\n            } else if (lowerLeftInvalid) {\n              bottomValue = lowerRightValue;\n            } else if (lowerRightInvalid) {\n              bottomValue = lowerLeftValue;\n            } else if (lowerLeftValue === lowerRightValue) {\n              // because the lower-left and lower-right values are the same, no weighting is necessary\n              bottomValue = lowerLeftValue;\n            } else {\n              bottomValue = leftWeight * lowerLeftValue + rightWeight * lowerRightValue;\n            }\n\n            let value;\n            if (topValue === undefined && bottomValue === undefined) {\n              value = primary_in_no_data;\n            } else if (topValue === undefined) {\n              value = bottomValue;\n            } else if (bottomValue === undefined) {\n              value = topValue;\n            } else {\n              value = bottomWeight * bottomValue + topWeight * topValue;\n            }\n\n            raw_values.push(value);\n          }\n          if (should_skip(raw_values)) continue;\n          const pixel = process({ pixel: raw_values });\n          if (pixel !== null || insert_null_strategy === \"insert\") {\n            insert_sample({ row: r, column: c, pixel, raw: raw_values });\n          }\n        }\n      }\n    }\n  } else {\n    // Q: why don't we pass no_data to the following statistical methods (e.g. fastMax)?\n    // A: we are already filtering out invalid and no-data values beforehand\n    let calc;\n    if (typeof method === \"function\") {\n      calc = values => method({ values });\n    } else if (method === \"max\") {\n      calc = values => fastMax(values, { theoretical_max });\n    } else if (method === \"mean\") {\n      calc = values => mean(values);\n    } else if (method === \"median\") {\n      calc = values => calcMedian(values);\n    } else if (method === \"min\") {\n      calc = values => fastMin(values, { theoretical_min });\n    } else if (method === \"mode\") {\n      calc = values => mode(values)[0];\n    } else if (method === \"mode-max\") {\n      calc = values => fastMax(mode(values));\n    } else if (method === \"mode-mean\") {\n      calc = values => mean(mode(values));\n    } else if (method === \"mode-median\") {\n      calc = values => calcMedian(mode(values));\n    } else if (method === \"mode-min\") {\n      calc = values => fastMin(mode(values));\n    } else {\n      throw new Error(`[geowarp] unknown method \"${method}\"`);\n    }\n\n    let top, left, bottom, right;\n    bottom = out_ymax - row_start * row_start;\n    const rmax = Math.min(row_end, out_height_in_samples);\n    for (let r = row_start; r < rmax; r++) {\n      // if (clear_process_cache) clear_process_cache();\n      top = bottom;\n      bottom = top - out_sample_height;\n      const segments = segments_by_row[r];\n      for (let iseg = 0; iseg < segments.length; iseg++) {\n        const [cstart, cend] = segments[iseg];\n        right = out_xmin + out_sample_width * cstart;\n        for (let c = cstart; c <= cend; c++) {\n          left = right;\n          right = left + out_sample_width;\n          // top, left, bottom, right is the sample area in the coordinate system of the output\n\n          // convert bbox in output srs to image px of input\n          // combing srs reprojection and srs-to-image mapping, ensures that bounding box corners\n          // are reprojected fully before calculating containing bbox\n          // (prevents drift in increasing bbox twice if image is warped)\n          let leftInRasterPixels, topInRasterPixels, rightInRasterPixels, bottomInRasterPixels;\n          try {\n            [leftInRasterPixels, topInRasterPixels, rightInRasterPixels, bottomInRasterPixels] = reprojectBoundingBox(\n              [left, bottom, right, top],\n              out_srs_pt_to_in_img_pt,\n              { nan_strategy: \"throw\" }\n            );\n          } catch (error) {\n            // if only one pixel (or row of pixels) extends over the edge of the projection's bounds, we probably don't want to fail the whole thing\n            // an example would be warping the globe from 3857 to 4326\n            continue;\n          }\n          if (debug_level >= 4) console.log(\"[geowarp] leftInRasterPixels:\", leftInRasterPixels);\n          if (debug_level >= 4) console.log(\"[geowarp] rightInRasterPixels:\", rightInRasterPixels);\n          if (debug_level >= 4) console.log(\"[geowarp] topInRasterPixels:\", topInRasterPixels);\n          if (debug_level >= 4) console.log(\"[geowarp] bottomInRasterPixels:\", bottomInRasterPixels);\n\n          let leftSample = Math.round(leftInRasterPixels);\n          let rightSample = Math.round(rightInRasterPixels);\n          let topSample = Math.round(topInRasterPixels);\n          let bottomSample = Math.round(bottomInRasterPixels);\n\n          // if output pixel isn't large enough to sample an input pixel\n          // just pick input pixel at the center of the output pixel\n          if (leftSample === rightSample) {\n            const xCenterSample = (rightInRasterPixels + leftInRasterPixels) / 2;\n            leftSample = Math.floor(xCenterSample);\n            rightSample = leftSample + 1;\n          }\n          if (topSample === bottomSample) {\n            const yCenterSample = (topInRasterPixels + bottomInRasterPixels) / 2;\n            topSample = Math.floor(yCenterSample);\n            bottomSample = topSample + 1;\n          }\n\n          let raw_values = [];\n          if (leftSample >= in_width || rightSample < 0 || bottomSample < 0 || topSample >= in_height) {\n            raw_values = new Array(read_bands.length).fill(primary_in_no_data);\n          } else {\n            // clamp edges to prevent clipping outside bounds\n            leftSample = Math.max(0, leftSample);\n            rightSample = Math.min(rightSample, in_width);\n            topSample = Math.max(0, topSample);\n            bottomSample = Math.min(bottomSample, in_height);\n\n            for (let i = 0; i < read_bands.length; i++) {\n              const read_band = read_bands[i];\n              const { data: values } = xdim.clip({\n                data: in_data,\n                flat: true,\n                layout: in_layout,\n                sizes: in_sizes,\n                rect: {\n                  band: [read_band, read_band],\n                  row: [topSample, Math.max(topSample, bottomSample - 1)],\n                  column: [leftSample, Math.max(leftSample, rightSample - 1)]\n                }\n              });\n              const valid_values = values.filter(v => typeof v === \"number\" && v === v && in_no_data.indexOf(v) === -1);\n              if (valid_values.length === 0) {\n                raw_values.push(primary_in_no_data);\n              } else {\n                raw_values.push(calc(valid_values));\n              }\n            }\n          }\n\n          if (should_skip(raw_values)) continue;\n          const pixel = process({ pixel: raw_values });\n          if (pixel !== null || insert_null_strategy === \"insert\") {\n            insert_sample({ row: r, column: c, pixel, raw: raw_values });\n          }\n        }\n      }\n    }\n  }\n\n  const generate_result = () => {\n    if (debug_level >= 1) console.log(\"[geowarp] took \" + (performance.now() - start_time).toFixed(0) + \"ms\");\n    return {\n      data: out_data,\n      out_bands,\n      out_height,\n      out_layout,\n      out_pixel_depth,\n      out_pixel_height,\n      out_pixel_width,\n      out_sample_height,\n      out_sample_width,\n      out_width,\n      read_bands\n    };\n  };\n\n  if (pending > 0) {\n    // async return\n    return new Promise(resolve => {\n      const ms = 5; // re-check every 5 milliseconds\n      const intervalId = setInterval(() => {\n        if (pending === 0) {\n          clearInterval(intervalId);\n          resolve(generate_result());\n        }\n      }, ms);\n    });\n  } else {\n    // sync return\n    return generate_result();\n  }\n};\n\nif (typeof module === \"object\") {\n  module.exports = geowarp;\n  module.exports.default = geowarp;\n}\nif (typeof window === \"object\") window.geowarp = geowarp;\nif (typeof self === \"object\") self.geowarp = geowarp;\n", "\"use strict\";\n\nconst compare_positive = require(\"./compare_positive.js\");\nconst is_zero = require(\"./is_zero.js\");\nconst long_multiplication = require(\"./long_multiplication.js\");\nconst long_addition = require(\"./long_addition.js\");\n\nfunction multiply_range(min, max, step = \"1\") {\n  if (is_zero(min)) return \"0\";\n  let product = min;\n  let n = min;\n  while (compare_positive(n, max) === \"<\") {\n    n = long_addition(n, step);\n    product = long_multiplication(product, n);\n  }\n\n  return product;\n}\n\nmodule.exports = multiply_range;\nmodule.exports.default = multiply_range;\n", "\"use strict\";\n\nconst multiply_range = require(\"./multiply_range.js\");\n\nfunction factorial(n) {\n  if (n === \"0\") return \"1\";\n  return multiply_range(\"1\", n);\n}\n\nmodule.exports = factorial;\nmodule.exports.default = factorial;\n", "\"use strict\";\n\nconst clean = require(\"./clean.js\");\nconst compare_positive = require(\"./compare_positive.js\");\nconst factorial = require(\"./factorial.js\");\nconst long_addition = require(\"./long_addition.js\");\nconst long_subtraction = require(\"./long_subtraction.js\");\nconst long_division = require(\"./long_division.js\");\nconst multiply_range = require(\"./multiply_range.js\");\n\nfunction binomial_coefficient(n, k) {\n  n = clean(n);\n  k = clean(k);\n\n  switch (compare_positive(n, k)) {\n    case \"=\":\n      return \"1\";\n    case \">\": {\n      const diff = long_subtraction(n, k);\n      const numerator = multiply_range(long_addition(k, \"1\"), n);\n      const denominator = factorial(diff);\n      return long_division(numerator, denominator);\n    }\n    case \"<\": {\n      throw new Error(\"[binominal_coefficient] unsupported\");\n    }\n  }\n}\n\nmodule.exports = binomial_coefficient;\nmodule.exports.default = binomial_coefficient;\n", "\"use strict\";\n\nconst is_zero = require(\"./is_zero.js\");\nconst sign_nonzero = require(\"./sign_nonzero.js\");\n\nfunction sign(n) {\n  return is_zero(n) ? \"\" : sign_nonzero(n);\n}\n\nmodule.exports = sign;\nmodule.exports.default = sign;\n", "\"use strict\";\n\nconst absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\nconst long_addition = require(\"./long_addition.js\");\nconst sign = require(\"./sign.js\");\n\nfunction ceil(n) {\n  n = clean(n);\n\n  const idot = n.indexOf(\".\");\n\n  // if not a decimal number\n  // return the original number\n  if (idot === -1) return n;\n\n  const nsign = sign(n);\n\n  // convert n to an absolute integer\n  n = absolute(n).split(\".\")[0];\n\n  if (nsign === \"+\") {\n    // like 1.5 => 1 => 2\n    return long_addition(n, \"1\");\n  } else if (nsign === \"-\") {\n    // like -1.5 => -1\n    if (n === \"0\" || n === \"\") {\n      return \"0\";\n    } else {\n      return \"-\" + n;\n    }\n  }\n}\n\nmodule.exports = ceil;\nmodule.exports.default = ceil;\n", "module.exports = {\n  PI_100: '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679'\n};\n", "\"use strict\";\n\nconst { MAX_SAFE_INTEGER } = require(\"./max_safe_integer.js\");\nconst { MAX_SAFE_INTEGER_LENGTH } = require(\"./max_safe_integer_length.js\");\nconst { PI } = require(\"./pi_100.js\");\n\nmodule.exports = {\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_INTEGER_LENGTH,\n  PI\n};\n", "\"use strict\";\n\nconst count_decimal_digits = require(\"./count_decimal_digits.js\");\n\n/**\n * @private\n * @param {String} n - decimal string\n * @returns {Array.<string>} n - fraction like [\"123\", \"100\"] (meaning 123/100)\n */\nfunction fraction(n) {\n  const decimal_digits = count_decimal_digits(n);\n\n  const numerator = n.replace(/\\./g, \"\").replace(/^0/, \"\");\n  const denominator = 1 + \"0\".repeat(decimal_digits);\n\n  return [numerator, denominator];\n}\n\nmodule.exports = fraction;\nmodule.exports.default = fraction;\n", "\"use strict\";\n\nconst multiply_rational = require(\"./multiply_rational.js\");\n\n// assuming:\n// - base and exponent are clean\n// - exponent is a positive integer\nfunction pow_positive(base, exponent) {\n  const imax = Number(exponent);\n  let product = base;\n  for (let i = 1; i < imax; i++) {\n    product = multiply_rational([product, base]);\n  }\n  return product;\n}\n\nmodule.exports = pow_positive;\nmodule.exports.default = pow_positive;\n", "\"use strict\";\n\n/**\n * @param {String} n\n * @returns {Boolean} result\n */\nfunction is_fraction(n) {\n  return n.includes(\"/\");\n}\n\nmodule.exports = is_fraction;\nmodule.exports.default = is_fraction;\n", "\"use strict\";\n\nfunction parse_fraction(n) {\n  return n.split(\"/\");\n}\n\nmodule.exports = parse_fraction;\nmodule.exports.default = parse_fraction;\n", "\"use strict\";\n\nconst divide = require(\"./divide.js\");\nconst is_fraction = require(\"./is_fraction.js\");\nconst parse_fraction = require(\"./parse_fraction.js\");\n\nfunction reciprocal(n, { max_decimal_digits = 100, fraction = false } = {}) {\n  if (is_fraction(n)) {\n    const [numerator, denominator] = parse_fraction(n);\n    if (fraction) {\n      return denominator + \"/\" + numerator;\n    } else {\n      return divide(denominator, numerator, { max_decimal_digits });\n    }\n  } else {\n    if (fraction) {\n      return \"1/\" + n;\n    } else {\n      return divide(\"1\", n, { max_decimal_digits });\n    }\n  }\n}\n\nmodule.exports = reciprocal;\nmodule.exports.default = reciprocal;\n", "\"use strict\";\n\nconst clean = require(\"./clean.js\");\nconst is_integer = require(\"./is_integer.js\");\n\nfunction is_even(n) {\n  n = clean(n);\n\n  if (!is_integer(n)) throw new Error(\"can't call is_even on decimal\");\n\n  return [\"0\", \"2\", \"4\", \"6\", \"8\"].includes(n.charAt(n.length - 1));\n}\n\nmodule.exports = is_even;\nmodule.exports.default = is_even;\n", "\"use strict\";\n\nconst absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\n\nfunction count_integer_digits(n) {\n  n = absolute(clean(n));\n\n  const i = n.indexOf(\".\");\n\n  return (i === -1 ? n.length : i).toString();\n}\n\nmodule.exports = count_integer_digits;\nmodule.exports.default = count_integer_digits;\n", "\"use strict\";\n\nconst ceil = require(\"./ceil.js\");\nconst count_integer_digits = require(\"./count_integer_digits\");\nconst divide = require(\"./divide.js\");\n\n/**\n * @description returns the number of integer digits for a given nth root\n * @param {*} radicand\n * @param {*} index\n * @returns {String} the number of integer digits\n */\nfunction root_integer_digits(radicand, index) {\n  const digits = count_integer_digits(radicand);\n  if (digits === \"0\") return \"0\";\n  return ceil(divide(digits, index, { max_decimal_digits: 1 }));\n}\n\nmodule.exports = root_integer_digits;\nmodule.exports.default = root_integer_digits;\n", "\"use strict\";\n\nconst absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\nconst compare_positive = require(\"./compare_positive.js\");\nconst is_even = require(\"./is_even.js\");\nconst is_integer = require(\"./is_integer.js\");\nconst is_negative = require(\"./is_negative.js\");\nconst pow_positive = require(\"./pow_positive.js\");\nconst root_integer_digits = require(\"./root_integer_digits.js\");\n\n/**\n *\n * @param {String} radicand\n * @param {String} index\n * @param {Object} options\n * @param {Boolean} options.imaginary - imaginary numbers are supported\n * @param {Number} options.max_decimal_digits - maximum number of decimal digits allowed in the result\n * @returns {String} result\n */\nfunction root(radicand, index, { imaginary = true, max_decimal_digits = 100 } = {}) {\n  radicand = clean(radicand);\n  index = clean(index);\n\n  if (index === \"1\") return radicand;\n  if (radicand === \"1\") return \"1\";\n\n  if (!is_integer(index)) throw new Error(\"[preciso] can't find fractional roots\");\n  if (is_negative(index)) throw new Error(\"[preciso] can't find root of negative indexes\");\n\n  const rad = absolute(radicand);\n\n  const radicand_is_negative = is_negative(radicand);\n  const index_is_even = is_even(index);\n\n  const has_imaginary = radicand_is_negative && index_is_even;\n  if (has_imaginary && !imaginary) throw new Error(\"[preciso] root has an imaginary number\");\n\n  const out_sign = radicand_is_negative && !index_is_even ? \"-\" : \"\";\n\n  const count_of_integer_places = root_integer_digits(rad, index);\n\n  const digits = [\"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\", \"0\"];\n\n  let left = \"\";\n\n  for (let i = 0; i < count_of_integer_places; i++) {\n    for (let ii = 0; ii < digits.length; ii++) {\n      const digit = digits[ii];\n      const test_start = left + digit;\n      let test_base = test_start + \"0\".repeat(count_of_integer_places - i - 1);\n      const test_res = pow_positive(test_base, index);\n      const comparison = compare_positive(test_res, rad);\n      if (comparison === \"=\") {\n        if (has_imaginary) test_base += \"i\";\n        return out_sign + test_base;\n      } else if (comparison === \"<\") {\n        left = test_start;\n        break;\n      }\n    }\n  }\n\n  let base = left + \".\";\n\n  for (let i = 0; i < max_decimal_digits; i++) {\n    let added = false;\n    for (let ii = 0; ii < digits.length; ii++) {\n      const digit = digits[ii];\n      let test_base = base + digit;\n      const test_res = pow_positive(test_base, index);\n      const comparison = compare_positive(test_res, rad);\n      if (comparison === \"=\") {\n        if (has_imaginary) test_base += \"i\";\n        return out_sign + test_base;\n      } else if (comparison === \"<\") {\n        base = test_base;\n        added = true;\n        break;\n      }\n    }\n    if (!added) break;\n  }\n\n  if (has_imaginary) base += \"i\";\n\n  return out_sign + base;\n}\n\nmodule.exports = root;\nmodule.exports.default = root;\n", "\"use strict\";\n\nconst clean = require(\"./clean.js\");\nconst compare = require(\"./compare.js\");\n\nfunction min(nums) {\n  // called like min(n1, n2, n3...)\n  if (typeof nums === \"string\") nums = Array.prototype.slice.call(arguments);\n  let result = clean(nums[0]);\n  const len = nums.length;\n  for (let i = 1; i < len; i++) {\n    const n = nums[i];\n    if (compare(n, result) === \"<\") {\n      result = n;\n    }\n  }\n  return result;\n}\n\nmodule.exports = min;\nmodule.exports.default = min;\n", "\"use strict\";\n\nconst compare_positive = require(\"./compare_positive.js\");\nconst divide = require(\"./divide.js\");\nconst is_integer = require(\"./is_integer.js\");\nconst long_addition = require(\"./long_addition.js\");\n\n/**\n *\n * @param {String} start - numerical string\n * @param {String} end - numerical end\n * @returns {Array.<string>} primes - array of prime numbers as strings\n */\nfunction primes(start = \"0\", end = \"100\") {\n  const prime_single_digits = [\"2\", \"3\", \"5\", \"7\", \"11\"];\n  const results = prime_single_digits.filter(n => compare_positive(n, start) !== \"<\" && compare_positive(n, end) !== \">\");\n\n  let num = \"13\";\n\n  while (compare_positive(num, end) !== \">\") {\n    // don't even bother checking if ends with 5 or all one number\n    if (!(/^\\d+5/.test(num) || /^(\\d)\\1+/.test(num))) {\n      if ([\"9\", \"7\", \"3\"].every(digit => !is_integer(divide(num, digit)))) {\n        results.push(num);\n      }\n    }\n    num = long_addition(num, \"2\");\n  }\n  return results;\n}\n\nmodule.exports = primes;\nmodule.exports.default = primes;\n", "\"use strict\";\n\nconst divide = require(\"./divide.js\");\nconst is_even = require(\"./is_even.js\");\nconst min = require(\"./min.js\");\nconst primes = require(\"./primes.js\");\n\nfunction simplify_fraction(numerator, denominator) {\n  // divide by prime numbers up to 1000\n  const digits = primes(\"2\", min([\"1000\", denominator, denominator]));\n\n  // shave off excess zeros\n  while (numerator.endsWith(\"0\") && denominator.endsWith(\"0\")) {\n    numerator = numerator.substring(0, numerator.length - 1);\n    denominator = denominator.substring(0, denominator.length - 1);\n  }\n\n  while (is_even(numerator) && is_even(denominator)) {\n    numerator = divide(numerator, \"2\");\n    denominator = divide(denominator, \"2\");\n  }\n\n  let proceed = true;\n  while (proceed) {\n    proceed = false;\n\n    // attempt to divide numerator and denominator by the same digit\n    for (let i = 0; i < digits.length; i++) {\n      const digit = digits[i];\n      const digit_length = digit.length;\n      const max_decimal_digits = digit_length + 1;\n      const numerator_divided = divide(numerator, digit, { ellipsis: true, max_decimal_digits });\n      if (numerator_divided.indexOf(\".\") === -1) {\n        const denominator_divided = divide(denominator, digit, { ellipsis: true, max_decimal_digits });\n        if (denominator_divided.indexOf(\".\") === -1) {\n          // console.log(`both \"${numerator} and ${denominator} are evenly divisible by \"${digit}\"`);\n          numerator = numerator_divided;\n          denominator = denominator_divided;\n          proceed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  return [numerator, denominator];\n}\n\nmodule.exports = simplify_fraction;\nmodule.exports.default = simplify_fraction;\n", "\"use strict\";\n\nconst absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\nconst divide = require(\"./divide.js\");\nconst fraction = require(\"./fraction.js\");\nconst is_integer = require(\"./is_integer\");\nconst is_imaginary = require(\"./is_imaginary.js\");\nconst is_odd = require(\"./is_odd.js\");\nconst is_zero = require(\"./is_zero.js\");\nconst multiply = require(\"./multiply.js\");\nconst pow_positive = require(\"./pow_positive.js\");\nconst reciprocal = require(\"./reciprocal.js\");\nconst root = require(\"./root.js\");\nconst round = require(\"./round.js\");\nconst sign = require(\"./sign\");\nconst simplify_fraction = require(\"./simplify_fraction.js\");\n\nfunction pow(\n  base,\n  exponent,\n  {\n    zero_to_the_power_of_zero = \"1\",\n    // passed to divide then long_division\n    ellipsis = false,\n    imaginary = true,\n    max_decimal_digits = 100,\n    fraction: use_fraction = false\n  } = {}\n) {\n  base = clean(base);\n  exponent = clean(exponent);\n\n  const base_is_imaginary = imaginary && is_imaginary(base);\n  if (base_is_imaginary) base = base.replace(/i$/, \"\");\n\n  const base_is_zero = is_zero(base);\n  const exponent_is_zero = is_zero(exponent);\n\n  if (base_is_zero && exponent_is_zero) {\n    // https://en.wikipedia.org/wiki/Zero_to_the_power_of_zero\n    return zero_to_the_power_of_zero;\n  }\n\n  if (exponent_is_zero) {\n    return \"1\";\n  }\n\n  // const sign_of_base = sign(base);\n  const sign_of_exponent = sign(exponent);\n\n  if (base_is_zero) {\n    if (sign_of_exponent === \"+\") {\n      return \"0\";\n    } else if (sign_of_exponent === \"-\") {\n      return \"Infinity\";\n    }\n  }\n\n  const exponent_is_integer = is_integer(exponent);\n\n  if (sign_of_exponent === \"+\" && exponent_is_integer) {\n    let product = pow_positive(base, exponent);\n    if (typeof max_decimal_digits === \"number\") {\n      product = round(product, { digits: max_decimal_digits });\n    }\n    if (base_is_imaginary && is_odd(exponent)) product += \"i\";\n    return product;\n  }\n\n  if (sign_of_exponent === \"-\" && exponent_is_integer) {\n    // e.g. pow(7, -2) => 1 / pow(7, 2)\n    const numerator = \"1\";\n    const denominator = pow_positive(base, absolute(exponent));\n    return divide(numerator, denominator, { ellipsis, max_decimal_digits });\n  }\n\n  if (!exponent_is_integer) {\n    exponent = absolute(exponent);\n\n    let [numerator, denominator] = exponent.includes(\"/\") ? exponent.split(\"/\") : fraction(exponent);\n\n    [numerator, denominator] = simplify_fraction(numerator, denominator);\n\n    // base could be an integer or decimal\n    // denominator is an integer\n    let inner = root(base, denominator, { imaginary });\n\n    let result = multiply(numerator, inner);\n    // console.log({ sign_of_exponent, base, exponent, numerator, denominator, inner, result, max_decimal_digits })\n\n    if (typeof max_decimal_digits === \"number\") result = round(result, { digits: max_decimal_digits });\n    // console.log(\"rounded:\", result);\n\n    if (sign_of_exponent === \"-\") {\n      result = reciprocal(result, { fraction: use_fraction, max_decimal_digits });\n    }\n\n    return result;\n  }\n}\n\nmodule.exports = pow;\nmodule.exports.default = pow;\n", "\"use strict\";\n\nconst pow = require(\"./pow.js\");\n\n/**\n *\n * @param {String} base - numerical string\n * @returns {String} square as a numerical string\n */\nfunction square(base, options) {\n  return pow(base, \"2\", options);\n}\n\nmodule.exports = square;\nmodule.exports.default = square;\n", "\"use strict\";\n\nconst add = require(\"./add.js\");\nconst is_zero = require(\"./is_zero.js\");\nconst square = require(\"./square.js\");\nconst multiply_rational = require(\"./multiply_rational.js\");\nconst divide = require(\"./divide.js\");\n\n/**\n * @name cosine_radians\n * @private\n * @param {String} n\n * @returns {String} cosine of n\n */\nfunction cosine_radians(n, { steps = 100, max_decimal_digits = 100 } = {}) {\n  if (is_zero(n)) return \"0\";\n\n  let sign = \"-\";\n  let result = \"1\";\n  let imax = steps;\n  let nsquare = square(n);\n  let numerator = \"1\";\n  let denominator = \"1\";\n  let f1;\n  let f2 = \"0\";\n  for (let i = 0; i < imax; i++) {\n    f1 = add(f2, \"1\");\n    f2 = add(f1, \"1\");\n\n    // same as increasing the power by 2\n    numerator = multiply_rational([numerator, nsquare], { max_decimal_digits });\n    denominator = multiply_rational([denominator, f1, f2], { max_decimal_digits });\n    const diff = divide(numerator, denominator, { max_decimal_digits });\n\n    result = add(result, sign + diff);\n\n    sign = sign === \"-\" ? \"+\" : \"-\";\n  }\n  return result;\n}\n\nmodule.exports = cosine_radians;\nmodule.exports.default = cosine_radians;\n", "\"use strict\";\n\nconst pow = require(\"./pow.js\");\n\n/**\n *\n * @param {String} base - numerical string\n * @returns {String} cube (base * base * base) as a numerical string\n */\nfunction cube(base, options) {\n  return pow(base, \"3\", options);\n}\n\nmodule.exports = cube;\nmodule.exports.default = cube;\n", "\"use strict\";\n\nconst root = require(\"./root.js\");\n\nfunction cube_root(radicand, options) {\n  return root(radicand, \"3\", options);\n}\n\nmodule.exports = cube_root;\nmodule.exports.default = cube_root;\n", "\"use strict\";\n\nconst add = require(\"./add.js\");\nconst divide = require(\"./divide.js\");\n\nfunction eulers_number({ max_decimal_digits = 100, steps = 100 } = {}) {\n  let sum = \"1\";\n  let step = \"1\";\n  for (let i = 1; i < steps; i++) {\n    step = divide(step, i.toString(), { max_decimal_digits });\n    sum = add(sum, step);\n  }\n\n  return sum;\n}\n\nmodule.exports = eulers_number;\nmodule.exports.default = eulers_number;\n", "\"use strict\";\n\nfunction is_negative_infinity(n) {\n  return !!n.match(/^-inf(inity)?$/i);\n}\n\nmodule.exports = is_negative_infinity;\nmodule.exports.default = is_negative_infinity;\n", "\"use strict\";\n\nfunction is_positive_infinity(n) {\n  return !!n.match(/^\\+?inf(inity)?$/i);\n}\n\nmodule.exports = is_positive_infinity;\nmodule.exports.default = is_positive_infinity;\n", "\"use strict\";\n\nconst clean = require(\"./clean.js\");\nconst is_negative_infinity = require(\"./is_negative_infinity.js\");\nconst is_positive_infinity = require(\"./is_positive_infinity.js\");\nconst is_zero = require(\"./is_zero.js\");\nconst eulers_number = require(\"./eulers_number.js\");\nconst pow = require(\"./pow.js\");\n\nfunction exp(power, { max_decimal_digits = 100 } = {}) {\n  const e = eulers_number({ max_decimal_digits: 2 * max_decimal_digits });\n\n  if (is_negative_infinity(power)) return \"0\";\n  if (is_positive_infinity(power)) return \"Infinity\";\n  if (is_zero(power)) return \"1\";\n\n  power = clean(power);\n\n  return pow(e, power, { max_decimal_digits });\n}\n\nmodule.exports = exp;\nmodule.exports.default = exp;\n", "\"use strict\";\n\nconst absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\nconst sign = require(\"./sign.js\");\n\nfunction flip_sign(n) {\n  n = clean(n);\n  const s = sign(n);\n  if (s === \"\") {\n    return n;\n  } else if (s === \"-\") {\n    return absolute(n);\n  } else if (s === \"+\") {\n    return \"-\" + n;\n  }\n\n  return undefined;\n}\n\nmodule.exports = flip_sign;\nmodule.exports.default = flip_sign;\n", "\"use strict\";\n\nconst absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\nconst long_addition = require(\"./long_addition.js\");\nconst sign = require(\"./sign.js\");\n\nfunction floor(n) {\n  n = clean(n);\n\n  const idot = n.indexOf(\".\");\n\n  // if not a decimal number\n  // return the original number\n  if (idot === -1) return n;\n\n  const nsign = sign(n);\n\n  // convert n to an absolute integer\n  n = absolute(n).split(\".\")[0];\n\n  if (nsign === \"+\") {\n    // like 1.5 => 1\n    return n;\n  } else if (nsign === \"-\") {\n    if (n === \"0\" || n === \"\") {\n      // like -0.5\n      return \"-1\";\n    } else {\n      // like -1.5 => -2\n      return \"-\" + long_addition(n, \"1\");\n    }\n  }\n}\n\nmodule.exports = floor;\nmodule.exports.default = floor;\n", "\"use strict\";\n\nconst root = require(\"./root.js\");\n\nfunction square_root(radicand, options) {\n  return root(radicand, \"2\", options);\n}\n\nmodule.exports = square_root;\nmodule.exports.default = square_root;\n", "\"use strict\";\n\nconst add = require(\"./add.js\");\n\nfunction sum(nums) {\n  let total = \"0\";\n  // using iterator protocol\n  for (let num of nums) {\n    total = add(total, num);\n  }\n  return total;\n}\n\nmodule.exports = sum;\nmodule.exports.default = sum;\n", "\"use strict\";\n\nconst square = require(\"./square.js\");\nconst square_root = require(\"./square_root.js\");\nconst sum = require(\"./sum.js\");\n\nfunction hypotenuse() {\n  const args = Array.from(arguments);\n  const options = typeof args[args.length - 1] === \"object\" ? args[args.length - 1] : undefined;\n  const nums = Array.isArray(args[0]) ? args[0] : options ? args.slice(0, args.length - 1) : args;\n  const squares = nums.map(n => square(n));\n  return square_root(sum(squares), options);\n}\n\nmodule.exports = hypotenuse;\nmodule.exports.default = hypotenuse;\n", "\"use strict\";\n\nfunction is_factorial(n) {\n  return !!n.match(/^\\d+!$/i);\n}\n\nmodule.exports = is_factorial;\nmodule.exports.default = is_factorial;\n", "\"use strict\";\n\nconst clean = require(\"./clean.js\");\nconst compare = require(\"./compare.js\");\n\nfunction max(nums) {\n  // called like max(n1, n2, n3...)\n  if (typeof nums === \"string\") nums = Array.prototype.slice.call(arguments);\n  let result = clean(nums[0]);\n  const len = nums.length;\n  for (let i = 1; i < len; i++) {\n    const n = nums[i];\n    if (compare(n, result) === \">\") {\n      result = n;\n    }\n  }\n  return result;\n}\n\nmodule.exports = max;\nmodule.exports.default = max;\n", "\"use strict\";\n\nconst add = require(\"./add.js\");\nconst divide = require(\"./divide.js\");\n\nfunction mean(nums, options) {\n  let count = 0;\n  let total = \"0\";\n  for (let num of nums) {\n    count++;\n    total = add(total, num);\n  }\n  return divide(total, count.toString(), options);\n}\n\nmodule.exports = mean;\nmodule.exports.default = mean;\n", "\"use strict\";\n\nconst add = require(\"./add.js\");\nconst long_addition = require(\"./long_addition.js\");\nconst divide = require(\"./divide.js\");\nconst multiply_rational = require(\"./multiply_rational.js\");\n\n// calculate PI using Nilakantha Series\nfunction nilakantha(steps = 100, { divide_options } = {}) {\n  let sign = \"+\";\n  let pi = \"3\";\n  let a = \"2\";\n  let b = \"3\";\n  let c = \"4\";\n  for (let i = 1; i < steps; i++) {\n    const divisor = multiply_rational([a, b, c]);\n\n    const part = sign + divide(\"4\", divisor, divide_options);\n\n    pi = add(pi, part);\n\n    // flip sign\n    sign = sign === \"-\" ? \"+\" : \"-\";\n\n    a = c;\n    b = long_addition(c, \"1\");\n    c = long_addition(b, \"1\");\n  }\n  return pi;\n}\n\nmodule.exports = nilakantha;\nmodule.exports.default = nilakantha;\n", "\"use strict\";\n\nconst add = require(\"./add.js\");\nconst divide = require(\"./divide.js\");\nconst multiply_rational = require(\"./multiply_rational.js\");\nconst round = require(\"./round.js\");\nconst subtract = require(\"./subtract.js\");\nconst square = require(\"./square.js\");\n\nfunction ols(points, options) {\n  const number_of_points = points.length;\n  let sum_of_x = \"0\";\n  let sum_of_x_squares = \"0\";\n  let sum_of_y = \"0\";\n  let sum_of_y_squares = \"0\";\n\n  if (number_of_points === 0) throw Error(\"[preciso] zero points passed to linear_regression\");\n\n  for (let i = 0; i < number_of_points; i++) {\n    const [x, y] = points[i];\n    sum_of_x = add(sum_of_x, x);\n    sum_of_x_squares = add(sum_of_x_squares, square(x));\n    sum_of_y = add(sum_of_y, y);\n    sum_of_y_squares = add(sum_of_y_squares, square(y));\n  }\n\n  const number_of_points_as_string = number_of_points.toString();\n  const x_mean = divide(sum_of_x, number_of_points_as_string);\n  const y_mean = divide(sum_of_y, number_of_points_as_string);\n\n  // second pass to calculate errors\n  let sum_of_errors = \"0\";\n  let sum_of_residual_squares = \"0\";\n  for (let i = 0; i < number_of_points; i++) {\n    const [x, y] = points[i];\n\n    const x_error = subtract(x, x_mean);\n    const y_error = subtract(y, y_mean);\n    const xy_error = multiply_rational([x_error, y_error]);\n    sum_of_errors = add(sum_of_errors, xy_error);\n\n    const x_error_square = square(x_error);\n    sum_of_residual_squares = add(sum_of_residual_squares, x_error_square);\n  }\n\n  // y = m * x + b\n  let m = divide(sum_of_errors, sum_of_residual_squares);\n  let b = subtract(y_mean, multiply_rational(m, x_mean));\n\n  if (options && typeof options.max_decimal_digits === \"number\") {\n    m = round(m, { digits: options.max_decimal_digits });\n    b = round(b, { digits: options.max_decimal_digits });\n  }\n\n  return { m, b };\n}\n\nmodule.exports = ols;\nmodule.exports.default = ols;\n", "\"use strict\";\n\nfunction truncate(n) {\n  const i = n.indexOf(\".\");\n  if (i === -1) return n;\n  else return n.substring(0, i);\n}\n\nmodule.exports = truncate;\nmodule.exports.default = truncate;\n", "\"use strict\";\n\nconst absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\nconst compare_positive = require(\"./compare_positive.js\");\nconst long_division = require(\"./long_division.js\");\nconst multiply = require(\"./multiply.js\");\nconst subtract = require(\"./subtract.js\");\nconst truncate = require(\"./truncate.js\");\n\nfunction remainder(dividend, divisor) {\n  // console.log(\"\\n\\nremainder\");\n  dividend = clean(dividend);\n  divisor = clean(divisor);\n\n  const sign = dividend[0] === \"-\" ? \"-\" : \"\";\n\n  dividend = absolute(dividend);\n  divisor = absolute(divisor);\n\n  const comparison = compare_positive(dividend, divisor);\n  if (comparison === \"=\") return \"0\";\n\n  // if dividend is less than the divisor, just return the dividend\n  if (comparison === \"<\") {\n    if (dividend[0] === \".\") dividend = \"0\" + dividend;\n    return sign + dividend;\n  }\n\n  // can use long_division because know that\n  // dividend and divisor are positive numerical strings\n  const quotient = long_division(dividend, divisor, { max_decimal_places: 0 });\n\n  const times = truncate(quotient);\n\n  const product = multiply(divisor, times);\n\n  return sign + subtract(dividend, product);\n}\n\nmodule.exports = remainder;\nmodule.exports.default = remainder;\n", "\"use strict\";\n\nconst add = require(\"./add.js\");\nconst is_zero = require(\"./is_zero.js\");\nconst square = require(\"./square.js\");\nconst multiply_rational = require(\"./multiply_rational.js\");\nconst divide = require(\"./divide.js\");\n\nfunction sine_radians(n, { steps = 100, max_decimal_digits = 100 } = {}) {\n  if (is_zero(n)) return \"0\";\n\n  let sign = \"-\";\n  let result = n;\n  let imax = steps;\n  let nsquare = square(n);\n  let numerator = n;\n  let denominator = \"1\";\n  let f1;\n  let f2 = \"1\";\n  for (let i = 0; i < imax; i++) {\n    f1 = add(f2, \"1\");\n    f2 = add(f1, \"1\");\n\n    // same as increasing the power by 2\n    numerator = multiply_rational([numerator, nsquare], { max_decimal_digits });\n    denominator = multiply_rational([denominator, f1, f2], { max_decimal_digits });\n    const diff = divide(numerator, denominator, { max_decimal_digits });\n    // console.log({ f1, f2, sign, numerator, denominator, diff });\n\n    result = add(result, sign + diff);\n\n    sign = sign === \"-\" ? \"+\" : \"-\";\n  }\n  return result;\n}\n\nmodule.exports = sine_radians;\nmodule.exports.default = sine_radians;\n", "\"use strict\";\n\nconst divide = require(\"./divide.js\");\nconst exp = require(\"./exp.js\");\nconst sum = require(\"./sum.js\");\n\nfunction softmax(vector, { max_decimal_digits }) {\n  vector = vector.map(n => exp(n, { max_decimal_digits }));\n\n  const total = sum(vector);\n\n  return vector.map(n => divide(n, total, { max_decimal_digits, ellipsis: false }));\n}\n\nmodule.exports = softmax;\nmodule.exports.default = softmax;\n", "\"use strict\";\n\nconst compare = require(\"./compare\");\n\nfunction sort(nums, { direction = \"ascending\" } = { direction: \"ascending\" }) {\n  const op = direction === \"desc\" || direction === \"descending\" ? \"<\" : \">\";\n  return nums.sort((a, b) => (compare(a, b) === op ? 1 : -1));\n}\n\nmodule.exports = sort;\nmodule.exports.default = sort;\n", "\"use strict\";\n\n/* global define */\nconst absolute = require(\"./absolute.js\");\nconst add = require(\"./add.js\");\nconst binomial_coefficient = require(\"./binomial_coefficient.js\");\nconst ceil = require(\"./ceil.js\");\nconst clean = require(\"./clean.js\");\nconst compare = require(\"./compare.js\");\nconst compare_positive = require(\"./compare_positive.js\");\nconst constants = require(\"./constants/index.js\");\nconst cosine_radians = require(\"./cosine_radians.js\");\nconst count_decimal_digits = require(\"./count_decimal_digits.js\");\nconst count_integer_digits = require(\"./count_integer_digits.js\");\nconst cube = require(\"./cube.js\");\nconst cube_root = require(\"./cube_root.js\");\nconst divide = require(\"./divide.js\");\nconst eulers_number = require(\"./eulers_number.js\");\nconst exp = require(\"./exp.js\");\nconst expand = require(\"./expand.js\");\nconst factorial = require(\"./factorial.js\");\nconst flip_sign = require(\"./flip_sign.js\");\nconst floor = require(\"./floor.js\");\nconst fraction = require(\"./fraction.js\");\n// const gregory_leibniz = require(\"./gregory_leibniz.js\");\nconst hypotenuse = require(\"./hypotenuse.js\");\nconst is_factorial = require(\"./is_factorial.js\");\nconst is_infinity = require(\"./is_infinity.js\");\nconst is_integer = require(\"./is_integer.js\");\nconst is_negative_infinity = require(\"./is_negative_infinity.js\");\nconst is_positive_infinity = require(\"./is_positive_infinity.js\");\nconst is_zero = require(\"./is_zero.js\");\nconst long_addition = require(\"./long_addition.js\");\nconst long_division = require(\"./long_division.js\");\nconst long_multiplication = require(\"./long_multiplication.js\");\nconst long_subtraction = require(\"./long_subtraction.js\");\nconst max = require(\"./max.js\");\nconst mean = require(\"./mean.js\");\nconst min = require(\"./min.js\");\nconst multiply = require(\"./multiply.js\");\nconst multiply_array = require(\"./multiply_array.js\");\nconst multiply_range = require(\"./multiply_range.js\");\nconst nilakantha = require(\"./nilakantha.js\");\nconst ols = require(\"./ols.js\");\nconst pow = require(\"./pow.js\");\nconst pow_positive = require(\"./pow_positive.js\");\nconst primes = require(\"./primes.js\");\nconst reciprocal = require(\"./reciprocal.js\");\nconst remainder = require(\"./remainder.js\");\nconst root = require(\"./root.js\");\nconst root_integer_digits = require(\"./root_integer_digits.js\");\nconst round = require(\"./round.js\");\nconst round_last_decimal = require(\"./round_last_decimal.js\");\nconst sign = require(\"./sign.js\");\nconst sign_nonzero = require(\"./sign_nonzero.js\");\nconst simplify_fraction = require(\"./simplify_fraction.js\");\nconst sine_radians = require(\"./sine_radians.js\");\nconst softmax = require(\"./softmax.js\");\nconst sort = require(\"./sort.js\");\nconst square = require(\"./square.js\");\nconst square_root = require(\"./square_root.js\");\nconst subtract = require(\"./subtract.js\");\nconst sum = require(\"./sum.js\");\nconst truncate = require(\"./truncate.js\");\n\nconst module_exports = {\n  absolute,\n  add,\n  binomial_coefficient,\n  ceil,\n  clean,\n  compare,\n  compare_positive,\n  constants,\n  cosine_radians,\n  count_decimal_digits,\n  count_integer_digits,\n  cube,\n  cube_root,\n  divide,\n  eulers_number,\n  exp,\n  expand,\n  factorial,\n  flip_sign,\n  floor,\n  fraction,\n  // gregory_leibniz,\n  hypotenuse,\n  is_infinity,\n  is_integer,\n  is_factorial,\n  is_negative_infinity,\n  is_positive_infinity,\n  is_zero,\n  long_addition,\n  long_division,\n  long_multiplication,\n  long_subtraction,\n  mean,\n  max,\n  min,\n  multiply,\n  multiply_array,\n  multiply_range,\n  nilakantha,\n  ols,\n  pow,\n  pow_positive,\n  primes,\n  reciprocal,\n  remainder,\n  root,\n  root_integer_digits,\n  round,\n  round_last_decimal,\n  sign,\n  sign_nonzero,\n  simplify_fraction,\n  sine_radians,\n  softmax,\n  sort,\n  square,\n  square_root,\n  subtract,\n  sum,\n  truncate\n};\n\nif (typeof define === \"function\" && define.amd)\n  define(function () {\n    return module_exports;\n  });\nif (typeof module === \"object\") {\n  module.exports = module_exports;\n  module.exports.default = module_exports;\n}\nif (typeof window === \"object\") window.preciso = module_exports;\nif (typeof self === \"object\") self.preciso = module_exports;\n", "function count({ nums, no_data }) {\n  let len = nums.length;\n  const counts = {};\n  let total = 0;\n  if (no_data !== undefined) {\n    for (let i = 0; i < len; i++) {\n      const n = nums[i];\n      if (n !== no_data) {\n        total++;\n        if (n in counts) counts[n].ct++;\n        else counts[n] = { n, ct: 1 };\n      }\n    }\n  } else {\n    for (let i = 0; i < len; i++) {\n      const n = nums[i];\n      total++;\n      if (n in counts) counts[n].ct++;\n      else counts[n] = { n, ct: 1 };\n    }\n  }\n  return { counts, total };\n}\n\nmodule.exports = count;\nmodule.exports.default = count;\n", "// convert exponential notation to normal string\n// not optimized yet and no support for big numbers\nfunction expand(n) {\n  // remove + from beginning\n  if (n[0] === \"+\") n = n.substring(1);\n\n  const sign = n[0] === \"-\" ? \"-\" : \"\";\n  if (sign === \"-\") n = n.substring(1);\n\n  const index_of_e = n.indexOf(\"e\");\n\n  // number not in exponential notation\n  if (index_of_e === -1) return sign + n;\n\n  let index_of_dot = n.indexOf(\".\");\n\n  // if number doesn't include a period dot\n  // then just assume it at the end\n  // such that 3e4 has index of dot at 1\n  if (index_of_dot === -1) index_of_dot = index_of_e;\n\n  const shift = Number(n.substring(index_of_e + 1));\n\n  // remove old decimal place\n  const base = n.substring(0, index_of_e).replace(\".\", \"\");\n\n  // normalize shift to start of the string at index zero\n  const normshift = index_of_dot + shift;\n\n  const baselen = base.length;\n\n  if (normshift >= baselen) {\n    const zct = normshift - baselen;\n    let result = base;\n    for (let i = 0; i < zct; i++) result += \"0\";\n    return sign + result;\n  } else if (normshift < 0) {\n    // need to add zeros in decimal places\n    result = \"0.\";\n    for (let i = 0; i > normshift; i--) result += \"0\";\n    result += base;\n    return sign + result;\n  } else {\n    // shifting within the base\n    return sign + base.substring(0, normshift) + \".\" + base.substring(normshift);\n  }\n}\n\nmodule.exports = expand;\nmodule.exports.default = expand;\n", "const expand = require(\"./expand.js\");\n\nmodule.exports = function clean(n) {\n  // remove + from beginning\n  if (n[0] === \"+\") n = n.substring(1);\n\n  n = expand(n);\n\n  // remove extra zero in front\n  // 03938.123 => 3938.123\n  n = n.replace(/^0+(?=\\d)/, \"\");\n\n  // remove extra zero at end\n  if (n.includes(\".\")) n = n.replace(/\\.?0+$/, \"\");\n\n  // should improve this, so it identifies zero earlier\n  if (n === \"\") n = \"0\";\n\n  return n;\n};\n", "const clean = require(\"./clean.js\");\n\n// given:\n//  - a and b are positive numbers\n//  - a and b have been cleaned (i.e. no + or leading zeros)\nfunction compare_positive(a, b) {\n  const alen = a.length;\n  const blen = b.length;\n\n  const aidx = a.indexOf(\".\");\n  const bidx = b.indexOf(\".\");\n\n  // basically where would the dot be\n  // if we add a dot at the end of integers\n  // like 123.\n  const a_adjusted_dot_index = aidx === -1 ? alen : aidx;\n  const b_adjusted_dot_index = bidx === -1 ? blen : bidx;\n\n  // how much you need to shift the second number\n  // to line up the decimal with the first\n  //        0.12345\n  //    12345.0\n\n  const offset = a_adjusted_dot_index - b_adjusted_dot_index;\n\n  let left = Math.max(a_adjusted_dot_index, b_adjusted_dot_index);\n\n  let right = Math.max(alen - a_adjusted_dot_index, blen - b_adjusted_dot_index);\n\n  let aoffset = offset < 0 ? -1 * offset : 0;\n  let boffset = offset <= 0 ? 0 : offset;\n\n  let imax = left + 1 + right - 1; // -1 for zero-index\n\n  let i = 0;\n  while (i < imax) {\n    const ai = i - aoffset;\n    const achar = ai === a_adjusted_dot_index ? \".\" : a[ai] || \"0\";\n    const bi = i - boffset;\n    const bchar = bi === b_adjusted_dot_index ? \".\" : b[bi] || \"0\";\n    if (achar !== bchar) {\n      if (achar > bchar) return \">\";\n      else if (achar < bchar) return \"<\";\n    }\n    i++;\n  }\n\n  return \"=\";\n}\n\nmodule.exports = compare_positive;\nmodule.exports.default = compare_positive;\n", "// Internet Explorer doesn't support Number.MAX_SAFE_INTEGER\n// so we just define the constant ourselves\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n// the greatest number of digits an integer can have\n// and be guaranteed to be stored safely as a floating point.\n// subtract 1 because MAX_SAFE_INTEGER isn't all 9's\nconst MAX_SAFE_INTEGER_LENGTH = MAX_SAFE_INTEGER.toString().length - 1;\n\nmodule.exports = {\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_INTEGER_LENGTH\n};\n", "const { MAX_SAFE_INTEGER_LENGTH } = require(\"./constants.js\");\n\n// assumes both numbers are positive numbers\nmodule.exports = function long_addition(a, b) {\n  const alen = a.length;\n  const blen = b.length;\n\n  const aidx = a.indexOf(\".\");\n  const bidx = b.indexOf(\".\");\n\n  // basically where would the dot be\n  // if we add a dot at the end of integers\n  // like 123.\n  const a_adjusted_dot_index = aidx === -1 ? alen : aidx;\n  const b_adjusted_dot_index = bidx === -1 ? blen : bidx;\n\n  // just use floating point arithmetic for small integers\n  if (aidx === -1 && bidx === -1 && alen < MAX_SAFE_INTEGER_LENGTH && blen < MAX_SAFE_INTEGER_LENGTH) {\n    return (Number(a) + Number(b)).toFixed();\n  }\n\n  // how much you need to shift the second number\n  // to line up the decimal with the first\n  //        0.12345\n  //    12345.0\n\n  const offset = a_adjusted_dot_index - b_adjusted_dot_index;\n\n  let left = Math.max(a_adjusted_dot_index, b_adjusted_dot_index);\n\n  let right = Math.max(alen - a_adjusted_dot_index - 1, blen - b_adjusted_dot_index - 1);\n\n  let aoffset = offset < 0 ? -1 * offset : 0;\n  let boffset = offset <= 0 ? 0 : offset;\n\n  let imax = left + 1 + right - 1; // -1 for zero-index\n\n  let result = \"\";\n\n  let carried = 0;\n\n  // to the right of the period\n  //        0.12345\n  //    12345.0\n  let i = imax;\n  if (right > 0) {\n    while (i > imax - right) {\n      const achar = a[i - aoffset] || \"0\";\n      const bchar = b[i - boffset] || \"0\";\n      let n = Number(achar) + Number(bchar) + carried;\n      if (n >= 10) {\n        n -= 10;\n        carried = 1;\n      } else {\n        carried = 0;\n      }\n      if (result !== \"\" || n !== 0) {\n        result = n + result;\n      }\n      i--;\n    }\n    if (result) result = \".\" + result;\n    i--; // substract 1 for dot\n  }\n\n  if (left > 0) {\n    while (i >= 0) {\n      const achar = a[i - aoffset] || \"0\";\n      const bchar = b[i - boffset] || \"0\";\n      let n = Number(achar) + Number(bchar) + carried;\n      if (n >= 10) {\n        n -= 10;\n        carried = 1;\n      } else {\n        carried = 0;\n      }\n      result = n + result;\n      i--;\n    }\n  }\n\n  if (carried === 1) {\n    result = carried + result;\n  }\n\n  if (result[0] === \".\") result = \"0\" + result;\n\n  return result;\n};\n", "// const lookup = {};\n// const vals = [undefined, 0, 1, 2, 3, 4, 5, 6, 8, 9];\n// vals.forEach(top => {\n//   lookup[top] = {};\n//   vals.forEach(bottom => {\n//     lookup[top][bottom] = (top || 0) - (bottom || 0);\n//   })\n// });\n\nconst { MAX_SAFE_INTEGER_LENGTH } = require(\"./constants.js\");\n\n// assumes (1) both a and b are positive numbers\n// and (2) a is larger than b\nmodule.exports = function long_subtraction(a, b) {\n  const alen = a.length;\n  const blen = b.length;\n\n  const aidx = a.indexOf(\".\");\n  const bidx = b.indexOf(\".\");\n\n  // basically where would the dot be\n  // if we add a dot at the end of integers\n  // like 123.\n  const a_adjusted_dot_index = aidx === -1 ? alen : aidx;\n  const b_adjusted_dot_index = bidx === -1 ? blen : bidx;\n  // console.log({a_adjusted_dot_index, b_adjusted_dot_index});\n\n  // how much you need to shift the second number\n  // to line up the decimal with the first\n  //        0.12345\n  //    12345.0\n\n  // just use floating point arithmetic for small integers\n  if (aidx === -1 && bidx === -1 && alen < MAX_SAFE_INTEGER_LENGTH && blen < MAX_SAFE_INTEGER_LENGTH) {\n    return (Number(a) - Number(b)).toFixed();\n  }\n\n  const offset = a_adjusted_dot_index - b_adjusted_dot_index;\n  // console.log(\"offset:\", offset);\n\n  let left = Math.max(a_adjusted_dot_index, b_adjusted_dot_index);\n  // console.log(\"left:\", left);\n\n  let right = Math.max(alen - a_adjusted_dot_index - 1, blen - b_adjusted_dot_index - 1);\n  // console.log(\"right:\", right);\n\n  let aoffset = offset < 0 ? -1 * offset : 0;\n  let boffset = offset <= 0 ? 0 : offset;\n  // console.log({aoffset, boffset});\n\n  let imax = left + 1 + right - 1; // -1 for zero-index\n  // console.log({imax});\n\n  let result = \"\";\n\n  // number of borrowings\n  let borrowed = 0;\n\n  // to the right of the period\n  //  100.5  6  7\n  //    2.2  9  3\n  //        (-3 + 10)  4\n  let i = imax;\n  if (right > 0) {\n    while (i > imax - right) {\n      // console.log(\"\\n\\n\", {i});\n      let top = a[i - aoffset] || \"0\";\n      let bottom = b[i - boffset] || \"0\";\n\n      // console.log(\"pre borrowing\", {top, bottom});\n      top -= borrowed;\n      borrowed = 0;\n\n      // console.log(\"after borrowing\", {top, bottom});\n      let n = top - bottom;\n\n      // console.log({n});\n      if (n < 0) {\n        while (n < 0) {\n          borrowed++;\n          n += 10;\n        }\n      } else if (borrowed) {\n        borrowed--;\n      }\n      // console.log({n});\n      if (result !== \"\" || n !== 0) {\n        result = n + result;\n      }\n      i--;\n    }\n    if (result !== \"\") {\n      result = \".\" + result;\n    }\n    i--; // substract 1 for dot\n  }\n\n  // console.log({result});\n\n  if (left > 0) {\n    while (i > 0) {\n      // console.log(\"\\n\\n\", {i});\n      let top = a[i - aoffset] || \"0\";\n      let bottom = b[i - boffset] || \"0\";\n\n      // console.log(\"pre borrowing\", {top, bottom});\n      top -= borrowed;\n      borrowed = 0;\n\n      // console.log(\"after borrowing\", {top, bottom});\n      let n = top - bottom;\n\n      // console.log({n});\n      if (n < 0) {\n        while (n < 0) {\n          borrowed++;\n          n += 10;\n        }\n      } else if (borrowed) {\n        borrowed--;\n      }\n      // console.log({n});\n      result = n + result;\n      i--;\n    }\n\n    // console.log({borrowed});\n    // special rule for last one\n    const achar = a[0 - aoffset] || \"0\";\n    const bchar = b[0 - boffset] || \"0\";\n    let n = Number(achar) - (borrowed > 0 ? 1 : 0) - Number(bchar);\n    if (n !== 0) {\n      result = n + result;\n    }\n\n    // remove any zeros in front like in 0123\n    result = result.replace(/^0+/, \"\");\n  }\n\n  // if decimal number add zero\n  if (result[0] === \".\") result = \"0\" + result;\n\n  return result;\n};\n", "const compare_positive = require(\"./compare_positive.js\");\nconst clean = require(\"./clean.js\");\nconst long_addition = require(\"./long_addition.js\");\nconst long_subtraction = require(\"./long_subtraction.js\");\n\nfunction add(a, b) {\n  a = clean(a);\n  b = clean(b);\n\n  const apos = a[0] !== \"-\";\n  const bpos = b[0] !== \"-\";\n\n  if (apos && bpos) {\n    return long_addition(a, b);\n  } else if (!apos && !bpos) {\n    return \"-\" + long_addition(a.substring(1), b.substring(1));\n  } else if (!apos && bpos) {\n    a = a.substring(1);\n    switch (compare_positive(a, b)) {\n      case \"=\":\n        return \"0\";\n      case \"<\":\n        return long_subtraction(b, a);\n      case \">\":\n        return \"-\" + long_subtraction(a, b);\n    }\n  } else if (apos && !bpos) {\n    b = b.substring(1);\n    switch (compare_positive(a, b)) {\n      case \"=\":\n        return \"0\";\n      case \"<\":\n        return \"-\" + long_subtraction(b, a);\n      case \">\":\n        return long_subtraction(a, b);\n    }\n  }\n}\n\nmodule.exports = add;\nmodule.exports.default = add;\n", "const clean = require(\"./clean.js\");\n\nfunction absolute(n) {\n  n = clean(n);\n  if (n[0] === \"-\") return n.substring(1);\n  else return n;\n}\n\nmodule.exports = absolute;\nmodule.exports.default = absolute;\n", "const { MAX_SAFE_INTEGER_LENGTH } = require(\"./constants.js\");\n\nconst CHUNK_SIZE = 15;\n\n/**\n *\n * @param {String} a - numerical string larger or equal to b\n * @param {String} b - numerical string smaller or equal to a\n * @returns {String} product - result of multiplying a with b\n */\n\nmodule.exports = function long_multiplication(a, b) {\n  if (a === \"0\" || b === \"0\") return \"0\";\n\n  const top_index_of_dot = a.indexOf(\".\");\n  const bottom_index_of_dot = b.indexOf(\".\");\n\n  const a_num_integer_places = top_index_of_dot === -1 ? a.length : top_index_of_dot;\n  const b_num_integer_places = bottom_index_of_dot === -1 ? b.length : bottom_index_of_dot;\n  const max_total_num_integer_places = a_num_integer_places + b_num_integer_places;\n\n  const a_num_decimal_places = top_index_of_dot === -1 ? 0 : a.length - 1 - top_index_of_dot;\n  const b_num_decimal_places = bottom_index_of_dot === -1 ? 0 : b.length - 1 - bottom_index_of_dot;\n\n  const out_num_decimal_places = a_num_decimal_places + b_num_decimal_places;\n\n  if (out_num_decimal_places === 0 && max_total_num_integer_places < MAX_SAFE_INTEGER_LENGTH) {\n    return (Number(a) * Number(b)).toFixed(0);\n  }\n\n  // remove decimals\n  const aint = a.replace(\".\", \"\");\n  const bint = b.replace(\".\", \"\");\n\n  const alen = aint.length;\n  const blen = bint.length;\n\n  const chunks = [];\n  let i = alen;\n  while (i >= 0) {\n    const end = i;\n    const start = (i -= CHUNK_SIZE);\n    const str = aint.substring(start, end);\n    chunks.push([Number(str), str.length]);\n  }\n\n  const partial_products = [];\n  const partials = [];\n\n  // for each number in multiplier\n  for (let i = 0, ireverse = blen - 1; ireverse >= 0; ireverse--, i++) {\n    const bstr = bint[ireverse];\n\n    const bnum = Number(bstr);\n\n    let carried = 0;\n    let partial = \"\";\n    const ichunklast = chunks.length - 1;\n    chunks.forEach(([chunk, chunklen], c) => {\n      const subpartial = carried + bnum * chunk;\n      let subpartstr = subpartial.toString();\n      const subpartcharlen = subpartstr.length;\n      if (subpartcharlen > chunklen && c !== ichunklast) {\n        const islice = -1 * chunklen;\n        partial = subpartstr.slice(islice) + partial;\n        carried = Number(subpartstr.slice(0, islice));\n      } else {\n        const imax = chunklen - subpartcharlen;\n        for (let i = 0; i < imax; i++) {\n          subpartstr = \"0\" + subpartstr;\n        }\n        carried = 0;\n        partial = subpartstr + partial;\n      }\n    });\n\n    // add number of zeros at end\n    partial += \"0\".repeat(i);\n\n    partial_products.push(partial);\n\n    partials.push([Array.from(partial).map(char => Number(char)), partial.length]);\n  }\n\n  // back to front, iterate through columns\n  // and add partial products together\n  const num_partials = partial_products.length;\n\n  const number_of_columns = partials[partials.length - 1][1] + num_partials;\n\n  let result = \"\";\n  let carried = 0;\n  for (let icol = 0; icol < number_of_columns; icol++) {\n    let sum = carried;\n    const pmax = Math.min(icol, num_partials - 1);\n    for (let p = 0; p <= pmax; p++) {\n      const [pnums, plen] = partials[p];\n      const i = plen - 1 - icol;\n      if (i >= 0) {\n        sum += pnums[i];\n      }\n    }\n\n    if (sum >= 10) {\n      sum = sum.toString();\n      result = sum[sum.length - 1] + result;\n      carried = Number(sum.slice(0, -1));\n    } else {\n      result = sum + result;\n      carried = 0;\n    }\n  }\n\n  // add decimal back in\n  if (out_num_decimal_places === 0) {\n    // integer\n    // remove extra zeros\n    result = result.replace(/^0+/, \"\");\n  } else {\n    // decimal number\n    const idot = result.length - out_num_decimal_places;\n\n    result = result.substring(0, idot) + \".\" + result.substring(idot);\n\n    // remove zeros from front\n    result = result.replace(/^0+/, \"\");\n\n    // remove extra zeros from the end\n    result = result.replace(/\\.?0+$/, \"\");\n\n    if (result[0] === \".\") result = \"0\" + result;\n  }\n\n  return result;\n};\n", "const absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\nconst compare_positive = require(\"./compare_positive.js\");\nconst long_multiplication = require(\"./long_multiplication.js\");\n\nfunction multiply(a, b) {\n  a = clean(a);\n  b = clean(b);\n\n  const apos = a[0] !== \"-\";\n  const bpos = b[0] !== \"-\";\n\n  const out_sign = apos !== bpos ? \"-\" : \"\";\n\n  a = absolute(a);\n  b = absolute(b);\n\n  const comparison = compare_positive(a, b);\n\n  if (comparison === \"<\") {\n    const aold = a;\n    const bold = b;\n    a = bold;\n    b = aold;\n  }\n\n  return out_sign + long_multiplication(a, b);\n}\n\nmodule.exports = multiply;\nmodule.exports.default = multiply;\n", "const clean = require(\"./clean\");\nconst compare_positive = require(\"./compare_positive.js\");\nconst long_addition = require(\"./long_addition.js\");\nconst long_subtraction = require(\"./long_subtraction.js\");\n\nfunction subtract(a, b) {\n  a = clean(a);\n  b = clean(b);\n\n  const a_is_positive = a[0] !== \"-\";\n  const b_is_positive = b[0] !== \"-\";\n  if (a_is_positive) {\n    if (b_is_positive) {\n      const comparison = compare_positive(a, b);\n      if (comparison === \">\") {\n        return long_subtraction(a, b);\n      } else if (comparison === \"<\") {\n        return \"-\" + long_subtraction(b, a);\n      } else {\n        return \"0\";\n      }\n    } else {\n      return long_addition(a, b.substring(1));\n    }\n  } else if (b_is_positive) {\n    return \"-\" + long_addition(a.substring(1), b);\n  } else {\n    a = a.substring(1);\n    b = b.substring(1);\n    const comparison = compare_positive(a, b);\n    if (comparison === \">\") {\n      return \"-\" + long_subtraction(a, b);\n    } else if (comparison === \"<\") {\n      return long_subtraction(b, a);\n    } else {\n      return \"0\";\n    }\n  }\n}\n\nmodule.exports = subtract;\nmodule.exports.default = subtract;\n", "// given n is a decimal number\nconst up = [\"5\", \"6\", \"7\", \"8\", \"9\"];\nmodule.exports = function round_last_decimal(n) {\n  // remove + from beginning\n  if (n[0] === \"+\") n = n.substring(1);\n\n  //console.log(\"rounding:\", {n});\n  const len = n.length;\n  //console.log({len});\n  let result = \"\";\n\n  const last_char = n[n.length - 1];\n  //console.log({last_char});\n\n  if (up.includes(last_char)) {\n    let i;\n    for (i = len - 2; i >= 0; i--) {\n      const char = n[i];\n      //console.log({char});\n      // skip over . or -\n      if (char === \".\" || char === \"-\") continue;\n\n      const nchar = Number(char) + 1;\n      //console.log({nchar});\n\n      if (nchar === 10) {\n        result = \"0\" + result;\n        // keep rounding up\n      } else {\n        result = nchar + result;\n        break;\n      }\n    }\n    //console.log({i});\n    if (i > 0) result = n.substring(0, i) + result;\n  } else {\n    result = n.substring(0, len - 1);\n  }\n\n  if (result[result.length - 1] === \".\") result = result.substring(0, result.length - 1);\n\n  // remove trailing zeros in decimal number\n  // 0.50 => 0.5\n  if (result.indexOf(\".\") > -1) result = result.replace(/0+$/, \"\");\n\n  return result;\n};\n", "const compare_positive = require(\"./compare_positive.js\");\nconst add = require(\"./add.js\");\nconst multiply = require(\"./multiply.js\");\nconst subtract = require(\"./subtract.js\");\nconst round_last_decimal = require(\"./round_last_decimal.js\");\n\n// given dividend and divisor are positive numberical strings\nmodule.exports = function long_division(dividend, divisor, { max_decimal_digits = 100, ellipsis = false } = {}) {\n  // remove unnecessary starting zeros\n  // ex: 0.5 => .5\n  if (dividend[0] === \"0\") dividend = dividend.substring(1);\n  if (divisor[0] === \"0\") divisor = divisor.substring(1);\n\n  const dividend_index_of_dot = dividend.indexOf(\".\");\n  const divisor_index_of_dot = divisor.indexOf(\".\");\n\n  const adjusted_dividend_index_of_dot = dividend_index_of_dot === -1 ? dividend.length : dividend_index_of_dot;\n  const divisor_num_decimal_places = divisor_index_of_dot === -1 ? 0 : divisor.length - 1 - divisor_index_of_dot;\n\n  // whether the result has a repeating decimal\n  // e.g. 1/3 is repeating as in \"0.333...\"\n  let repeating = false;\n\n  // remove decimals\n  dividend = dividend.replace(/\\./, \"\");\n  divisor = divisor.replace(/\\./, \"\");\n\n  const dividend_length = dividend.length;\n\n  let current = \"\";\n  let quotient = \"\";\n  let comparison;\n  let offset = -1 * divisor_num_decimal_places;\n  let skip = 0;\n  for (let i = 0; i < dividend_length; i++) {\n    const char = dividend[i];\n\n    current += char;\n\n    comparison = compare_positive(current, divisor);\n\n    if (comparison === \">\") {\n      // same as const times = Math.floor(current / divisor);\n      // but without floating point problems\n      let times = 1;\n      let product = add(divisor, divisor);\n      let passed_product = divisor;\n      while (compare_positive(product, current) !== \">\") {\n        times++;\n        passed_product = product;\n        product = add(product, divisor);\n      }\n      times = times.toString();\n\n      if (quotient !== \"\") {\n        for (let i = times.length; i <= skip; i++) quotient += \"0\";\n      }\n      quotient += times; // string concatentation\n\n      current = subtract(current, passed_product);\n\n      skip = 0;\n    } else if (comparison === \"<\") {\n      if (quotient === \"\") {\n        offset++;\n      }\n      skip++;\n\n      // outside greater than inside\n      continue;\n    } else if (comparison === \"=\") {\n      if (quotient !== \"\") {\n        for (let i = 0; i < skip; i++) quotient += \"0\";\n      }\n      quotient += \"1\";\n      current = \"0\";\n      skip = 0;\n    }\n  }\n\n  if (current.match(/^0+$/g)) {\n    if (comparison === \"<\") {\n      quotient += current.substring(0, current.length - 1);\n    }\n  } else {\n    const previous = {};\n\n    // keep dividing until we have an answer\n    // figure out current place of decimal number\n    const idot = adjusted_dividend_index_of_dot - offset;\n    const qlen = quotient.length;\n    // add 1 extra for rounding purposes\n    const imax = idot - qlen + max_decimal_digits + 1;\n\n    // reset skip if just \"\" so far because don't want to count 0 in 0.\n    if (quotient === \"\") {\n      skip = 0;\n    }\n\n    for (let i = 0; i < imax; i++) {\n      current += \"0\";\n      if (ellipsis) {\n        if (current in previous) {\n          previous[current]++;\n          if (previous[current] > 3) {\n            quotient += \"...\";\n            repeating = true;\n            break;\n          }\n        } else {\n          previous[current] = 1;\n        }\n      }\n      const comparison = compare_positive(current, divisor);\n\n      if (comparison === \">\") {\n        // inside greater than outside\n\n        // how many times the divisor goes into the current\n        let times = 1;\n        let product = add(divisor, divisor);\n        let passed_product = divisor;\n        while (compare_positive(product, current) !== \">\") {\n          times++;\n          passed_product = product;\n          product = add(product, divisor);\n        }\n\n        times = times.toString();\n\n        // pad left zeros\n        for (let i = times.length; i <= skip; i++) quotient += \"0\";\n        quotient += times; // string concatentation\n        current = subtract(current, passed_product);\n\n        if (current === \"0\") {\n          break;\n        }\n\n        skip = 0;\n      } else if (comparison === \"<\") {\n        // outside greater than inside\n        skip++;\n        continue;\n      } else if (comparison === \"=\") {\n        // fill in previous with zeros\n        for (let i = 0; i < skip; i++) quotient += \"0\";\n        quotient += \"1\";\n        skip = 0;\n        break;\n      }\n    }\n  }\n\n  // reinsert decimal place\n\n  const idot = adjusted_dividend_index_of_dot - offset;\n  const qlen = quotient.length;\n\n  let num_decimals;\n\n  if (idot === qlen) {\n    // integer number so don't do anything\n    num_decimals = 0;\n  } else if (idot < 0) {\n    quotient = \"0.\" + \"0\".repeat(Math.abs(idot)) + quotient;\n    num_decimals = qlen - idot; // idot is negative, so adding\n  } else if (idot > qlen) {\n    // add more zeros to integer\n    for (let i = qlen; i < idot; i++) quotient += \"0\";\n    num_decimals = 0;\n  } else if (idot < qlen) {\n    quotient = quotient.substring(0, idot) + \".\" + quotient.substring(idot);\n    num_decimals = qlen - idot;\n  } else if (idot === 0) {\n    quotient = \"0.\" + quotient;\n    num_decimals = qlen;\n  }\n\n  // remove zeros from front\n  // 03938.123 => 3938.123\n  quotient = quotient.replace(/^0+/, \"\");\n\n  // remove extra zeros from the end\n  quotient = quotient.replace(/\\.\\d+0+$/, \"\");\n\n  // round if necessary\n  if (!repeating) {\n    const extra_decimals = num_decimals - max_decimal_digits;\n    if (extra_decimals > 0) {\n      quotient = round_last_decimal(quotient.substring(0, quotient.length - extra_decimals + 1));\n    }\n  }\n\n  if (quotient[0] === \".\") quotient = \"0\" + quotient;\n\n  return quotient;\n};\n", "const absolute = require(\"./absolute.js\");\nconst clean = require(\"./clean.js\");\nconst long_division = require(\"./long_division.js\");\n\nfunction divide(dividend, divisor, options) {\n  dividend = clean(dividend);\n  divisor = clean(divisor);\n\n  if (divisor === \"0\") throw new Error(\"[preciso] division by zero\");\n\n  // sometimes dividend can be cleaned to \"\"\n  if (dividend === \"\" || dividend === \"0\") return \"0\";\n\n  const dividend_is_positive = dividend[0] !== \"-\";\n  const divisor_is_positive = divisor[0] !== \"-\";\n\n  const out_sign = dividend_is_positive !== divisor_is_positive ? \"-\" : \"\";\n\n  if (!dividend_is_positive) dividend = absolute(dividend);\n  if (!divisor_is_positive) divisor = absolute(divisor);\n\n  return out_sign + long_division(dividend, divisor, options);\n}\n\nmodule.exports = divide;\nmodule.exports.default = divide;\n", "const add = require(\"preciso/add\");\nconst divide = require(\"preciso/divide\");\n\nfunction mean(a, b, { precise = false } = { precise: false }) {\n  if (precise) {\n    return divide(add(a.toString(), b.toString()), \"2\");\n  } else {\n    return (a + b) / 2;\n  }\n}\n\nmodule.exports = mean;\nmodule.exports.default = mean;\n", "const count = require(\"./count\");\nconst mean = require(\"./mean\");\n\nfunction median_of_a_lot({ counts, nums, no_data, precise = false, total }) {\n  if (counts === undefined || total === undefined) {\n    ({ counts, total } = count({ nums, no_data }));\n  }\n\n  // sort counts by value\n  const countArray = Object.values(counts).sort((a, b) => a.n - b.n);\n  const half = total / 2;\n  const number_of_unique_values = countArray.length;\n  if (number_of_unique_values === 0) {\n    return undefined;\n  } else if (number_of_unique_values === 1) {\n    return precise ? countArray[0].n.toString() : countArray[0].n;\n  } else {\n    let x = 0;\n\n    if (total % 2 === 0) {\n      for (let i = 0; i < number_of_unique_values; i++) {\n        const { n, ct } = countArray[i];\n        x += ct;\n        if (x > half) {\n          // handle if odd or even\n          // just barely pass cut off\n          if (x - ct === half) {\n            return mean(countArray[i - 1].n, n, { precise });\n          } else {\n            return precise ? n.toString() : n;\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < number_of_unique_values; i++) {\n        const { n, ct } = countArray[i];\n        x += ct;\n        if (x > half) return precise ? n.toString() : n;\n      }\n    }\n  }\n}\n\nmodule.exports = median_of_a_lot;\nmodule.exports.default = median_of_a_lot;\n", "const mean = require(\"./mean\");\n\nfunction median_of_a_few({ nums, no_data, precise = false }) {\n  nums = nums.filter(n => n !== no_data).sort((a, b) => a - b);\n  switch (nums.length) {\n    case 0:\n      return undefined;\n    case 1:\n      return precise ? nums[0].toString() : nums[0];\n    default:\n      const mid = nums.length / 2;\n      if (nums.length % 2 === 0) {\n        return mean(nums[mid - 1], nums[mid], { precise });\n      } else {\n        const i = Math.floor(mid);\n        return precise ? nums[i].toString() : nums[i];\n      }\n  }\n}\n\nmodule.exports = median_of_a_few;\nmodule.exports.default = median_of_a_few;\n", "const median_of_a_lot = require(\"./median-of-a-lot.js\");\nconst median_of_a_few = require(\"./median-of-a-few.js\");\n\nfunction calculate({ counts, nums, no_data, precise, threshold = 50, total }) {\n  if (counts !== undefined || total !== undefined || nums.length > threshold) {\n    return median_of_a_lot({ counts, no_data, nums, precise, total });\n  } else {\n    return median_of_a_few({ no_data, nums, precise });\n  }\n}\n\nconst mediana = { calculate };\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return mediana;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = mediana;\n  module.exports.default = { calculate };\n}\n\nif (typeof window === \"object\") {\n  window.mediana = mediana;\n}\n\nif (typeof self === \"object\") {\n  self.mediana = mediana;\n}\n", "const { getOrCreateIterator } = require(\"iter-fun\");\nconst { add, compare, divide, mean, multiply, pow, round, sort, subtract, sum } = require(\"preciso\");\nconst mediana = require(\"mediana\");\n\n// n === n is a lot quicker than !isNaN(n)\nconst isValidNumber = n => typeof n === \"number\" && n === n;\n\nconst computeVariance = ({ count, histogram, mean_value, precise = false }) => {\n  if (precise) {\n    mean_value = mean_value.toString();\n    const reduced = Object.values(histogram).reduce((sum, { n, ct }) => {\n      const diff = subtract(n.toString(), mean_value);\n      return add(sum, multiply(ct.toString(), pow(diff, \"2\")));\n    }, \"0\");\n    return divide(reduced, count.toString());\n  } else {\n    return (\n      Object.values(histogram).reduce((sum, { n, ct }) => {\n        return sum + ct * Math.pow(n - mean_value, 2);\n      }, 0) / count\n    );\n  }\n};\n\nfunction calcStats(\n  data,\n  {\n    async = false,\n    chunked = false,\n    noData = undefined,\n    filter = undefined,\n    map,\n    calcCount = true,\n    calcFrequency = true,\n    calcHistogram = true,\n    calcInvalid = true,\n    calcMax = true,\n    calcMean = true,\n    calcMedian = true,\n    calcMin = true,\n    calcMode = true,\n    calcModes = true,\n    calcProduct = true,\n    calcRange = true,\n    calcStd = true,\n    calcSum = true,\n    calcValid = true,\n    calcVariance = true,\n    calcUniques = true,\n    precise = false,\n    precise_max_decimal_digits = 100,\n    stats,\n    timed = false\n  } = { debugLevel: 0 }\n) {\n  const start = timed ? performance.now() : 0;\n\n  if (stats) {\n    // validate stats argument\n    stats.forEach(stat => {\n      if (\n        ![\n          \"count\",\n          \"frequency\",\n          \"histogram\",\n          \"invalid\",\n          \"max\",\n          \"mean\",\n          \"median\",\n          \"min\",\n          \"mode\",\n          \"modes\",\n          \"product\",\n          \"range\",\n          \"sum\",\n          \"std\",\n          \"valid\",\n          \"variance\",\n          \"uniques\"\n        ].includes(stat)\n      ) {\n        console.warn(`[calc-stats] skipping unknown stat \"${stat}\"`);\n      }\n    });\n    calcCount = stats.includes(\"count\");\n    calcFrequency = stats.includes(\"frequency\");\n    calcHistogram = stats.includes(\"histogram\");\n    calcInvalid = stats.includes(\"invalid\");\n    calcMax = stats.includes(\"max\");\n    calcMean = stats.includes(\"mean\");\n    calcMedian = stats.includes(\"median\");\n    calcMin = stats.includes(\"min\");\n    calcMode = stats.includes(\"mode\");\n    calcModes = stats.includes(\"modes\");\n    calcProduct = stats.includes(\"product\");\n    calcRange = stats.includes(\"range\");\n    calcStd = stats.includes(\"std\");\n    calcSum = stats.includes(\"sum\");\n    calcValid = stats.includes(\"valid\");\n    calcVariance = stats.includes(\"variance\");\n    calcUniques = stats.includes(\"uniques\");\n  }\n\n  if (typeof map === \"string\") {\n    const key = map;\n    map = it => it[key];\n  }\n\n  const iter = getOrCreateIterator(data);\n\n  let needHistogram =\n    calcFrequency || calcHistogram || calcMedian || calcMode || calcModes || calcVariance || calcStd || calcUniques;\n  let needValid =\n    calcCount ||\n    calcFrequency ||\n    calcMean ||\n    calcMedian ||\n    calcProduct ||\n    calcValid ||\n    calcVariance ||\n    calcStd ||\n    typeof filter === \"function\";\n  let needInvalid = calcCount || calcInvalid || typeof filter === \"function\";\n  let needSum = calcSum || calcMean || calcVariance || calcStd;\n  let needMin = calcMin || calcRange;\n  let needMax = calcMax || calcRange;\n  let needProduct = calcProduct;\n  let valid = 0;\n  let invalid = 0;\n  let index = 0;\n  let min;\n  let max;\n  let product;\n  let sum = precise ? \"0\" : 0;\n  const histogram = {};\n\n  // after it processes filtering\n  let process;\n\n  // hoisting functions outside of conditionals\n  // in order to help compilers optimize\n  const initial_process = value => {\n    if (needValid) valid = 1;\n    if (needMin) min = value;\n    if (needMax) max = value;\n    if (needProduct) product = value;\n    if (needSum) sum = value;\n    if (needHistogram) {\n      histogram[value] = { n: value, ct: 1 };\n    }\n    process = subsequent_process;\n  };\n\n  const subsequent_process = value => {\n    if (needValid) valid++;\n    if (needMin && value < min) min = value;\n    if (needMax && value > max) max = value;\n    if (needProduct) product *= value;\n    if (needSum) sum += value;\n    if (needHistogram) {\n      if (value in histogram) histogram[value].ct++;\n      else histogram[value] = { n: value, ct: 1 };\n    }\n  };\n\n  if (precise) {\n    process = value => {\n      value = value.toString();\n      if (needValid) valid++;\n      if (needMin && (typeof min === \"undefined\" || compare(value, min) === \"<\")) min = value;\n      if (needMax && (typeof max === \"undefined\" || compare(value, max) === \">\")) max = value;\n      if (needProduct) {\n        product = valid === 1 ? value : multiply(product, value, { max_decimal_digits: precise_max_decimal_digits });\n      }\n      if (needSum) sum = add(sum, value);\n      if (needHistogram) {\n        if (value in histogram) histogram[value].ct++;\n        else histogram[value] = { n: value.toString(), ct: 1 };\n      }\n    };\n  } else {\n    process = initial_process;\n  }\n\n  let step;\n  if (typeof noData === \"number\" && typeof filter === \"function\") {\n    step = value => {\n      index++;\n      if (isValidNumber(value) && value !== noData && filter({ valid, index, value }) === true) {\n        process(value);\n      } else if (needInvalid) {\n        invalid++;\n      }\n    };\n  } else if (typeof noData === \"number\") {\n    step = value => {\n      if (isValidNumber(value) && value !== noData) {\n        process(value);\n      } else if (needInvalid) {\n        invalid++;\n      }\n    };\n  } else if (Array.isArray(noData) && noData.length > 0 && typeof filter === \"function\") {\n    step = value => {\n      index++;\n      if (isValidNumber(value) && !noData.includes(value) && filter({ valid, index, value }) === true) {\n        process(value);\n      } else if (needInvalid) {\n        invalid++;\n      }\n    };\n  } else if (Array.isArray(noData) && noData.length > 0) {\n    step = value => {\n      if (isValidNumber(value) && !noData.includes(value)) {\n        process(value);\n      } else if (needInvalid) {\n        invalid++;\n      }\n    };\n  } else if (typeof filter === \"function\") {\n    step = value => {\n      index++;\n      if (isValidNumber(value) && filter({ valid, index, value }) === true) {\n        process(value);\n      } else if (needInvalid) {\n        invalid++;\n      }\n    };\n  } else {\n    step = value => {\n      if (isValidNumber(value)) {\n        process(value);\n      } else if (needInvalid) {\n        invalid++;\n      }\n    };\n  }\n\n  const finish = () => {\n    const results = {};\n    if (calcCount) results.count = precise ? add(invalid.toString(), valid.toString()) : invalid + valid;\n    if (calcValid) results.valid = precise ? valid.toString() : valid;\n    if (calcInvalid) results.invalid = precise ? invalid.toString() : invalid;\n    if (calcMedian) {\n      results.median = mediana.calculate({ counts: histogram, precise, total: valid });\n    }\n    if (calcMin) results.min = min; // should already be a string if precise\n    if (calcMax) results.max = max; // should already be a string if precise\n    if (calcProduct) results.product = product; // should already be a string if precise\n    if (calcSum) results.sum = sum; // should already be a string if precise\n    if (calcRange) results.range = precise ? subtract(max.toString(), min.toString()) : max - min;\n    if (calcMean || calcVariance || calcStd) {\n      const mean_value = precise\n        ? divide(sum, valid.toString(), { max_decimal_digits: precise_max_decimal_digits })\n        : sum / valid;\n      if (calcMean) results.mean = mean_value;\n      if (calcVariance || calcStd) {\n        let variance = computeVariance({\n          count: valid,\n          histogram,\n          // want enough precision, so we can get a good standard deviation later\n          max_decimal_digits:\n            typeof precise_max_decimal_digits === \"number\" && precise_max_decimal_digits < 20\n              ? 20\n              : precise_max_decimal_digits,\n          mean_value,\n          precise\n        });\n        if (calcVariance) {\n          results.variance =\n            precise && typeof precise_max_decimal_digits === \"number\"\n              ? round(variance, { digits: precise_max_decimal_digits })\n              : variance;\n        }\n        if (calcStd) results.std = precise ? Math.sqrt(Number(variance)).toString() : Math.sqrt(variance);\n      }\n    }\n    if (calcHistogram) {\n      if (precise) {\n        Object.values(histogram).forEach(obj => {\n          obj.ct = obj.ct.toString();\n        });\n      }\n      results.histogram = histogram;\n    }\n    if (calcFrequency) {\n      const frequency = {};\n      if (precise) {\n        const valid_as_string = valid.toString();\n        for (let key in histogram) {\n          const obj = histogram[key];\n          frequency[key] = {\n            n: obj.n.toString(),\n            freq: divide(obj.ct, valid_as_string, { max_decimal_digits: precise_max_decimal_digits })\n          };\n        }\n      } else {\n        for (let key in histogram) {\n          const obj = histogram[key];\n          frequency[key] = {\n            n: obj.n,\n            freq: obj.ct / valid\n          };\n        }\n      }\n      results.frequency = frequency;\n    }\n    if (calcMode || calcModes) {\n      let highest_count = 0;\n      let modes = [];\n      for (let key in histogram) {\n        const { n, ct } = histogram[key];\n        if (ct === highest_count) {\n          modes.push(precise ? n.toString() : n);\n        } else if (ct > highest_count) {\n          highest_count = ct;\n          modes = [precise ? n.toString() : n];\n        }\n      }\n\n      if (calcModes) results.modes = modes;\n\n      // compute mean value of all the most popular numbers\n      if (calcMode) {\n        results.mode = precise ? mean(modes) : modes.reduce((acc, n) => acc + n, 0) / modes.length;\n      }\n    }\n    if (calcUniques) {\n      if (precise) {\n        results.uniques = sort(Object.keys(histogram));\n      } else {\n        results.uniques = Object.values(histogram)\n          .map(({ n }) => n)\n          .sort((a, b) => a - b);\n      }\n    }\n    if (timed) {\n      const duration = Math.round(performance.now() - start);\n      if (duration > 2000) {\n        console.log(\"[calc-stats] took \" + Math.round(duration / 1000).toLocaleString() + \" seconds\");\n      } else {\n        console.log(\"[calc-stats] took \" + duration.toLocaleString() + \" milliseconds\");\n      }\n    }\n    return results;\n  };\n\n  if (chunked) {\n    if (async) {\n      return (async () => {\n        for await (let value of iter) {\n          for (let v of value) {\n            if (map) v = map(v);\n            step(v);\n          }\n        }\n        return finish();\n      })();\n    } else {\n      // array of arrays or array of typed arrays\n      if (Array.isArray(data) && data[0].length) {\n        for (let i = 0; i < data.length; i++) {\n          const value = data[i];\n          for (let ii = 0; ii < value.length; ii++) {\n            let v = value[ii];\n            if (map) v = map(v);\n            step(v);\n          }\n        }\n      } else {\n        for (let value of iter) {\n          for (let v of value) {\n            if (map) v = map(v);\n            step(v);\n          }\n        }\n      }\n      return finish();\n    }\n  } else {\n    if (async) {\n      return (async () => {\n        for await (let value of iter) {\n          if (map) value = map(value);\n          step(value);\n        }\n        return finish();\n      })();\n    } else {\n      for (let value of iter) {\n        if (map) value = map(value);\n        step(value);\n      }\n      return finish();\n    }\n  }\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return calcStats;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = calcStats;\n  module.exports.default = calcStats;\n  module.exports.calcStats = calcStats;\n}\n\nif (typeof self === \"object\") {\n  self.calcStats = calcStats;\n}\n\nif (typeof window === \"object\") {\n  window.calcStats = calcStats;\n}\n", "const getDepth = require(\"get-depth\");\n\nfunction guessImageLayout({ bands, data, height, layout, width }) {\n  const depth = getDepth(data);\n  if (layout === \"[row,column,band]\" || depth === 1) {\n    // guess interleaved rgba ImageData.data\n    return {\n      layout: \"[row,column,band]\",\n      bands: bands ? bands : height && width ? data.length / (height * width) : undefined,\n      height: height ? height : bands && width ? data.length / (bands * width) : undefined,\n      width: width ? width : bands && height ? data.length / (bands * height) : undefined\n    };\n  } else if (depth === 2) {\n    if (height && width) {\n      if (data[0].length === height * width) {\n        return { layout: \"[band][row,column]\", bands: data.length, height, width };\n      } else if (data.length === height * width) {\n        return { layout: \"[row,column][band]\", bands: data[0].length, height, width };\n      }\n    } else {\n      // assume have more grid cells than bands\n      if (data.length < data[0].length) {\n        return {\n          bands: data.length,\n          layout: \"[band][row,column]\",\n          height: height ? height : width ? data[0].length / width : undefined,\n          width: width ? width : height ? data[0].length / height : undefined\n        };\n      } else {\n        return {\n          bands: data[0].length,\n          layout: \"[row,column][band]\",\n          height: height ? height : width ? data.length / width : undefined,\n          width: width ? width : height ? data.length / height : undefined\n        };\n      }\n    }\n  } else if (depth === 3) {\n    const len1 = data.length;\n    const len2 = data[0].length;\n    const len3 = data[0][0].length;\n    if (height && width) {\n      if (len1 === height && len2 === width) {\n        return { layout: \"[row][column][band]\", bands: len3, height, width };\n      } else if (len2 === height && len3 === width) {\n        return { layout: \"[band][row][column]\", bands: len1, height, width };\n      }\n    } else {\n      // assume band count is smaller than height and width\n      if (len1 < len2 && len1 < len3) {\n        return { layout: \"[band][row][column]\", bands: len1, height: len2, width: len3 };\n      } else if (len3 < len1 && len3 < len2) {\n        return { layout: \"[row][column][band]\", bands: len3, height: len1, width: len2 };\n      }\n    }\n  }\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return guessImageLayout;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = guessImageLayout;\n  module.exports.default = guessImageLayout;\n  module.exports.guessImageLayout = guessImageLayout;\n}\n\nif (typeof window === \"object\") {\n  window.guessImageLayout = guessImageLayout;\n}\n\nif (typeof self === \"object\") {\n  self.guessImageLayout = guessImageLayout;\n}\n", "const calcStats = require(\"calc-stats\");\nconst guessImageLayout = require(\"guess-image-layout\");\nconst xdim = require(\"xdim\");\n\nconst range = ct => new Array(ct).fill(0).map((_, i) => i);\n\n/**\n * @name calcImageStats\n * @param {Array} values - multi-dimensional array of numbers\n * @param {options} options - Options\n * @param {options} options.bands - number of bands (3 for RGB, 4 for RGBA)\n * @param {options} options.height - height of image\n * @param {options} options.precise - calculate using floating point arithmetic or precise numerical strings. default is false\n * @param {options} options.stats - array of stats to calculate. see https://github.com/danieljdufour/calc-stats#specify-calculations\n * @param {options} options.width - width of image\n * @param {options} options.layout - layout of values (using xdim layout syntax)\n */\nfunction calcImageStats(\n  values,\n  { bands, height, precise = false, stats, width, layout, ...rest } = {}\n) {\n  if (typeof values.then === \"function\") {\n    throw new Error(\n      \"[calc-image-stats] you passed in a promise as the data values.  please resolve the promise first before calling calcImageStats\"\n    );\n  }\n\n  const result = guessImageLayout({\n    bands,\n    data: values,\n    height,\n    layout,\n    width\n  });\n  bands ??= result.bands;\n  height ??= result.height;\n  layout ??= result.layout;\n  width ??= result.width;\n\n  const bandRange = range(bands);\n\n  const bandStats = bandRange.map(bandIndex => {\n    let band;\n    const options = { precise, stats, ...rest };\n    if ([\"[band][row,column]\", \"[band][column,row]\"].includes(layout)) {\n      band = values[bandIndex];\n    } else if (\n      [\"[band][row][column]\", \"[band][column][row]\"].includes(layout)\n    ) {\n      band = values[bandIndex];\n      options.chunked = true;\n    } else if (\n      bands === 1 &&\n      [\n        \"[band,row,column]\",\n        \"[row,column,band]\",\n        \"[column,band,row]\",\n        \"[column,row,band]\"\n      ].includes(layout)\n    ) {\n      band = values;\n    } else {\n      const rect = { band: [bandIndex, bandIndex] };\n      const sizes = { band: bands, column: width, row: height };\n      band = xdim.iterClip({ data: values, layout, rect, sizes });\n    }\n    return calcStats(band, options);\n  });\n\n  return { depth: bands, height, width, bands: bandStats };\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return calcImageStats;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = calcImageStats;\n  module.exports.default = calcImageStats;\n  module.exports.calcImageStats = calcImageStats;\n}\n\nif (typeof self === \"object\") {\n  self.calcImageStats = calcImageStats;\n}\n\nif (typeof window === \"object\") {\n  self.calcImageStats = calcImageStats;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addAlpha;\n/**\n * @description adds an alpha channel to an RGB Pixel, creating a new RGBA pixel\n * @param rgb - a 3-number RGB pixel\n * @returns rgba - a 4-number array representing an RGBA pixel\n */\nfunction addAlpha(rgb) {\n  return [...rgb, 255];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = makeNoDataRgba;\nfunction makeNoDataRgba(noDataValue) {\n  // typescript not smart enough to realize all values in the array will be the same\n  // @ts-ignore\n  return [noDataValue, noDataValue, noDataValue, 0];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = makeNoDataRgbaString;\nfunction makeNoDataRgbaString(noDataValue) {\n  return `rgba(${noDataValue}, ${noDataValue}, ${noDataValue}, 0)`;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_one;\nfunction convert_one(old_no_data_value, noDataPixel, scalefn, pixel) {\n  const n = pixel[0];\n  if (n === old_no_data_value) return noDataPixel;\n  const scaled = scalefn(n);\n  return [scaled, scaled, scaled, 255];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_one_band_pixel_to_rgba_string;\nfunction convert_raw_one_band_pixel_to_rgba_string(old_no_data_value, noDataPixel, scalefn, pixel) {\n  const n = pixel[0];\n  if (n === old_no_data_value) return noDataPixel;\n  const scaled = scalefn(n);\n  return `rgba(${scaled}, ${scaled}, ${scaled}, 255)`;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_two_band_pixel_to_rgba;\nfunction convert_raw_two_band_pixel_to_rgba(old_no_data_value, new_no_data_value, scalefn1, scalefn2, pixel) {\n  const [r, g] = pixel;\n  // @ts-ignore\n  return [r === old_no_data_value ? new_no_data_value : scalefn1(r), g === old_no_data_value ? new_no_data_value : scalefn2(g), 0, r === old_no_data_value || g === old_no_data_value ? 0 : 255];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_two_band_pixel_to_rgba_string;\nfunction convert_raw_two_band_pixel_to_rgba_string(old_no_data_value, new_no_data_value, scalefn1, scalefn2, pixel) {\n  const [r, g] = pixel;\n  return `rgba(${r === old_no_data_value ? new_no_data_value : scalefn1(r)}, ${g === old_no_data_value ? new_no_data_value : scalefn2(g)}, 0, ${r === old_no_data_value || g === old_no_data_value ? 0 : 255})`;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_double_all;\n// convert a 2-band pixel\n// if any no data is found, set all RGB to no data\nfunction convert_double_all(old_no_data_value, noDataPixel, scalefn1, scalefn2, pixel) {\n  if (pixel.includes(old_no_data_value)) return noDataPixel;\n  return [scalefn1(pixel[0]), scalefn2(pixel[1]), 0, 255];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_double_all_string;\n// convert a 2-band pixel\n// if any no data is found, set all RGB to no data\nfunction convert_double_all_string(old_no_data_value, noDataPixel, scalefn1, scalefn2, pixel) {\n  if (pixel.includes(old_no_data_value)) return noDataPixel;\n  return `rgba(${scalefn1(pixel[0])},${scalefn2(pixel[1])},0,255)`;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_multiband;\nfunction convert_multiband(old_no_data_value, new_no_data_value, scalefn1, scalefn2, scalefn3, pixel) {\n  const [r, g, b] = pixel;\n  return [\n  // @ts-ignore\n  r === old_no_data_value ? new_no_data_value : scalefn1(r),\n  // @ts-ignore\n  g === old_no_data_value ? new_no_data_value : scalefn2(g),\n  // @ts-ignore\n  b === old_no_data_value ? new_no_data_value : scalefn3(b),\n  // @ts-ignore\n  r === old_no_data_value || g === old_no_data_value || b === old_no_data_value ? 0 : 255];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_multiband_to_rgba_string;\nfunction convert_raw_multiband_to_rgba_string(old_no_data_value, new_no_data_value, scalefn1, scalefn2, scalefn3, pixel) {\n  const [r, g, b] = pixel;\n  return `rgba(${r === old_no_data_value ? new_no_data_value : scalefn1(r)}, ${g === old_no_data_value ? new_no_data_value : scalefn2(g)}, ${b === old_no_data_value ? new_no_data_value : scalefn3(b)}, ${r === old_no_data_value || g === old_no_data_value || b === old_no_data_value ? \"0\" : \"255\"})`;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_multiband_all;\nfunction convert_multiband_all(old_no_data_value, noDataPixel, scalefn1, scalefn2, scalefn3, pixel) {\n  if (pixel.includes(old_no_data_value)) return noDataPixel;\n  return [scalefn1(pixel[0]), scalefn2(pixel[1]), scalefn3(pixel[2]), 255];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_multiband_all_to_string;\nfunction convert_multiband_all_to_string(old_no_data_value, noDataPixel, scalefn1, scalefn2, scalefn3, pixel) {\n  if (pixel.includes(old_no_data_value)) return noDataPixel;\n  return `rgba(${scalefn1(pixel[0])}, ${scalefn2(pixel[1])}, ${scalefn3(pixel[2])}, 255)`;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rawToRgba;\nvar _quickScale = require(\"quick-scale\");\nvar _makeNoDataRgba = _interopRequireDefault(require(\"../make-no-data-rgba\"));\nvar _makeNoDataRgbaString = _interopRequireDefault(require(\"../make-no-data-rgba-string\"));\nvar _convertSingle = _interopRequireDefault(require(\"./convert-single\"));\nvar _convertSingleStr = _interopRequireDefault(require(\"./convert-single-str\"));\nvar _convertDouble = _interopRequireDefault(require(\"./convert-double\"));\nvar _convertDoubleStr = _interopRequireDefault(require(\"./convert-double-str\"));\nvar _convertDoubleAll = _interopRequireDefault(require(\"./convert-double-all\"));\nvar _convertDoubleAllStr = _interopRequireDefault(require(\"./convert-double-all-str\"));\nvar _convertMultiband = _interopRequireDefault(require(\"./convert-multiband\"));\nvar _convertMultibandStr = _interopRequireDefault(require(\"./convert-multiband-str\"));\nvar _convertMultibandAll = _interopRequireDefault(require(\"./convert-multiband-all\"));\nvar _convertMultibandAllStr = _interopRequireDefault(require(\"./convert-multiband-all-str\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction rawToRgba({\n  debug_level = 0,\n  format = \"array\",\n  ranges,\n  flip = false,\n  new_no_data_value,\n  no_data_strategy,\n  no_range_value,\n  no_range_value_strategy,\n  old_no_data_value\n}) {\n  if (debug_level >= 1) console.log(\"[pixel-utils/raw-to-rgba] ranges:\", ranges);\n  const nbands = ranges.length;\n  const new_range = [0 === new_no_data_value ? 1 : 0, 255 === new_no_data_value ? 254 : 255];\n  if (debug_level >= 1) console.log(\"[pixel-utils/raw-to-rgba] new_range:\", new_range);\n  const options = {\n    no_data_value: new_no_data_value,\n    flip,\n    no_range_value,\n    no_range_value_strategy,\n    round: true\n  };\n  if (debug_level >= 1) console.log(\"[pixel-utils/raw-to-rgba] options:\", options);\n  const scalefns = ranges.slice(0, 3).map(rng => (0, _quickScale.createScaleFunction)(rng, new_range, options));\n  if (nbands === 1) {\n    if (format === \"string\") {\n      // @ts-ignore\n      return _convertSingleStr.default.bind(null, old_no_data_value, (0, _makeNoDataRgbaString.default)(new_no_data_value !== null && new_no_data_value !== void 0 ? new_no_data_value : \"null\"), scalefns[0]);\n    } else if (format === \"array\") {\n      // @ts-ignore\n      return _convertSingle.default.bind(null, old_no_data_value, (0, _makeNoDataRgba.default)(new_no_data_value), scalefns[0]);\n    }\n  } else if (nbands === 2) {\n    if (no_data_strategy === \"all\") {\n      if (format === \"string\") {\n        // @ts-ignore\n        return _convertDoubleAllStr.default.bind(null, old_no_data_value, (0, _makeNoDataRgbaString.default)(new_no_data_value !== null && new_no_data_value !== void 0 ? new_no_data_value : \"null\"), ...scalefns);\n      } else if (format === \"array\") {\n        // @ts-ignore\n        return _convertDoubleAll.default.bind(null, old_no_data_value, (0, _makeNoDataRgba.default)(new_no_data_value), ...scalefns);\n      }\n    } else {\n      if (format === \"string\") {\n        // @ts-ignore\n        return _convertDoubleStr.default.bind(null, old_no_data_value, new_no_data_value !== null && new_no_data_value !== void 0 ? new_no_data_value : \"null\", ...scalefns);\n      } else if (format === \"array\") {\n        // @ts-ignore\n        return _convertDouble.default.bind(null, old_no_data_value, new_no_data_value, ...scalefns);\n      }\n    }\n  } else if (nbands >= 3) {\n    if (no_data_strategy === \"all\") {\n      if (format === \"string\") {\n        // @ts-ignore\n        return _convertMultibandAllStr.default.bind(null, old_no_data_value, (0, _makeNoDataRgbaString.default)(new_no_data_value), ...scalefns);\n      } else if (format === \"array\") {\n        // @ts-ignore\n        return _convertMultibandAll.default.bind(null, old_no_data_value, (0, _makeNoDataRgba.default)(new_no_data_value), ...scalefns);\n      }\n    } else {\n      if (format === \"string\") {\n        // @ts-ignore\n        return _convertMultibandStr.default.bind(null, old_no_data_value, new_no_data_value, ...scalefns);\n      } else if (format === \"array\") {\n        // @ts-ignore\n        return _convertMultiband.default.bind(null, old_no_data_value, new_no_data_value, ...scalefns);\n      }\n    }\n  }\n  throw Error(\"uh oh\");\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Layout = void 0;\nlet Layout;\nexports.Layout = Layout;\n(function (Layout) {\n  Layout[\"[band][row][column]\"] = \"[band][row][column]\";\n  Layout[\"[band][row,column]\"] = \"[band][row,column]\";\n  Layout[\"[band,row,column]\"] = \"[band,row,column]\";\n  Layout[\"[row,column,band]\"] = \"[row,column,band]\";\n  Layout[\"[row,column][band]\"] = \"[row,column][band]\";\n  Layout[\"[row][column][band]\"] = \"[row][column][band]\";\n  Layout[\"[row][column,band]\"] = \"[row][column,band]\";\n})(Layout || (exports.Layout = Layout = {}));", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = select_brc;\nfunction select_brc(data, depth, height, width, r, c) {\n  const pixel = [];\n  const size = height * width;\n  const i = r * width + c;\n  for (let b = 0; b < depth; b++) {\n    pixel.push(data[b * size + i]);\n  }\n  return pixel;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = select_b_r_c;\nfunction select_b_r_c(data, depth, r, c) {\n  const pixel = [];\n  for (let b = 0; b < depth; b++) {\n    pixel.push(data[b][r][c]);\n  }\n  return pixel;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = select_b_rc;\nfunction select_b_rc(data, depth, width, r, c) {\n  const pixel = [];\n  const i = r * width + c;\n  for (let b = 0; b < depth; b++) {\n    pixel.push(data[b][i]);\n  }\n  return pixel;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = select_rcb;\n// like ImageData.data\nfunction select_rcb(data, depth, width, r, c) {\n  const pixel = [];\n  let i = (r * width + c) * depth;\n  const imax = i + depth;\n  for (; i < imax; i++) {\n    pixel.push(data[i]);\n  }\n  return pixel;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = select_rc_b;\nfunction select_rc_b(data, width, r, c) {\n  return data[r * width + c];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = select_r_c_b;\nfunction select_r_c_b(data, r, c) {\n  return data[r][c];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = select_r_cb;\n// each row is its own array\nfunction select_r_cb(data, depth, r, c) {\n  const pixel = [];\n  const row = data[r];\n  let i = c * depth;\n  const imax = i + depth;\n  for (; i < imax; i++) {\n    pixel.push(row[i]);\n  }\n  return pixel;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = selectPixel;\nvar _enums = require(\"../enums\");\nvar _selectPixelFromBrc = _interopRequireDefault(require(\"./select-pixel-from-brc\"));\nvar _selectPixelFromBRC = _interopRequireDefault(require(\"./select-pixel-from-b-r-c\"));\nvar _selectPixelFromBRc = _interopRequireDefault(require(\"./select-pixel-from-b-rc\"));\nvar _selectPixelFromRcb = _interopRequireDefault(require(\"./select-pixel-from-rcb\"));\nvar _selectPixelFromRcB = _interopRequireDefault(require(\"./select-pixel-from-rc-b\"));\nvar _selectPixelFromRCB = _interopRequireDefault(require(\"./select-pixel-from-r-c-b\"));\nvar _selectPixelFromRCb = _interopRequireDefault(require(\"./select-pixel-from-r-cb\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction selectPixel(data, {\n  depth,\n  height,\n  layout,\n  width\n}) {\n  // console.log(\"layout:\", {layout, data, depth, width});\n  switch (layout) {\n    case _enums.Layout[\"[band][row][column]\"]:\n      // @ts-ignore\n      return _selectPixelFromBRC.default.bind(null, data, depth);\n    case _enums.Layout[\"[band][row,column]\"]:\n      // @ts-ignore\n      return _selectPixelFromBRc.default.bind(null, data, depth, width);\n    case _enums.Layout[\"[band,row,column]\"]:\n      // @ts-ignore\n      return _selectPixelFromBrc.default.bind(null, data, depth, height, width);\n    case _enums.Layout[\"[row,column][band]\"]:\n      // @ts-ignore\n      return _selectPixelFromRcB.default.bind(null, data, width);\n    case _enums.Layout[\"[row][column][band]\"]:\n      // @ts-ignore\n      return _selectPixelFromRCB.default.bind(null, data);\n    case _enums.Layout[\"[row][column,band]\"]:\n      // @ts-ignore\n      return _selectPixelFromRCb.default.bind(null, data, depth);\n    case _enums.Layout[\"[row,column,band]\"]:\n      // @ts-ignore\n      return _selectPixelFromRcb.default.bind(null, data, depth, width);\n    default:\n      throw new Error(\"[pixel-utils] unknown layout \" + layout);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = fit;\nvar _xdim = require(\"xdim\");\nvar _rawToRgba = _interopRequireDefault(require(\"../raw-to-rgba\"));\nvar _selectPixel = _interopRequireDefault(require(\"../select-pixel\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// fit raw bands to 8-bit color space\n// while slicing and scaling as necessary\nfunction fit({\n  data,\n  debug_level = 0,\n  depth,\n  flip = false,\n  old_no_data_value,\n  old_layout,\n  no_data_strategy = \"partial\",\n  // png strategy\n  no_range_value,\n  no_range_value_strategy = \"top\",\n  new_layout = \"[row,column,band]\",\n  new_no_data_value,\n  height,\n  ranges,\n  width\n}) {\n  if (!ranges) throw new Error(\"[expand] can't expand without ranges\");\n  if (debug_level >= 1) console.log(\"[stretch] starting fit\");\n  if (typeof height !== \"number\") throw new Error(\"[fit] height must be a number\");\n  if (typeof width !== \"number\") throw new Error(\"[fit] height must be a number\");\n  if (typeof old_layout !== \"string\") throw new Error(\"[fit] old_layout must be a string\");\n  if (typeof new_layout !== \"string\") throw new Error(\"[fit] new_layout must be a string\");\n  const select = (0, _selectPixel.default)(data, {\n    depth,\n    height,\n    layout: old_layout,\n    width\n  });\n  const out_sizes = {\n    band: 4,\n    row: height,\n    column: width\n  };\n  const {\n    data: out_data\n  } = (0, _xdim.prepareData)({\n    fill: new_no_data_value,\n    layout: new_layout,\n    sizes: out_sizes\n  });\n  const convert = (0, _rawToRgba.default)({\n    debug_level: debug_level - 1,\n    format: \"array\",\n    flip,\n    ranges,\n    new_no_data_value: new_no_data_value,\n    no_data_strategy: no_data_strategy,\n    no_range_value: no_range_value,\n    no_range_value_strategy: no_range_value_strategy,\n    old_no_data_value\n  });\n  const update = (0, _xdim.prepareUpdate)({\n    data: out_data,\n    layout: new_layout,\n    sizes: out_sizes\n  });\n  for (let row = 0; row < height; row++) {\n    for (let column = 0; column < width; column++) {\n      const [r, g, b, a] = convert(select(row, column));\n      update({\n        point: {\n          band: 0,\n          row,\n          column\n        },\n        value: r\n      });\n      update({\n        point: {\n          band: 1,\n          row,\n          column\n        },\n        value: g\n      });\n      update({\n        point: {\n          band: 2,\n          row,\n          column\n        },\n        value: b\n      });\n      update({\n        point: {\n          band: 3,\n          row,\n          column\n        },\n        value: a\n      });\n    }\n  }\n  if (debug_level >= 1) console.log(\"[pixel-utils/fit] out_data:\", out_data);\n  return {\n    // @ts-ignore\n    data: out_data,\n    layout: new_layout\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasNoData;\nfunction hasNoData(noDataValue, pixel) {\n  return pixel.includes(noDataValue);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hide_rgba;\n/**\n * @name hide_rgba\n * @description make a given (scaled) rgba value transparent/invisble\n * @param {RGBA} rgba pixel\n * @returns a new rgba pixel with the same Red, Green and Blue values and a 0 alpha value\n */\nfunction hide_rgba([r, g, b]) {\n  return [r, g, b, 0];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHidden;\n/**\n * @description check if an RGBA pixel is hidden\n * @param {number[]} pixel - an array of 4 numbers representing [R, G, B, A]\n * @returns {boolean} whether the pixel is hidden\n */\nfunction isHidden(pixel) {\n  return pixel[3] === 0;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNoData;\n/**\n * @description check if an RGB pixel is a no data pixel\n * @param {number} no_data_value\n * @param {number[]} pixel - an array of 4 numbers representing [R, G, B, A]\n * @returns {boolean} whether the pixel is a no data pixel\n */\nfunction isNoData(no_data_value, pixel) {\n  return pixel[0] === no_data_value;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = makeNoDataRGB;\nfunction makeNoDataRGB(noDataValue) {\n  // typescript not smart enough to realize all values in the array will be the same\n  // @ts-ignore\n  return [noDataValue, noDataValue, noDataValue];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = popAlpha;\n/**\n *\n * @param {Pixel} pixel - an RGBA Pixel, an Array of 4 Numbers [Red, Green, Blue, Alpha]\n * @returns {RGBA} an RGB Pixel, an Array of 3 Numbers [Red, Green, Blue]\n */\nfunction popAlpha(pixel) {\n  pixel.pop();\n  // @ts-ignore\n  return pixel;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = range;\nfunction range(ct) {\n  return new Array(ct).fill(0).map((_, i) => i);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_one_band_pixel_to_rgb;\nfunction convert_raw_one_band_pixel_to_rgb(noDataValue, noDataPixel, scale, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  const scaled = scale(pixel[0]);\n  return [scaled, scaled, scaled];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_one_band_pixel_to_rgb_str;\nfunction convert_raw_one_band_pixel_to_rgb_str(noDataValue, noDataPixel, scale, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  const scaled = scale(pixel[0]);\n  return \"rgb(\" + scaled + \", \" + scaled + \", \" + scaled + \")\";\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_two_band_pixel_to_rgb;\nfunction convert_raw_two_band_pixel_to_rgb(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return [scaleFunction1(pixel[0]), scaleFunction2(pixel[1]), 0];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_two_band_pixel_to_rgb_str;\nfunction convert_raw_two_band_pixel_to_rgb_str(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return \"rgb(\" + scaleFunction1(pixel[0]) + \", \" + scaleFunction2(pixel[1]) + \", 0)\";\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_three_band_pixel_to_rgb;\nfunction convert_raw_three_band_pixel_to_rgb(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, scaleFunction3, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return [scaleFunction1(pixel[0]), scaleFunction2(pixel[1]), scaleFunction3(pixel[2])];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_three_band_pixel_to_rgb_css;\nfunction convert_raw_three_band_pixel_to_rgb_css(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, scaleFunction3, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return \"rgb(\" + scaleFunction1(pixel[0]) + \", \" + scaleFunction2(pixel[1]) + \", \" + scaleFunction3(pixel[2]) + \")\";\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_two_band_pixel_to_rgb;\nfunction convert_raw_two_band_pixel_to_rgb(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, scaleFunction3, pixel) {\n  pixel = pixel.slice(0, 3);\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return [scaleFunction1(pixel[0]), scaleFunction2(pixel[1]), scaleFunction3(pixel[2])];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = convert_raw_two_band_pixel_to_rgb_str;\nfunction convert_raw_two_band_pixel_to_rgb_str(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, scaleFunction3, pixel) {\n  pixel = pixel.slice(0, 3);\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return \"rgb(\" + scaleFunction1(pixel[0]) + \", \" + scaleFunction2(pixel[1]) + \", \" + scaleFunction3(pixel[2]) + \")\";\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rgbToStr;\n// prettier-ignore\nfunction rgbToStr([r, g, b]) {\n  return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rawToRgb;\nvar _quickScale = require(\"quick-scale\");\nvar _makeNoDataRgb = _interopRequireDefault(require(\"../make-no-data-rgb\"));\nvar _convertSingle = _interopRequireDefault(require(\"./convert-single\"));\nvar _convertSingleStr = _interopRequireDefault(require(\"./convert-single-str\"));\nvar _convertDouble = _interopRequireDefault(require(\"./convert-double\"));\nvar _convertDoubleStr = _interopRequireDefault(require(\"./convert-double-str\"));\nvar _convertTriple = _interopRequireDefault(require(\"./convert-triple\"));\nvar _convertTripleStr = _interopRequireDefault(require(\"./convert-triple-str\"));\nvar _convertMany = _interopRequireDefault(require(\"./convert-many\"));\nvar _convertManyStr = _interopRequireDefault(require(\"./convert-many-str\"));\nvar _rgbToStr = _interopRequireDefault(require(\"../rgb-to-str\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction rawToRgb({\n  format = \"array\",\n  ranges,\n  flip,\n  new_no_data_pixel,\n  new_no_data_value,\n  no_range_value,\n  no_range_value_strategy,\n  old_no_data_value,\n  round = true\n}) {\n  const nbands = ranges.length;\n  if (new_no_data_pixel && new_no_data_value) {\n    throw new Error(\"[pixel-utils/raw-to-rgb] can't specify both new_no_data_pixel and new_no_data_value\");\n  }\n  if (new_no_data_pixel === undefined || new_no_data_pixel === null) {\n    if (new_no_data_value === undefined || new_no_data_value === null) {\n      new_no_data_pixel = (0, _makeNoDataRgb.default)(null);\n    } else {\n      new_no_data_pixel = (0, _makeNoDataRgb.default)(new_no_data_value);\n    }\n  }\n  if (new_no_data_pixel === undefined) throw new Error(\"[raw-to-rgb] undefined new_no_data_pixel\");\n  const new_range = [0 === new_no_data_value ? 1 : 0, 255 === new_no_data_value ? 254 : 255];\n  const options = {\n    flip,\n    no_range_value,\n    no_range_value_strategy,\n    round\n  };\n  const scalefns = ranges.slice(0, 3).map(rng => (0, _quickScale.createScaleFunction)(rng, new_range, options));\n  if (nbands === 1) {\n    if (format === \"string\") {\n      // @ts-ignore\n      return _convertSingleStr.default.bind(null, old_no_data_value, (0, _rgbToStr.default)(new_no_data_pixel), ...scalefns);\n    } else {\n      // @ts-ignore\n      return _convertSingle.default.bind(null, old_no_data_value, new_no_data_pixel, ...scalefns);\n    }\n  } else if (nbands === 2) {\n    if (format === \"string\") {\n      // @ts-ignore\n      return _convertDoubleStr.default.bind(null, old_no_data_value, (0, _rgbToStr.default)(new_no_data_pixel), ...scalefns);\n    } else {\n      // @ts-ignore\n      return _convertDouble.default.bind(null, old_no_data_value, new_no_data_pixel, ...scalefns);\n    }\n  } else if (nbands === 3) {\n    if (format === \"string\") {\n      // @ts-ignore\n      return _convertTripleStr.default.bind(null, old_no_data_value, (0, _rgbToStr.default)(new_no_data_pixel), ...scalefns);\n    } else {\n      // @ts-ignore\n      return _convertTriple.default.bind(null, old_no_data_value, new_no_data_pixel, ...scalefns);\n    }\n  } else if (nbands >= 4) {\n    if (format === \"string\") {\n      // @ts-ignore\n      return _convertManyStr.default.bind(null, old_no_data_value, (0, _rgbToStr.default)(new_no_data_pixel), ...scalefns);\n    } else {\n      // @ts-ignore\n      return _convertMany.default.bind(null, old_no_data_value, new_no_data_pixel, ...scalefns);\n    }\n  } else {\n    throw new Error(\"[pixel-utils/raw-to-rgb] invalid number of bands: \" + nbands);\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pushAlpha;\n/**\n * @description converts an RGB to an RGBA by pushing an alpha value at the end of the RGB array\n * @param rgb - a 3-number RGB pixel\n * @returns rgba - a 4-number array representing an RGBA pixel\n */\nfunction pushAlpha(pixel) {\n  // @ts-ignore\n  pixel.push(255);\n  // @ts-ignore\n  return pixel;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = safely_convert_rgb_to_rgba;\nvar _addAlpha = _interopRequireDefault(require(\"../add-alpha\"));\nvar _isNoData = _interopRequireDefault(require(\"../is-no-data\"));\nvar _makeNoDataRgba = _interopRequireDefault(require(\"../make-no-data-rgba\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction safely_convert_rgb_to_rgba(old_no_data_value, new_no_data_value, pixel) {\n  return (0, _isNoData.default)(old_no_data_value, pixel) ? (0, _makeNoDataRgba.default)(new_no_data_value) : (0, _addAlpha.default)(pixel);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = quickly_convert;\nvar _isNoData = _interopRequireDefault(require(\"../is-no-data\"));\nvar _pushAlpha = _interopRequireDefault(require(\"../push-alpha\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// assuming valid RGB input\nfunction quickly_convert(old_no_data_value, new_no_data_pixel, px) {\n  return (0, _isNoData.default)(old_no_data_value, px) ? new_no_data_pixel : (0, _pushAlpha.default)(px);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rgbToRgba;\nvar _addAlpha = _interopRequireDefault(require(\"../add-alpha\"));\nvar _pushAlpha = _interopRequireDefault(require(\"../push-alpha\"));\nvar _makeNoDataRgba = _interopRequireDefault(require(\"../make-no-data-rgba\"));\nvar _safelyConvert = _interopRequireDefault(require(\"./safely-convert\"));\nvar _quicklyConvert = _interopRequireDefault(require(\"./quickly-convert\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction rgbToRgba({\n  old_no_data_value,\n  new_no_data_value = null,\n  safe = true\n} = {}) {\n  if (typeof old_no_data_value === \"number\") {\n    if (safe) {\n      // @ts-ignore\n      return _safelyConvert.default.bind(null, old_no_data_value, new_no_data_value);\n    } else {\n      const new_no_data_pixel = (0, _makeNoDataRgba.default)(new_no_data_value); // we will reuse this no data pixel\n      // @ts-ignore\n      return _quicklyConvert.default.bind(null, old_no_data_value, new_no_data_pixel);\n    }\n  } else {\n    if (safe) {\n      return _addAlpha.default;\n    } else {\n      return _pushAlpha.default;\n    }\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sliceAlpha;\n/**\n * @name sliceAlpha\n * @description slices off the alpha value of a 4-number RGBA pixel array,\n * leaving a new 3-Number RGB pixel array\n * @param {RGBA} pixel - an RGBA\n * @returns {RGBA} an RGBA pixel as an array of 4 numbers\n */\nfunction sliceAlpha(pixel) {\n  // @ts-ignore\n  return pixel.slice(0, 3);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = safely_convert_rgba_to_rgb;\nvar _isHidden = _interopRequireDefault(require(\"../is-hidden\"));\nvar _makeNoDataRgb = _interopRequireDefault(require(\"../make-no-data-rgb\"));\nvar _sliceAlpha = _interopRequireDefault(require(\"../slice-alpha\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction safely_convert_rgba_to_rgb(noDataValue, pixel) {\n  return (0, _isHidden.default)(pixel) ? (0, _makeNoDataRgb.default)(noDataValue) : (0, _sliceAlpha.default)(pixel);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = quickly_convert_rgba_to_rgb;\nvar _isHidden = _interopRequireDefault(require(\"../is-hidden\"));\nvar _popAlpha = _interopRequireDefault(require(\"../pop-alpha\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction quickly_convert_rgba_to_rgb(noDataPixel, pixel) {\n  return (0, _isHidden.default)(pixel) ? noDataPixel : (0, _popAlpha.default)(pixel);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rgbaToRgb;\nvar _makeNoDataRgb = _interopRequireDefault(require(\"../make-no-data-rgb\"));\nvar _popAlpha = _interopRequireDefault(require(\"../pop-alpha\"));\nvar _sliceAlpha = _interopRequireDefault(require(\"../slice-alpha\"));\nvar _safelyConvert = _interopRequireDefault(require(\"./safely-convert\"));\nvar _quicklyConvert = _interopRequireDefault(require(\"./quickly-convert\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// converting from RGBA to RGB\n// where we no longer have an alpha value\n// assuming pixel is already scaled\n// assume no data pixels have zero transparency\nfunction rgbaToRgb({\n  new_no_data_value,\n  safe = true\n} = {}) {\n  if (safe) {\n    if (typeof new_no_data_value === \"number\") {\n      // @ts-ignore\n      return _safelyConvert.default.bind(null, new_no_data_value);\n    } else {\n      return _sliceAlpha.default;\n    }\n  } else {\n    if (typeof new_no_data_value === \"number\") {\n      // @ts-ignore\n      return _quicklyConvert.default.bind(null, (0, _makeNoDataRgb.default)(new_no_data_value));\n    } else {\n      return _popAlpha.default;\n    }\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setHidden;\n// make a given rgba value transparent\nfunction setHidden(pixel) {\n  // @ts-ignore\n  pixel[3] = 0;\n  // @ts-ignore\n  return pixel;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = setVisible;\n// make a given rgba value visible\nfunction setVisible(pixel) {\n  // @ts-ignore\n  pixel[3] = 255;\n  // @ts-ignore\n  return pixel;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = showRGBA;\n/**\n * @name show_rgba\n * @description // make a given (scaled) rgba value visible\n * @param {RGBA} rgba pixel\n * @returns a new rgba pixel with the same Red, Green and Blue values and a 255 alpha value\n */\nfunction showRGBA([r, g, b]) {\n  return [r, g, b, 255];\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"addAlpha\", {\n  enumerable: true,\n  get: function () {\n    return _addAlpha.default;\n  }\n});\nObject.defineProperty(exports, \"fit\", {\n  enumerable: true,\n  get: function () {\n    return _fit.default;\n  }\n});\nObject.defineProperty(exports, \"hasNoData\", {\n  enumerable: true,\n  get: function () {\n    return _hasNoData.default;\n  }\n});\nObject.defineProperty(exports, \"hideRgba\", {\n  enumerable: true,\n  get: function () {\n    return _hideRgba.default;\n  }\n});\nObject.defineProperty(exports, \"isHidden\", {\n  enumerable: true,\n  get: function () {\n    return _isHidden.default;\n  }\n});\nObject.defineProperty(exports, \"isNoData\", {\n  enumerable: true,\n  get: function () {\n    return _isNoData.default;\n  }\n});\nObject.defineProperty(exports, \"makeNoDataRgb\", {\n  enumerable: true,\n  get: function () {\n    return _makeNoDataRgb.default;\n  }\n});\nObject.defineProperty(exports, \"makeNoDataRgba\", {\n  enumerable: true,\n  get: function () {\n    return _makeNoDataRgba.default;\n  }\n});\nObject.defineProperty(exports, \"popAlpha\", {\n  enumerable: true,\n  get: function () {\n    return _popAlpha.default;\n  }\n});\nObject.defineProperty(exports, \"range\", {\n  enumerable: true,\n  get: function () {\n    return _range.default;\n  }\n});\nObject.defineProperty(exports, \"rawToRgb\", {\n  enumerable: true,\n  get: function () {\n    return _rawToRgb.default;\n  }\n});\nObject.defineProperty(exports, \"rawToRgba\", {\n  enumerable: true,\n  get: function () {\n    return _rawToRgba.default;\n  }\n});\nObject.defineProperty(exports, \"rgbToRgba\", {\n  enumerable: true,\n  get: function () {\n    return _rgbToRgba.default;\n  }\n});\nObject.defineProperty(exports, \"rgbToStr\", {\n  enumerable: true,\n  get: function () {\n    return _rgbToStr.default;\n  }\n});\nObject.defineProperty(exports, \"rgbaToRgb\", {\n  enumerable: true,\n  get: function () {\n    return _rgbaToRgb.default;\n  }\n});\nObject.defineProperty(exports, \"setHidden\", {\n  enumerable: true,\n  get: function () {\n    return _setHidden.default;\n  }\n});\nObject.defineProperty(exports, \"setVisible\", {\n  enumerable: true,\n  get: function () {\n    return _setVisible.default;\n  }\n});\nObject.defineProperty(exports, \"showRgba\", {\n  enumerable: true,\n  get: function () {\n    return _showRgba.default;\n  }\n});\nObject.defineProperty(exports, \"sliceAlpha\", {\n  enumerable: true,\n  get: function () {\n    return _sliceAlpha.default;\n  }\n});\nvar _addAlpha = _interopRequireDefault(require(\"./add-alpha\"));\nvar _fit = _interopRequireDefault(require(\"./fit\"));\nvar _hasNoData = _interopRequireDefault(require(\"./has-no-data\"));\nvar _hideRgba = _interopRequireDefault(require(\"./hide-rgba\"));\nvar _isHidden = _interopRequireDefault(require(\"./is-hidden\"));\nvar _isNoData = _interopRequireDefault(require(\"./is-no-data\"));\nvar _makeNoDataRgb = _interopRequireDefault(require(\"./make-no-data-rgb\"));\nvar _makeNoDataRgba = _interopRequireDefault(require(\"./make-no-data-rgba\"));\nvar _popAlpha = _interopRequireDefault(require(\"./pop-alpha\"));\nvar _range = _interopRequireDefault(require(\"./range\"));\nvar _rawToRgb = _interopRequireDefault(require(\"./raw-to-rgb\"));\nvar _rawToRgba = _interopRequireDefault(require(\"./raw-to-rgba\"));\nvar _rgbToRgba = _interopRequireDefault(require(\"./rgb-to-rgba\"));\nvar _rgbToStr = _interopRequireDefault(require(\"./rgb-to-str\"));\nvar _rgbaToRgb = _interopRequireDefault(require(\"./rgba-to-rgb\"));\nvar _setHidden = _interopRequireDefault(require(\"./set-hidden\"));\nvar _setVisible = _interopRequireDefault(require(\"./set-visible\"));\nvar _showRgba = _interopRequireDefault(require(\"./show-rgba\"));\nvar _sliceAlpha = _interopRequireDefault(require(\"./slice-alpha\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }", "const calcImageStats = require(\"calc-image-stats\");\nconst guessImageLayout = require(\"guess-image-layout\");\nconst { rawToRgba } = require(\"pixel-utils\");\n\n// decorator adding canvas support to geowarp\nfunction geowarp_canvas(geowarp) {\n  return function ({\n    plugins = [],\n    out_canvas, // canvas that has a height and width set\n    in_stats,\n    out_no_data_color,\n    out_resolution = [1, 1], // 1 = full resolution, 0.5 sample for half as many pixels across\n    draw,\n    before_draw,\n    after_draw,\n    before_warp,\n    after_warp,\n    palette,\n    flip,\n    ...rest\n  }) {\n    // don't activate plugin\n    if (!plugins.includes(\"canvas\")) {\n      return geowarp({ ...rest, plugins, in_stats });\n    }\n\n    if (typeof out_canvas.height !== \"number\") throw Error(\"[geowarp-canvas] out_canvas.height not set\");\n    if (typeof out_canvas.width !== \"number\") throw Error(\"[geowarp-canvas] out_canvas.width not set\");\n\n    // shallow clone of geowarp options\n    const options = { ...rest };\n\n    let [x_resolution, y_resolution] = out_resolution;\n\n    options.debug_level = Math.max(0, options.debug_level || 0);\n    options.out_pixel_depth = 4;\n\n    options.out_height = Math.round(out_canvas.height * y_resolution);\n    options.out_width = Math.round(out_canvas.width * x_resolution);\n\n    // re-adjust resolution according to pixel necessary rounding\n    x_resolution = options.out_width / out_canvas.width;\n    y_resolution = options.out_height / out_canvas.height;\n\n    const scale = [1 / x_resolution, 1 / y_resolution];\n\n    const out_context = out_canvas.getContext(\"2d\");\n\n    // don't try to render pixels that have one or more no data values\n    options.skip_no_data_strategy ??= \"any\";\n\n    // don't try to insert null values when expr returns null\n    options.insert_null_strategy = \"skip\";\n\n    if (!options.expr) {\n      if (palette) {\n        if (typeof palette[pixel[0]] === \"string\") {\n          options.expr = ({ pixel }) => palette[pixel[0]];\n        } else if (palette[0].length === 3) {\n          options.expr = ({ pixel }) => `rgb(${palette[pixel[0]].join(\", \")})`;\n        } else if (palette[0].length === 4) {\n          options.expr = ({ pixel }) => {\n            const [r, g, b, a] = palette[pixel[0]];\n            return `rgba(${r}, ${g}, ${b}, ${a / 255})`;\n          };\n        }\n      } else {\n        if (options.debug_level >= 1) console.log(\"[geowarp-canvas] creating expr function that fits pixels to 0-255 color space\");\n\n        const guessed = guessImageLayout({\n          data: options.in_data,\n          height: options.in_height,\n          width: options.in_width\n        });\n        options.in_pixel_depth ??= guessed.bands;\n        options.in_height ??= guessed.height;\n        options.in_width ??= guessed.width;\n\n        flip ??= options.in_pixel_depth === 1;\n\n        in_stats ??= calcImageStats(options.in_data, {\n          height: options.in_height,\n          noData: options.in_no_data,\n          stats: [\"min\", \"max\"],\n          width: options.in_width\n        }).bands;\n\n        const rawToRgbaFn = rawToRgba({\n          debug_level: options.debug_level,\n          format: \"string\",\n          ranges: in_stats.map(band => [band.min, band.max]),\n          flip,\n          no_data_strategy: \"all\",\n          no_range_value_strategy: flip ? \"highest\" : \"lowest\",\n          old_no_data_value: options.in_no_data\n        });\n        if (options.debug_level >= 2) console.log(\"[geowarp-canvas] created a function for converting from raw pixel values to RGBA\");\n\n        options.expr = ({ pixel }) => rawToRgbaFn(pixel);\n      }\n    }\n\n    let image_data;\n\n    options.insert_sample = function ({\n      pixel: color,\n      row,\n      column,\n      raw,\n\n      // the following are currently only provided by geowarp when using \"near\" resampling\n      pt_in_srs,\n      pt_out_srs,\n      x_in_raster_pixels,\n      y_in_raster_pixels\n    }) {\n      if (color === null || color === undefined) return;\n\n      if (Array.isArray(color)) {\n        const len = color.length;\n        if (len === 3) {\n          const [r, g, b] = color;\n          color = `rgb(${r},${g},${b})`;\n        } else if (len === 4) {\n          const [r, g, b, a] = color;\n          color = `rgba(${r},${g},${b},${a / 255})`;\n        }\n      }\n\n      out_context.fillStyle = color;\n\n      const xmin = column / x_resolution;\n      const ymin = row / y_resolution;\n\n      const xmax = (column + 1) / x_resolution;\n      const ymax = (row + 1) / y_resolution;\n\n      const xmin_rounded = Math.round(xmin);\n      const ymin_rounded = Math.round(ymin);\n\n      const width = Math.round(xmax) - xmin_rounded;\n      const height = Math.round(ymax) - ymin_rounded;\n\n      const draw_options = {\n        bbox: [xmin, ymin, xmax, ymax],\n        canvas: out_canvas,\n        color,\n        context: out_context,\n        data: options.in_data,\n        pixel: raw,\n        rect: [xmin_rounded, ymin_rounded, width, height],\n        resolution: out_resolution,\n        cell: [column, row],\n        scale,\n        points: [pt_in_srs, pt_out_srs],\n        sample: [x_in_raster_pixels, y_in_raster_pixels]\n      };\n\n      if (typeof before_draw === \"function\") {\n        before_draw(draw_options);\n      }\n\n      if (typeof draw === \"function\") {\n        draw(draw_options);\n      } else {\n        out_context.fillRect(xmin_rounded, ymin_rounded, width, height);\n      }\n\n      if (typeof after_draw === \"function\") {\n        after_draw(draw_options);\n      }\n    };\n\n    if (typeof out_no_data_color === \"string\") {\n      out_context.fillStyle = out_no_data_color;\n      out_context.fillRect(0, 0, out_canvas.width, out_canvas.height);\n    }\n\n    if (options.debug_level >= 2) {\n      console.log(\"[geowarp-canvas] calling geowarp with the following options:\", options);\n    }\n\n    out_context.save();\n\n    if (typeof before_warp === \"function\") before_warp(options);\n\n    const result = geowarp(options);\n\n    if (typeof after_warp === \"function\") after_warp(result);\n\n    if (image_data) out_context.putImageData(image_data, 0, 0);\n\n    // reset context\n    out_context.restore();\n\n    // add canvas to result\n    result.canvas = out_canvas;\n\n    return result;\n  };\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return geowarp_canvas;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = geowarp_canvas;\n  module.exports.default = geowarp_canvas;\n}\n\nif (typeof window === \"object\") {\n  window.geowarp_canvas = geowarp_canvas;\n}\n", "function snap_bbox({ bbox, container, debug, origin, overflow, padding, scale, size }) {\n  function clean(n) {\n    return n === 0 ? 0 : n;\n  }\n\n  if (debug) console.log(\"[snap-bbox] starting\");\n  if (debug) console.log(\"[snap-bbox] bbox:\", bbox);\n  if (debug) console.log(\"[snap-bbox] debug:\", debug);\n  if (debug) console.log(\"[snap-bbox] origin:\", origin);\n  if (debug) console.log(\"[snap-bbox] overflow:\", overflow);\n  if (debug) console.log(\"[snap-bbox] padding:\", padding);\n  if (debug) console.log(\"[snap-bbox] scale:\", scale);\n  if (debug) console.log(\"[snap-bbox] size:\", size);\n\n  const [originX, originY] = origin;\n  if (debug) console.log(\"[snap-bbox] originX:\", originX);\n  if (debug) console.log(\"[snap-bbox] originY:\", originY);\n\n  const [padX, padY] = padding || [0, 0];\n  if (debug) console.log(\"[snap-bbox] padX:\", padX);\n  if (debug) console.log(\"[snap-bbox] padY:\", padY);\n\n  const [scale_x, scale_y] = scale;\n  if (debug) console.log(\"[snap-bbox] scale_x:\", scale_x);\n  if (debug) console.log(\"[snap-bbox] scale_y:\", scale_y);\n\n  // if sign is -1 then x/y value decreases\n  // as grid cell number increases\n  const sign_scale_x = Math.sign(scale_x);\n  const sign_scale_y = Math.sign(scale_y);\n  if (debug) console.log(\"[snap-bbox] sign_scale_x:\", sign_scale_x);\n  if (debug) console.log(\"[snap-bbox] sign_scale_y:\", sign_scale_y);\n\n  const [xmin, ymin, xmax, ymax] = bbox;\n  if (debug) console.log(\"[snap-bbox] xmin:\", xmin);\n  if (debug) console.log(\"[snap-bbox] ymin:\", ymin);\n  if (debug) console.log(\"[snap-bbox] xmax:\", xmax);\n  if (debug) console.log(\"[snap-bbox] ymax:\", ymax);\n\n  const left = (xmin - originX) / scale_x;\n  const right = (xmax - originX) / scale_x;\n  const top = (ymax - originY) / scale_y;\n  const bottom = (ymin - originY) / scale_y;\n  if (debug) console.log(\"[snap-bbox] left:\", left);\n  if (debug) console.log(\"[snap-bbox] right:\", right);\n  if (debug) console.log(\"[snap-bbox] top:\", top);\n  if (debug) console.log(\"[snap-bbox] bottom:\", bottom);\n\n  // we're rounding here, so we don't ask for half a pixel\n  let left_int = Math.floor(left) - padX;\n  let right_int = Math.ceil(right) + padX;\n\n  // top_int is the number of pixels from the top edge of the grid\n  // so we want to subtract the padding\n  let top_int = Math.floor(top) - padY;\n\n  // bottom_int is the number of pixels from the top edge of the edge\n  // so we want to increase the padding\n  let bottom_int = Math.ceil(bottom) + padY;\n  if (debug) console.log(\"[snap-bbox] left_int:\", left_int);\n  if (debug) console.log(\"[snap-bbox] right_int:\", right_int);\n  if (debug) console.log(\"[snap-bbox] top_int:\", top_int);\n  if (debug) console.log(\"[snap-bbox] bottom_int:\", bottom_int);\n\n  if (container) {\n    if (debug) console.log(\"[snap-bbox] container:\", container);\n    const min_left = (container[0] - originX) / scale_x;\n    const max_right = (container[2] - originX) / scale_x;\n    const min_top = (container[3] - originY) / scale_y;\n    const max_bottom = (container[1] - originY) / scale_y;\n    if (debug) console.log(\"[snap-bbox] min_left:\", min_left);\n    if (debug) console.log(\"[snap-bbox] max_right:\", max_right);\n    if (debug) console.log(\"[snap-bbox] min_top:\", min_top);\n    if (debug) console.log(\"[snap-bbox] max_bottom:\", max_bottom);\n\n    const min_left_int = Math.ceil(min_left);\n    const max_right_int = Math.floor(max_right);\n    const min_top_int = Math.ceil(min_top);\n    const max_bottom_int = Math.floor(max_bottom);\n    if (debug) console.log(\"[snap-bbox] min_left_int:\", min_left_int);\n    if (debug) console.log(\"[snap-bbox] max_right_int:\", max_right_int);\n    if (debug) console.log(\"[snap-bbox] min_top_int:\", min_top_int);\n    if (debug) console.log(\"[snap-bbox] max_bottom_int:\", max_bottom_int);\n\n    left_int = Math.max(left_int, min_left_int);\n    right_int = Math.min(right_int, max_right_int);\n    top_int = Math.max(top_int, min_top_int);\n    bottom_int = Math.min(bottom_int, max_bottom_int);\n    if (debug) console.log(\"[snap-bbox] after containment, left_int:\", left_int);\n    if (debug) console.log(\"[snap-bbox] after containment, right_int:\", right_int);\n    if (debug) console.log(\"[snap-bbox] after containment, top_int:\", top_int);\n    if (debug) console.log(\"[snap-bbox] after containment, bottom_int:\", bottom_int);\n  }\n\n  if (size && overflow === false) {\n    if (debug) console.log(\"[snap-bbox] size:\", size);\n    const [width, height] = size;\n    if (debug) console.log(\"[snap-bbox] width:\", width);\n    if (debug) console.log(\"[snap-bbox] height:\", height);\n    if (left_int > width || right_int < 0 || bottom_int < 0 || top_int > height) {\n      throw new Error(\"[snap-bbox] bbox doesn't intersect the grid\");\n    }\n    left_int = Math.max(left_int, 0);\n    right_int = Math.min(right_int, width);\n    top_int = Math.max(top_int, 0);\n    bottom_int = Math.min(bottom_int, height);\n  }\n\n  // need ternary expresssions below because\n  // top_int is sometimes -0, which fails\n  // some NodeJS strict equality tests with 0\n  // however, 0 === -0 evaluates to true in NodeJS\n  const bbox_in_grid_cells = [clean(left_int), clean(bottom_int), clean(right_int), clean(top_int)];\n  if (debug) console.log(\"[snap-bbox] bbox_in_grid_cells:\", bbox_in_grid_cells);\n\n  const bbox_in_coordinate_system = [\n    clean(originX + left_int * scale_x), // xmin\n    clean(originY + bottom_int * scale_y), // ymin\n    clean(originX + right_int * scale_x), // xmax\n    clean(originY + top_int * scale_y) // ymax\n  ];\n\n  return { bbox_in_coordinate_system, bbox_in_grid_cells };\n}\n\nif (typeof define === \"function\" && define.amd)\n  define(function () {\n    return snap_bbox;\n  });\nif (typeof module === \"object\") module.exports = snap_bbox;\n", "const add = require(\"preciso/add.js\");\nconst ceil = require(\"preciso/ceil.js\");\nconst compare = require(\"preciso/compare.js\");\nconst divide = require(\"preciso/divide.js\");\nconst floor = require(\"preciso/floor.js\");\nconst max = require(\"preciso/max.js\");\nconst min = require(\"preciso/min.js\");\nconst multiply = require(\"preciso/multiply.js\");\nconst sign = require(\"preciso/sign.js\");\nconst subtract = require(\"preciso/subtract.js\");\n\nfunction snap_precise_bbox({ bbox, container, debug, origin, overflow, padding, scale, size }) {\n  if (debug) console.log(\"[snap-bbox] starting\");\n  if (debug) console.log(\"[snap-bbox] bbox:\", bbox);\n  if (debug) console.log(\"[snap-bbox] debug:\", debug);\n  if (debug) console.log(\"[snap-bbox] origin:\", origin);\n  if (debug) console.log(\"[snap-bbox] overflow:\", overflow);\n  if (debug) console.log(\"[snap-bbox] padding:\", padding);\n  if (debug) console.log(\"[snap-bbox] scale:\", scale);\n\n  const [originX, originY] = origin;\n  if (debug) console.log(\"[snap-bbox] originX:\", originX);\n  if (debug) console.log(\"[snap-bbox] originY:\", originY);\n\n  const [padX, padY] = padding || [\"0\", \"0\"];\n  if (debug) console.log(\"[snap-bbox] padX:\", padX);\n  if (debug) console.log(\"[snap-bbox] padY:\", padY);\n\n  const [scale_x, scale_y] = scale;\n  if (debug) console.log(\"[snap-bbox] scale_x:\", scale_x);\n  if (debug) console.log(\"[snap-bbox] scale_y:\", scale_y);\n\n  // if sign is -1 then x/y value decreases\n  // as grid cell number increases\n  const sign_scale_x = sign(scale_x);\n  const sign_scale_y = sign(scale_y);\n  if (debug) console.log(\"[snap-bbox] sign_scale_x:\", sign_scale_x);\n  if (debug) console.log(\"[snap-bbox] sign_scale_y:\", sign_scale_y);\n\n  const [xmin, ymin, xmax, ymax] = bbox;\n  if (debug) console.log(\"[snap-bbox] xmin:\", xmin);\n  if (debug) console.log(\"[snap-bbox] ymin:\", ymin);\n  if (debug) console.log(\"[snap-bbox] xmax:\", xmax);\n  if (debug) console.log(\"[snap-bbox] ymax:\", ymax);\n\n  const left = divide(subtract(xmin, originX), scale_x);\n  const right = divide(subtract(xmax, originX), scale_x);\n  const top = divide(subtract(ymax, originY), scale_y);\n  const bottom = divide(subtract(ymin, originY), scale_y);\n  if (debug) console.log(\"[snap-bbox] left:\", left);\n  if (debug) console.log(\"[snap-bbox] right:\", right);\n  if (debug) console.log(\"[snap-bbox] top:\", top);\n  if (debug) console.log(\"[snap-bbox] bottom:\", bottom);\n\n  // we're rounding here, so we don't ask for half a pixel\n  let left_int = subtract(floor(left), padX);\n  let right_int = add(ceil(right), padX);\n\n  // top_int is the number of pixels from the top edge of the grid\n  // so we want to subtract the padding\n  let top_int = subtract(floor(top), padY);\n\n  // bottom_int is the number of pixels from the top edge of the edge\n  // so we want to increase the padding\n  let bottom_int = add(ceil(bottom), padY);\n  if (debug) console.log(\"[snap-bbox] left_int:\", left_int);\n  if (debug) console.log(\"[snap-bbox] right_int:\", right_int);\n  if (debug) console.log(\"[snap-bbox] top_int:\", top_int);\n  if (debug) console.log(\"[snap-bbox] bottom_int:\", bottom_int);\n\n  if (container) {\n    if (debug) console.log(\"[snap-bbox] container:\", container);\n    const min_left = divide(subtract(container[0], originX), scale_x);\n    const max_right = divide(subtract(container[2], originX), scale_x);\n    const min_top = divide(subtract(container[3], originY), scale_y);\n    const max_bottom = divide(subtract(container[1], originY), scale_y);\n    if (debug) console.log(\"[snap-bbox] min_left:\", min_left);\n    if (debug) console.log(\"[snap-bbox] max_right:\", max_right);\n    if (debug) console.log(\"[snap-bbox] min_top:\", min_top);\n    if (debug) console.log(\"[snap-bbox] max_bottom:\", max_bottom);\n\n    const min_left_int = ceil(min_left);\n    const max_right_int = floor(max_right);\n    const min_top_int = ceil(min_top);\n    const max_bottom_int = floor(max_bottom);\n    if (debug) console.log(\"[snap-bbox] min_left_int:\", min_left_int);\n    if (debug) console.log(\"[snap-bbox] max_right_int:\", max_right_int);\n    if (debug) console.log(\"[snap-bbox] min_top_int:\", min_top_int);\n    if (debug) console.log(\"[snap-bbox] max_bottom_int:\", max_bottom_int);\n\n    left_int = max(left_int, min_left_int);\n    right_int = min(right_int, max_right_int);\n    top_int = max(top_int, min_top_int);\n    bottom_int = min(bottom_int, max_bottom_int);\n    if (debug) console.log(\"[snap-bbox] after containment, left_int:\", left_int);\n    if (debug) console.log(\"[snap-bbox] after containment, right_int:\", right_int);\n    if (debug) console.log(\"[snap-bbox] after containment, top_int:\", top_int);\n    if (debug) console.log(\"[snap-bbox] after containment, bottom_int:\", bottom_int);\n  }\n\n  if (size && overflow === false) {\n    if (debug) console.log(\"[snap-bbox] size:\", size);\n    const [width, height] = size;\n    if (debug) console.log(\"[snap-bbox] width:\", width);\n    if (debug) console.log(\"[snap-bbox] height:\", height);\n    if (\n      compare(left_int, width) === \">\" ||\n      compare(right_int, \"0\") === \"<\" ||\n      compare(bottom_int, \"0\") === \"<\" ||\n      compare(top_int, height) === \">\"\n    ) {\n      throw new Error(\"[snap-bbox] bbox doesn't intersect the grid\");\n    }\n    left_int = max(left_int, \"0\");\n    right_int = min(right_int, width);\n    top_int = max(top_int, \"0\");\n    bottom_int = min(bottom_int, height);\n  }\n\n  // need ternary expresssions below because\n  // top_int is sometimes -0, which fails\n  // some NodeJS strict equality tests with 0\n  // however, 0 === -0 evaluates to true in NodeJS\n  const bbox_in_grid_cells = [left_int, bottom_int, right_int, top_int];\n  if (debug) console.log(\"[snap-bbox] bbox_in_grid_cells:\", bbox_in_grid_cells);\n\n  const bbox_in_coordinate_system = [\n    add(originX, multiply(left_int, scale_x)), // xmin\n    add(originY, multiply(bottom_int, scale_y)), // ymin\n    add(originX, multiply(right_int, scale_x)), // xmax\n    add(originY, multiply(top_int, scale_y)) // ymax\n  ];\n\n  return { bbox_in_coordinate_system, bbox_in_grid_cells };\n}\n\nif (typeof define === \"function\" && define.amd)\n  define(function () {\n    return snap_precise_bbox;\n  });\nif (typeof module === \"object\") module.exports = snap_precise_bbox;\n", "const snap_bbox = require(\"./snap-bbox.js\");\nconst snap_precise_bbox = require(\"./snap-precise-bbox.js\");\n\nfunction snap({ precise = false, ...rest }) {\n  if (precise) {\n    return snap_precise_bbox(rest);\n  } else {\n    return snap_bbox(rest);\n  }\n}\n\nif (typeof define === \"function\" && define.amd)\n  define(function () {\n    return snap;\n  });\nif (typeof module === \"object\") module.exports = snap;\n", "export const DEFAULT_FUNCTION_PREFIX = \"microlink.function:\";\nexport const DEFAULT_PROMISE_PREFIX = \"microlink.promise:\";\n", "import { DEFAULT_FUNCTION_PREFIX, DEFAULT_PROMISE_PREFIX } from \"./enums.js\";\n\n/**\n * @name serialize\n * @description convert functions and promises at any level of nesting to strings\n * @param {any} it\n * @param {String} prefix - add to beginning of function ids\n * @returns [it, funcs]\n */\nexport default function serialize(things, { function_prefix = DEFAULT_FUNCTION_PREFIX, promise_prefix = DEFAULT_PROMISE_PREFIX } = {}, generate_id) {\n  const funcs = {};\n  const proms = {};\n\n  if (!generate_id) generate_id = () => Math.random();\n\n  function stringify(it) {\n    if (Array.isArray(it)) {\n      return it.map(i => stringify(i));\n    } else if (typeof it === \"function\") {\n      const fid = generate_id(it);\n      funcs[fid] = it;\n      return function_prefix + fid;\n    } else if (typeof it === \"object\" && it !== null && typeof it.then === \"function\") {\n      const pid = generate_id(it);\n      proms[pid] = it;\n      funcs[pid] = () => it; // create function that returns the promise\n      return promise_prefix + pid;\n    } else if (typeof it === \"object\" && it !== null && it.constructor.name.indexOf(\"Array\") === -1) {\n      // object that is not null nor a typed array\n      return Object.fromEntries(Object.entries(it).map(([k, v]) => [k, stringify(v)]));\n    } else {\n      return it;\n    }\n  }\n\n  things = stringify(things);\n\n  return [things, funcs, proms];\n}\n", "export default function batch(action, { size = 1, wait = Infinity }) {\n  let timeout = null;\n  let current = [];\n\n  return params => {\n    const batch = current;\n\n    const send = async () => {\n      Promise.resolve(action(batch.map(it => it.params))).then(results => {\n        results.forEach((result, i) => {\n          batch[i].resolve(result);\n        });\n      });\n    };\n\n    return new Promise((resolve, reject) => {\n      batch.push({ resolve, params, reject });\n      if (batch.length === size) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        send();\n        current = [];\n      } else if (!timeout && wait !== Infinity) {\n        timeout = setTimeout(function () {\n          // check if batch already sent\n          if (current === batch) {\n            current = [];\n            clearTimeout(timeout);\n            timeout = null;\n            send();\n          }\n        }, wait);\n      }\n    });\n  };\n}\n", "import serialize from \"./serialize.js\";\n\n/**\n *\n * @param {*} it\n * @param {{ params, method }[]} batch\n * @param {*} param2\n * @returns\n */\nexport default function batchcall(it, batch, { debug_level = 0 } = {}) {\n  let all_params_functions = {};\n\n  // pre-process and serialize requests\n  const requests = batch.map(({ id, method, params }) => {\n    if (typeof id !== \"number\") id = Math.random();\n    const [params_serialized, params_functions] = serialize(params || [], \"microlink.call:\");\n    Object.assign(all_params_functions, params_functions);\n    return {\n      jsonrpc: \"2.0\",\n      id,\n      method,\n      params: params_serialized\n    };\n  });\n  if (debug_level >= 2) console.log(\"[microlink.batchcall] requests serialized to \", requests);\n  const ids = requests.map(req => req.id);\n\n  return new Promise(resolve => {\n    const listener = async function listener(evt) {\n      if (debug_level >= 2) {\n        console.log(\"[microlink.batchcall] response listener received message event with data\", evt.data);\n      }\n      let { data } = evt;\n\n      if (typeof data !== \"object\" || data === null) return;\n\n      // worker is requesting that the main thread run a function for it\n      if (data.jsonrpc === \"2.0\" && data.method && data.method in all_params_functions) {\n        if (!Array.isArray(data.params)) throw Error(\"[microlink.batchcall] params should be an array\");\n        const result = await all_params_functions[data.method](...data.params);\n        const msg = { jsonrpc: \"2.0\", result, id: data.id };\n        if (debug_level >= 2) console.log(\"[microlink.batchcall] posting message down to worker:\", msg);\n        return it.postMessage(msg);\n      }\n\n      if (Array.isArray(data) && data.every(it => typeof it === \"object\" && ids.includes(it.id))) {\n        if (debug_level >= 2) console.log(\"[microlink.batchcall] removing exhausted listener\");\n        it.removeEventListener(\"message\", listener);\n\n        // enable garbage collection of params\n        // even if promise is used later\n        all_params_functions = null;\n\n        // sort output results by input order\n        data.sort((a, b) => Math.sign(ids.indexOf(a.id) - ids.indexOf(b.id)));\n\n        const results = data.map(res => res.result);\n\n        if (debug_level >= 2) console.log(\"[microlink.batchcall] resolving batch call:\", results);\n\n        resolve(results);\n      }\n    };\n    it.addEventListener(\"message\", listener);\n\n    if (debug_level >= 2) console.log(\"[microlink.batchcall] posting message down to worker:\", requests);\n    return it.postMessage(requests);\n  });\n}\n", "import batch from \"./batch.js\";\nimport batchcall from \"./batchcall.js\";\nimport { DEFAULT_FUNCTION_PREFIX, DEFAULT_PROMISE_PREFIX } from \"./enums.js\";\n\n// const cache = {};\n\nexport default function deserialize(it, inpt, depth = 1, { batch_size = 1, batch_wait = 10, debug_level = 0 } = {}) {\n  if (Array.isArray(inpt)) {\n    if (depth >= 0) {\n      return inpt.map(param => deserialize(it, param, depth - 1, { batch_size, batch_wait }));\n    } else {\n      return inpt;\n    }\n  } else if (typeof inpt === \"object\" && inpt !== null && inpt.constructor.name.indexOf(\"Array\") === -1) {\n    const obj = {};\n    for (let key in inpt) {\n      obj[key] = deserialize(it, inpt[key], depth - 1, { batch_size, batch_wait });\n    }\n    return obj;\n  } else if (typeof inpt === \"string\" && inpt.startsWith(DEFAULT_FUNCTION_PREFIX)) {\n    const method = inpt.replace(DEFAULT_FUNCTION_PREFIX, \"\");\n    const runInBatch = batch(\n      params => {\n        return batchcall(it, params, { debug_level });\n      },\n      { size: batch_size, wait: batch_wait }\n    );\n    return function () {\n      const params = Array.from(arguments);\n      return runInBatch({ method, params });\n    };\n    // return async function () {\n    //   const params = Array.from(arguments);\n    //   // const str = JSON.stringify(params); // adding overhead??\n    //   // if (!(str in cache)) {\n    //   //   cache[str] = runInBatch({ method, params });\n    //   // }\n    //   // return cache[str];\n    //   return runInBatch({ method, params });\n    // };\n  } else if (typeof inpt === \"string\" && inpt.startsWith(DEFAULT_PROMISE_PREFIX)) {\n    const method = inpt.replace(DEFAULT_PROMISE_PREFIX, \"\");\n    const runInBatch = batch(\n      params => {\n        return batchcall(it, params, { debug_level });\n      },\n      { size: batch_size, wait: batch_wait }\n    );\n    return runInBatch({ method, params: [] });\n  } else {\n    return inpt;\n  }\n}\n", "import serialize from \"./serialize.js\";\nimport deserialize from \"./deserialize.js\";\n\nexport default function call(it, method, params, { debug_level = 0 } = {}) {\n  if (!params) params = [];\n\n  let [params_serialized, params_functions] = serialize(params);\n  if (debug_level >= 2) {\n    console.log(\"[microlink.call] serialized to \", [params_serialized, params_functions]);\n  }\n\n  return new Promise((resolve, reject) => {\n    const id = Math.random();\n    const listener = async function listener(evt) {\n      if (debug_level >= 2) {\n        console.log(\"[microlink.call] response listener received message event with data\", evt.data);\n      }\n      let { data } = evt;\n\n      if (typeof data !== \"object\" || data === null) {\n        return;\n      }\n\n      // batch request\n      if (Array.isArray(data) && data.length >= 1 && data[0].jsonrpc === \"2.0\" && data[0].method) {\n        if (debug_level >= 2) console.log(\"[microlink.call] top thread received batch request\");\n        if (!params_functions) throw new Error(\"[microlink.call] no callable functions\");\n        // const times = []\n        const results = await Promise.all(\n          data.map(async req => {\n            // if (!req.method) throw new Error(\"[Microlink.call] missing method\");\n            // if (!(req.method in params_functions)) throw new Error(\"[Microlink.call] invalid method\");\n            const result = await params_functions[req.method](...req.params);\n            return { jsonrpc: \"2.0\", result, id: req.id };\n          })\n        );\n        if (debug_level >= 2) console.log(\"[microlink.call] top thread posting results to worker:\", results);\n        return it.postMessage(results);\n      }\n\n      if (data.jsonrpc !== \"2.0\") {\n        return;\n      }\n\n      if (data.method && params_functions && data.method in params_functions) {\n        try {\n          if (!Array.isArray(data.params)) throw Error(\"[microlink.call] params should be an array\");\n          const result = await params_functions[data.method](...data.params);\n          const msg = { jsonrpc: \"2.0\", result, id: data.id };\n          if (debug_level >= 2) console.log(\"[microlink.call] posting message down to worker:\", msg);\n          return it.postMessage(msg);\n        } catch (error) {\n          console.error(\"[microlink.call] error:\", error);\n          reject(error);\n        }\n      }\n\n      if (data.id === id) {\n        it.removeEventListener(\"message\", listener);\n\n        // enable garbage collection of params\n        // even if promise is used later\n        params_functions = null;\n\n        const result = deserialize(it, data.result);\n        if (debug_level >= 2) {\n          console.log(\"[microlink.call] deserialized\", data.result, \"to\", result);\n        }\n\n        resolve(result);\n      }\n    };\n    it.addEventListener(\"message\", listener);\n\n    const msg = { jsonrpc: \"2.0\", id, method, params: params_serialized };\n    if (debug_level >= 3) console.log(\"[microlink.call] posting message down to worker:\", msg);\n    return it.postMessage(msg);\n  });\n}\n", "import call from \"./call.js\";\n\n/**\n * @name wrap\n * @param {Object} worker\n * @param {Object} options\n * @param {Number} options.batch_size\n * @param {Number} options.debug_level\n * @returns {Object} wrapped object\n */\nexport default async function wrap(worker, { debug_level = 0 } = {}) {\n  const obj = {};\n\n  const methods = await call(worker, \"microlink.list\", undefined, {\n    debug_level\n  });\n  if (debug_level >= 2) console.log(\"[microlink.wrap] methods:\", methods);\n\n  methods.forEach(method => {\n    obj[method] = (...params) => {\n      if (debug_level >= 2) console.log(\"[microlink.wrap] called worker.\" + method);\n      return call(worker, method, params, { debug_level });\n    };\n  });\n\n  return obj;\n}\n", "/*\n  IE doesn't support type=\"module\", so we essentially ignore when workerOptions.type = \"module\"\n  and try to convert to commonjs anyway\n*/\n\n// function to fetch code for JavaScript files and\n// works on older browsers that don't support fetch\n// function fetchResponseText(url, callback) {\n//   const xhr = new XMLHttpRequest();\n//   xhr.overrideMimeType(\"text/plain\");\n//   xhr.open(\"GET\", url, true);\n//   xhr.onreadystatechange = function () {\n//     if (xhr.readyState == 4) {\n//       callback(xhr.responseText);\n//     }\n//   };\n//   xhr.send(null);\n// }\n\nfunction FrameWorker(workerScript, workerOptions, extraOptions) {\n  var context = typeof extraOptions === \"object\" && typeof extraOptions.context === \"object\" && extraOptions.context;\n  var cjs = typeof extraOptions === \"object\" && typeof extraOptions.cjs === \"boolean\" && extraOptions.cjs;\n  var debug = typeof extraOptions === \"object\" && extraOptions.debug === true;\n  var id = typeof extraOptions === \"object\" && typeof extraOptions.id === \"string\" && extraOptions.id;\n  var onblob = typeof extraOptions === \"object\" && typeof extraOptions.onblob === \"string\" && extraOptions.onblob;\n  var onscripterror = typeof extraOptions === \"object\" && typeof extraOptions.onscripterror === \"string\" && extraOptions.onscripterror;\n  var onterminate = typeof extraOptions === \"object\" && typeof extraOptions.onterminate === \"string\" && extraOptions.onterminate;\n  var raw = typeof extraOptions === \"object\" && typeof extraOptions.raw === \"boolean\" && extraOptions.raw;\n  var revoke = typeof extraOptions === \"object\" && typeof extraOptions.revoke === \"boolean\" && extraOptions.revoke;\n\n  var prefix = \"[frame-worker\" + (id ? \" \" + id : \"\") + \"] \";\n\n  // revoke this blob's object url on termination\n  var blobURL;\n\n  function isPromise(it) {\n    return typeof it === \"object\" && typeof it.then === \"function\";\n  }\n\n  if (typeof workerOptions === \"object\" && workerOptions.type === \"module\") {\n    throw new Error('[frame-worker] type=\"module\" is not supported');\n  }\n\n  if (!workerScript) throw new Error(\"[frame-worker] can't create a FrameWorker from nothing\");\n\n  if (raw) {\n    try {\n      var blob = new Blob([workerScript], { type: \"text/javascript\" });\n      if (onblob) onblob(blob);\n      workerScript = blobURL = URL.createObjectURL(blob);\n    } catch (error) {\n      workerScript = \"data:application/javascript;base64,\" + btoa(workerScript);\n    }\n  } else if (workerScript.startsWith(\"data:\")) {\n    try {\n      if (workerScript.startsWith(\"data:application/javascript;base64,\")) {\n        const decodedWorkerScript = atob(workerScript.replace(\"data:application/javascript;base64,\", \"\"));\n        var blob = new Blob([decodedWorkerScript], { type: \"text/javascript\" });\n        if (onblob) onblob(blob);\n        workerScript = blobURL = URL.createObjectURL(blob);\n        if (debug) console.log(prefix + \"converted data url to blob url\");\n      } else if (workerScript.startsWith(\"data:application/javascript,\")) {\n        const content = workerScript.replace(\"data:application/javascript,\", \"\");\n        var blob = new Blob([content], { type: \"text/javascript\" });\n        if (onblob) onblob(blob);\n        workerScript = blobURL = URL.createObjectURL(blob);\n      }\n    } catch (error) {\n      return \"data:application/javascript;base64,\" + btoa(text);\n    }\n  }\n  \n\n  var iframe;\n  var ready = false;\n  var queue = [];\n  var worker = {};\n\n  // functions to respond to events dispatched to the pseudo web worker\n  var handlers = {\n    message: [],\n    error: [],\n    messagerror: []\n  };\n\n  function createFrameWorker() {\n    iframe = document.createElement(\"iframe\");\n\n    if (id) iframe.id = id;\n\n    // don't want iframe to actually display on the screen\n    iframe.style.display = \"none\";\n\n    document.body.appendChild(iframe);\n\n    var _self = (iframe.contentWindow.self = iframe.contentWindow);\n\n    // hijack event listeners for iframe content window\n    const self_eventListeners = {};\n    _self.addEventListener = function(type, listener) {\n      if (!self_eventListeners[type]) self_eventListeners[type] = [];\n      self_eventListeners[type].push(listener);\n    }\n    _self.removeEventListener = function(type, listener) {\n      if (!self_eventListeners[type]) return;\n      self_eventListeners[type] = self_eventListeners[type].filter(function (it) { return it !== listener; });\n      if (self_eventListeners[type].length === 0) delete self_eventListeners[type];\n    }\n\n    function getMessageHandlers () {\n      return [_self.onmessage].concat(self_eventListeners.message).filter(Boolean);\n    }\n\n    // add context\n    if (context) {\n      for (let key in context) {\n        if (context.hasOwnProperty(key)) {\n          _self[key] = context[key];\n        }\n      }\n    }\n\n    // fake module.exports inside of iframe\n    var _module = (iframe.contentWindow.module = { exports: {} });\n\n    // this is simulating postMessage INSIDE of a web worker,\n    // such that this message propagates up to worker.onmessage\n    // and added worker event handlers\n    _self.postMessage = function (data, transfer) {\n      if (worker.onmessage) {\n        var evt = new MessageEvent(typeof data, { data: data });\n        worker.onmessage(evt, transfer);\n      }\n      for (let i = 0; i < handlers.message.length; i++) {\n        var evt = new MessageEvent(typeof data, { data: data });\n        handlers.message[i](evt, transfer);\n      }\n    };\n\n    var script = document.createElement(\"script\");\n    if (debug) console.log(prefix + \"workerScript:\", workerScript);\n\n    iframe.contentWindow.onerror = function (error) {\n      if (worker.onerror) {\n        worker.onerror(error);\n      }\n    };\n\n    script.onerror = function (e) {\n      console.error(\"script errror:\", e);\n      if (onscripterror) onscripterror(e);\n    };\n    script.addEventListener(\"error\", function (e) {\n      console.error(\"script errror:\", e);\n      if (onscripterror) onscripterror(e);\n    });\n\n    // fetchResponseText(workerScript, function (text) {\n    //   const blob = new Blob([text], { type: \"text/javascript\" });\n    //   const url = URL.createObjectURL(blob);\n    //   script.src = url;\n    // });\n\n    script.src = workerScript;\n\n    script.onload = function () {\n      ready = true;\n      for (var q = 0; q < queue.length; q++) {\n        var entry = queue[q];\n        var queuedMessage = entry[0];\n        var queuedTransfer = entry[1];\n\n        // collecting all handlers including from directly setting onmessage and calling addEventListeners\n        var messageHandlers = getMessageHandlers();\n\n        if (messageHandlers.length > 0) {\n          for (let h = 0; h < messageHandlers.length; h++) {\n            try {\n              const handler = messageHandlers[h];\n              handler(queuedMessage, queuedTransfer);\n            } catch (error) {\n              console.error(error);\n              if (worker.onerror) {\n                worker.onerror(error);\n              }\n            }\n          }\n        } else if (cjs && (typeof _module.exports === \"function\" || typeof _module.exports.default === \"function\")) {\n          const func = _module.exports.default || _module.exports;\n          const result = func(queuedMessage.data);\n          if (isPromise(result)) {\n            // wait for resolution if promise\n            result.then(function (ret) {\n              _self.postMessage(ret);\n            });\n          } else {\n            _self.postMessage(result);\n          }\n        }\n      }\n      if (revoke && script.src.startsWith(\"data:\") || script.src.startsWith(\"blob:\")) {\n        if (debug) console.log(prefix + \"revoking \" + script.src);\n        URL.revokeObjectURL(script.src);\n      }\n    };\n\n    iframe.contentDocument.body.appendChild(script);\n\n    worker.addEventListener = function (type, listener) {\n      if (handlers[type].indexOf(listener) === -1) {\n        handlers[type].push(listener);\n      }\n    }\n\n    worker.removeEventListener = function (type, listener) {\n      handlers[type] = handlers[type].filter(function (it) {\n        return it !== listener;\n      });\n    }\n\n    worker.postMessage = function (data, transfer) {\n      const evt = new MessageEvent(typeof data, { data });\n      if (ready) {\n        var messageHandlers = getMessageHandlers();\n\n        if (messageHandlers.length > 0) {\n          for (let h = 0; h < messageHandlers.length; h++) {\n            try {\n              const handler = messageHandlers[h];\n              handler(evt, transfer);\n            } catch (error) {\n              console.error(error);\n              if (worker.onerror) {\n                worker.onerror(error);\n              }\n            }\n          }\n        } else if (cjs && (typeof _module.exports === \"function\" || typeof _module.exports.default === \"function\")) {\n          const func = _module.exports.default || _module.exports;\n          const result = func(data);\n          if (isPromise(result)) {\n            // wait for resolution if promise\n            result.then(function (ret) {\n              _self.postMessage(ret);\n            });\n          } else {\n            _self.postMessage(result);\n          }\n        }\n      } else {\n        queue.push([evt, transfer]);\n      }\n    };\n    worker.terminate = function () {\n      iframe.parentNode.removeChild(iframe);\n      if (blobURL) {\n        if (debug) console.log(\"[frame-worker] revoking blob object url \" + blobURL);\n        try {\n          URL.revokeObjectURL(blobURL);  \n        } catch (error) {\n          console.log(error);\n        }\n      }\n      if (onterminate) onterminate();\n    };\n  }\n\n  createFrameWorker();\n\n  return worker;\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function() { return FrameWorker; });\n}\n\nif (typeof module === \"object\" && module.exports) {\n  module.exports = FrameWorker;\n  module.exports.default = FrameWorker;\n}\n", "module.exports = { workerString: \"!function(A,t){if(\\\"object\\\"==typeof exports&&\\\"object\\\"==typeof module)module.exports=t();else if(\\\"function\\\"==typeof define&&define.amd)define([],t);else{var e=t();for(var i in e)(\\\"object\\\"==typeof exports?exports:A)[i]=e[i]}}(self,(()=>(()=>{var A={6068:A=>{\\\"use strict\\\";function t(A){const t=A.length,[e,i]=A[0];let s=e,a=e,n=i,o=i;for(let e=1;e<t;e++){const[t,i]=A[e];t<s?s=t:t>a&&(a=t),i<n?n=i:i>o&&(o=i)}return[s,n,a,o]}A.exports=t,A.exports.default=t},7437:A=>{\\\"use strict\\\";function t([A,t,e,i]){return[e-A,i-t]}A.exports=t,A.exports.default=t},5652:A=>{function t([A,t,e,i],{density:s=0}={density:0}){\\\"number\\\"==typeof s&&(s=[s,s]);const[a,n]=s,o=[],r=(e-A)/(a+1),l=(i-t)/(n+1);o.push([A,i]);for(let t=1;t<=n;t++)o.push([A,i-t*l]);o.push([A,t]);for(let e=1;e<=a;e++)o.push([A+e*r,t]);o.push([e,t]);for(let A=1;A<=n;A++)o.push([e,t+A*l]);o.push([e,i]);for(let A=1;A<=a;A++)o.push([e-A*r,i]);return o.push([A,i]),[o]}A.exports=t,A.exports.default=t},954:(A,t,e)=>{const i=e(6068),s=e(5652);function a(A,t,{async:e=!1,density:a}={}){const n=s(A,{density:a})[0].map((A=>t(A)));return e?Promise.all(n).then((A=>i(A))):i(n)}A.exports=a,A.exports.default=a},2944:A=>{\\\"use strict\\\";function t([A,t,e,i],s){const[a,n]=\\\"number\\\"==typeof s?[s,s]:1===s.length?[s[0],s[0]]:s;return[A*a,t*n,e*a,i*n]}A.exports=t,A.exports.default=t},4812:(A,t,e)=>{const i=e(9121),s=e(2603),a=e(3107),n=e(1793),o=e(6601),r=e(3358),l=e(3077),h=e(4759);A.exports=function({debug_level:A=0,raster_bbox:t,raster_height:e,raster_width:g,pixel_height:c,pixel_width:f,ring:u,per_pixel:d,per_row_segment:I}){const[p,_,C,B]=t,w=[];for(let A=0;A<e;A++)w.push([]);o(u,((A,i)=>{const[a,n]=A,[o,r]=a,[l,h]=n,g=Math.sign(h-r),f=r===h,d=o===l,I=(h-r)/(l-o),p=r,_=Math.min(r,h),C=Math.max(r,h);let E,y,Q,m;if(o<l?([E,y]=a,[m,Q]=n):([E,y]=n,[m,Q]=a),void 0===E)throw Error(\\\"startLng is \\\"+E);const k=Math.round((t[3]-.5*c-y)/c),x=Math.round((t[3]-.5*c-Q)/c);let M,b;k<x?(M=k,b=x):(M=x,b=k),M=s(M,0,e-1),b=s(b,0,e-1);for(let t=M;t<b+1;t++){const e=B-c*t-c/2,s=r===e,a=h===e,n=!a;let y,Q;if(f){if(p!==e)continue;y=E,Q=m}else if(d)e>=_&&e<=C&&(y=E,Q=m);else if(s)y=Q=o;else if(a)y=Q=l;else try{y=Q=o+(e-r)/I}catch(A){throw A}void 0!==y&&void 0!==Q&&(f||y>=E&&Q<=m&&e<=C&&e>=_)&&w[t].push({direction:g,index:i,edge:A,last_edge_in_ring:i===u.length-2,endsOnLine:a,endsOffLine:n,horizontal:f,startsOnLine:s,vertical:d,xmin:y,xmax:Q,imageLineY:e})}}));const E=f/2,y=h(p,f);w.forEach(((t,e)=>{if(t.length>0){const s=n(t).map(i),[o,h]=l(s,(A=>A.through));if(o.length%2==1)throw A>=1&&console.error(\\\"throughs:\\\",JSON.stringify(o)),Error(\\\"throughs.length for \\\"+e+\\\" is odd with \\\"+o.length);let c=h.map((A=>[A.xmin,A.xmax]));o.sort(((A,t)=>A.xmin-t.xmin));const f=a(o).map((A=>{const[t,e]=A;return[t.xmin,e.xmax]}));c=c.concat(f),c=r(c),c.forEach((A=>{const[t,i]=A;if(i-t<E)return;const[s,a]=y(A);if(s===a)return;if(s>g)return;if(a<=0)return;const n=Math.max(s,0),o=Math.min(a-1,g-1);if(I&&I({row:e,columns:[n,o]}),d)for(let A=n;A<=o;A++)d({row:e,column:A})}))}}))}},9509:(A,t,e)=>{const i=e(8631),s=e(808);A.exports=function({polygon:A,...t}){const[e,...a]=A.map((A=>s({ring:A,...t})));return e.map(((A,t)=>{const e=a.map((A=>A[t])).flat();return i(A,e)}))}},808:(A,t,e)=>{const i=e(4812),s=e(4233),a=e(9334),n=e(6208);A.exports=function({debug_level:A=0,raster_bbox:t,raster_height:e,raster_width:o,pixel_height:r,pixel_width:l,ring:h}){const[g,c,f,u]=t;null==r&&(r=(u-c)/e),null==l&&(l=(f-g)/o);const d=[];for(let A=0;A<e;A++)d.push([]);i({debug_level:A,raster_bbox:t,raster_height:e,raster_width:o,pixel_height:r,pixel_width:l,ring:h,per_row_segment:({row:A,columns:t})=>{d[A].push(t)}});for(let A=0;A<d.length;A++){const t=d[A];t&&(n(t),d[A]=a(t))}return A>=2&&s(d),d}},4253:(A,t,e)=>{const i=e(8068),s=e(9334),a=e(6208),n=e(9509);A.exports=function({geometry:A,raster_height:t,per_pixel:e,per_row_segment:o,...r}){polys=i(A);const l=polys.map((A=>n({polygon:A,raster_height:t,...r}))),h=new Array(t);for(let A=0;A<t;A++){const t=l.map((t=>t[A])).filter((A=>void 0!==A&&A.length>0)).flat();if(t.length>0){const e=a(t),i=s(e);h[A]=i}}return(o||e)&&h.forEach(((A,t)=>{A&&A.forEach(((A,i)=>{if(o&&o({row:t,columns:A}),e){const[i,s]=A;for(let A=i;A<=s;A++)e({row:t,column:A})}}))})),{rows:h}}},9121:A=>{A.exports=function(A){try{let t,e,i;const s=A.length,a=A[0];if(1===s)t=!0,e=a.xmin,i=a.xmax;else{const n=A[s-1];t=a.direction===n.direction,e=Math.min(a.xmin,n.xmin),i=Math.max(a.xmax,n.xmax)}if(void 0===e||void 0===i||void 0===t||isNaN(e)||isNaN(i))throw Error(\\\"categorizeIntersection failed with xmin\\\",e,\\\"and xmax\\\",i);return{xmin:e,xmax:i,through:t}}catch(t){throw console.error(\\\"[categorizeIntersection] segments:\\\",A),console.error(\\\"[categorizeIntersection]\\\",t),t}}},4233:A=>{A.exports=function(A){A.forEach(((A,t)=>{for(let e=0;e<A.length;e++){const i=A[e],[s,a]=i;s>a&&console.warn(\\\"[dufour-peyton-intersection] uh oh, encountered invalid range\\\",i,\\\"at row index\\\",t,\\\"with ranges\\\",A);for(let i=e+1;i<A.length;i++)i[0]<=a&&console.warn(\\\"[dufour-peyton-intersection] encountered range problem on row index\\\",t,\\\":\\\",A)}}))}},2603:A=>{A.exports=function(A,t,e){return A<t?t:A>e?e:A}},1793:(A,t,e)=>{const i=e(841);A.exports=function(A,t,e=!1){try{const t=i(A,(A=>A.endsOffLine));if(t.length>=2){const A=t[0],e=A[0],i=t[t.length-1],s=i[i.length-1];s.last_edge_in_ring&&0===e.index&&s.endsOnLine&&(t[0]=t.pop().concat(A))}return t}catch(A){console.error(\\\"[clusterLineSegments]\\\",A)}}},841:A=>{A.exports=function(A,t){try{const e=A.length,i=[];let s=[];for(let a=0;a<e;a++){const e=A[a];s.push(e),t(e)&&(i.push(s),s=[])}return s.length>0&&i.push(s),i}catch(A){console.error(\\\"[cluster]:\\\",A)}}},3107:A=>{A.exports=function(A){const t=[],e=A.length;for(let i=0;i<e;i+=2)t.push([A[i],A[i+1]]);return t}},6601:A=>{A.exports=function(A,t){for(let e=1;e<A.length;e++){t([A[e-1],A[e]],e-1)}}},6697:(A,t,e)=>{const i=e(3642);A.exports=function A(t,e){if(\\\"FeatureCollection\\\"===t.type)t.features.forEach((t=>A(t,e)));else if(\\\"GeometryCollection\\\"===t.type)t.geometries.forEach((t=>A(t,e)));else if(\\\"Feature\\\"===t.type)A(t.geometry,e);else if(\\\"Polygon\\\"===t.type)A(t.coordinates,e);else if(\\\"MultiPolygon\\\"===t.type)t.coordinates.forEach((A=>{e(A)}));else if(Array.isArray(t)){const A=i(t);4===A?t.forEach((A=>{e(A)})):3===A?e(t):2===A&&e([t])}}},8068:(A,t,e)=>{const i=e(6697);A.exports=function(A){const t=[];return i(A,(A=>t.push(A))),t}},7210:(A,t,e)=>{var i;const s=e(9121),a=e(2603),n=e(841),o=e(1793),r=e(4253),l=e(4812),h=e(3107),g=e(6601),c=e(6697),f=e(3358),u=e(9334),d=e(3077),I=e(4759),p=e(7107),_=e(1165),C=e(8631),B=e(247),w=e(9278),E={calculate:r,calculateCore:l,carveHoles:C,categorizeIntersection:s,clamp:a,cluster:n,clusterLineSegments:o,couple:h,eachPair:g,eachPolygon:c,mergeRanges:f,mergeConsecutiveRanges:u,partition:d,prepareSnap:I,rangeContains:p,rangeCut:_,rangeOverlap:B,rangeSort:e(6208),roundDown:w};void 0===(i=(()=>E).call(t,e,t,A))||(A.exports=i),A.exports=E,\\\"object\\\"==typeof self&&(self.dufour_peyton_intersection=E),\\\"object\\\"==typeof window&&(window.dufour_peyton_intersection=E)},3077:A=>{A.exports=function(A,t){const e=[],i=[],s=A.length;for(let a=0;a<s;a++){const s=A[a];t(s)?e.push(s):i.push(s)}return[e,i]}},4759:(A,t,e)=>{const i=e(9278);A.exports=function(A,t){return([e,s])=>(-0===(e=i((e-A)/t))&&(e=0),-0===(s=Math.round((s-A)/t))&&(s=0),[e,s])}},6643:A=>{A.exports=function(A,t){return Math.sign(A[0]-t[0])||Math.sign(A[1]-t[1])}},7107:A=>{A.exports=function(A,t){return t[0]>=A[0]&&t[1]<=A[1]}},1165:(A,t,e)=>{const i=e(247);A.exports=function(A,t){if(!Array.isArray(A))throw new Error(\\\"[cut] range is not an array: \\\"+JSON.stringify(A));if(void 0===t)return[A];if(!Array.isArray(t))throw new Error(\\\"[cut] hole is not an array:\\\"+JSON.stringify(t));if(!i(A,t))return[A];const e=[];return A[0]<t[0]&&e.push([A[0],t[0]-1]),A[1]>t[1]&&e.push([t[1]+1,A[1]]),e}},9334:A=>{A.exports=function(A){const t=A.length;if(0===t)return[];const e=A[0];let i=e[1];const s=[e];for(let e=1;e<t;e++){const t=A[e],[a,n]=t;a<=i+1?s[s.length-1][1]=Math.max(i,n):s.push(t),i=n}return s}},3358:A=>{A.exports=function(A){const t=A.length;if(t>0){const e=A[0];let i=e[1];const s=[e];for(let e=1;e<t;e++){const t=A[e],[a,n]=t;a<=i?s[s.length-1][1]=n:s.push(t),i=n}return s}}},8631:(A,t,e)=>{const i=e(1165);A.exports=function(A,t){let e=A;return t.forEach((A=>{e=e.map((t=>i(t,A))).flat()})),e}},247:A=>{A.exports=function(A,t){if(!Array.isArray(A))throw new Error(\\\"[overlaps] a is not an array\\\");if(!Array.isArray(t))throw new Error(\\\"[overlaps] b is not an array\\\");return A[0]<=t[1]&&t[0]<=A[1]}},6208:(A,t,e)=>{const i=e(6643);A.exports=function(A){return A.sort(i)}},9278:A=>{A.exports=function(A){return-1*Math.round(-1*A)}},9035:(A,t,e)=>{const i=e(1003);function s(A,{debug:t=!1,no_data:e,theoretical_max:s}={debug:!1,no_data:void 0,theoretical_max:void 0}){if(t&&console.log(\\\"[fast-max] starting with numbers:\\\",A.slice(0,10)),!A.length)throw t&&console.error(\\\"[fast-max] Instead of an array of numbers, you passed in\\\",A),new Error(\\\"[fast-max] You didn't pass in an array of numbers\\\");if(0===A.length)throw new Error(\\\"[fast-max] You passed in an empty array\\\");let a;!1===Array.isArray(e)&&(e=\\\"number\\\"==typeof e?[e]:[]);const n=A.length;t&&console.log(\\\"[fast-max] constructor:\\\",A.constructor.name),null==s&&(s=i(A.constructor.name)),t&&console.log(\\\"[fast-max] theoretical maximunm is\\\",s);for(let i=0;i<n;i++){const o=A[i];if(\\\"number\\\"==typeof o&&o==o&&-1===e.indexOf(o)&&((void 0===a||o>a)&&(a=o),\\\"number\\\"==typeof s&&o>=s)){t&&console.log(\\\"[fast-max] found maximum value of \\\"+o+\\\" at index \\\"+i+\\\" of \\\"+n),a=o;break}}return t&&console.log(\\\"[fast-max] returning\\\",a),a}A.exports=s,A.exports.default=s,\\\"object\\\"==typeof self&&(self.fastMax=s),\\\"object\\\"==typeof window&&(window.fastMax=s)},9928:(A,t,e)=>{const i=e(7033);function s(A,{debug:t=!1,no_data:e,theoretical_min:s}={debug:!1,no_data:void 0,theoretical_min:void 0}){if(t&&console.log(\\\"[fast-min] starting with numbers:\\\",A.slice(0,10)),!A.length)throw t&&console.error(\\\"[fast-min] Instead of an array of numbers, you passed in\\\",A),new Error(\\\"[fast-min] You didn't pass in an array of numbers\\\");if(0===A.length)throw new Error(\\\"[fast-min] You passed in an empty array\\\");let a;!1===Array.isArray(e)&&(e=\\\"number\\\"==typeof e?[e]:[]);const n=A.length;t&&console.log(\\\"[fast-min] constructor:\\\",A.constructor.name),null==s&&(s=i(A.constructor.name)),t&&console.log(\\\"[fast-min] theoretical minimunm is\\\",s);for(let i=0;i<n;i++){const o=A[i];if(\\\"number\\\"==typeof o&&o==o&&-1===e.indexOf(o)&&((void 0===a||o<a)&&(a=o),\\\"number\\\"==typeof s&&o<=s)){t&&console.log(\\\"[fast-min] found minimum value of \\\"+o+\\\" at index \\\"+i+\\\" of \\\"+n),a=o;break}}return t&&console.log(\\\"[fast-min] returning\\\",a),a}A.exports=s,A.exports.default=s,\\\"object\\\"==typeof self&&(self.fastMin=s),\\\"object\\\"==typeof window&&(window.fastMin=s)},4899:(A,t,e)=>{var i;const s=e(3499),a=e(5179);function n(A){const t=a(A);return{forward:function(t){return s(A,t)},inverse:function(A,{floor:e=!1,round:i=!1}={floor:!1,round:!1}){let a=s(t,A);return i&&(a=a.map((A=>Math.round(A)))),e&&(a=a.map((A=>Math.floor(A)))),a}}}void 0===(i=function(){return n}.call(t,e,t,A))||(A.exports=i),A.exports=n,A.exports.default=n},3499:(A,t,e)=>{var i;function s(A,t){const[e,i,s,a,n,o]=A,[r,l]=t;return[e+i*r+s*l,a+n*r+o*l]}void 0===(i=function(){return s}.call(t,e,t,A))||(A.exports=i),A.exports=s,A.exports.default=s},5179:(A,t,e)=>{var i;function s(A){const[t,e,i,s,a,n]=A,o=e*n-i*a,r=-1*o;return[(i*s-t*n)/o,n/o,i/r,(e*s-t*a)/r,a/r,e/o]}void 0===(i=function(){return s}.call(t,e,t,A))||(A.exports=i),A.exports=s,A.exports.default=s},8726:(A,t,e)=>{var i;function s(A,{debug:t=!1}={debug:!1}){const e=A.fileDirectory;if(e.ModelTransformation){const[A,t,i,s,a,n,o,r,l,h,g,c,f,u,d,I]=e.ModelTransformation;return[s,A,t,r,a,n]}if(e.ModelTiepoint&&!e.ModelPixelScale)t&&console.log(\\\"[geotiff-geotransform] missing ModelPixelScaleTag\\\");else if(e.ModelPixelScale&&!e.ModelTiepoint)t&&console.log(\\\"[geotiff-geotransform] missing ModelTiepointTag\\\");else if(e.ModelTiepoint&&e.ModelPixelScale){const[A,i,s,a,n,o]=e.ModelTiepoint;t&&(0!==A&&console.log(\\\"[geotiff-geotransform] unexpected i value in ModelTiepoint: \\\"+A),0!==i&&console.log(\\\"[geotiff-geotransform] unexpected j value in ModelTiepoint: \\\"+i),0!==s&&console.log(\\\"[geotiff-geotransform] unexpected k value in ModelTiepoint: \\\"+s));const[r,l,h]=e.ModelPixelScale;return[a,r,0,n,0,-1*l]}}void 0===(i=function(){return s}.call(t,e,t,A))||(A.exports=i),A.exports=s,A.exports.default=s},6316:(A,t,e)=>{var i;const s=e(2137);function a(A){const t=s(A);if(void 0===typeof t)return;const e=Number(t);return isNaN(e)?void 0:e}void 0===(i=function(){return a}.call(t,e,t,A))||(A.exports=i),A.exports=a,A.exports.default=a,\\\"object\\\"==typeof window&&(window.getNoDataNumber=a),\\\"object\\\"==typeof self&&(self.getNoDataNumber=a)},2137:A=>{function t(A,t){if(A.fileDirectory&&(A=A.fileDirectory),A.GDAL_NODATA&&(A=A.GDAL_NODATA),\\\"string\\\"==typeof A)return t&&t.raw?A:(A=A.replace(\\\"\\\\0\\\",\\\"\\\").trim(),[\\\"-inf\\\",\\\"-infinity\\\"].includes(A)?\\\"-Infinity\\\":[\\\"+inf\\\",\\\"inf\\\",\\\"+infinity\\\",\\\"infinity\\\"].includes(A)?\\\"Infinity\\\":A=A.replace(/^\\\\+/,\\\"\\\"))}A.exports=t,A.exports.default=t,A.exports.getPreciseNoDataValue=t},7298:(A,t,e)=>{const{booleanIntersects:i,calc:s,intersect:a,polygon:n}=e(7882),o=e(7210),r=e(9035),l=e(9928),h=e(4899),g=e(3642),c=e(1003),f=e(7033),u=e(9436).calculate,d=e(2247),I=e(4254),{turbocharge:p}=e(5605),_=e(546),C=e(1185),B=e(883),w=(A,t,e)=>A<t?t:A>e?e:A,E=A=>null==A||A!=A,y=(A,t)=>{const e=Math.round(A*t);return[e,e/A,A/e]},Q=A=>new Array(A).fill(0).map(((A,t)=>t)),m=(A,t)=>{let e=0,i=0;return((A,t,e)=>{const i=A.length;if(t)for(let s=0;s<i;s++){const i=A[s];-1===t.indexOf(i)&&e(i)}else for(let t=0;t<i;t++)e(A[t])})(A,t,(A=>{i++,e+=A})),0===i?void 0:e/i},k=(A,t)=>{if(0===A.length)return;const e={};if(t)for(let i=0;i<A.length;i++){const s=A[i];\\\"number\\\"==typeof s&&s==s&&-1===t.indexOf(s)&&(s in e?e[s].count++:e[s]={n:s,count:1})}else for(let t=0;t<A.length;t++){const i=A[t];i in e?e[i].count++:e[i]={n:i,count:1}}const i=Object.values(e),s=i.sort(((A,t)=>Math.sign(t.count-A.count)))[0].count;return i.filter((A=>A.count===s)).map((A=>A.n))},x=function({debug_level:A=0,in_data:t,in_bbox:e,in_geotransform:x,in_layout:M=\\\"[band][row,column]\\\",in_srs:b,in_height:D,in_pixel_depth:v,in_pixel_height:S,in_pixel_width:G,in_width:N,in_no_data:R,out_array_types:F,out_bands:L,out_data:U,out_pixel_depth:O,out_pixel_height:P,out_pixel_width:T,out_bbox:H=null,out_bbox_in_srs:J,out_layout:q,out_resolution:z=[1,1],out_srs:j,out_width:K=256,out_height:Y=256,out_no_data:V=null,method:W=\\\"median\\\",read_bands:X,row_start:Z=0,row_end:$,expr:AA,round:tA=!1,theoretical_min:eA,theoretical_max:iA,inverse:sA,forward:aA,cutline:nA,cutline_bbox:oA,cutline_srs:rA,cutline_forward:lA,cutline_strategy:hA=\\\"outside\\\",turbo:gA=!1,insert_pixel:cA,insert_sample:fA,insert_null_strategy:uA=\\\"skip\\\",skip_no_data_strategy:dA,cache_process:IA=!1}){A>=1&&console.log(\\\"[geowarp] starting\\\");const pA=A>=1?performance.now():0;if(isNaN(Y))throw new Error(\\\"[geowarp] out_height is NaN\\\");if(isNaN(K))throw new Error(\\\"[geowarp] out_width is NaN\\\");let _A=0;const[CA,BA,wA]=y(Y,z[1]),[EA,yA,QA]=y(K,z[0]);A>=1&&console.log(\\\"[geowarp] scaled size:\\\",[EA,CA]),A>=1&&console.log(\\\"[geowarp] resolution:\\\",[yA,BA]),A>=1&&console.log(\\\"[geowarp] scale:\\\",[QA,wA]);const mA=b===j;let kA,xA,MA;if(A>=1&&console.log(\\\"[geowarp] input and output srs are the same:\\\",mA),A>=1&&console.log(\\\"[geowarp] skip_no_data_strategy:\\\",dA),sA??=arguments[0].reproject,cA??=arguments[0].insert,!mA){if(!e)throw new Error(\\\"[geowarp] can't reproject without in_bbox\\\");if(!H){if(!aA)throw new Error(\\\"[geowarp] must specify out_bbox or forward\\\");H=kA=MA=d(e,aA,{density:100})}}if(!mA&&\\\"function\\\"!=typeof sA)throw new Error(\\\"[geowarp] you must specify a reproject function\\\");if(!D)throw new Error(\\\"[geowarp] you must provide in_height\\\");if(!N)throw new Error(\\\"[geowarp] you must provide in_width\\\");if(q||(q=M),null==v)if(M.startsWith(\\\"[band]\\\"))v=t.length;else{const A=g(t);1===A?v=t.length/D/N:2===A?v=t[0].length:3===A&&(v=t[0][0].length)}var bA;A>=1&&console.log(\\\"[geowarp] number of bands in source data:\\\",v),X||(AA?X=Q(v):L?(bA=L,X=Array.from(new Set(bA)).sort(((A,t)=>t-A))):X=Q(v)),L??=X,tA&&\\\"number\\\"==typeof V&&(V=Math.round(V)),!1===Array.isArray(R)&&(R=\\\"in_no_data\\\"in arguments[0]?[R]:[]);const DA=R[0];let vA,SA;if(AA)vA=tA?({pixel:A})=>_(AA({pixel:A})).then((A=>A.map((A=>Math.round(A))))):AA;else{const A=L.map((A=>X.indexOf(A)));vA=tA?({pixel:t})=>A.map((A=>{const e=t[A];return E(e)||R.includes(e)?V:Math.round(e)})):({pixel:t})=>A.map((A=>{const e=t[A];return E(e)||R.includes(e)?V:e}))}IA&&([vA,SA]=((A,t=(A=>A.toString()))=>{let e={};return[i=>e[t(i)]??=A(i),()=>e={}]})(vA,(({pixel:A})=>A.toString()))),A>=1&&console.log(\\\"[geowarp] read_bands:\\\",X),A>=1&&console.log(\\\"[geowarp] out_height:\\\",Y),A>=1&&console.log(\\\"[geowarp] out_width:\\\",K),mA&&e&&!H&&(H=e);const[GA,NA,RA,FA]=e;S??=(FA-NA)/D,G??=(RA-GA)/N,A>=1&&console.log(\\\"[geowarp] pixel height of source data:\\\",S),A>=1&&console.log(\\\"[geowarp] pixel width of source data:\\\",G),x??=[GA,G,0,FA,0,-1*S];const{forward:LA,inverse:UA}=h(x),OA=mA?UA:A=>UA(lt(A)),[PA,TA,HA,JA]=H;A>=1&&console.log(\\\"[geowarp] out_xmin:\\\",PA),A>=1&&console.log(\\\"[geowarp] out_ymin:\\\",TA),A>=1&&console.log(\\\"[geowarp] out_xmax:\\\",HA),A>=1&&console.log(\\\"[geowarp] out_ymax:\\\",JA),P??=(JA-TA)/Y,T??=(HA-PA)/K,A>=1&&console.log(\\\"[geowarp] out_pixel_height:\\\",P),A>=1&&console.log(\\\"[geowarp] out_pixel_width:\\\",T);const qA=P*wA,zA=T*QA;A>=1&&console.log(\\\"[geowarp] out_sample_height:\\\",qA),A>=1&&console.log(\\\"[geowarp] out_sample_width:\\\",zA);const jA=qA/2,KA=zA/2,YA=mA?LA:A=>rt(LA(A));if(void 0===eA||void 0===iA)try{const e=t[0].constructor.name;A>=1&&console.log(\\\"[geowarp] data_constructor:\\\",e),eA??=f(e),iA??=c(e),A>=1&&console.log(\\\"[geowarp] theoretical_min:\\\",eA),A>=1&&console.log(\\\"[geowarp] theoretical_max:\\\",iA)}catch(A){console.error(A)}if(![void 0,null,\\\"\\\"].includes(lA)&&\\\"function\\\"!=typeof lA)throw new Error(\\\"[geowarp] cutline_forward must be of type function not \\\"+typeof nA);let VA=new Array(CA).fill(0).map((()=>[]));if(nA&&rA!==j){if(!lA)throw b===rA&&(lA=aA),new Error(\\\"[geowarp] must specify cutline_forward when cutline_srs and out_srs differ\\\");let t;lA&&oA&&(t=p({bbox:oA,debug_level:A,quiet:!0,reproject:lA,threshold:[KA,jA]})?.reproject),nA=I(nA,{reproject:t||lA})}const WA=EA-1,XA=[0,WA],ZA=[XA];if(nA){o.calculate({raster_bbox:H,raster_height:CA,raster_width:EA,geometry:nA}).rows.forEach(((A,t)=>{VA[t]=A})),\\\"inside\\\"===hA&&(VA=VA.map((A=>0===A.length?ZA:C({segments:A,min:0,max:WA,debug:!1}))))}else for(let A=0;A<CA;A++)VA[A].push(XA);const $A={band:v,row:D,column:N},At=B.prepareSelect({data:t,layout:M,sizes:$A}),tt=({row:A,column:t})=>X.map((e=>At({point:{band:e,row:A,column:t}}).value)),et=(({select:A,width:t,height:e},[i,s])=>{const a={},n=t/i,o=e/s,r=new Array(s).fill(null).map(((A,t)=>Math.floor(t*o))),l=new Array(i).fill(null).map(((A,t)=>Math.floor(t*n)));return r.forEach((t=>{l.forEach((e=>{const i=A({row:t,column:e});i in a?a[i]++:a[i]=1}))})),Object.entries(a).sort((([A,t],[e,i])=>Math.sign(i-t)))})({select:tt,width:N,height:D},[10,10]),{hits:it,total:st}=et.reduce(((A,[t,e])=>(A.total+=e,A.hits+=e-1,A)),{hits:0,total:0});if(null==IA&&(IA=it/st>=.85),\\\"function\\\"!=typeof cA){let t;const e=({row:A,column:e,pixel:i})=>{i.forEach(((i,s)=>{t({point:{band:s,row:A,column:e},value:i})}))};let i=({pixel:s,...a})=>{try{O??=s.length,A>=1&&console.log(\\\"[geowarp] out_pixel_depth:\\\",O);const n={band:O,row:Y,column:K};A>=1&&console.log(\\\"[geowarp] out_sizes:\\\",n),U??=B.prepareData({fill:V,layout:q,sizes:n,arrayTypes:F}).data,A>=1&&console.log(\\\"[geowarp] out_data:\\\",typeof U),t=B.prepareUpdate({data:U,layout:q,sizes:n}),A>=1&&console.log(\\\"[geowarp] prepared update function\\\"),i=e,e({pixel:s,...a})}catch(A){console.error(\\\"first call to insert_pixel_sync failed:\\\",A)}};cA=({pixel:A,...t})=>{_A++,_(A).then((A=>{i({pixel:A,...t}),_A--}))}}\\\"function\\\"!=typeof fA&&(fA=1===yA&&1===BA?A=>cA(A):({row:A,column:t,pixel:e,...i})=>{const[s,a,n,o]=(([A,t],[e,i])=>[Math.round(A*e),Math.round(t*i),Math.round((A+1)*e),Math.round((t+1)*i)])([t,A],[QA,wA]);for(let A=a;A<o;A++)for(let t=s;t<n;t++)cA({row:A,column:t,pixel:e,...i})}),$??=CA,A>=1&&console.log(\\\"[geowarp] method:\\\",W);let at,nt,ot=([A,t])=>{const e=[PA+A*zA+KA,JA-t*qA-jA],i=mA?e:sA(e);return UA(i).map((A=>Math.floor(A)))};if(gA){const t=p({bbox:[0,0,K,Y],debug_level:A,quiet:!0,reproject:ot,threshold:[.5,.5]})?.reproject;t&&(ot=A=>t(A).map((A=>Math.round(A))))}gA&&(aA&&(J??=d(H,sA,{density:100}),xA??=a(e,J),at=p({bbox:xA,debug_level:A,quiet:!0,reproject:aA,threshold:[KA,jA]})),sA&&(kA??=d(e,aA,{density:100}),MA??=a(H,kA),nt=p({bbox:MA,debug_level:A,quiet:!0,reproject:sA,threshold:[KA,jA]}))),A>=2&&(at&&console.log(\\\"[geowarp] turbocharged forward\\\"),nt&&console.log(\\\"[geowarp] turbocharged inverse\\\"));const rt=at?.reproject||aA,lt=nt?.reproject||sA;let ht,gt,ct,ft;\\\"near-vectorize\\\"!==W&&\\\"nearest-vectorize\\\"!==W||(A>=2&&console.log('[geowarp] choosing between \\\"near\\\" and \\\"vectorize\\\" for best speed'),J??=mA?H:d(H,sA,{density:100}),ht=(J[3]-J[1])/CA,gt=(J[2]-J[0])/EA,ct=ht/S,ft=gt/G,A>=2&&console.log(\\\"[geowarp] pixel_height_ratio:\\\",ct),A>=2&&console.log(\\\"[geowarp] pixel_width_ratio:\\\",ft),ct<.1&&ft<.1?(W=\\\"vectorize\\\",A>=1&&console.log('[geowarp] selected \\\"vectorize\\\" method as it is likely to be faster')):(W=\\\"near\\\",A>=1&&console.log('[geowarp] selected \\\"near\\\" method as it is likely to be faster')));const ut=\\\"any\\\"===dA?A=>A.some((A=>E(A)||R.includes(A))):\\\"all\\\"===dA?A=>A.every((A=>E(A)||R.includes(A))):()=>!1;if(\\\"vectorize\\\"===W){J??=mA?H:d(H,sA,{density:100});let[t,r,l,h]=J;ht??=(h-r)/CA,S<ht&&A>=1&&console.warn(`[geowarp] normalized height of sample area of ${ht} is larger than input pixel height of ${S}`),gt??=(l-t)/K,G<gt&&A>=1&&console.warn(`[geowarp] normalized width of sample area of ${gt} is larger than input pixel width of ${G}`);const g=nA&&I(nA,{reproject:sA}),c=nA&&s(g);if((!nA||i(e,c))&&([t,r,l,h]=nA&&\\\"inside\\\"!==hA?a(J,c):J,A>=1&&console.log(\\\"[geowarp] [left, bottom, right, top]:\\\",[t,r,l,h]),t<RA&&r<FA&&l>GA||h<NA)){const t=d(J,UA);if(A>=1&&console.log(\\\"[geowarp] out_bbox_in_input_image_coords:\\\",t),i(t,[0,0,N,D])){const[A,e,i,s]=t.map((A=>Math.floor(A))),a=w(e,0,D-1),r=w(s,0,D-1),l=w(A,0,N-1),h=w(i,0,N-1);for(let A=a;A<=r;A++)for(let t=l;t<=h;t++){const e=X.map((e=>At({point:{band:e,row:A,column:t}}).value));if(ut(e))continue;const i=n([t,A,t+1,A+1]),s={debug:!1,raster_bbox:H,raster_height:CA,raster_width:EA,geometry:I(i,{reproject:YA})},a=vA({pixel:e});null===a&&\\\"insert\\\"!==uA||(s.per_pixel=nA?({row:A,column:t})=>{VA[A].some((([A,e])=>t>=A&&t<=e))&&fA({raw:e,pixel:a,row:A,column:t})}:({row:A,column:t})=>{fA({raw:e,pixel:a,row:A,column:t})},o.calculate(s))}}}}else if(\\\"near\\\"===W||\\\"nearest\\\"===W){const A=Math.min($,CA);for(let t=Z;t<A;t++){const A=VA[t];for(let e=0;e<A.length;e++){const[i,s]=A[e];for(let A=i;A<=s;A++){const[e,i]=ot([A,t]);let s=[];if(s=e<0||i<0||e>=N||i>=D?new Array(X.length).fill(DA):tt({row:i,column:e}),ut(s))continue;const a=vA({pixel:s});null===a&&\\\"insert\\\"!==uA||fA({row:t,column:A,pixel:a,raw:s,x_in_raster_pixels:e,y_in_raster_pixels:i})}}}}else if(\\\"bilinear\\\"===W){const A=Math.min($,CA);let t=JA+jA-Z*qA;for(let e=Z;e<A;e++){t-=qA;const A=VA[e];for(let i=0;i<A.length;i++){const[s,a]=A[i];for(let A=s;A<=a;A++){const i=[PA+A*zA+KA,t],s=mA?i:lt(i),[a,n]=UA(s),o=Math.floor(a),r=Math.ceil(a),l=Math.floor(n),h=Math.ceil(n),g=r-a,c=a-o,f=l===h?.5:h-n,u=l===h?.5:n-l,d=o<0||o>=N,I=r<0||r>=N,p=l<0||l>=D,_=h<0||h>=D,C=p||d,B=p||I,w=_||d,y=_||I,Q=new Array;for(let A=0;A<X.length;A++){const t=X[A],e=C?DA:At({point:{band:t,row:l,column:o}}).value,i=B?DA:At({point:{band:t,row:l,column:r}}).value,s=w?DA:At({point:{band:t,row:h,column:o}}).value,a=y?DA:At({point:{band:t,row:h,column:r}}).value;let n;const d=E(e)||R.includes(e),I=E(i)||R.includes(i);let p;d&&I||(n=d?i:I||e===i?e:g*e+c*i);const _=E(s)||R.includes(s),m=E(a)||R.includes(a);let k;_&&m||(p=_?a:m||s===a?s:g*s+c*a),k=void 0===n&&void 0===p?DA:void 0===n?p:void 0===p?n:u*p+f*n,Q.push(k)}if(ut(Q))continue;const m=vA({pixel:Q});null===m&&\\\"insert\\\"!==uA||fA({row:e,column:A,pixel:m,raw:Q})}}}}else{let e,i,s,a,n;if(\\\"function\\\"==typeof W)e=A=>W({values:A});else if(\\\"max\\\"===W)e=A=>r(A,{theoretical_max:iA});else if(\\\"mean\\\"===W)e=A=>m(A);else if(\\\"median\\\"===W)e=A=>u(A);else if(\\\"min\\\"===W)e=A=>l(A,{theoretical_min:eA});else if(\\\"mode\\\"===W)e=A=>k(A)[0];else if(\\\"mode-max\\\"===W)e=A=>r(k(A));else if(\\\"mode-mean\\\"===W)e=A=>m(k(A));else if(\\\"mode-median\\\"===W)e=A=>u(k(A));else{if(\\\"mode-min\\\"!==W)throw new Error(`[geowarp] unknown method \\\"${W}\\\"`);e=A=>l(k(A))}a=JA-Z*Z;const o=Math.min($,CA);for(let r=Z;r<o;r++){i=a,a=i-qA;const o=VA[r];for(let l=0;l<o.length;l++){const[h,g]=o[l];n=PA+zA*h;for(let o=h;o<=g;o++){s=n,n=s+zA;const[l,h,g,c]=d([s,a,n,i],OA);A>=4&&console.log(\\\"[geowarp] leftInRasterPixels:\\\",l),A>=4&&console.log(\\\"[geowarp] rightInRasterPixels:\\\",g),A>=4&&console.log(\\\"[geowarp] topInRasterPixels:\\\",h),A>=4&&console.log(\\\"[geowarp] bottomInRasterPixels:\\\",c);let f=Math.round(l),u=Math.round(g),I=Math.round(h),p=Math.round(c);if(f===u){const A=(g+l)/2;f=Math.floor(A),u=f+1}if(I===p){const A=(h+c)/2;I=Math.floor(A),p=I+1}let _=[];if(f>=N||u<0||p<0||I>=D)_=new Array(X.length).fill(DA);else{f=Math.max(0,f),u=Math.min(u,N),I=Math.max(0,I),p=Math.min(p,D);for(let A=0;A<X.length;A++){const i=X[A],{data:s}=B.clip({data:t,flat:!0,layout:M,sizes:$A,rect:{band:[i,i],row:[I,Math.max(I,p-1)],column:[f,Math.max(f,u-1)]}}),a=s.filter((A=>\\\"number\\\"==typeof A&&A==A&&-1===R.indexOf(A)));0===a.length?_.push(DA):_.push(e(a))}}if(ut(_))continue;const C=vA({pixel:_});null===C&&\\\"insert\\\"!==uA||fA({row:r,column:o,pixel:C,raw:_})}}}}const dt=()=>(A>=1&&console.log(\\\"[geowarp] took \\\"+(performance.now()-pA).toFixed(0)+\\\"ms\\\"),{data:U,out_bands:L,out_height:Y,out_layout:q,out_pixel_depth:O,out_pixel_height:P,out_pixel_width:T,out_sample_height:qA,out_sample_width:zA,out_width:K,read_bands:X});return _A>0?new Promise((A=>{const t=setInterval((()=>{0===_A&&(clearInterval(t),A(dt()))}),5)})):dt()};A.exports=x,A.exports.default=x,\\\"object\\\"==typeof window&&(window.geowarp=x),\\\"object\\\"==typeof self&&(self.geowarp=x)},2469:A=>{\\\"use strict\\\";function t([A,t,e,i]){return(e-A)*(i-t)}A.exports=t,A.exports.default=t},2084:A=>{\\\"use strict\\\";function t(A,{nan_strategy:t=\\\"throw\\\"}={nan_strategy:\\\"throw\\\"}){const e=A.length;let i=null,s=null,a=null,n=null;for(let o=0;o<e;o++){const[e,r]=A[o];if(isNaN(e)){if(\\\"throw\\\"===t)throw new Error(\\\"[bbox-fns/bbox-array] encountered point with a NaN value: [\\\"+e+\\\", \\\"+r+\\\"]\\\")}else null===i?(i=e,s=e):e<i?i=e:e>s&&(s=e);if(isNaN(r)){if(\\\"throw\\\"===t)throw new Error(\\\"[bbox-fns/bbox-array] encountered point with a NaN value: [\\\"+e+\\\", \\\"+r+\\\"]\\\")}else null===a?(a=r,n=r):r<a?a=r:r>n&&(n=r)}return[i,a,s,n]}A.exports=t,A.exports.default=t},5552:A=>{\\\"use strict\\\";function t([A,t]){return[A,t,A,t]}A.exports=t,A.exports.default=t},4470:A=>{\\\"use strict\\\";function t([A,t,e,i]){return[e-A,i-t]}A.exports=t,A.exports.default=t},7563:A=>{function t([A,t,e,i],[s,a],{exclusive:n=!1}={exclusive:!1}){return n?a<i&&a>t&&s<e&&s>A:a>=t&&a<=i&&s>=A&&s<=e}A.exports=t,A.exports.default=t},1268:A=>{function t([A,t,e,i],[s,a,n,o],{exclusive:r=!1}={exclusive:!1}){if(r){return s>A&&n<e&&(a>t&&o<i)}return s>=A&&n<=e&&(a>=t&&o<=i)}A.exports=t,A.exports.default=t},8103:A=>{function t([A,t,e,i],[s,a,n,o]){return s<=e&&n>=A&&(a<=i&&o>=t)}A.exports=t,A.exports.default=t},4138:A=>{const t=[\\\"right -> down -> left -> up\\\",\\\"down -> left -> up -> right\\\",\\\"left -> up -> right -> down\\\",\\\"up -> right -> down -> left\\\",\\\"down -> right -> up -> left\\\",\\\"right -> up -> left -> down\\\",\\\"up -> left -> down -> right\\\",\\\"left -> down -> right -> up\\\"];function e(A,{debug:e=0}={debug:0}){if(!Array.isArray(A))return e&&console.log(\\\"[bbox-fns/booleanRectangle] coords is not an array\\\"),!1;if(1===A.length&&(A=A[0]),1===A.length&&(A=A[0]),!A.every((A=>Array.isArray(A)&&A.every((A=>\\\"number\\\"==typeof A)))))return e&&console.log(\\\"[bbox-fns/booleanRectangle] invalid points\\\"),!1;if(JSON.stringify(A[0])!==JSON.stringify(A[A.length-1]))return e&&console.log(\\\"[bbox-fns/booleanRectangle] first and last coordinates not equal\\\"),!1;let i=[];for(let t=1;t<A.length;t++){const[s,a]=A[t-1],[n,o]=A[t],r=s===n,l=a===o;if(r===l)return e&&console.log(\\\"[bbox-fns/booleanRectangle] invalid angle\\\"),!1;let h;if(r?h=o>a?\\\"up\\\":\\\"down\\\":l&&(h=n>s?\\\"right\\\":\\\"left\\\"),h!==i[i.length-1]){if(4===i.length)return e&&console.log(\\\"[bbox-fns/booleanRectangle] more than 4 turns\\\"),!1;i.push(h)}}return i=i.join(\\\" -> \\\"),e&&console.log(\\\"[bbox-fns/booleanRectangle] order: \\\"+i),-1!==t.indexOf(i)||(e&&console.log(\\\"[bbox-fns/booleanRectangle] invalid order\\\"),!1)}A.exports=e,A.exports.default=e},7921:(A,t,e)=>{const i=e(6437);function s(A){const t=[];for(let e=0;e<A.length;e++){const i=A[e];for(let A=0;A<i.length;A++)t.push(i[A])}return t}function a(A){if(A.geometry&&(A=A.geometry),A.coordinates&&(A=A.coordinates),A.paths&&(A=A.paths),A.points&&(A=A.points),A.rings&&(A=A.rings),Array.isArray(A.features))return i(s(A.features.map(a)));if(Array.isArray(A.geometries))return i(s(A.geometries.map(a)));if(Array.isArray(A)&&Array.isArray(A[0])&&Array.isArray(A[0][0]))return i(s(A.map(a)));if(Array.isArray(A)&&Array.isArray(A[0])&&\\\"number\\\"==typeof A[0][0]){const[t,e]=A[0];let i=t,s=e,a=t,n=e;return A.forEach((([A,t])=>{A<i&&(i=A),A>a&&(a=A),t<s&&(s=t),t>n&&(n=t)})),[[i,s,a,n]]}if(Array.isArray(A)&&(2===A.length||3===A.length)&&\\\"number\\\"==typeof A[0]){const[t,e]=A;return[[t,e,t,e]]}if(\\\"number\\\"==typeof A.x&&\\\"number\\\"==typeof A.y){const{x:t,y:e}=A;return[[t,e,t,e]]}return[\\\"xmin\\\",\\\"xmax\\\",\\\"ymin\\\",\\\"ymax\\\"].every((t=>\\\"number\\\"==typeof A[t]))?[[A.xmin,A.ymin,A.xmax,A.ymax]]:void 0}A.exports=a,A.exports.default=a},8534:(A,t,e)=>{const i=e(1236);function s(A){if(A.geometry&&(A=A.geometry),A.coordinates&&(A=A.coordinates),A.paths&&(A=A.paths),A.points&&(A=A.points),A.rings&&(A=A.rings),Array.isArray(A.features))return i(A.features.map(s));if(Array.isArray(A.geometries))return i(A.geometries.map(s));if(Array.isArray(A)&&Array.isArray(A[0])&&Array.isArray(A[0][0]))return i(A.map(s));if(Array.isArray(A)&&Array.isArray(A[0])&&\\\"number\\\"==typeof A[0][0]){const[t,e]=A[0];let i=t,s=e,a=t,n=e;return A.forEach((([A,t])=>{A<i&&(i=A),A>a&&(a=A),t<s&&(s=t),t>n&&(n=t)})),[i,s,a,n]}if(Array.isArray(A)&&(2===A.length||3===A.length)&&\\\"number\\\"==typeof A[0]){const[t,e]=A;return[t,e,t,e]}if(\\\"number\\\"==typeof A.x&&\\\"number\\\"==typeof A.y){const{x:t,y:e}=A;return[t,e,t,e]}return[\\\"xmin\\\",\\\"xmax\\\",\\\"ymin\\\",\\\"ymax\\\"].every((t=>\\\"number\\\"==typeof A[t]))?[A.xmin,A.ymin,A.xmax,A.ymax]:void 0}A.exports=s,A.exports.default=s},6437:A=>{function t(A){const t=[];for(let e=0;e<A.length;e++){const i=A[e],s=JSON.stringify(i);-1===t.indexOf(s)&&t.push(s)}return t.map((A=>JSON.parse(A)))}A.exports=t,A.exports.default=t},1672:A=>{function t([A,t,e,i],{density:s=0}={density:0}){\\\"number\\\"==typeof s&&(s=[s,s]);const[a,n]=s,o=[],r=(e-A)/(a+1),l=(i-t)/(n+1);o.push([A,i]);for(let t=1;t<=n;t++)o.push([A,i-t*l]);o.push([A,t]);for(let e=1;e<=a;e++)o.push([A+e*r,t]);o.push([e,t]);for(let A=1;A<=n;A++)o.push([e,t+A*l]);o.push([e,i]);for(let A=1;A<=a;A++)o.push([e-A*r,i]);return o.push([A,i]),[o]}A.exports=t,A.exports.default=t},614:A=>{\\\"use strict\\\";function t([A,t,e,i],s){\\\"number\\\"==typeof s?s=[s,s]:void 0===s&&(s=[2,2]);const[a,n]=s,o=[],r=(e-A)/a,l=(i-t)/n;for(let s=0;s<n;s++){const h=t+s*l,g=s===n.length-1?i:h+l;for(let t=0;t<a;t++){const i=A+t*r,s=t===a.length-1?e:i+r;o.push([i,h,s,g])}}return o}A.exports=t,A.exports.default=t},7882:(A,t,e)=>{var i;const s=e(2469),a=e(2084),n=e(5552),o=e(4470),r=e(1268),l=e(7563),h=e(8103),g=e(4138),c=e(8534),f=e(7921),u=e(1672),d=e(614),I=e(8421),p=e(1236),_=e(6774),C=e(6434),B=e(2619),w=e(2271),E=e(2247),y=e(813),Q=e(7800),m=e(1284),k={bboxArea:s,bboxArray:a,bboxPoint:n,bboxSize:o,booleanContains:r,booleanContainsPoint:l,booleanIntersects:h,booleanRectangle:g,calc:c,calcAll:f,densePolygon:u,grid:d,intersect:I,merge:p,polygon:_,preciseDensePolygon:C,preciseDivide:B,preciseReproject:w,reproject:E,scale:y,shift:Q,split:e(5176),validate:e(8120),preciseValidate:e(2507),sort:m,union:e(8983),unwrap:e(3906)};void 0===(i=function(){return k}.call(t,e,t,A))||(A.exports=i),A.exports=k,\\\"object\\\"==typeof window&&(window.bboxfns=k),\\\"object\\\"==typeof self&&(self.bboxfns=k)},8421:(A,t,e)=>{const i=e(8103);function s(A,t){const[e,s,a,n]=A,[o,r,l,h]=t;return i(A,t)?[Math.max(e,o),Math.max(s,r),Math.min(a,l),Math.min(n,h)]:null}A.exports=s,A.exports.default=s},1236:A=>{\\\"use strict\\\";function t(A){if(0===A.length)return;if(1===A.length)return A[0];let[t,e,i,s]=A[0];for(let a=1;a<A.length;a++){const n=A[a];n[0]<t&&(t=n[0]),n[1]<e&&(e=n[1]),n[2]>i&&(i=n[2]),n[3]>s&&(s=n[3])}return[t,e,i,s]}A.exports=t,A.exports.default=t},6774:A=>{function t([A,t,e,i]){return[[[A,i],[A,t],[e,t],[e,i],[A,i]]]}A.exports=t,A.exports.default=t},1136:(A,t,e)=>{\\\"use strict\\\";const i=e(6130);function s(A){const t=A.length,[e,s]=A[0];let a=e,n=e,o=s,r=s;for(let e=1;e<t;e++){const[t,s]=A[e];\\\"<\\\"===i(t,a)?a=t:\\\">\\\"===i(t,n)&&(n=t),\\\"<\\\"===i(s,o)?o=s:\\\">\\\"===i(s,r)&&(r=s)}return[a,o,n,r]}A.exports=s,A.exports.default=s},6434:(A,t,e)=>{const i=e(5245),s=e(9235),a=e(1031),n=e(8655);function o(A,{density:t=0}={density:0}){A=A.map((A=>A.toString()));let[e,o,r,l]=A;\\\"number\\\"!=typeof t&&\\\"string\\\"!=typeof t||(t=[t,t]),t=t.map((A=>A.toString()));const[h,g]=t,c=n(l,o),f=n(r,e),u=[],d=s(f,i(h,\\\"1\\\")),I=s(c,i(g,\\\"1\\\"));u.push([e,l]);for(let A=1;A<=g;A++)u.push([e,n(l,a(A.toString(),I))]);u.push([e,o]);for(let A=1;A<=h;A++)u.push([i(e,a(A.toString(),d)),o]);u.push([r,o]);for(let A=1;A<=g;A++)u.push([r,i(o,a(A.toString(),I))]);u.push([r,l]);for(let A=1;A<=h;A++)u.push([n(r,a(A.toString(),d)),l]);return u.push([e,l]),[u]}A.exports=o,A.exports.default=o},2619:(A,t,e)=>{\\\"use strict\\\";const i=e(9235);function s([A,t,e,s],a,{ellipsis:n=!1,max_decimal_digits:o=100}={}){const[r,l]=\\\"string\\\"==typeof a||\\\"number\\\"==typeof a?[a,a]:1===a.length?[a[0].toString(),a[0].toString()]:a,h={ellipsis:n,max_decimal_digits:o},g=r.toString(),c=l.toString();return[i(A.toString(),g,h),i(t.toString(),c,h),i(e.toString(),g,h),i(s.toString(),c,h)]}A.exports=s,A.exports.default=s},2271:(A,t,e)=>{const i=e(1136),s=e(6434);function a(A,t,{async:e=!1,density:a}={}){const n=s(A,{density:a})[0].map((A=>t(A)));return e?Promise.all(n).then((A=>i(A))):i(n)}A.exports=a,A.exports.default=a},2507:(A,t,e)=>{const i=e(6130);function s(A){if(!Array.isArray(A))return!1;if(4!==A.length)return!1;if(A.some((A=>\\\"string\\\"!=typeof A)))return!1;const[t,e,s,a]=A;return\\\">\\\"!==i(t,s)&&\\\">\\\"!==i(e,a)}A.exports=s,A.exports.default=s},2247:(A,t,e)=>{const i=e(2084),s=e(1672);function a(A,t,{async:e=!1,density:a,nan_strategy:n=\\\"throw\\\"}={}){const o=s(A,{density:a})[0].map((A=>t(A)));return e?Promise.all(o).then((A=>i(A,{nan_strategy:n}))):i(o,{nan_strategy:n})}A.exports=a,A.exports.default=a},813:A=>{\\\"use strict\\\";function t([A,t,e,i],s){const[a,n]=\\\"number\\\"==typeof s?[s,s]:1===s.length?[s[0],s[0]]:s;return[A*a,t*n,e*a,i*n]}A.exports=t,A.exports.default=t},7800:A=>{function t([A,t,e,i],s){const a=Array.isArray(s)&&s.length>=1?s[0]:\\\"number\\\"==typeof s.x?s.x:0,n=Array.isArray(s)&&s.length>=2?s[1]:\\\"number\\\"==typeof s.y?s.y:0;return[A+a,t+n,e+a,i+n]}A.exports=t,A.exports.default=t},1284:A=>{function t(A){return A.sort(((A,t)=>{const[e,i,s,a]=A,[n,o,r,l]=t;return e<n?-1:e>n||i<o?1:i>o?-1:0}))}A.exports=t,A.exports.default=t},5176:A=>{\\\"use strict\\\";function t(A,t){const[e,i,s,a]=A;if(!t)throw new Error(\\\"[bbox-fns/split.js] missing breakpoints\\\");const n=t.x||[],o=t.y||[],r=[e].concat(n.filter((A=>A>e&&A<s))).concat([s]),l=[i].concat(o.filter((A=>A>i&&A<a))).concat([a]),h=[];for(let A=1;A<r.length;A++){const t=r[A-1],e=r[A];for(let A=1;A<l.length;A++){const i=l[A-1],s=l[A];h.push([t,i,e,s])}}return h}A.exports=t,A.exports.default=t},8983:(A,t,e)=>{\\\"use strict\\\";const i=e(8103),s=e(1236);function a(A){if(0===A.length)return[];if(1===A.length)return[A[0]];let t=[A[0]];for(let e=1;e<A.length;e++){const a=A[e],n=t.filter((A=>i(a,A))),o=s(n.concat([a])),r=t.filter((A=>!n.includes(A)));t=[o].concat(r)}return t}A.exports=a,A.exports.default=a},3906:(A,t,e)=>{const i=e(7800),s=e(1284),a=e(5176),n=e(8983);function o(A,t){const[e,o,r,l]=t,h=r-e,g=l-o;let c=a(A,{x:[e-h,e,r,r+h],y:[o-g,o,l,l+g]});return c=c.map((A=>{const[t,s,a,n]=A;return i(A,{x:Math.ceil((e-t)/h)*h,y:Math.ceil((o-s)/g)*g})})),c=n(c),c=s(c),c}A.exports=o,A.exports.default=o},8120:A=>{\\\"use strict\\\";function t(A){if(!Array.isArray(A))return!1;if(4!==A.length)return!1;if(A.some((A=>\\\"number\\\"!=typeof A)))return!1;const[t,e,i,s]=A;return!(t>i)&&!(e>s)}A.exports=t,A.exports.default=t},3642:A=>{A.exports=function(A){const t=A=>Array.isArray(A)||A instanceof Int8Array||A instanceof Uint8Array||A instanceof Uint8ClampedArray||A instanceof Int16Array||A instanceof Uint16Array||A instanceof Int32Array||A instanceof Uint32Array||A instanceof Float32Array||A instanceof Float64Array||A instanceof BigInt64Array||A instanceof BigUint64Array;let e=0,i=A;for(;t(i);)e++,i=i[0];return e}},4091:(A,t,e)=>{var i,s=Object.defineProperty,a=(A,t)=>s(A,\\\"name\\\",{value:t,configurable:!0}),n=(A,t)=>()=>(t||A((t={exports:{}}).exports,t),t.exports),o=n(((s,n)=>{var o={char2bits:{0:\\\"110100\\\",1:\\\"110101\\\",2:\\\"110110\\\",3:\\\"110111\\\",4:\\\"111000\\\",5:\\\"111001\\\",6:\\\"111010\\\",7:\\\"111011\\\",8:\\\"111100\\\",9:\\\"111101\\\",A:\\\"000000\\\",Q:\\\"010000\\\",g:\\\"100000\\\",w:\\\"110000\\\",B:\\\"000001\\\",R:\\\"010001\\\",h:\\\"100001\\\",x:\\\"110001\\\",C:\\\"000010\\\",S:\\\"010010\\\",i:\\\"100010\\\",y:\\\"110010\\\",D:\\\"000011\\\",T:\\\"010011\\\",j:\\\"100011\\\",z:\\\"110011\\\",E:\\\"000100\\\",U:\\\"010100\\\",k:\\\"100100\\\",F:\\\"000101\\\",V:\\\"010101\\\",l:\\\"100101\\\",G:\\\"000110\\\",W:\\\"010110\\\",m:\\\"100110\\\",H:\\\"000111\\\",X:\\\"010111\\\",n:\\\"100111\\\",I:\\\"001000\\\",Y:\\\"011000\\\",o:\\\"101000\\\",J:\\\"001001\\\",Z:\\\"011001\\\",p:\\\"101001\\\",K:\\\"001010\\\",a:\\\"011010\\\",q:\\\"101010\\\",L:\\\"001011\\\",b:\\\"011011\\\",r:\\\"101011\\\",M:\\\"001100\\\",c:\\\"011100\\\",s:\\\"101100\\\",N:\\\"001101\\\",d:\\\"011101\\\",t:\\\"101101\\\",O:\\\"001110\\\",e:\\\"011110\\\",u:\\\"101110\\\",\\\"+\\\":\\\"111110\\\",P:\\\"001111\\\",f:\\\"011111\\\",v:\\\"101111\\\",\\\"/\\\":\\\"111111\\\"}};o.toArrayBuffer=a((function(A){var t=o.char2bits,e=0;for(let t=A.length;t>=0;t--)\\\"=\\\"===A[t]&&e++;for(var i=A.length-e,s=Math.floor(.75*i),a=new Uint8Array(s),n=\\\"\\\",r=0;r<i;r++){var l=A[r];if(\\\"=\\\"===l)break;(n+=t[l]).length>=8&&(a[Math.floor(.75*r)]=parseInt(n.substring(0,8),2),n=n.substring(8))}return a.buffer}),\\\"toArrayBuffer\\\"),o.toBase64String=a((function(A){if(!o.bits2char){o.bits2char={};for(let A in o.char2bits)o.bits2char[o.char2bits[A]]=A}for(var t=o.bits2char,e=new Uint8Array(A),i=\\\"\\\",s=\\\"\\\",a=0;a<e.length;a++){for(var n=e[a].toString(2);n.length<8;)n=\\\"0\\\"+n;for(s+=n;s.length>=6;)i+=t[s.substring(0,6)],s=s.substring(6)}if(s.length>0){for(;s.length<6;)s+=\\\"0\\\";i+=t[s]}for(;i.length%4!=0;)i+=\\\"=\\\";return i}),\\\"toBase64String\\\"),void 0===(i=function(){return o}.call(t,e,t,A))||(A.exports=i),\\\"object\\\"==typeof n&&(n.exports=o),\\\"object\\\"==typeof window&&(window.b64ab=o),\\\"object\\\"==typeof self&&(self.b64ab=o)})),r=n(((A,t)=>{function e(A,t,e){let i=new RegExp(t).exec(A.slice(e));return i?e+i.index:-1}a(e,\\\"indexOfMatch\\\"),t.exports=e,t.exports.default=e})),l=n(((A,t)=>{function e(A,t,e){let i=new RegExp(t).exec(A.slice(e));return i?e+i.index+i[0].length-1:-1}a(e,\\\"indexOfMatchEnd\\\"),t.exports=e,t.exports.default=e})),h=n(((A,t)=>{function e(A,t){let e=new RegExp(t,\\\"g\\\"),i=A.match(e);return i?i.length:0}a(e,\\\"countSubstring\\\"),t.exports=e,t.exports.default=e})),g=n(((A,t)=>{var e=r(),i=l(),s=h();function n(A,t,a){let n=a&&a.debug||!1,o=!(a&&!1===typeof a.nested),r=a&&a.startIndex||0;n&&console.log(\\\"[xml-utils] starting findTagByName with\\\",t,\\\" and \\\",a);let l=e(A,`<${t}[ \\\\n>/]`,r);if(n&&console.log(\\\"[xml-utils] start:\\\",l),-1===l)return;let h=A.slice(l+t.length),g=i(h,\\\"^[^<]*[ /]>\\\",0),c=-1!==g&&\\\"/\\\"===h[g-1];if(n&&console.log(\\\"[xml-utils] selfClosing:\\\",c),!1===c)if(o){let A=0,e=1,a=0;for(;-1!==(g=i(h,\\\"[ /]\\\"+t+\\\">\\\",A));){let i=h.substring(A,g+1);if(e+=s(i,\\\"<\\\"+t+\\\"[ \\\\n\\\\t>]\\\"),a+=s(i,\\\"</\\\"+t+\\\">\\\"),a>=e)break;A=g}}else g=i(h,\\\"[ /]\\\"+t+\\\">\\\",0);let f=l+t.length+g+1;if(n&&console.log(\\\"[xml-utils] end:\\\",f),-1===f)return;let u,d=A.slice(l,f);return u=c?null:d.slice(d.indexOf(\\\">\\\")+1,d.lastIndexOf(\\\"<\\\")),{inner:u,outer:d,start:l,end:f}}a(n,\\\"findTagByName\\\"),t.exports=n,t.exports.default=n})),c=n(((A,t)=>{var e=g();function i(A,t,i){let s,a=[],n=i&&i.debug||!1,o=!i||\\\"boolean\\\"!=typeof i.nested||i.nested,r=i&&i.startIndex||0;for(;s=e(A,t,{debug:n,startIndex:r});)r=o?s.start+1+t.length:s.end,a.push(s);return n&&console.log(\\\"findTagsByName found\\\",a.length,\\\"tags\\\"),a}a(i,\\\"findTagsByName\\\"),t.exports=i,t.exports.default=i})),f=n(((A,t)=>{var e=c();function i(A,t,i){let s=i&&i.debug||!1,a=i&&i.returnOnFirst||!1,n=e(A,t.shift(),{debug:s,nested:!1});s&&console.log(\\\"first tags are:\\\",n);for(let A=0;A<t.length;A++){let i=t[A];s&&console.log(\\\"tagName:\\\",i);let o=[];for(let r=0;r<n.length;r++){let l=n[r],h=e(l.outer,i,{debug:s,startIndex:1});if(s&&console.log(\\\"subTags.length:\\\",h.length),h.length>0){if(h.forEach((A=>{A.start+=l.start,A.end+=l.start})),a&&A===t.length-1)return[h[0]];o=o.concat(h)}}n=o}return n}a(i,\\\"findTagsByPath\\\"),t.exports=i,t.exports.default=i})),u=n(((A,t)=>{var e=f();function i(A,t,i){let s=i&&i.debug||!1,a=e(A,t,{debug:s,returnOnFirst:!0});if(Array.isArray(a)&&1===a.length)return a[0]}a(i,\\\"findTagByPath\\\"),t.exports=i,t.exports.default=i})),d=n(((A,t)=>{function e(A,t,e){let i=e&&e.debug||!1;i&&console.log(\\\"[xml-utils] getting \\\"+t+\\\" in \\\"+A);let s=\\\"object\\\"==typeof A?A.outer:A,a=s.slice(0,s.indexOf(\\\">\\\")+1),n=['\\\"',\\\"'\\\"];for(let A=0;A<n.length;A++){let e=n[A],s=t+\\\"\\\\\\\\=\\\"+e+\\\"([^\\\"+e+\\\"]*)\\\"+e;i&&console.log(\\\"[xml-utils] pattern:\\\",s);let o=new RegExp(s).exec(a);if(i&&console.log(\\\"[xml-utils] match:\\\",o),o)return o[1]}}a(e,\\\"getAttribute\\\"),t.exports=e,t.exports.default=e})),I=n(((A,t)=>{\\\"use strict\\\";var e=1,i=/\\\\s/,s=/[A-Za-z]/,n=/[A-Za-z84_]/,o=/[,\\\\]]/,r=/[\\\\d\\\\.E\\\\-\\\\+]/;function l(A){if(\\\"string\\\"!=typeof A)throw new Error(\\\"not a string\\\");this.text=A.trim(),this.level=0,this.place=0,this.root=null,this.stack=[],this.currentObject=null,this.state=e}function h(A){return new l(A).output()}function g(A,t,e){Array.isArray(t)&&(e.unshift(t),t=null);var i=t?{}:A,s=e.reduce((function(A,t){return c(t,A),A}),i);t&&(A[t]=s)}function c(A,t){if(Array.isArray(A)){var e=A.shift();if(\\\"PARAMETER\\\"===e&&(e=A.shift()),1===A.length)return Array.isArray(A[0])?(t[e]={},void c(A[0],t[e])):void(t[e]=A[0]);if(A.length)if(\\\"TOWGS84\\\"!==e){if(\\\"AXIS\\\"===e)return e in t||(t[e]=[]),void t[e].push(A);var i;switch(Array.isArray(e)||(t[e]={}),e){case\\\"UNIT\\\":case\\\"PRIMEM\\\":case\\\"VERT_DATUM\\\":return t[e]={name:A[0].toLowerCase(),convert:A[1]},void(3===A.length&&c(A[2],t[e]));case\\\"SPHEROID\\\":case\\\"ELLIPSOID\\\":return t[e]={name:A[0],a:A[1],rf:A[2]},void(4===A.length&&c(A[3],t[e]));case\\\"PROJECTEDCRS\\\":case\\\"PROJCRS\\\":case\\\"GEOGCS\\\":case\\\"GEOCCS\\\":case\\\"PROJCS\\\":case\\\"LOCAL_CS\\\":case\\\"GEODCRS\\\":case\\\"GEODETICCRS\\\":case\\\"GEODETICDATUM\\\":case\\\"EDATUM\\\":case\\\"ENGINEERINGDATUM\\\":case\\\"VERT_CS\\\":case\\\"VERTCRS\\\":case\\\"VERTICALCRS\\\":case\\\"COMPD_CS\\\":case\\\"COMPOUNDCRS\\\":case\\\"ENGINEERINGCRS\\\":case\\\"ENGCRS\\\":case\\\"FITTED_CS\\\":case\\\"LOCAL_DATUM\\\":case\\\"DATUM\\\":return A[0]=[\\\"name\\\",A[0]],void g(t,e,A);default:for(i=-1;++i<A.length;)if(!Array.isArray(A[i]))return c(A,t[e]);return g(t,e,A)}}else t[e]=A;else t[e]=!0}else t[A]=!0}a(l,\\\"Parser\\\"),l.prototype.readCharicter=function(){var A=this.text[this.place++];if(4!==this.state)for(;i.test(A);){if(this.place>=this.text.length)return;A=this.text[this.place++]}switch(this.state){case e:return this.neutral(A);case 2:return this.keyword(A);case 4:return this.quoted(A);case 5:return this.afterquote(A);case 3:return this.number(A);case-1:return}},l.prototype.afterquote=function(A){if('\\\"'===A)return this.word+='\\\"',void(this.state=4);if(o.test(A))return this.word=this.word.trim(),void this.afterItem(A);throw new Error(\\\"havn't handled \\\\\\\"\\\"+A+'\\\" in afterquote yet, index '+this.place)},l.prototype.afterItem=function(A){return\\\",\\\"===A?(null!==this.word&&this.currentObject.push(this.word),this.word=null,void(this.state=e)):\\\"]\\\"===A?(this.level--,null!==this.word&&(this.currentObject.push(this.word),this.word=null),this.state=e,this.currentObject=this.stack.pop(),void(this.currentObject||(this.state=-1))):void 0},l.prototype.number=function(A){if(!r.test(A)){if(o.test(A))return this.word=parseFloat(this.word),void this.afterItem(A);throw new Error(\\\"havn't handled \\\\\\\"\\\"+A+'\\\" in number yet, index '+this.place)}this.word+=A},l.prototype.quoted=function(A){'\\\"'!==A?this.word+=A:this.state=5},l.prototype.keyword=function(A){if(n.test(A))this.word+=A;else{if(\\\"[\\\"===A){var t=[];return t.push(this.word),this.level++,null===this.root?this.root=t:this.currentObject.push(t),this.stack.push(this.currentObject),this.currentObject=t,void(this.state=e)}if(!o.test(A))throw new Error(\\\"havn't handled \\\\\\\"\\\"+A+'\\\" in keyword yet, index '+this.place);this.afterItem(A)}},l.prototype.neutral=function(A){if(s.test(A))return this.word=A,void(this.state=2);if('\\\"'===A)return this.word=\\\"\\\",void(this.state=4);if(r.test(A))return this.word=A,void(this.state=3);if(!o.test(A))throw new Error(\\\"havn't handled \\\\\\\"\\\"+A+'\\\" in neutral yet, index '+this.place);this.afterItem(A)},l.prototype.output=function(){for(;this.place<this.text.length;)this.readCharicter();if(-1===this.state)return this.root;throw new Error('unable to parse string \\\"'+this.text+'\\\". State is '+this.state)},a(h,\\\"parseString\\\"),a(g,\\\"mapit\\\"),a(c,\\\"sExpr\\\");var f=.017453292519943295;function u(A,t){var e=t[0],i=t[1];!(e in A)&&i in A&&(A[e]=A[i],3===t.length&&(A[e]=t[2](A[e])))}function d(A){return A*f}function I(A){if(\\\"GEOGCS\\\"===A.type?A.projName=\\\"longlat\\\":\\\"LOCAL_CS\\\"===A.type?(A.projName=\\\"identity\\\",A.local=!0):\\\"object\\\"==typeof A.PROJECTION?A.projName=Object.keys(A.PROJECTION)[0]:A.projName=A.PROJECTION,A.AXIS){for(var t=\\\"\\\",e=0,i=A.AXIS.length;e<i;++e){var s=[A.AXIS[e][0].toLowerCase(),A.AXIS[e][1].toLowerCase()];-1!==s[0].indexOf(\\\"north\\\")||(\\\"y\\\"===s[0]||\\\"lat\\\"===s[0])&&\\\"north\\\"===s[1]?t+=\\\"n\\\":-1!==s[0].indexOf(\\\"south\\\")||(\\\"y\\\"===s[0]||\\\"lat\\\"===s[0])&&\\\"south\\\"===s[1]?t+=\\\"s\\\":-1!==s[0].indexOf(\\\"east\\\")||(\\\"x\\\"===s[0]||\\\"lon\\\"===s[0])&&\\\"east\\\"===s[1]?t+=\\\"e\\\":(-1!==s[0].indexOf(\\\"west\\\")||(\\\"x\\\"===s[0]||\\\"lon\\\"===s[0])&&\\\"west\\\"===s[1])&&(t+=\\\"w\\\")}2===t.length&&(t+=\\\"u\\\"),3===t.length&&(A.axis=t)}A.UNIT&&(A.units=A.UNIT.name.toLowerCase(),\\\"metre\\\"===A.units&&(A.units=\\\"meter\\\"),A.UNIT.convert&&(\\\"GEOGCS\\\"===A.type?A.DATUM&&A.DATUM.SPHEROID&&(A.to_meter=A.UNIT.convert*A.DATUM.SPHEROID.a):A.to_meter=A.UNIT.convert));var n=A.GEOGCS;function o(t){return t*(A.to_meter||1)}\\\"GEOGCS\\\"===A.type&&(n=A),n&&(n.DATUM?A.datumCode=n.DATUM.name.toLowerCase():A.datumCode=n.name.toLowerCase(),\\\"d_\\\"===A.datumCode.slice(0,2)&&(A.datumCode=A.datumCode.slice(2)),(\\\"new_zealand_geodetic_datum_1949\\\"===A.datumCode||\\\"new_zealand_1949\\\"===A.datumCode)&&(A.datumCode=\\\"nzgd49\\\"),(\\\"wgs_1984\\\"===A.datumCode||\\\"world_geodetic_system_1984\\\"===A.datumCode)&&(\\\"Mercator_Auxiliary_Sphere\\\"===A.PROJECTION&&(A.sphere=!0),A.datumCode=\\\"wgs84\\\"),\\\"_ferro\\\"===A.datumCode.slice(-6)&&(A.datumCode=A.datumCode.slice(0,-6)),\\\"_jakarta\\\"===A.datumCode.slice(-8)&&(A.datumCode=A.datumCode.slice(0,-8)),~A.datumCode.indexOf(\\\"belge\\\")&&(A.datumCode=\\\"rnb72\\\"),n.DATUM&&n.DATUM.SPHEROID&&(A.ellps=n.DATUM.SPHEROID.name.replace(\\\"_19\\\",\\\"\\\").replace(/[Cc]larke\\\\_18/,\\\"clrk\\\"),\\\"international\\\"===A.ellps.toLowerCase().slice(0,13)&&(A.ellps=\\\"intl\\\"),A.a=n.DATUM.SPHEROID.a,A.rf=parseFloat(n.DATUM.SPHEROID.rf,10)),n.DATUM&&n.DATUM.TOWGS84&&(A.datum_params=n.DATUM.TOWGS84),~A.datumCode.indexOf(\\\"osgb_1936\\\")&&(A.datumCode=\\\"osgb36\\\"),~A.datumCode.indexOf(\\\"osni_1952\\\")&&(A.datumCode=\\\"osni52\\\"),(~A.datumCode.indexOf(\\\"tm65\\\")||~A.datumCode.indexOf(\\\"geodetic_datum_of_1965\\\"))&&(A.datumCode=\\\"ire65\\\"),\\\"ch1903+\\\"===A.datumCode&&(A.datumCode=\\\"ch1903\\\"),~A.datumCode.indexOf(\\\"israel\\\")&&(A.datumCode=\\\"isr93\\\")),A.b&&!isFinite(A.b)&&(A.b=A.a),a(o,\\\"toMeter\\\");var r=a((function(t){return u(A,t)}),\\\"renamer\\\");[[\\\"standard_parallel_1\\\",\\\"Standard_Parallel_1\\\"],[\\\"standard_parallel_1\\\",\\\"Latitude of 1st standard parallel\\\"],[\\\"standard_parallel_2\\\",\\\"Standard_Parallel_2\\\"],[\\\"standard_parallel_2\\\",\\\"Latitude of 2nd standard parallel\\\"],[\\\"false_easting\\\",\\\"False_Easting\\\"],[\\\"false_easting\\\",\\\"False easting\\\"],[\\\"false-easting\\\",\\\"Easting at false origin\\\"],[\\\"false_northing\\\",\\\"False_Northing\\\"],[\\\"false_northing\\\",\\\"False northing\\\"],[\\\"false_northing\\\",\\\"Northing at false origin\\\"],[\\\"central_meridian\\\",\\\"Central_Meridian\\\"],[\\\"central_meridian\\\",\\\"Longitude of natural origin\\\"],[\\\"central_meridian\\\",\\\"Longitude of false origin\\\"],[\\\"latitude_of_origin\\\",\\\"Latitude_Of_Origin\\\"],[\\\"latitude_of_origin\\\",\\\"Central_Parallel\\\"],[\\\"latitude_of_origin\\\",\\\"Latitude of natural origin\\\"],[\\\"latitude_of_origin\\\",\\\"Latitude of false origin\\\"],[\\\"scale_factor\\\",\\\"Scale_Factor\\\"],[\\\"k0\\\",\\\"scale_factor\\\"],[\\\"latitude_of_center\\\",\\\"Latitude_Of_Center\\\"],[\\\"latitude_of_center\\\",\\\"Latitude_of_center\\\"],[\\\"lat0\\\",\\\"latitude_of_center\\\",d],[\\\"longitude_of_center\\\",\\\"Longitude_Of_Center\\\"],[\\\"longitude_of_center\\\",\\\"Longitude_of_center\\\"],[\\\"longc\\\",\\\"longitude_of_center\\\",d],[\\\"x0\\\",\\\"false_easting\\\",o],[\\\"y0\\\",\\\"false_northing\\\",o],[\\\"long0\\\",\\\"central_meridian\\\",d],[\\\"lat0\\\",\\\"latitude_of_origin\\\",d],[\\\"lat0\\\",\\\"standard_parallel_1\\\",d],[\\\"lat1\\\",\\\"standard_parallel_1\\\",d],[\\\"lat2\\\",\\\"standard_parallel_2\\\",d],[\\\"azimuth\\\",\\\"Azimuth\\\"],[\\\"alpha\\\",\\\"azimuth\\\",d],[\\\"srsCode\\\",\\\"name\\\"]].forEach(r),!A.long0&&A.longc&&(\\\"Albers_Conic_Equal_Area\\\"===A.projName||\\\"Lambert_Azimuthal_Equal_Area\\\"===A.projName)&&(A.long0=A.longc),A.lat_ts||!A.lat1||\\\"Stereographic_South_Pole\\\"!==A.projName&&\\\"Polar Stereographic (variant B)\\\"!==A.projName?!A.lat_ts&&A.lat0&&\\\"Polar_Stereographic\\\"===A.projName&&(A.lat_ts=A.lat0,A.lat0=d(A.lat0>0?90:-90)):(A.lat0=d(A.lat1>0?90:-90),A.lat_ts=A.lat1)}a(u,\\\"rename\\\"),a(d,\\\"d2r\\\"),a(I,\\\"cleanWKT\\\");var p=a((function(A){var t=h(A),e=t.shift(),i=t.shift();t.unshift([\\\"name\\\",i]),t.unshift([\\\"type\\\",e]);var s={};return c(t,s),I(s),s}),\\\"index\\\");t.exports=p})),p=n(((s,n)=>{function o(A){if(!A)return;let t=/PROJCS\\\\[\\\\\\\"([^\\\"]+)\\\\\\\"/.exec(A);if(!t)return;let e=t[1];if(e.match(/^WGS_1984_UTM_Zone_\\\\d{1,2}(N|S)$/)){let A=e.split(\\\"_\\\").pop(),t=A.substring(0,A.length-1),i=\\\"N\\\"==A.substring(A.length-1)?6:7;return Number.parseInt(\\\"32\\\"+i+t)}if(e.match(/^NAD_1983_UTM_Zone_\\\\d{1,2}N$/)){let A=e.split(\\\"_\\\").pop(),t=A.substring(0,A.length-1);return Number.parseInt(\\\"269\\\"+t)}}a(o,\\\"getCodeFromEsriWKT\\\"),void 0===(i=function(){return o}.call(t,e,t,A))||(A.exports=i),\\\"object\\\"==typeof n&&(n.exports=o,n.exports.default=o)})),_=n(((s,n)=>{function o(A){if(A.includes(\\\"+proj=utm\\\")&&A.includes(\\\"+zone=\\\")){let t=A.split(\\\" \\\"),e=t.find((A=>A.startsWith(\\\"+zone=\\\"))).split(\\\"=\\\")[1],i=A.includes(\\\"+south\\\"),s=t.find((A=>A.startsWith(\\\"+ellps=\\\")));if(s&&(s=s.split(\\\"=\\\")[1]),\\\"GRS80\\\"===s&&!1===i)return Number.parseInt(\\\"269\\\"+e);{let A=i?\\\"7\\\":\\\"6\\\";return Number.parseInt(\\\"32\\\"+A+e)}}}a(o,\\\"getCodeFromProjString\\\"),void 0===(i=function(){return o}.call(t,e,t,A))||(A.exports=i),\\\"object\\\"==typeof n&&(n.exports=o,n.exports.default=o)})),C=n(((A,t)=>{function e(A){let t,e,i=0;if(0===(A=(A=(A=(A=A.trim()).replace(/\\\\n/g,\\\" \\\")).replace(/\\\\t/g,\\\" \\\")).replace(/ +/g,\\\" \\\")).length)return i;let s=A.length;for(t=0;t<s;t++)e=A.charCodeAt(t),i=(i<<5)-i+e,i|=0;return i}a(e,\\\"hash32\\\"),t.exports=e,t.exports.default=e})),B=n(((s,n)=>{function o(A,{keywords:t}={}){let e=Object.keys(A).filter((A=>!/\\\\d+/.test(A)));if(!t){t=[];let e={};if(Array.isArray(A)){A.forEach((A=>{if(Array.isArray(A)&&A.length>=2&&\\\"string\\\"==typeof A[1]){let t=A[0];e[t]||(e[t]=0),e[t]++}}));for(let A in e)e[A]>0&&t.push(A)}}return e.forEach((t=>{A[t]=o(A[t])})),t.forEach((t=>{let e=[],i=[];A.forEach(((A,s)=>{Array.isArray(A)&&A[0]===t&&(e.push(s),i.push(A))})),i.sort(((A,t)=>(A=A[1].toString())<(t=t[1].toString())?-1:A>t?1:0)),i.forEach(((t,i)=>{A[e[i]]=t}))})),A}function r(A,t){let e,i=\\\"object\\\"==typeof t&&!0===t.raw,s=\\\"object\\\"==typeof t&&!0===t.debug;s&&console.log(\\\"[wktcrs] parse starting with\\\\n\\\",A),A=(A=A.replace(/[A-Z][A-Z\\\\d_]+\\\\[/gi,(function(A){return'[\\\"'+A.substr(0,A.length-1)+'\\\",'}))).replace(/, ?([A-Z][A-Z\\\\d_]+[,\\\\]])/gi,(function(A,t){let e=t.substr(0,t.length-1);return',\\\"'+(i?\\\"raw:\\\":\\\"\\\")+e+'\\\"'+t[t.length-1]})),\\\"object\\\"==typeof t&&!0===t.raw&&(A=A.replace(/, {0,2}(-?[\\\\.\\\\d]+)(?=,|\\\\])/g,(function(A,t){return',\\\"'+(i?\\\"raw:\\\":\\\"\\\")+t+'\\\"'}))),s&&console.log(\\\"[wktcrs] json'd wkt: '\\\"+A+\\\"'\\\");try{e=JSON.parse(A)}catch(t){throw console.error(`[wktcrs] failed to parse '${A}'`),t}function n(A,t){let e=A[0];A.forEach((function(t){Array.isArray(t)&&n(t,A)}));let i=\\\"MULTIPLE_\\\"+e;return i in t?t[i].push(A):e in t?(t[i]=[t[e],A],delete t[e]):t[e]=A,t}s&&console.log(\\\"[wktcrs] json parsed: '\\\"+A+\\\"'\\\"),a(n,\\\"process\\\");let o=n(e,[e]);return s&&console.log(\\\"[wktcrs] parse returning\\\",o),{data:o}}function l(A,t){Array.isArray(A)&&1==A.length&&Array.isArray(A[0])&&(A=A[0]);let[e,...i]=A;return{data:e+\\\"[\\\"+i.map((A=>{if(Array.isArray(A))return l(A,t).data;if(\\\"number\\\"==typeof A)return A.toString();if(\\\"string\\\"==typeof A)return A.startsWith(\\\"raw:\\\")?A.replace(\\\"raw:\\\",\\\"\\\"):'\\\"'+A+'\\\"';throw new Error('[wktcrs] unexpected attribute \\\"'+A+'\\\"')})).join(\\\",\\\")+\\\"]\\\"}}a(o,\\\"sort\\\"),a(r,\\\"parse\\\"),a(l,\\\"unparse\\\");var h={parse:r,unparse:l,sort:o};void 0===(i=function(){return h}.call(t,e,t,A))||(A.exports=i),\\\"object\\\"==typeof n&&(n.exports=h),\\\"object\\\"==typeof window&&(window.wktcrs=h),\\\"object\\\"==typeof self&&(self.wktcrs=h)})),w=n(((A,t)=>{var e=B();function i(A){let{data:t}=e.parse(A,{raw:!0});return e.sort(t),e.unparse(t,{raw:!0}).data}function s(A,{debug:t=!1}={debug:!1}){return A=i(A=(A=(A=(A=(A=(A=(A=(A=(A=(A=(A=(A=A.trim()).replace(/\\\\n/g,\\\" \\\")).replace(/\\\\t/g,\\\" \\\")).replace(/ +/g,\\\" \\\")).replace(/ /g,\\\"_\\\")).replace('GEOGCS[\\\"GCS_','GEOGCS[\\\"')).replace('DATUM[\\\"D_','DATUM[\\\"')).replace(\\\"Gauss_Kruger\\\",\\\"GK\\\")).replace(/\\\\.\\\\d{16,}/g,(A=>A.substr(0,16)))).replace(/\\\\d+\\\\.0[,\\\"'\\\\]]/g,(A=>A.substring(0,A.indexOf(\\\".\\\"))+A.charAt(A.length-1)))).replace(/[_|\\\"]1984[_|\\\"]/g,(A=>A.charAt(0)+\\\"84\\\"+A.charAt(A.length-1)))).replace(/\\\"[A-Za-z_\\\\d]+\\\"/g,(A=>'\\\"'+A.substring(1,A.length-1).toLowerCase()+'\\\"'))),t&&console.log('[get-epsg-code] wkt after cleaning: \\\"'+A+'\\\"'),A}a(i,\\\"sort_wkt\\\"),a(s,\\\"normalize_wkt\\\"),t.exports=s,t.exports.default=s})),E=n(((A,t)=>{var e=w();function i(A,{debug:t=!1}={debug:!1}){return e(A,{debug:t})}a(i,\\\"normalize_esriwkt\\\"),t.exports=i,t.exports.default=i})),y=n(((A,t)=>{function e(A,{debug:t=!1,remove_k1:e=!0,remove_no_defs:i=!0,remove_title:s=!0,remove_init:a=!0,remove_type:n=!0}={}){let o=(A=(A=A.trim()).replace(/ +/g,\\\" \\\")).split(/ ?\\\\+/g).filter((A=>\\\"\\\"!==A.trim())).sort();return e&&(o=o.filter((A=>\\\"k=1\\\"!==A))),i&&(o=o.filter((A=>\\\"no_defs\\\"!==A))),n&&(o=o.filter((A=>!A.startsWith(\\\"type\\\")))),a&&(o=o.filter((A=>!A.startsWith(\\\"init\\\")))),s&&(o=o.filter((A=>!A.startsWith(\\\"title\\\")))),A=o.map((A=>\\\"+\\\"+A)).join(\\\" \\\"),t&&console.log('normalized proj4 string\\\\nfrom \\\"'+arguments[0]+'\\\"\\\\nto \\\"'+A+'\\\"'),A}a(e,\\\"normalize_proj4\\\"),t.exports=e,t.exports.default=e})),Q=n(((s,n)=>{var o=[\\\"PROJECTEDCRS\\\",\\\"PROJCRS\\\",\\\"GEOGCS\\\",\\\"GEOCCS\\\",\\\"PROJCS\\\",\\\"LOCAL_CS\\\",\\\"GEODCRS\\\",\\\"GEODETICCRS\\\",\\\"GEODETICDATUM\\\",\\\"ENGCRS\\\",\\\"ENGINEERINGCRS\\\",\\\"PRIMEM\\\",\\\"DATUM\\\"];function r(A){if(!((A=A.trim()).startsWith(\\\"PROJCS[\\\")||A.startsWith(\\\"PROJCRS[\\\")||A.startsWith(\\\"GEOGCS[\\\")||A.startsWith(\\\"GEOGCRS[\\\")))return!1;for(let t=0;t<o.length;t++){let e=o[t];if(A.includes(e+\\\"[\\\"))return!0}}a(r,\\\"isWKT\\\"),void 0===(i=function(){return r}.call(t,e,t,A))||(A.exports=i),\\\"object\\\"==typeof n&&(n.exports=r,n.exports.default=r),\\\"object\\\"==typeof self&&(self.isWKT=r),\\\"object\\\"==typeof window&&(window.isWKT=r)})),m=n(((A,t)=>{t.exports={FORMATS:{ESRI_WKT:\\\"esriwkt\\\",GEOSERVER:\\\"geoserver\\\",MAPFILE:\\\"mapfile\\\",MAPNIK:\\\"mapnik\\\",OGC_GML:\\\"gml\\\",OGC_XML:\\\"xml\\\",OGC_WKT:\\\"wkt\\\",POSTGIS:\\\"postgis\\\",PROJ_4:\\\"proj4\\\",PROJ_4_JS:\\\"js\\\",PROJJSON:\\\"PROJJSON\\\",WKT_2:\\\"wkt2\\\"}}})),k=n(((A,t)=>{var e=Q(),i=B(),{FORMATS:s}=m(),{ESRI_WKT:n,GEOSERVER:o,MAPFILE:r,MAPNIK:l,OGC_GML:h,OGC_XML:g,OGC_WKT:c,POSTGIS:f,PROJ_4:u,PROJ_4_JS:d,PROJJSON:I,WKT_2:p}=s;function _(A,{debug:t=!1}={debug:!1}){if(A.startsWith(\\\"{\\\")&&A.includes(\\\"projjson\\\"))return I;if(e(A)){let t=i.parse(A.toUpperCase()).data;return\\\"AUTHORITY\\\"in(t.PROJCS||t.PROJCRS||t.GEOGCS||t.GEOGCRS)?c:\\\"ID\\\"in t?p:n}return A.includes(\\\"gml:ProjectedCRS\\\")||A.includes(\\\"gml:GeodeticCRS\\\")||A.includes(\\\"gml:GeographicCRS\\\")?A.includes(\\\"gml:srsID\\\")?g:h:A.startsWith(\\\"+\\\")&&A.includes(\\\"+proj=\\\")?u:A.startsWith(\\\"proj4.defs(\\\")?d:/^\\\\d{1,6}\\\\=(PROJCS|GEOGCS)/.test(A)?o:A.startsWith(\\\"PROJECTION\\\")&&A.endsWith(\\\"END\\\")?r:A.endsWith(\\\"</Map>\\\")?l:A.startsWith(\\\"INSERT\\\")?f:(t&&console.log('get-proj-type could not identify \\\"'+A+'\\\"'),\\\"SOMETHING ELSE\\\")}a(_,\\\"getProjType\\\"),t.exports=_,t.exports.default=_})),x=n(((A,t)=>{function e(A,{debug:t=!1}={debug:!1}){let e=A.indexOf(\\\":\\\")+1,i=A.indexOf('\\\"',e+2),s=A.substring(e,i);if(t&&console.log('parseProj4JS str: \\\"'+s+'\\\"'),s)return Number(s)}a(e,\\\"parseProj4JS\\\"),t.exports=e,t.exports.default=e})),M=n(((A,t)=>{t.exports={properties:{columns:[\\\"epsg_code\\\",\\\"esriwkt\\\",\\\"mapfile\\\",\\\"proj4\\\"],key:\\\"epsg_code\\\",dataType:\\\"int32\\\"},data:\\\"\\\"}})),b=o(),D=u(),v=g(),S=d(),G=I(),N=p(),R=_(),F=C(),L=E(),U=y(),O=k(),P=x(),{FORMATS:T}=m(),H=M(),J=a((A=>A.default||A),\\\"getDefault\\\"),q=[];function z(A){let t=b.toArrayBuffer(H.data),e=new Int32Array(t);A&&console.log(\\\"arr:\\\",e);let i=H.properties.columns.length,s=e.length/i;for(let A=0;A<s;A++){let t={};for(let s=0;s<i;s++)t[H.properties.columns[s]]=e[A*i+s];q.push(t)}return A&&console.log(\\\"[get-epsg-code] rows:\\\",q),q}function j(A,t,e=!1){if(!H.properties.columns.includes(t))throw new Error(\\\"[get-epsg-code] \\\"+t+\\\" not supported\\\");0===q.length&&z(e);let i=F(A);e&&console.log(\\\"[get-epsg-code] hashed:\\\",i);let s=q.filter((A=>A[t]===i));return e&&console.log(\\\"[get-epsg-code] found:\\\",s),s.map((A=>A.epsg_code))}a(z,\\\"_load_rows\\\"),a(j,\\\"lookup\\\");var{ESRI_WKT:K,GEOSERVER:Y,MAPFILE:V,MAPNIK:W,OGC_GML:X,OGC_XML:Z,OGC_WKT:$,POSTGIS:AA,PROJJSON:tA,PROJ_4:eA,PROJ_4_JS:iA,WKT_2:sA}=T;function aA(A,t){var e=!(!t||!t.debug)&&t.debug;\\\"string\\\"==typeof A&&(A=A.trim());let i=O(A,{debug:e});if(e&&console.log(\\\"dataType:\\\",i),i===$){let t=J(G)(A);if(e&&console.log(\\\"parsed:\\\",t),t.AUTHORITY){let A=t.AUTHORITY;return{type:i,codes:[Number(A.epsg||A.EPSG)]}}}else if(i===sA){let t=J(G)(A);if(e&&console.log(\\\"parsed:\\\",t),\\\"object\\\"==typeof t.ID&&\\\"number\\\"==typeof t.ID.EPSG)return{type:i,codes:[t.ID.EPSG]}}else{if(i==K){let t=N(A);return t?{type:i,codes:[t]}:{type:i,codes:j(A=L(A,{debug:e}),K,e)}}if(i===X){let t=J(v)(A,\\\"gml:identifier\\\",{debug:e}).inner;return{type:i,codes:[Number(t.replace(\\\"urn:ogc:def:crs:EPSG::\\\",\\\"\\\"))]}}if(i===Z)return{type:i,codes:[Number(J(D)(A,[\\\"gml:srsID\\\",\\\"gml:name\\\"],{debug:e}).inner)]};if(i===eA)return(A=U(A,{debug:e})).startsWith(\\\"+\\\")&&A.includes(\\\"+proj=utm\\\")?{type:i,codes:[R(A)]}:{type:i,codes:j(A,eA,e)};if(i===iA){let t=P(A);return{type:i,codes:t?[t]:[]}}if(i===Y)return{type:i,codes:[Number(A.match(/^\\\\d{1,6}/)[0])]};if(i===V){if(A.includes(\\\"init=epsg:\\\"))return{type:i,codes:[Number.parseInt(/(\\\"init\\\\=epsg:)(\\\\d{1,10})(\\\")/.exec(A)[2])]};if(A.includes('\\\"proj=utm\\\"')){let t=/(\\\"zone\\\\=)(\\\\d{1,2})(\\\")/.exec(A)[2],e=A.includes('\\\"south\\\"');if(A.includes(\\\"ellps=GRS80\\\")&&!1===e)return{type:i,codes:[Number.parseInt(\\\"269\\\"+t)]};{let A=e?\\\"7\\\":\\\"6\\\";return{type:i,codes:[Number.parseInt(\\\"32\\\"+A+t)]}}}return{type:i,codes:j(A,V,e)}}if(i===W){let t=v(A,\\\"Map\\\");return{type:i,codes:aA(S(t.outer,\\\"srs\\\")).codes}}if(i===AA)return{type:i,codes:[Number(A.substring(A.indexOf(\\\"values (\\\")+8,A.indexOf(\\\"EPSG\\\")-3).trim())]};if(i===tA){let t=JSON.parse(A);if(\\\"object\\\"==typeof t.id&&(\\\"EPSG\\\"===t.id.authority||!(\\\"authority\\\"in t.id))&&\\\"number\\\"==typeof t.id.code)return{type:i,codes:[t.id.code]}}}}function nA(A,t){let e=aA(A,t);if(e)return e.codes[0]}a(aA,\\\"getEPSGCodes\\\"),a(nA,\\\"getEPSGCode\\\"),typeof A.exports<\\\"u\\\"&&(A.exports=nA,A.exports.getEPSGCode=nA,A.exports.getEPSGCodes=aA,A.exports._load_rows=z),typeof window<\\\"u\\\"?(window.getEPSGCode=nA,window.getEPSGCodes=aA):typeof self<\\\"u\\\"&&(self.getEPSGCode=nA,self.getEPSGCodes=aA)},5876:A=>{function t(A){try{A[Symbol.iterator]=function(){return this}}catch(A){}}function e(A){A[\\\"@@iterator\\\"]=function(){return this}}function i(A){const i={next:A};return t(i),e(i),i}function s(A){try{return A.constructor.name.endsWith(\\\"Array\\\")}catch{return!1}}function a(A){try{return\\\"function\\\"==typeof A.next}catch{return!1}}function n(A){try{return\\\"@@iterator\\\"in A}catch{return!1}}function o(A){try{return Symbol.iterator in A.constructor.prototype}catch{return!1}}function r(A){try{return Symbol.iterator in A&&\\\"function\\\"==typeof A.next&&!1===A.propertyIsEnumerable(\\\"next\\\")}catch{return!1}}function l(A){const t=A[\\\"@@iterator\\\"];return a(t)?t:\\\"function\\\"==typeof t?t():void 0}function h(A){let t=0,e=A.length;return i((()=>t++<e?{value:A[t],done:!1}:{done:!0}))}function g(A){if(r(A))return A;if(o(A))return A[Symbol.iterator]();if(a(A))return i(A.next);if(n(A))return l(A);if(\\\"string\\\"==typeof A||s(A))return h(A);throw\\\"[iter-fun] unable to determine iterator\\\"}A.exports={addSymbolIterator:t,addSymbolIteratorFallback:e,isIterator:r,isArray:s,hasNext:a,hasSymbolIterator:o,hasIterator:n,getIterator:l,createIterator:h,getOrCreateIterator:g,wrapNextFunction:i,zip:function(A){return A=A.map(g),i((function(){const t=A.map((A=>A.next()));return t.every((({done:A})=>A))?{done:!0}:{done:!1,value:t.map((({value:A})=>A))}}))}}},7197:(A,t)=>{var e,i,s,a,n,o,r,l,h,g,c,f,u;\\n/* Copyright 2015-2021 Esri. Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 @preserve */i={defaultNoDataValue:-34027999387901484e22,decode:function(A,t){var e=(t=t||{}).encodedMaskData||null===t.encodedMaskData,r=o(A,t.inputOffset||0,e),l=null!==t.noDataValue?t.noDataValue:i.defaultNoDataValue,h=s(r,t.pixelType||Float32Array,t.encodedMaskData,l,t.returnMask),g={width:r.width,height:r.height,pixelData:h.resultPixels,minValue:h.minValue,maxValue:r.pixels.maxValue,noDataValue:l};return h.resultMask&&(g.maskData=h.resultMask),t.returnEncodedMask&&r.mask&&(g.encodedMaskData=r.mask.bitset?r.mask.bitset:null),t.returnFileInfo&&(g.fileInfo=a(r),t.computeUsedBitDepths&&(g.fileInfo.bitDepths=n(r))),g}},s=function(A,t,e,i,s){var a,n,o,l=0,h=A.pixels.numBlocksX,g=A.pixels.numBlocksY,c=Math.floor(A.width/h),f=Math.floor(A.height/g),u=2*A.maxZError,d=Number.MAX_VALUE;e=e||(A.mask?A.mask.bitset:null),n=new t(A.width*A.height),s&&e&&(o=new Uint8Array(A.width*A.height));for(var I,p,_=new Float32Array(c*f),C=0;C<=g;C++){var B=C!==g?f:A.height%g;if(0!==B)for(var w=0;w<=h;w++){var E=w!==h?c:A.width%h;if(0!==E){var y,Q,m,k,x=C*A.width*f+w*c,M=A.width-E,b=A.pixels.blocks[l];if(b.encoding<2?(0===b.encoding?y=b.rawData:(r(b.stuffedData,b.bitsPerPixel,b.numValidPixels,b.offset,u,_,A.pixels.maxValue),y=_),Q=0):m=2===b.encoding?0:b.offset,e)for(p=0;p<B;p++){for(7&x&&(k=e[x>>3],k<<=7&x),I=0;I<E;I++)7&x||(k=e[x>>3]),128&k?(o&&(o[x]=1),d=d>(a=b.encoding<2?y[Q++]:m)?a:d,n[x++]=a):(o&&(o[x]=0),n[x++]=i),k<<=1;x+=M}else if(b.encoding<2)for(p=0;p<B;p++){for(I=0;I<E;I++)d=d>(a=y[Q++])?a:d,n[x++]=a;x+=M}else for(d=d>m?m:d,p=0;p<B;p++){for(I=0;I<E;I++)n[x++]=m;x+=M}if(1===b.encoding&&Q!==b.numValidPixels)throw\\\"Block and Mask do not match\\\";l++}}}return{resultPixels:n,resultMask:o,minValue:d}},a=function(A){return{fileIdentifierString:A.fileIdentifierString,fileVersion:A.fileVersion,imageType:A.imageType,height:A.height,width:A.width,maxZError:A.maxZError,eofOffset:A.eofOffset,mask:A.mask?{numBlocksX:A.mask.numBlocksX,numBlocksY:A.mask.numBlocksY,numBytes:A.mask.numBytes,maxValue:A.mask.maxValue}:null,pixels:{numBlocksX:A.pixels.numBlocksX,numBlocksY:A.pixels.numBlocksY,numBytes:A.pixels.numBytes,maxValue:A.pixels.maxValue,noDataValue:A.noDataValue}}},n=function(A){for(var t=A.pixels.numBlocksX*A.pixels.numBlocksY,e={},i=0;i<t;i++){var s=A.pixels.blocks[i];0===s.encoding?e.float32=!0:1===s.encoding?e[s.bitsPerPixel]=!0:e[0]=!0}return Object.keys(e)},o=function(A,t,e){var i={},s=new Uint8Array(A,t,10);if(i.fileIdentifierString=String.fromCharCode.apply(null,s),\\\"CntZImage\\\"!==i.fileIdentifierString.trim())throw\\\"Unexpected file identifier string: \\\"+i.fileIdentifierString;t+=10;var a=new DataView(A,t,24);if(i.fileVersion=a.getInt32(0,!0),i.imageType=a.getInt32(4,!0),i.height=a.getUint32(8,!0),i.width=a.getUint32(12,!0),i.maxZError=a.getFloat64(16,!0),t+=24,!e)if(a=new DataView(A,t,16),i.mask={},i.mask.numBlocksY=a.getUint32(0,!0),i.mask.numBlocksX=a.getUint32(4,!0),i.mask.numBytes=a.getUint32(8,!0),i.mask.maxValue=a.getFloat32(12,!0),t+=16,i.mask.numBytes>0){var n=new Uint8Array(Math.ceil(i.width*i.height/8)),o=(a=new DataView(A,t,i.mask.numBytes)).getInt16(0,!0),r=2,l=0;do{if(o>0)for(;o--;)n[l++]=a.getUint8(r++);else{var h=a.getUint8(r++);for(o=-o;o--;)n[l++]=h}o=a.getInt16(r,!0),r+=2}while(r<i.mask.numBytes);if(-32768!==o||l<n.length)throw\\\"Unexpected end of mask RLE encoding\\\";i.mask.bitset=n,t+=i.mask.numBytes}else 0==(i.mask.numBytes|i.mask.numBlocksY|i.mask.maxValue)&&(i.mask.bitset=new Uint8Array(Math.ceil(i.width*i.height/8)));a=new DataView(A,t,16),i.pixels={},i.pixels.numBlocksY=a.getUint32(0,!0),i.pixels.numBlocksX=a.getUint32(4,!0),i.pixels.numBytes=a.getUint32(8,!0),i.pixels.maxValue=a.getFloat32(12,!0),t+=16;var g=i.pixels.numBlocksX,c=i.pixels.numBlocksY,f=g+(i.width%g>0?1:0),u=c+(i.height%c>0?1:0);i.pixels.blocks=new Array(f*u);for(var d=0,I=0;I<u;I++)for(var p=0;p<f;p++){var _=0,C=A.byteLength-t;a=new DataView(A,t,Math.min(10,C));var B={};i.pixels.blocks[d++]=B;var w=a.getUint8(0);if(_++,B.encoding=63&w,B.encoding>3)throw\\\"Invalid block encoding (\\\"+B.encoding+\\\")\\\";if(2!==B.encoding){if(0!==w&&2!==w){if(w>>=6,B.offsetType=w,2===w)B.offset=a.getInt8(1),_++;else if(1===w)B.offset=a.getInt16(1,!0),_+=2;else{if(0!==w)throw\\\"Invalid block offset type\\\";B.offset=a.getFloat32(1,!0),_+=4}if(1===B.encoding)if(w=a.getUint8(_),_++,B.bitsPerPixel=63&w,w>>=6,B.numValidPixelsType=w,2===w)B.numValidPixels=a.getUint8(_),_++;else if(1===w)B.numValidPixels=a.getUint16(_,!0),_+=2;else{if(0!==w)throw\\\"Invalid valid pixel count type\\\";B.numValidPixels=a.getUint32(_,!0),_+=4}}var E;if(t+=_,3!==B.encoding)if(0===B.encoding){var y=(i.pixels.numBytes-1)/4;if(y!==Math.floor(y))throw\\\"uncompressed block has invalid length\\\";E=new ArrayBuffer(4*y),new Uint8Array(E).set(new Uint8Array(A,t,4*y));var Q=new Float32Array(E);B.rawData=Q,t+=4*y}else if(1===B.encoding){var m=Math.ceil(B.numValidPixels*B.bitsPerPixel/8),k=Math.ceil(m/4);E=new ArrayBuffer(4*k),new Uint8Array(E).set(new Uint8Array(A,t,m)),B.stuffedData=new Uint32Array(E),t+=m}}else t++}return i.eofOffset=t,i},r=function(A,t,e,i,s,a,n){var o,r,l,h=(1<<t)-1,g=0,c=0,f=Math.ceil((n-i)/s),u=4*A.length-Math.ceil(t*e/8);for(A[A.length-1]<<=8*u,o=0;o<e;o++){if(0===c&&(l=A[g++],c=32),c>=t)r=l>>>c-t&h,c-=t;else{var d=t-c;r=(l&h)<<d&h,r+=(l=A[g++])>>>(c=32-d)}a[o]=r<f?i+r*s:n}return a},g=i,c=function(){\\\"use strict\\\";var A=function(A,t,e,i,s,a,n,o){var r,l,h,g,c,f=(1<<e)-1,u=0,d=0,I=4*A.length-Math.ceil(e*i/8);if(A[A.length-1]<<=8*I,s)for(r=0;r<i;r++)0===d&&(h=A[u++],d=32),d>=e?(l=h>>>d-e&f,d-=e):(l=(h&f)<<(g=e-d)&f,l+=(h=A[u++])>>>(d=32-g)),t[r]=s[l];else for(c=Math.ceil((o-a)/n),r=0;r<i;r++)0===d&&(h=A[u++],d=32),d>=e?(l=h>>>d-e&f,d-=e):(l=(h&f)<<(g=e-d)&f,l+=(h=A[u++])>>>(d=32-g)),t[r]=l<c?a+l*n:o},t=function(A,t,e,i,s,a){var n,o=(1<<t)-1,r=0,l=0,h=0,g=0,c=0,f=[],u=4*A.length-Math.ceil(t*e/8);A[A.length-1]<<=8*u;var d=Math.ceil((a-i)/s);for(l=0;l<e;l++)0===g&&(n=A[r++],g=32),g>=t?(c=n>>>g-t&o,g-=t):(c=(n&o)<<(h=t-g)&o,c+=(n=A[r++])>>>(g=32-h)),f[l]=c<d?i+c*s:a;return f.unshift(i),f},e=function(A,t,e,i,s,a,n,o){var r,l,h,g,c=(1<<e)-1,f=0,u=0,d=0;if(s)for(r=0;r<i;r++)0===u&&(h=A[f++],u=32,d=0),u>=e?(l=h>>>d&c,u-=e,d+=e):(l=h>>>d&c,u=32-(g=e-u),l|=((h=A[f++])&(1<<g)-1)<<e-g,d=g),t[r]=s[l];else{var I=Math.ceil((o-a)/n);for(r=0;r<i;r++)0===u&&(h=A[f++],u=32,d=0),u>=e?(l=h>>>d&c,u-=e,d+=e):(l=h>>>d&c,u=32-(g=e-u),l|=((h=A[f++])&(1<<g)-1)<<e-g,d=g),t[r]=l<I?a+l*n:o}return t},i=function(A,t,e,i,s,a){var n,o=(1<<t)-1,r=0,l=0,h=0,g=0,c=0,f=0,u=[],d=Math.ceil((a-i)/s);for(l=0;l<e;l++)0===g&&(n=A[r++],g=32,f=0),g>=t?(c=n>>>f&o,g-=t,f+=t):(c=n>>>f&o,g=32-(h=t-g),c|=((n=A[r++])&(1<<h)-1)<<t-h,f=h),u[l]=c<d?i+c*s:a;return u.unshift(i),u},s=function(A,t,e,i){var s,a,n,o,r=(1<<e)-1,l=0,h=0,g=4*A.length-Math.ceil(e*i/8);for(A[A.length-1]<<=8*g,s=0;s<i;s++)0===h&&(n=A[l++],h=32),h>=e?(a=n>>>h-e&r,h-=e):(a=(n&r)<<(o=e-h)&r,a+=(n=A[l++])>>>(h=32-o)),t[s]=a;return t},a=function(A,t,e,i){var s,a,n,o,r=(1<<e)-1,l=0,h=0,g=0;for(s=0;s<i;s++)0===h&&(n=A[l++],h=32,g=0),h>=e?(a=n>>>g&r,h-=e,g+=e):(a=n>>>g&r,h=32-(o=e-h),a|=((n=A[l++])&(1<<o)-1)<<e-o,g=o),t[s]=a;return t},n={HUFFMAN_LUT_BITS_MAX:12,computeChecksumFletcher32:function(A){for(var t=65535,e=65535,i=A.length,s=Math.floor(i/2),a=0;s;){var n=s>=359?359:s;s-=n;do{t+=A[a++]<<8,e+=t+=A[a++]}while(--n);t=(65535&t)+(t>>>16),e=(65535&e)+(e>>>16)}return 1&i&&(e+=t+=A[a]<<8),((e=(65535&e)+(e>>>16))<<16|(t=(65535&t)+(t>>>16)))>>>0},readHeaderInfo:function(A,t){var e=t.ptr,i=new Uint8Array(A,e,6),s={};if(s.fileIdentifierString=String.fromCharCode.apply(null,i),0!==s.fileIdentifierString.lastIndexOf(\\\"Lerc2\\\",0))throw\\\"Unexpected file identifier string (expect Lerc2 ): \\\"+s.fileIdentifierString;e+=6;var a,n=new DataView(A,e,8),o=n.getInt32(0,!0);if(s.fileVersion=o,e+=4,o>=3&&(s.checksum=n.getUint32(4,!0),e+=4),n=new DataView(A,e,12),s.height=n.getUint32(0,!0),s.width=n.getUint32(4,!0),e+=8,o>=4?(s.numDims=n.getUint32(8,!0),e+=4):s.numDims=1,n=new DataView(A,e,40),s.numValidPixel=n.getUint32(0,!0),s.microBlockSize=n.getInt32(4,!0),s.blobSize=n.getInt32(8,!0),s.imageType=n.getInt32(12,!0),s.maxZError=n.getFloat64(16,!0),s.zMin=n.getFloat64(24,!0),s.zMax=n.getFloat64(32,!0),e+=40,t.headerInfo=s,t.ptr=e,o>=3&&(a=o>=4?52:48,this.computeChecksumFletcher32(new Uint8Array(A,e-a,s.blobSize-14))!==s.checksum))throw\\\"Checksum failed.\\\";return!0},checkMinMaxRanges:function(A,t){var e=t.headerInfo,i=this.getDataTypeArray(e.imageType),s=e.numDims*this.getDataTypeSize(e.imageType),a=this.readSubArray(A,t.ptr,i,s),n=this.readSubArray(A,t.ptr+s,i,s);t.ptr+=2*s;var o,r=!0;for(o=0;o<e.numDims;o++)if(a[o]!==n[o]){r=!1;break}return e.minValues=a,e.maxValues=n,r},readSubArray:function(A,t,e,i){var s;if(e===Uint8Array)s=new Uint8Array(A,t,i);else{var a=new ArrayBuffer(i);new Uint8Array(a).set(new Uint8Array(A,t,i)),s=new e(a)}return s},readMask:function(A,t){var e,i,s=t.ptr,a=t.headerInfo,n=a.width*a.height,o=a.numValidPixel,r=new DataView(A,s,4),l={};if(l.numBytes=r.getUint32(0,!0),s+=4,(0===o||n===o)&&0!==l.numBytes)throw\\\"invalid mask\\\";if(0===o)e=new Uint8Array(Math.ceil(n/8)),l.bitset=e,i=new Uint8Array(n),t.pixels.resultMask=i,s+=l.numBytes;else if(l.numBytes>0){e=new Uint8Array(Math.ceil(n/8));var h=(r=new DataView(A,s,l.numBytes)).getInt16(0,!0),g=2,c=0,f=0;do{if(h>0)for(;h--;)e[c++]=r.getUint8(g++);else for(f=r.getUint8(g++),h=-h;h--;)e[c++]=f;h=r.getInt16(g,!0),g+=2}while(g<l.numBytes);if(-32768!==h||c<e.length)throw\\\"Unexpected end of mask RLE encoding\\\";i=new Uint8Array(n);var u=0,d=0;for(d=0;d<n;d++)7&d?(u=e[d>>3],u<<=7&d):u=e[d>>3],128&u&&(i[d]=1);t.pixels.resultMask=i,l.bitset=e,s+=l.numBytes}return t.ptr=s,t.mask=l,!0},readDataOneSweep:function(A,t,e,i){var s,a=t.ptr,o=t.headerInfo,r=o.numDims,l=o.width*o.height,h=o.imageType,g=o.numValidPixel*n.getDataTypeSize(h)*r,c=t.pixels.resultMask;if(e===Uint8Array)s=new Uint8Array(A,a,g);else{var f=new ArrayBuffer(g);new Uint8Array(f).set(new Uint8Array(A,a,g)),s=new e(f)}if(s.length===l*r)t.pixels.resultPixels=i?n.swapDimensionOrder(s,l,r,e,!0):s;else{t.pixels.resultPixels=new e(l*r);var u=0,d=0,I=0,p=0;if(r>1){if(i){for(d=0;d<l;d++)if(c[d])for(p=d,I=0;I<r;I++,p+=l)t.pixels.resultPixels[p]=s[u++]}else for(d=0;d<l;d++)if(c[d])for(p=d*r,I=0;I<r;I++)t.pixels.resultPixels[p+I]=s[u++]}else for(d=0;d<l;d++)c[d]&&(t.pixels.resultPixels[d]=s[u++])}return a+=g,t.ptr=a,!0},readHuffmanTree:function(A,t){var e=this.HUFFMAN_LUT_BITS_MAX,i=new DataView(A,t.ptr,16);if(t.ptr+=16,i.getInt32(0,!0)<2)throw\\\"unsupported Huffman version\\\";var s=i.getInt32(4,!0),a=i.getInt32(8,!0),r=i.getInt32(12,!0);if(a>=r)return!1;var l=new Uint32Array(r-a);n.decodeBits(A,t,l);var h,g,c,f,u=[];for(h=a;h<r;h++)u[g=h-(h<s?0:s)]={first:l[h-a],second:null};var d=A.byteLength-t.ptr,I=Math.ceil(d/4),p=new ArrayBuffer(4*I);new Uint8Array(p).set(new Uint8Array(A,t.ptr,d));var _,C=new Uint32Array(p),B=0,w=0;for(_=C[0],h=a;h<r;h++)(f=u[g=h-(h<s?0:s)].first)>0&&(u[g].second=_<<B>>>32-f,32-B>=f?32===(B+=f)&&(B=0,_=C[++w]):(B+=f-32,_=C[++w],u[g].second|=_>>>32-B));var E=0,y=0,Q=new o;for(h=0;h<u.length;h++)void 0!==u[h]&&(E=Math.max(E,u[h].first));y=E>=e?e:E;var m,k,x,M,b,D=[];for(h=a;h<r;h++)if((f=u[g=h-(h<s?0:s)].first)>0)if(m=[f,g],f<=y)for(k=u[g].second<<y-f,x=1<<y-f,c=0;c<x;c++)D[k|c]=m;else for(k=u[g].second,b=Q,M=f-1;M>=0;M--)k>>>M&1?(b.right||(b.right=new o),b=b.right):(b.left||(b.left=new o),b=b.left),0!==M||b.val||(b.val=m[1]);return{decodeLut:D,numBitsLUTQick:y,numBitsLUT:E,tree:Q,stuffedData:C,srcPtr:w,bitPos:B}},readHuffman:function(A,t,e,i){var s,a,o,r,l,h,g,c,f,u=t.headerInfo.numDims,d=t.headerInfo.height,I=t.headerInfo.width,p=I*d,_=this.readHuffmanTree(A,t),C=_.decodeLut,B=_.tree,w=_.stuffedData,E=_.srcPtr,y=_.bitPos,Q=_.numBitsLUTQick,m=_.numBitsLUT,k=0===t.headerInfo.imageType?128:0,x=t.pixels.resultMask,M=0;y>0&&(E++,y=0);var b,D=w[E],v=1===t.encodeMode,S=new e(p*u),G=S;if(u<2||v){for(b=0;b<u;b++)if(u>1&&(G=new e(S.buffer,p*b,p),M=0),t.headerInfo.numValidPixel===I*d)for(c=0,h=0;h<d;h++)for(g=0;g<I;g++,c++){if(a=0,l=r=D<<y>>>32-Q,32-y<Q&&(l=r|=w[E+1]>>>64-y-Q),C[l])a=C[l][1],y+=C[l][0];else for(l=r=D<<y>>>32-m,32-y<m&&(l=r|=w[E+1]>>>64-y-m),s=B,f=0;f<m;f++)if(!(s=r>>>m-f-1&1?s.right:s.left).left&&!s.right){a=s.val,y=y+f+1;break}y>=32&&(y-=32,D=w[++E]),o=a-k,v?(o+=g>0?M:h>0?G[c-I]:M,o&=255,G[c]=o,M=o):G[c]=o}else for(c=0,h=0;h<d;h++)for(g=0;g<I;g++,c++)if(x[c]){if(a=0,l=r=D<<y>>>32-Q,32-y<Q&&(l=r|=w[E+1]>>>64-y-Q),C[l])a=C[l][1],y+=C[l][0];else for(l=r=D<<y>>>32-m,32-y<m&&(l=r|=w[E+1]>>>64-y-m),s=B,f=0;f<m;f++)if(!(s=r>>>m-f-1&1?s.right:s.left).left&&!s.right){a=s.val,y=y+f+1;break}y>=32&&(y-=32,D=w[++E]),o=a-k,v?(g>0&&x[c-1]?o+=M:h>0&&x[c-I]?o+=G[c-I]:o+=M,o&=255,G[c]=o,M=o):G[c]=o}}else for(c=0,h=0;h<d;h++)for(g=0;g<I;g++)if(c=h*I+g,!x||x[c])for(b=0;b<u;b++,c+=p){if(a=0,l=r=D<<y>>>32-Q,32-y<Q&&(l=r|=w[E+1]>>>64-y-Q),C[l])a=C[l][1],y+=C[l][0];else for(l=r=D<<y>>>32-m,32-y<m&&(l=r|=w[E+1]>>>64-y-m),s=B,f=0;f<m;f++)if(!(s=r>>>m-f-1&1?s.right:s.left).left&&!s.right){a=s.val,y=y+f+1;break}y>=32&&(y-=32,D=w[++E]),o=a-k,G[c]=o}t.ptr=t.ptr+4*(E+1)+(y>0?4:0),t.pixels.resultPixels=S,u>1&&!i&&(t.pixels.resultPixels=n.swapDimensionOrder(S,p,u,e))},decodeBits:function(n,o,r,l,h){var g=o.headerInfo,c=g.fileVersion,f=0,u=n.byteLength-o.ptr>=5?5:n.byteLength-o.ptr,d=new DataView(n,o.ptr,u),I=d.getUint8(0);f++;var p=I>>6,_=0===p?4:3-p,C=(32&I)>0,B=31&I,w=0;if(1===_)w=d.getUint8(f),f++;else if(2===_)w=d.getUint16(f,!0),f+=2;else{if(4!==_)throw\\\"Invalid valid pixel count type\\\";w=d.getUint32(f,!0),f+=4}var E,y,Q,m,k,x,M,b,D,v=2*g.maxZError,S=g.numDims>1?g.maxValues[h]:g.zMax;if(C){for(o.counter.lut++,b=d.getUint8(f),f++,m=Math.ceil((b-1)*B/8),k=Math.ceil(m/4),y=new ArrayBuffer(4*k),Q=new Uint8Array(y),o.ptr+=f,Q.set(new Uint8Array(n,o.ptr,m)),M=new Uint32Array(y),o.ptr+=m,D=0;b-1>>>D;)D++;m=Math.ceil(w*D/8),k=Math.ceil(m/4),y=new ArrayBuffer(4*k),(Q=new Uint8Array(y)).set(new Uint8Array(n,o.ptr,m)),E=new Uint32Array(y),o.ptr+=m,x=c>=3?i(M,B,b-1,l,v,S):t(M,B,b-1,l,v,S),c>=3?e(E,r,D,w,x):A(E,r,D,w,x)}else o.counter.bitstuffer++,D=B,o.ptr+=f,D>0&&(m=Math.ceil(w*D/8),k=Math.ceil(m/4),y=new ArrayBuffer(4*k),(Q=new Uint8Array(y)).set(new Uint8Array(n,o.ptr,m)),E=new Uint32Array(y),o.ptr+=m,c>=3?null==l?a(E,r,D,w):e(E,r,D,w,!1,l,v,S):null==l?s(E,r,D,w):A(E,r,D,w,!1,l,v,S))},readTiles:function(A,t,e,i){var s=t.headerInfo,a=s.width,o=s.height,r=a*o,l=s.microBlockSize,h=s.imageType,g=n.getDataTypeSize(h),c=Math.ceil(a/l),f=Math.ceil(o/l);t.pixels.numBlocksY=f,t.pixels.numBlocksX=c,t.pixels.ptr=0;var u,d,I,p,_,C,B,w,E,y,Q=0,m=0,k=0,x=0,M=0,b=0,D=0,v=0,S=0,G=0,N=0,R=0,F=0,L=0,U=0,O=new e(l*l),P=o%l||l,T=a%l||l,H=s.numDims,J=t.pixels.resultMask,q=t.pixels.resultPixels,z=s.fileVersion>=5?14:15,j=s.zMax;for(k=0;k<f;k++)for(M=k!==f-1?l:P,x=0;x<c;x++)for(G=k*a*l+x*l,N=a-(b=x!==c-1?l:T),w=0;w<H;w++){if(H>1?(y=q,G=k*a*l+x*l,q=new e(t.pixels.resultPixels.buffer,r*w*g,r),j=s.maxValues[w]):y=null,D=A.byteLength-t.ptr,d={},U=0,v=(u=new DataView(A,t.ptr,Math.min(10,D))).getUint8(0),U++,E=s.fileVersion>=5?4&v:0,S=v>>6&255,(v>>2&z)!=(x*l>>3&z))throw\\\"integrity issue\\\";if(E&&0===w)throw\\\"integrity issue\\\";if((_=3&v)>3)throw t.ptr+=U,\\\"Invalid block encoding (\\\"+_+\\\")\\\";if(2!==_)if(0===_){if(E)throw\\\"integrity issue\\\";if(t.counter.uncompressed++,t.ptr+=U,R=(R=M*b*g)<(F=A.byteLength-t.ptr)?R:F,I=new ArrayBuffer(R%g==0?R:R+g-R%g),new Uint8Array(I).set(new Uint8Array(A,t.ptr,R)),p=new e(I),L=0,J)for(Q=0;Q<M;Q++){for(m=0;m<b;m++)J[G]&&(q[G]=p[L++]),G++;G+=N}else for(Q=0;Q<M;Q++){for(m=0;m<b;m++)q[G++]=p[L++];G+=N}t.ptr+=L*g}else if(C=n.getDataTypeUsed(E&&h<6?4:h,S),B=n.getOnePixel(d,U,C,u),U+=n.getDataTypeSize(C),3===_)if(t.ptr+=U,t.counter.constantoffset++,J)for(Q=0;Q<M;Q++){for(m=0;m<b;m++)J[G]&&(q[G]=E?Math.min(j,y[G]+B):B),G++;G+=N}else for(Q=0;Q<M;Q++){for(m=0;m<b;m++)q[G]=E?Math.min(j,y[G]+B):B,G++;G+=N}else if(t.ptr+=U,n.decodeBits(A,t,O,B,w),U=0,E)if(J)for(Q=0;Q<M;Q++){for(m=0;m<b;m++)J[G]&&(q[G]=O[U++]+y[G]),G++;G+=N}else for(Q=0;Q<M;Q++){for(m=0;m<b;m++)q[G]=O[U++]+y[G],G++;G+=N}else if(J)for(Q=0;Q<M;Q++){for(m=0;m<b;m++)J[G]&&(q[G]=O[U++]),G++;G+=N}else for(Q=0;Q<M;Q++){for(m=0;m<b;m++)q[G++]=O[U++];G+=N}else{if(E)if(J)for(Q=0;Q<M;Q++)for(m=0;m<b;m++)J[G]&&(q[G]=y[G]),G++;else for(Q=0;Q<M;Q++)for(m=0;m<b;m++)q[G]=y[G],G++;t.counter.constant++,t.ptr+=U}}H>1&&!i&&(t.pixels.resultPixels=n.swapDimensionOrder(t.pixels.resultPixels,r,H,e))},formatFileInfo:function(A){return{fileIdentifierString:A.headerInfo.fileIdentifierString,fileVersion:A.headerInfo.fileVersion,imageType:A.headerInfo.imageType,height:A.headerInfo.height,width:A.headerInfo.width,numValidPixel:A.headerInfo.numValidPixel,microBlockSize:A.headerInfo.microBlockSize,blobSize:A.headerInfo.blobSize,maxZError:A.headerInfo.maxZError,pixelType:n.getPixelType(A.headerInfo.imageType),eofOffset:A.eofOffset,mask:A.mask?{numBytes:A.mask.numBytes}:null,pixels:{numBlocksX:A.pixels.numBlocksX,numBlocksY:A.pixels.numBlocksY,maxValue:A.headerInfo.zMax,minValue:A.headerInfo.zMin,noDataValue:A.noDataValue}}},constructConstantSurface:function(A,t){var e=A.headerInfo.zMax,i=A.headerInfo.zMin,s=A.headerInfo.maxValues,a=A.headerInfo.numDims,n=A.headerInfo.height*A.headerInfo.width,o=0,r=0,l=0,h=A.pixels.resultMask,g=A.pixels.resultPixels;if(h)if(a>1){if(t)for(o=0;o<a;o++)for(l=o*n,e=s[o],r=0;r<n;r++)h[r]&&(g[l+r]=e);else for(r=0;r<n;r++)if(h[r])for(l=r*a,o=0;o<a;o++)g[l+a]=s[o]}else for(r=0;r<n;r++)h[r]&&(g[r]=e);else if(a>1&&i!==e)if(t)for(o=0;o<a;o++)for(l=o*n,e=s[o],r=0;r<n;r++)g[l+r]=e;else for(r=0;r<n;r++)for(l=r*a,o=0;o<a;o++)g[l+o]=s[o];else for(r=0;r<n*a;r++)g[r]=e},getDataTypeArray:function(A){var t;switch(A){case 0:t=Int8Array;break;case 1:t=Uint8Array;break;case 2:t=Int16Array;break;case 3:t=Uint16Array;break;case 4:t=Int32Array;break;case 5:t=Uint32Array;break;case 6:default:t=Float32Array;break;case 7:t=Float64Array}return t},getPixelType:function(A){var t;switch(A){case 0:t=\\\"S8\\\";break;case 1:t=\\\"U8\\\";break;case 2:t=\\\"S16\\\";break;case 3:t=\\\"U16\\\";break;case 4:t=\\\"S32\\\";break;case 5:t=\\\"U32\\\";break;case 6:default:t=\\\"F32\\\";break;case 7:t=\\\"F64\\\"}return t},isValidPixelValue:function(A,t){if(null==t)return!1;var e;switch(A){case 0:e=t>=-128&&t<=127;break;case 1:e=t>=0&&t<=255;break;case 2:e=t>=-32768&&t<=32767;break;case 3:e=t>=0&&t<=65536;break;case 4:e=t>=-2147483648&&t<=2147483647;break;case 5:e=t>=0&&t<=4294967296;break;case 6:e=t>=-34027999387901484e22&&t<=34027999387901484e22;break;case 7:e=t>=-17976931348623157e292&&t<=17976931348623157e292;break;default:e=!1}return e},getDataTypeSize:function(A){var t=0;switch(A){case 0:case 1:t=1;break;case 2:case 3:t=2;break;case 4:case 5:case 6:t=4;break;case 7:t=8;break;default:t=A}return t},getDataTypeUsed:function(A,t){var e=A;switch(A){case 2:case 4:e=A-t;break;case 3:case 5:e=A-2*t;break;case 6:e=0===t?A:1===t?2:1;break;case 7:e=0===t?A:A-2*t+1;break;default:e=A}return e},getOnePixel:function(A,t,e,i){var s=0;switch(e){case 0:s=i.getInt8(t);break;case 1:s=i.getUint8(t);break;case 2:s=i.getInt16(t,!0);break;case 3:s=i.getUint16(t,!0);break;case 4:s=i.getInt32(t,!0);break;case 5:s=i.getUInt32(t,!0);break;case 6:s=i.getFloat32(t,!0);break;case 7:s=i.getFloat64(t,!0);break;default:throw\\\"the decoder does not understand this pixel type\\\"}return s},swapDimensionOrder:function(A,t,e,i,s){var a=0,n=0,o=0,r=0,l=A;if(e>1)if(l=new i(t*e),s)for(a=0;a<t;a++)for(r=a,o=0;o<e;o++,r+=t)l[r]=A[n++];else for(a=0;a<t;a++)for(r=a,o=0;o<e;o++,r+=t)l[n++]=A[r];return l}},o=function(A,t,e){this.val=A,this.left=t,this.right=e};return{decode:function(A,t){var e=(t=t||{}).noDataValue,i=0,s={};if(s.ptr=t.inputOffset||0,s.pixels={},n.readHeaderInfo(A,s)){var a=s.headerInfo,o=a.fileVersion,r=n.getDataTypeArray(a.imageType);if(o>5)throw\\\"unsupported lerc version 2.\\\"+o;n.readMask(A,s),a.numValidPixel===a.width*a.height||s.pixels.resultMask||(s.pixels.resultMask=t.maskData);var l=a.width*a.height;s.pixels.resultPixels=new r(l*a.numDims),s.counter={onesweep:0,uncompressed:0,lut:0,bitstuffer:0,constant:0,constantoffset:0};var h,g=!t.returnPixelInterleavedDims;if(0!==a.numValidPixel)if(a.zMax===a.zMin)n.constructConstantSurface(s,g);else if(o>=4&&n.checkMinMaxRanges(A,s))n.constructConstantSurface(s,g);else{var c=new DataView(A,s.ptr,2),f=c.getUint8(0);if(s.ptr++,f)n.readDataOneSweep(A,s,r,g);else if(o>1&&a.imageType<=1&&Math.abs(a.maxZError-.5)<1e-5){var u=c.getUint8(1);if(s.ptr++,s.encodeMode=u,u>2||o<4&&u>1)throw\\\"Invalid Huffman flag \\\"+u;u?n.readHuffman(A,s,r,g):n.readTiles(A,s,r,g)}else n.readTiles(A,s,r,g)}s.eofOffset=s.ptr,t.inputOffset?(h=s.headerInfo.blobSize+t.inputOffset-s.ptr,Math.abs(h)>=1&&(s.eofOffset=t.inputOffset+s.headerInfo.blobSize)):(h=s.headerInfo.blobSize-s.ptr,Math.abs(h)>=1&&(s.eofOffset=s.headerInfo.blobSize));var d={width:a.width,height:a.height,pixelData:s.pixels.resultPixels,minValue:a.zMin,maxValue:a.zMax,validPixelCount:a.numValidPixel,dimCount:a.numDims,dimStats:{minValues:a.minValues,maxValues:a.maxValues},maskData:s.pixels.resultMask};if(s.pixels.resultMask&&n.isValidPixelValue(a.imageType,e)){var I=s.pixels.resultMask;for(i=0;i<l;i++)I[i]||(d.pixelData[i]=e);d.noDataValue=e}return s.noDataValue=e,t.returnFileInfo&&(d.fileInfo=n.formatFileInfo(s)),d}},getBandCount:function(A){for(var t=0,e=0,i={ptr:0,pixels:{}};e<A.byteLength-58;)n.readHeaderInfo(A,i),e+=i.headerInfo.blobSize,t++,i.ptr=e;return t}}}(),l=new ArrayBuffer(4),h=new Uint8Array(l),new Uint32Array(l)[0]=1,f=1===h[0],u={decode:function(A,t){if(!f)throw\\\"Big endian system is not supported.\\\";var e,i,s=(t=t||{}).inputOffset||0,a=new Uint8Array(A,s,10),n=String.fromCharCode.apply(null,a);if(\\\"CntZImage\\\"===n.trim())e=g,i=1;else{if(\\\"Lerc2\\\"!==n.substring(0,5))throw\\\"Unexpected file identifier string: \\\"+n;e=c,i=2}for(var o,r,l,h,u,d,I=0,p=A.byteLength-10,_=[],C={width:0,height:0,pixels:[],pixelType:t.pixelType,mask:null,statistics:[]},B=0;s<p;){var w=e.decode(A,{inputOffset:s,encodedMaskData:o,maskData:l,returnMask:0===I,returnEncodedMask:0===I,returnFileInfo:!0,returnPixelInterleavedDims:t.returnPixelInterleavedDims,pixelType:t.pixelType||null,noDataValue:t.noDataValue||null});s=w.fileInfo.eofOffset,l=w.maskData,0===I&&(o=w.encodedMaskData,C.width=w.width,C.height=w.height,C.dimCount=w.dimCount||1,C.pixelType=w.pixelType||w.fileInfo.pixelType,C.mask=l),i>1&&(l&&_.push(l),w.fileInfo.mask&&w.fileInfo.mask.numBytes>0&&B++),I++,C.pixels.push(w.pixelData),C.statistics.push({minValue:w.minValue,maxValue:w.maxValue,noDataValue:w.noDataValue,dimStats:w.dimStats})}if(i>1&&B>1){for(d=C.width*C.height,C.bandMasks=_,(l=new Uint8Array(d)).set(_[0]),h=1;h<_.length;h++)for(r=_[h],u=0;u<d;u++)l[u]=l[u]&r[u];C.maskData=l}return C}},void 0===(e=function(){return u}.apply(t,[]))||(A.exports=e)},8619:A=>{function t(A){const t={};let e=0;for(let i of A)e++,i in t?t[i][1]++:t[i]=[i,1];return{counts:t,total:e}}A.exports=t,A.exports.default=t},9436:(A,t,e)=>{var i;const s=e(8619),a=e(9616);function n(A,{no_data:t,precise:e=!1}={no_data:void 0,precise:!1}){const{counts:i,total:n}=s(A);let o=n;if(\\\"NaN\\\"in i&&(o-=i.NaN[1],delete i.NaN),\\\"undefined\\\"in i&&(o-=i[void 0][1],delete i[void 0]),\\\"null\\\"in i&&(o-=i.null[1],delete i.null),\\\"\\\"in i&&(o-=i[\\\"\\\"][1],delete i[\\\"\\\"]),Array.isArray(t))for(let A=0;A<t.length;A++){const e=t[A];e in i&&(o-=i[e][1],delete i[e])}else t in i&&(o-=i[t][1],delete i[t]);const r=Object.values(i).sort(((A,t)=>A[0]-t[0])),l=o/2,h=r.length;if(0!==h){if(1===h)return e?r[0][0].toString():r[0][0];{let A=0;if(n%2==0)for(let t=0;t<h;t++){const[i,s]=r[t];if(A+=s,A>l)return A-s===l?a(r[t-1][0],i,{precise:e}):e?i.toString():i}else for(let t=0;t<h;t++){const[i,s]=r[t];if(A+=s,A>l)return e?i.toString():i}}}}const o={calculate:n};void 0===(i=function(){return o}.call(t,e,t,A))||(A.exports=i),A.exports=o,A.exports.default={calculate:n},\\\"object\\\"==typeof window&&(window.mediana=o),\\\"object\\\"==typeof self&&(self.mediana=o)},9616:(A,t,e)=>{const i=e(5245),s=e(9235);function a(A,t,{precise:e=!1}={precise:!1}){return e?s(i(A.toString(),t.toString()),\\\"2\\\"):(A+t)/2}A.exports=a,A.exports.default=a},9657:(A,t,e)=>{\\\"use strict\\\";const i=e(1199);function s(A){return\\\"-\\\"===(A=i(A))[0]?A.substring(1):A}A.exports=s,A.exports.default=s},5245:(A,t,e)=>{\\\"use strict\\\";const i=e(581),s=e(1199),a=e(8786),n=e(2143),o=e(6307);function r(A,t,{infinity_minus_infinity:e=\\\"NaN\\\"}={}){A=s(A),t=s(t);const r=\\\"-\\\"!==A[0],l=\\\"-\\\"!==t[0],h=!r,g=!l,c=o(A),f=o(t);if(c&&f)return r&&l?\\\"Infinity\\\":h&g?\\\"-Infinity\\\":e;if(c)return r?\\\"Infinity\\\":\\\"-Infinity\\\";if(f)return l?\\\"Infinity\\\":\\\"-Infinity\\\";if(r&&l)return a(A,t);if(h&&g)return\\\"-\\\"+a(A.substring(1),t.substring(1));if(h&&l)switch(A=A.substring(1),i(A,t)){case\\\"=\\\":return\\\"0\\\";case\\\"<\\\":return n(t,A);case\\\">\\\":return\\\"-\\\"+n(A,t)}else if(r&&!l)switch(t=t.substring(1),i(A,t)){case\\\"=\\\":return\\\"0\\\";case\\\"<\\\":return\\\"-\\\"+n(t,A);case\\\">\\\":return n(A,t)}}A.exports=r,A.exports.default=r},1199:(A,t,e)=>{\\\"use strict\\\";const i=e(1623);A.exports=function(A){return\\\"+\\\"===A[0]&&(A=A.substring(1)),(A=(A=i(A)).replace(/^0+(?=\\\\d)/,\\\"\\\")).includes(\\\".\\\")&&(A=A.replace(/\\\\.?0+$/,\\\"\\\")),\\\"\\\"===A&&(A=\\\"0\\\"),\\\"-0\\\"===A&&(A=\\\"0\\\"),A}},6130:(A,t,e)=>{\\\"use strict\\\";const i=e(1199),s=e(581);function a(A,t){A=i(A),t=i(t);const e=\\\"-\\\"!==A[0],a=\\\"-\\\"!==t[0];return e?a?s(A,t):\\\">\\\":a?\\\"<\\\":s(t.substring(1),A.substring(1))}A.exports=a,A.exports.default=a},581:A=>{\\\"use strict\\\";function t(A,t){const e=A.length,i=t.length,s=A.indexOf(\\\".\\\"),a=t.indexOf(\\\".\\\"),n=-1===s?e:s,o=-1===a?i:a,r=n-o;let l=r<0?-1*r:0,h=r<=0?0:r,g=Math.max(n,o)+1+Math.max(e-n,i-o)-1,c=0;for(;c<g;){const e=c-l,i=e===n?\\\".\\\":A[e]||\\\"0\\\",s=c-h,a=s===o?\\\".\\\":t[s]||\\\"0\\\";if(i!==a){if(i>a)return\\\">\\\";if(i<a)return\\\"<\\\"}c++}return\\\"=\\\"}A.exports=t,A.exports.default=t},964:A=>{\\\"use strict\\\";A.exports={MAX_SAFE_INTEGER:9007199254740991}},1748:(A,t,e)=>{\\\"use strict\\\";const{MAX_SAFE_INTEGER:i}=e(964),s=i.toString().length-1;A.exports={MAX_SAFE_INTEGER_LENGTH:s}},2892:(A,t,e)=>{\\\"use strict\\\";const i=e(1199);function s(A){const t=(A=i(A)).indexOf(\\\".\\\");return-1===t?\\\"0\\\":(A.length-t-1).toString()}A.exports=s,A.exports.default=s},9235:(A,t,e)=>{\\\"use strict\\\";const i=e(9657),s=e(1199),a=e(6307),n=e(9737);function o(A,t,e){A=s(A),t=s(t);const o=\\\"-\\\"!==A[0],r=\\\"-\\\"!==t[0],l=a(A),h=a(t);if(l||h)return o==r?\\\"Infinity\\\":\\\"-Infinity\\\";if(\\\"0\\\"===t)throw new Error(\\\"[preciso] division by zero\\\");if(\\\"\\\"===A||\\\"0\\\"===A)return\\\"0\\\";const g=o!==r?\\\"-\\\":\\\"\\\";return o||(A=i(A)),r||(t=i(t)),g+n(A,t,e)}A.exports=o,A.exports.default=o},1623:A=>{\\\"use strict\\\";function t(A){\\\"+\\\"===A[0]&&(A=A.substring(1));const t=\\\"-\\\"===A[0]?\\\"-\\\":\\\"\\\";\\\"-\\\"===t&&(A=A.substring(1));const e=A.indexOf(\\\"e\\\");if(-1===e)return t+A;let i=A.indexOf(\\\".\\\");-1===i&&(i=e);const s=Number(A.substring(e+1)),a=A.substring(0,e).replace(\\\".\\\",\\\"\\\"),n=i+s,o=a.length;if(n>=o){const A=n-o;let e=a;for(let t=0;t<A;t++)e+=\\\"0\\\";return t+e}if(n<0){let A=\\\"0.\\\";for(let t=0;t>n;t--)A+=\\\"0\\\";return A+=a,t+A}return t+a.substring(0,n)+\\\".\\\"+a.substring(n)}A.exports=t,A.exports.default=t},178:A=>{\\\"use strict\\\";function t(A){return A.includes(\\\"i\\\")}A.exports=t,A.exports.default=t},6307:A=>{\\\"use strict\\\";function t(A){return!!A.match(/^(|-|\\\\+)inf(inity)?$/i)}A.exports=t,A.exports.default=t},2965:(A,t,e)=>{\\\"use strict\\\";const i=e(1199),s=e(6307);function a(A){return!s(A)&&(!(A=i(A)).includes(\\\".\\\")&&!A.includes(\\\"/\\\"))}A.exports=a,A.exports.default=a},6098:(A,t,e)=>{\\\"use strict\\\";const i=e(1199);function s(A){return\\\"-\\\"===(A=i(A))[0]}A.exports=s,A.exports.default=s},2622:(A,t,e)=>{const i=e(1199),s=e(2965);function a(A){if(A=i(A),!s(A))throw new Error(\\\"can't call is_odd on decimal\\\");return[\\\"1\\\",\\\"3\\\",\\\"5\\\",\\\"7\\\",\\\"9\\\"].includes(A.charAt(A.length-1))}A.exports=a,A.exports.default=a},3124:A=>{\\\"use strict\\\";function t(A){return/^[-+]?0(\\\\.0+)?(e[\\\\.\\\\d]+)?$/.test(A)}A.exports=t,A.exports.default=t},8786:(A,t,e)=>{\\\"use strict\\\";const{MAX_SAFE_INTEGER_LENGTH:i}=e(1748);function s(A,t){const e=A.length,s=t.length,a=A.indexOf(\\\".\\\"),n=t.indexOf(\\\".\\\"),o=-1===a?e:a,r=-1===n?s:n;if(-1===a&&-1===n&&e<i&&s<i)return(Number(A)+Number(t)).toFixed();const l=o-r;let h=Math.max(o,r),g=Math.max(e-o-1,s-r-1),c=l<0?-1*l:0,f=l<=0?0:l,u=h+1+g-1,d=\\\"\\\",I=0,p=u;if(g>0){for(;p>u-g;){const e=A[p-c]||\\\"0\\\",i=t[p-f]||\\\"0\\\";let s=Number(e)+Number(i)+I;s>=10?(s-=10,I=1):I=0,\\\"\\\"===d&&0===s||(d=s+d),p--}d&&(d=\\\".\\\"+d),p--}if(h>0)for(;p>=0;){const e=A[p-c]||\\\"0\\\",i=t[p-f]||\\\"0\\\";let s=Number(e)+Number(i)+I;s>=10?(s-=10,I=1):I=0,d=s+d,p--}return 1===I&&(d=I+d),\\\".\\\"===d[0]&&(d=\\\"0\\\"+d),d}A.exports=s,A.exports.default=s},9737:(A,t,e)=>{\\\"use strict\\\";const i=e(581),s=e(5245),a=e(8655),n=e(5567);function o(A,t,{format:e=\\\"string\\\",max_decimal_digits:o=100,ellipsis:r=!1}={}){\\\"0\\\"===A[0]&&(A=A.substring(1)),\\\"0\\\"===t[0]&&(t=t.substring(1));const l=A.indexOf(\\\".\\\"),h=t.indexOf(\\\".\\\"),g=-1===l?A.length:l,c=-1===h?0:t.length-1-h;let f=!1;A=A.replace(/\\\\./,\\\"\\\"),t=t.replace(/\\\\./,\\\"\\\");const u=A.length;let d,I=\\\"\\\",p=\\\"\\\",_=-1*c,C=0;for(let e=0;e<u;e++){if(I+=A[e],d=i(I,t),\\\">\\\"===d){let A=1,e=s(t,t),n=t;for(;\\\">\\\"!==i(e,I);)A++,n=e,e=s(e,t);if(A=A.toString(),\\\"\\\"!==p)for(let t=A.length;t<=C;t++)p+=\\\"0\\\";p+=A,I=a(I,n),C=0}else{if(\\\"<\\\"===d){\\\"\\\"===p&&_++,C++;continue}if(\\\"=\\\"===d){if(\\\"\\\"!==p)for(let A=0;A<C;A++)p+=\\\"0\\\";p+=\\\"1\\\",I=\\\"0\\\",C=0}}}if(I.match(/^0+$/g))\\\"<\\\"===d&&(p+=I.substring(0,I.length-1));else{const A={},e=g-_-p.length+o+1;\\\"\\\"===p&&(C=0);for(let n=0;n<e;n++){if(I+=\\\"0\\\",r)if(I in A){if(A[I]++,A[I]>3){p+=\\\"...\\\",f=!0;break}}else A[I]=1;const e=i(I,t);if(\\\">\\\"===e){let A=1,e=s(t,t),n=t;for(;\\\">\\\"!==i(e,I);)A++,n=e,e=s(e,t);A=A.toString();for(let t=A.length;t<=C;t++)p+=\\\"0\\\";if(p+=A,I=a(I,n),\\\"0\\\"===I)break;C=0}else{if(\\\"<\\\"===e){C++;continue}if(\\\"=\\\"===e){for(let A=0;A<C;A++)p+=\\\"0\\\";p+=\\\"1\\\",C=0;break}}}}const B=g-_,w=p.length;let E;if(B===w)E=0;else if(B<0)p=\\\"0.\\\"+\\\"0\\\".repeat(Math.abs(B))+p,E=w-B;else if(B>w){for(let A=w;A<B;A++)p+=\\\"0\\\";E=0}else B<w?(p=p.substring(0,B)+\\\".\\\"+p.substring(B),E=w-B):0===B&&(p=\\\"0.\\\"+p,E=w);p=p.replace(/^0+/,\\\"\\\"),p=p.replace(/\\\\.\\\\d+0+$/,\\\"\\\");const y=E-o;return f||y>0&&(p=n(p.substring(0,p.length-y+1))),\\\".\\\"===p[0]&&(p=\\\"0\\\"+p),\\\"object\\\"===e?{quotient:p,extra_decimals:y}:p}A.exports=o,A.exports.default=o},1858:(A,t,e)=>{\\\"use strict\\\";const{MAX_SAFE_INTEGER_LENGTH:i}=e(1748);function s(A,t){if(\\\"0\\\"===A||\\\"0\\\"===t)return\\\"0\\\";const e=A.indexOf(\\\".\\\"),s=t.indexOf(\\\".\\\"),a=(-1===e?A.length:e)+(-1===s?t.length:s),n=(-1===e?0:A.length-1-e)+(-1===s?0:t.length-1-s);if(0===n&&a<i)return(Number(A)*Number(t)).toFixed(0);const o=A.replace(\\\".\\\",\\\"\\\"),r=t.replace(\\\".\\\",\\\"\\\"),l=o.length,h=r.length,g=[];let c=l;for(;c>=0;){const A=c,t=c-=15,e=o.substring(t,A);g.push([Number(e),e.length])}const f=[],u=[];for(let A=0,t=h-1;t>=0;t--,A++){const e=r[t],i=Number(e);let s=0,a=\\\"\\\";const n=g.length-1;g.forEach((([A,t],e)=>{let o=(s+i*A).toString();const r=o.length;if(r>t&&e!==n){const A=-1*t;a=o.slice(A)+a,s=Number(o.slice(0,A))}else{const A=t-r;for(let t=0;t<A;t++)o=\\\"0\\\"+o;s=0,a=o+a}})),a+=\\\"0\\\".repeat(A),f.push(a),u.push([Array.from(a).map((A=>Number(A))),a.length])}const d=f.length,I=u[u.length-1][1]+d;let p=\\\"\\\",_=0;for(let A=0;A<I;A++){let t=_;const e=Math.min(A,d-1);for(let i=0;i<=e;i++){const[e,s]=u[i],a=s-1-A;a>=0&&(t+=e[a])}t>=10?(t=t.toString(),p=t[t.length-1]+p,_=Number(t.slice(0,-1))):(p=t+p,_=0)}if(0===n)p=p.replace(/^0+/,\\\"\\\");else{const A=p.length-n;p=p.substring(0,A)+\\\".\\\"+p.substring(A),p=p.replace(/^0+/,\\\"\\\"),p=p.replace(/\\\\.?0+$/,\\\"\\\"),\\\".\\\"===p[0]&&(p=\\\"0\\\"+p)}return p}A.exports=s,A.exports.default=s},2143:(A,t,e)=>{\\\"use strict\\\";const{MAX_SAFE_INTEGER_LENGTH:i}=e(1748);function s(A,t){const e=A.length,s=t.length,a=A.indexOf(\\\".\\\"),n=t.indexOf(\\\".\\\"),o=-1===a?e:a,r=-1===n?s:n;if(-1===a&&-1===n&&e<i&&s<i)return(Number(A)-Number(t)).toFixed();const l=o-r;let h=Math.max(o,r),g=Math.max(e-o-1,s-r-1),c=l<0?-1*l:0,f=l<=0?0:l,u=h+1+g-1,d=\\\"\\\",I=0,p=u;if(g>0){for(;p>u-g;){let e=A[p-c]||\\\"0\\\";e-=I,I=0;let i=e-(t[p-f]||\\\"0\\\");if(i<0)for(;i<0;)I++,i+=10;else I&&I--;\\\"\\\"===d&&0===i||(d=i+d),p--}\\\"\\\"!==d&&(d=\\\".\\\"+d),p--}if(h>0){for(;p>0;){let e=A[p-c]||\\\"0\\\";e-=I,I=0;let i=e-(t[p-f]||\\\"0\\\");if(i<0)for(;i<0;)I++,i+=10;else I&&I--;d=i+d,p--}const e=A[0-c]||\\\"0\\\",i=t[0-f]||\\\"0\\\";let s=Number(e)-(I>0?1:0)-Number(i);0!==s&&(d=s+d),d=d.replace(/^0+/,\\\"\\\")}return\\\".\\\"===d[0]&&(d=\\\"0\\\"+d),d}A.exports=s,A.exports.default=s},1031:(A,t,e)=>{\\\"use strict\\\";const i=e(9684);function s(){const A=Array.from(arguments),t=\\\"object\\\"==typeof A[A.length-1]?A[A.length-1]:void 0,e=Array.isArray(A[0])?A[0]:t?A.slice(0,A.length-1):A;return i(e,t)}A.exports=s,A.exports.default=s},9684:(A,t,e)=>{\\\"use strict\\\";const i=e(178),s=e(6307),a=e(2622),n=e(3124),o=e(8776),r=e(5694);function l(A,{max_decimal_digits:t,infinity_times_zero:e=\\\"NaN\\\"}={}){const l=A.some((A=>s(A))),h=A.some((A=>n(A)));if(l&&h)return e;if(l){return A.filter((A=>\\\"-\\\"===r(A))).length%2==0?\\\"Infinity\\\":\\\"-Infinity\\\"}if(h)return\\\"0\\\";const g=a(A.filter((A=>i(A))).length.toString());let c=o(A.map((A=>A.replace(/i$/,\\\"\\\"))),{max_decimal_digits:t});return g&&(c+=\\\"i\\\"),c}A.exports=l,A.exports.default=l},8776:(A,t,e)=>{\\\"use strict\\\";const i=e(9657),s=e(1199),a=e(581),n=e(1858),o=e(5195);function r(A,{max_decimal_digits:t}={}){let e=s(A[0]),r=i(e),l=\\\"-\\\"===e[0]?\\\"-\\\":\\\"\\\";const h=A.length;for(let t=1;t<h;t++){const o=s(A[t]),h=\\\"-\\\"===o[0]?\\\"-\\\":\\\"\\\",g=i(o);l=l!==h?\\\"-\\\":\\\"\\\";r=\\\"<\\\"===a(r,g)?n(g,r):n(r,g),e=l+r}return\\\"number\\\"==typeof t&&(e=o(e,{digits:t})),e}A.exports=r,A.exports.default=r},5195:(A,t,e)=>{\\\"use strict\\\";const i=e(178),s=e(1245);function a(A,{digits:t=0}={}){return t=Number(t),i(A)?s(A.substring(0,A.length-1),{digits:t})+\\\"i\\\":s(A,{digits:t})}A.exports=a,A.exports.default=a},5567:(A,t,e)=>{\\\"use strict\\\";const i=e(5245),s=e(5900),a=[\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\",\\\"9\\\"];function n(A){if(A.match(/\\\\.9+$/))return i(s(A),\\\"1\\\");\\\"+\\\"===A[0]&&(A=A.substring(1));const t=A.length;let e=\\\"\\\";const n=A[A.length-1];if(a.includes(n)){let i;for(i=t-2;i>=0;i--){const t=A[i];if(\\\".\\\"===t||\\\"-\\\"===t)continue;const s=Number(t)+1;if(10!==s){e=s+e;break}e=\\\"0\\\"+e}i>0&&(e=A.substring(0,i)+e)}else e=A.substring(0,t-1);return\\\".\\\"===e[e.length-1]&&(e=e.substring(0,e.length-1)),e.indexOf(\\\".\\\")>-1&&(e=e.replace(/0+$/,\\\"\\\")),e}A.exports=n,A.exports.default=n},1245:(A,t,e)=>{\\\"use strict\\\";const i=e(1199),s=e(2892),a=e(9657),n=e(6098),o=e(5567),r=[\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\",\\\"9\\\"];function l(A,{digits:t=0}={digits:0}){const e=A=i(A),l=n(A)?\\\"-\\\":\\\"\\\",h=(A=a(A)).indexOf(\\\".\\\");if(-1===h)return e;if(s(A)<=t)return e;const g=A[h+t+1];if(r.includes(g)){const e=A.substring(0,h+t+2);return l+o(e)}if(0===t)return l+A.substring(0,h);return l+A.substring(0,h+t+1)}A.exports=l,A.exports.default=l},5694:A=>{\\\"use strict\\\";function t(A){return\\\"-\\\"===A[0]?\\\"-\\\":\\\"+\\\"}A.exports=t,A.exports.default=t},8655:(A,t,e)=>{\\\"use strict\\\";const i=e(1199),s=e(581),a=e(6307),n=e(8786),o=e(2143);function r(A,t,{infinity_minus_infinity:e=\\\"NaN\\\"}={}){A=i(A),t=i(t);const r=!(\\\"-\\\"===A[0]),l=!(\\\"-\\\"===t[0]),h=a(A),g=a(t);if(h&&g){if(r===l)return e;if(r)return\\\"Infinity\\\";if(l)return\\\"-Infinity\\\"}else{if(h)return A;if(g)return l?\\\"-Infinity\\\":\\\"Infinity\\\"}if(r){if(l){const e=s(A,t);return\\\">\\\"===e?o(A,t):\\\"<\\\"===e?\\\"-\\\"+o(t,A):\\\"0\\\"}return n(A,t.substring(1))}if(l)return\\\"-\\\"+n(A.substring(1),t);{A=A.substring(1),t=t.substring(1);const e=s(A,t);return\\\">\\\"===e?\\\"-\\\"+o(A,t):\\\"<\\\"===e?o(t,A):\\\"0\\\"}}A.exports=r,A.exports.default=r},5900:A=>{\\\"use strict\\\";function t(A){return A.substring(0,A.indexOf(\\\".\\\"))}A.exports=t,A.exports.default=t},5605:(A,t,e)=>{var i;const s=A=>A.sort()[Math.floor(A.length-2)],a=A=>A.slice().sort(((A,t)=>Math.sign(A-t)))[0];const n={turbocharge:function({bbox:A,debug_level:t=0,quiet:e=!1,reproject:i,threshold:[n,o]}){t>=2&&console.log(\\\"[proj-turbo] starting\\\"),t>=3&&console.log(\\\"[proj-turbo] bbox:\\\",A),t>=3&&console.log(\\\"[proj-turbo] reproject:\\\",i),t>=3&&console.log(\\\"[proj-turbo] threshold:\\\",[n,o]),t>=3&&console.log(\\\"[proj-turbo] quiet:\\\",e);const[r,l,h,g]=A,c=h-r;t>=3&&console.log(\\\"[proj-turbo] width:\\\",c);const f=g-l;t>=3&&console.log(\\\"[proj-turbo] height:\\\",f);const u=[[r,g],[h,g],[h,l],[r,l]].map((A=>[A,i(A)])),d=u[0][1][0]-u[3][1][0],I=u[1][1][0]-u[2][1][0],p=Math.max(d,I);t>=3&&console.log(\\\"max_x_drift:\\\",p);const _=u[1][1][1]-u[0][1][1],C=u[2][1][1]-u[3][1][1],B=Math.max(_,C);t>=3&&console.log(\\\"max_y_drift:\\\",B);const w=c/100;t>=4&&console.log(\\\"[proj-turbo] x_offset:\\\",w);const E=f/100;t>=4&&console.log(\\\"[proj-turbo] y_offset:\\\",E);const y=[[r+c/4,g-f/4],[h-c/4,g-f/4],[h-c/4,l+f/4],[r+c/4,l+f/4],[r+c/10,g-f/10],[h-c/10,g-f/10],[h-c/10,l+f/10],[r+c/10,l+f/10],[(r+h)/2,(l+g)/2]];t>=5&&console.log(\\\"[proj-turbo] train_points: \\\"+JSON.stringify(y));const Q=y.map((A=>[A,i(A)]));t>=5&&console.log(\\\"[proj-turbo] train_pairs: \\\"+JSON.stringify(Q));const m=a(Q.concat(u).map((([A,[t,e]])=>t)));t>=4&&console.log(\\\"[proj-turbo] x_origin:\\\",m);const k=a(Q.concat(u).map((([A,[t,e]])=>e)));t>=4&&console.log(\\\"[proj-turbo] y_origin:\\\",k);let x=Q.map((([[A,t],[e,i]],s)=>{if(e<m)throw new Error(\\\"[proj-turbo] uh oh, x1\\\",e,\\\"is less than origin\\\",m);return[(e-m)/(A-r),(i-k)/(t-l)]}));if(t>=4&&console.log(\\\"[proj-turbo] scales: \\\",x.map((([A,t])=>[A.toFixed(10),t.toFixed(10)]))),x=x.filter((([A,t])=>!(A<0||t<0||isNaN(A)||isNaN(t)||A===1/0&&t===1/0))),x.length<3){if(t>=1&&console.log(\\\"[proj-turbo] origin: \\\",[m,k]),t>=1&&console.log(\\\"[proj-turbo] scales: \\\",x),e)return;throw new Error(\\\"[proj-turbo] not enough scales\\\")}const M=s(x.map((([A,t])=>A)));t>=4&&console.log(\\\"[proj-turbo] median horizontal scale:\\\",M);const b=s(x.map((([A,t])=>t)));t>=4&&console.log(\\\"[proj-turbo] median vertical scale:\\\",b);const D=([A,t])=>[m+M*(A-r),k+b*(t-l)],v=[...u,...Q];for(let A=0;A<v.length;A++){const[i,[s,a]]=v[A],[h,g]=D(i),c=Math.abs(h-s);if(c>=n){if(t>=1&&console.log(`${m} + ${M} * (${i[0]} - ${r})`),t>=1&&console.log(`predicted ${h}, which is ${c} from ${s}, which is greater than the threshold ${n}`),e)return;throw Error(\\\"[proj-turbo] linear function exceeded horizontal error threshold\\\")}const f=Math.abs(g-a);if(f>=o){if(t>=1&&console.log(`${k} + ${b} * (${i[1]} - ${l})`),t>=1&&console.log(`predicted ${g}, which is ${f} from ${a}, which is greater than the threshold ${o}`),e)return;throw Error(\\\"[proj-turbo] linear function exceeded vertical error threshold\\\")}}return{origin:[m,k],reproject:D,scale:[M,b],scales:x}}};void 0===(i=function(){return n}.call(t,e,t,A))||(A.exports=i),A.exports&&(A.exports=n),\\\"object\\\"==typeof self&&(self.projturbo=n),\\\"object\\\"==typeof window&&(window.projturbo=n)},7455:(A,t,e)=>{var i;const s=e(2994),a=e(4472),n=e(2438);function o(A){A||(A=[]),a&&A.push(a),n&&A.push(n),\\\"object\\\"==typeof e.g&&e.g.proj4&&A.push(e.g.proj4),\\\"object\\\"==typeof globalThis&&globalThis.proj4&&A.push(globalThis.proj4),\\\"object\\\"==typeof self&&self.proj4&&A.push(self.proj4),\\\"object\\\"==typeof window&&window.proj4&&A.push(window.proj4),A=A.filter((A=>![void 0,null].includes(A)&&(\\\"object\\\"!=typeof A||Object.keys(A).length>0)));return s(A)}void 0===(i=function(){return o}.call(t,e,t,A))||(A.exports=i),A.exports=o,A.exports.default=o,\\\"object\\\"==typeof window&&(window.proj4collect=o),\\\"object\\\"==typeof self&&(self.proj4collect=o)},2438:(A,t,e)=>{var i;let s=e(4472);const a=e(5209);\\\"object\\\"!=typeof s&&\\\"function\\\"!=typeof s||\\\"function\\\"==typeof s.defs||\\\"function\\\"!=typeof s.default||\\\"function\\\"!=typeof s.default.defs||(s=s.default),s.defs(a),void 0===(i=function(){return s}.call(t,e,t,A))||(A.exports=i),A.exports=s,A.exports.default=s},2994:(A,t,e)=>{var i;function s(){const A=[],t=e=>{if(e){if(Array.isArray(e))return e.forEach(t);e.default&&(e=e.default),(A=>\\\"object\\\"==typeof A&&0===Object.keys(A).length&&\\\"{}\\\"===JSON.stringify(A))(e)||A.push(e)}};if(Array.from(arguments).forEach(t),0===A.length)throw Error(\\\"[proj4-merge] merge called with zero instances of proj4\\\");const[e,...i]=A;return i.forEach((A=>{e.defs(Object.entries(A.defs))})),e}void 0===(i=function(){return s}.call(t,e,t,A))||(A.exports=i),A.exports=s,A.exports.default=s},4472:(A,t,e)=>{\\\"use strict\\\";e.r(t),e.d(t,{default:()=>Ge});var i=1,s=2,a=3,n=5,o=6378137,r=6356752.314,l=.0066943799901413165,h=484813681109536e-20,g=Math.PI/2,c=.16666666666666666,f=.04722222222222222,u=.022156084656084655,d=1e-10,I=.017453292519943295,p=57.29577951308232,_=Math.PI/4,C=2*Math.PI,B=3.14159265359,w={greenwich:0,lisbon:-9.131906111111,paris:2.337229166667,bogota:-74.080916666667,madrid:-3.687938888889,rome:12.452333333333,bern:7.439583333333,jakarta:106.807719444444,ferro:-17.666666666667,brussels:4.367975,stockholm:18.058277777778,athens:23.7163375,oslo:10.722916666667};const E={ft:{to_meter:.3048},\\\"us-ft\\\":{to_meter:1200/3937}};var y=/[\\\\s_\\\\-\\\\/\\\\(\\\\)]/g;function Q(A,t){if(A[t])return A[t];for(var e,i=Object.keys(A),s=t.toLowerCase().replace(y,\\\"\\\"),a=-1;++a<i.length;)if((e=i[a]).toLowerCase().replace(y,\\\"\\\")===s)return A[e]}function m(A){var t,e,i,s={},a=A.split(\\\"+\\\").map((function(A){return A.trim()})).filter((function(A){return A})).reduce((function(A,t){var e=t.split(\\\"=\\\");return e.push(!0),A[e[0].toLowerCase()]=e[1],A}),{}),n={proj:\\\"projName\\\",datum:\\\"datumCode\\\",rf:function(A){s.rf=parseFloat(A)},lat_0:function(A){s.lat0=A*I},lat_1:function(A){s.lat1=A*I},lat_2:function(A){s.lat2=A*I},lat_ts:function(A){s.lat_ts=A*I},lon_0:function(A){s.long0=A*I},lon_1:function(A){s.long1=A*I},lon_2:function(A){s.long2=A*I},alpha:function(A){s.alpha=parseFloat(A)*I},gamma:function(A){s.rectified_grid_angle=parseFloat(A)},lonc:function(A){s.longc=A*I},x_0:function(A){s.x0=parseFloat(A)},y_0:function(A){s.y0=parseFloat(A)},k_0:function(A){s.k0=parseFloat(A)},k:function(A){s.k0=parseFloat(A)},a:function(A){s.a=parseFloat(A)},b:function(A){s.b=parseFloat(A)},r_a:function(){s.R_A=!0},zone:function(A){s.zone=parseInt(A,10)},south:function(){s.utmSouth=!0},towgs84:function(A){s.datum_params=A.split(\\\",\\\").map((function(A){return parseFloat(A)}))},to_meter:function(A){s.to_meter=parseFloat(A)},units:function(A){s.units=A;var t=Q(E,A);t&&(s.to_meter=t.to_meter)},from_greenwich:function(A){s.from_greenwich=A*I},pm:function(A){var t=Q(w,A);s.from_greenwich=(t||parseFloat(A))*I},nadgrids:function(A){\\\"@null\\\"===A?s.datumCode=\\\"none\\\":s.nadgrids=A},axis:function(A){var t=\\\"ewnsud\\\";3===A.length&&-1!==t.indexOf(A.substr(0,1))&&-1!==t.indexOf(A.substr(1,1))&&-1!==t.indexOf(A.substr(2,1))&&(s.axis=A)},approx:function(){s.approx=!0}};for(t in a)e=a[t],t in n?\\\"function\\\"==typeof(i=n[t])?i(e):s[i]=e:s[t]=e;return\\\"string\\\"==typeof s.datumCode&&\\\"WGS84\\\"!==s.datumCode&&(s.datumCode=s.datumCode.toLowerCase()),s}const k=function(A){var t=new G(A);return t.output()};var x=1,M=/\\\\s/,b=/[A-Za-z]/,D=/[A-Za-z84_]/,v=/[,\\\\]]/,S=/[\\\\d\\\\.E\\\\-\\\\+]/;function G(A){if(\\\"string\\\"!=typeof A)throw new Error(\\\"not a string\\\");this.text=A.trim(),this.level=0,this.place=0,this.root=null,this.stack=[],this.currentObject=null,this.state=x}function N(A,t,e){Array.isArray(t)&&(e.unshift(t),t=null);var i=t?{}:A,s=e.reduce((function(A,t){return R(t,A),A}),i);t&&(A[t]=s)}function R(A,t){if(Array.isArray(A)){var e=A.shift();if(\\\"PARAMETER\\\"===e&&(e=A.shift()),1===A.length)return Array.isArray(A[0])?(t[e]={},void R(A[0],t[e])):void(t[e]=A[0]);if(A.length)if(\\\"TOWGS84\\\"!==e){if(\\\"AXIS\\\"===e)return e in t||(t[e]=[]),void t[e].push(A);var i;switch(Array.isArray(e)||(t[e]={}),e){case\\\"UNIT\\\":case\\\"PRIMEM\\\":case\\\"VERT_DATUM\\\":return t[e]={name:A[0].toLowerCase(),convert:A[1]},void(3===A.length&&R(A[2],t[e]));case\\\"SPHEROID\\\":case\\\"ELLIPSOID\\\":return t[e]={name:A[0],a:A[1],rf:A[2]},void(4===A.length&&R(A[3],t[e]));case\\\"PROJECTEDCRS\\\":case\\\"PROJCRS\\\":case\\\"GEOGCS\\\":case\\\"GEOCCS\\\":case\\\"PROJCS\\\":case\\\"LOCAL_CS\\\":case\\\"GEODCRS\\\":case\\\"GEODETICCRS\\\":case\\\"GEODETICDATUM\\\":case\\\"EDATUM\\\":case\\\"ENGINEERINGDATUM\\\":case\\\"VERT_CS\\\":case\\\"VERTCRS\\\":case\\\"VERTICALCRS\\\":case\\\"COMPD_CS\\\":case\\\"COMPOUNDCRS\\\":case\\\"ENGINEERINGCRS\\\":case\\\"ENGCRS\\\":case\\\"FITTED_CS\\\":case\\\"LOCAL_DATUM\\\":case\\\"DATUM\\\":return A[0]=[\\\"name\\\",A[0]],void N(t,e,A);default:for(i=-1;++i<A.length;)if(!Array.isArray(A[i]))return R(A,t[e]);return N(t,e,A)}}else t[e]=A;else t[e]=!0}else t[A]=!0}G.prototype.readCharicter=function(){var A=this.text[this.place++];if(4!==this.state)for(;M.test(A);){if(this.place>=this.text.length)return;A=this.text[this.place++]}switch(this.state){case x:return this.neutral(A);case 2:return this.keyword(A);case 4:return this.quoted(A);case 5:return this.afterquote(A);case 3:return this.number(A);case-1:return}},G.prototype.afterquote=function(A){if('\\\"'===A)return this.word+='\\\"',void(this.state=4);if(v.test(A))return this.word=this.word.trim(),void this.afterItem(A);throw new Error(\\\"havn't handled \\\\\\\"\\\"+A+'\\\" in afterquote yet, index '+this.place)},G.prototype.afterItem=function(A){return\\\",\\\"===A?(null!==this.word&&this.currentObject.push(this.word),this.word=null,void(this.state=x)):\\\"]\\\"===A?(this.level--,null!==this.word&&(this.currentObject.push(this.word),this.word=null),this.state=x,this.currentObject=this.stack.pop(),void(this.currentObject||(this.state=-1))):void 0},G.prototype.number=function(A){if(!S.test(A)){if(v.test(A))return this.word=parseFloat(this.word),void this.afterItem(A);throw new Error(\\\"havn't handled \\\\\\\"\\\"+A+'\\\" in number yet, index '+this.place)}this.word+=A},G.prototype.quoted=function(A){'\\\"'!==A?this.word+=A:this.state=5},G.prototype.keyword=function(A){if(D.test(A))this.word+=A;else{if(\\\"[\\\"===A){var t=[];return t.push(this.word),this.level++,null===this.root?this.root=t:this.currentObject.push(t),this.stack.push(this.currentObject),this.currentObject=t,void(this.state=x)}if(!v.test(A))throw new Error(\\\"havn't handled \\\\\\\"\\\"+A+'\\\" in keyword yet, index '+this.place);this.afterItem(A)}},G.prototype.neutral=function(A){if(b.test(A))return this.word=A,void(this.state=2);if('\\\"'===A)return this.word=\\\"\\\",void(this.state=4);if(S.test(A))return this.word=A,void(this.state=3);if(!v.test(A))throw new Error(\\\"havn't handled \\\\\\\"\\\"+A+'\\\" in neutral yet, index '+this.place);this.afterItem(A)},G.prototype.output=function(){for(;this.place<this.text.length;)this.readCharicter();if(-1===this.state)return this.root;throw new Error('unable to parse string \\\"'+this.text+'\\\". State is '+this.state)};var F=.017453292519943295;function L(A){return A*F}function U(A){var t=k(A),e=t.shift(),i=t.shift();t.unshift([\\\"name\\\",i]),t.unshift([\\\"type\\\",e]);var s={};return R(t,s),function(A){if(\\\"GEOGCS\\\"===A.type?A.projName=\\\"longlat\\\":\\\"LOCAL_CS\\\"===A.type?(A.projName=\\\"identity\\\",A.local=!0):\\\"object\\\"==typeof A.PROJECTION?A.projName=Object.keys(A.PROJECTION)[0]:A.projName=A.PROJECTION,A.AXIS){for(var t=\\\"\\\",e=0,i=A.AXIS.length;e<i;++e){var s=[A.AXIS[e][0].toLowerCase(),A.AXIS[e][1].toLowerCase()];-1!==s[0].indexOf(\\\"north\\\")||(\\\"y\\\"===s[0]||\\\"lat\\\"===s[0])&&\\\"north\\\"===s[1]?t+=\\\"n\\\":-1!==s[0].indexOf(\\\"south\\\")||(\\\"y\\\"===s[0]||\\\"lat\\\"===s[0])&&\\\"south\\\"===s[1]?t+=\\\"s\\\":-1!==s[0].indexOf(\\\"east\\\")||(\\\"x\\\"===s[0]||\\\"lon\\\"===s[0])&&\\\"east\\\"===s[1]?t+=\\\"e\\\":-1===s[0].indexOf(\\\"west\\\")&&(\\\"x\\\"!==s[0]&&\\\"lon\\\"!==s[0]||\\\"west\\\"!==s[1])||(t+=\\\"w\\\")}2===t.length&&(t+=\\\"u\\\"),3===t.length&&(A.axis=t)}A.UNIT&&(A.units=A.UNIT.name.toLowerCase(),\\\"metre\\\"===A.units&&(A.units=\\\"meter\\\"),A.UNIT.convert&&(\\\"GEOGCS\\\"===A.type?A.DATUM&&A.DATUM.SPHEROID&&(A.to_meter=A.UNIT.convert*A.DATUM.SPHEROID.a):A.to_meter=A.UNIT.convert));var a=A.GEOGCS;function n(t){return t*(A.to_meter||1)}\\\"GEOGCS\\\"===A.type&&(a=A),a&&(a.DATUM?A.datumCode=a.DATUM.name.toLowerCase():A.datumCode=a.name.toLowerCase(),\\\"d_\\\"===A.datumCode.slice(0,2)&&(A.datumCode=A.datumCode.slice(2)),\\\"new_zealand_geodetic_datum_1949\\\"!==A.datumCode&&\\\"new_zealand_1949\\\"!==A.datumCode||(A.datumCode=\\\"nzgd49\\\"),\\\"wgs_1984\\\"!==A.datumCode&&\\\"world_geodetic_system_1984\\\"!==A.datumCode||(\\\"Mercator_Auxiliary_Sphere\\\"===A.PROJECTION&&(A.sphere=!0),A.datumCode=\\\"wgs84\\\"),\\\"_ferro\\\"===A.datumCode.slice(-6)&&(A.datumCode=A.datumCode.slice(0,-6)),\\\"_jakarta\\\"===A.datumCode.slice(-8)&&(A.datumCode=A.datumCode.slice(0,-8)),~A.datumCode.indexOf(\\\"belge\\\")&&(A.datumCode=\\\"rnb72\\\"),a.DATUM&&a.DATUM.SPHEROID&&(A.ellps=a.DATUM.SPHEROID.name.replace(\\\"_19\\\",\\\"\\\").replace(/[Cc]larke\\\\_18/,\\\"clrk\\\"),\\\"international\\\"===A.ellps.toLowerCase().slice(0,13)&&(A.ellps=\\\"intl\\\"),A.a=a.DATUM.SPHEROID.a,A.rf=parseFloat(a.DATUM.SPHEROID.rf,10)),a.DATUM&&a.DATUM.TOWGS84&&(A.datum_params=a.DATUM.TOWGS84),~A.datumCode.indexOf(\\\"osgb_1936\\\")&&(A.datumCode=\\\"osgb36\\\"),~A.datumCode.indexOf(\\\"osni_1952\\\")&&(A.datumCode=\\\"osni52\\\"),(~A.datumCode.indexOf(\\\"tm65\\\")||~A.datumCode.indexOf(\\\"geodetic_datum_of_1965\\\"))&&(A.datumCode=\\\"ire65\\\"),\\\"ch1903+\\\"===A.datumCode&&(A.datumCode=\\\"ch1903\\\"),~A.datumCode.indexOf(\\\"israel\\\")&&(A.datumCode=\\\"isr93\\\")),A.b&&!isFinite(A.b)&&(A.b=A.a),[[\\\"standard_parallel_1\\\",\\\"Standard_Parallel_1\\\"],[\\\"standard_parallel_1\\\",\\\"Latitude of 1st standard parallel\\\"],[\\\"standard_parallel_2\\\",\\\"Standard_Parallel_2\\\"],[\\\"standard_parallel_2\\\",\\\"Latitude of 2nd standard parallel\\\"],[\\\"false_easting\\\",\\\"False_Easting\\\"],[\\\"false_easting\\\",\\\"False easting\\\"],[\\\"false-easting\\\",\\\"Easting at false origin\\\"],[\\\"false_northing\\\",\\\"False_Northing\\\"],[\\\"false_northing\\\",\\\"False northing\\\"],[\\\"false_northing\\\",\\\"Northing at false origin\\\"],[\\\"central_meridian\\\",\\\"Central_Meridian\\\"],[\\\"central_meridian\\\",\\\"Longitude of natural origin\\\"],[\\\"central_meridian\\\",\\\"Longitude of false origin\\\"],[\\\"latitude_of_origin\\\",\\\"Latitude_Of_Origin\\\"],[\\\"latitude_of_origin\\\",\\\"Central_Parallel\\\"],[\\\"latitude_of_origin\\\",\\\"Latitude of natural origin\\\"],[\\\"latitude_of_origin\\\",\\\"Latitude of false origin\\\"],[\\\"scale_factor\\\",\\\"Scale_Factor\\\"],[\\\"k0\\\",\\\"scale_factor\\\"],[\\\"latitude_of_center\\\",\\\"Latitude_Of_Center\\\"],[\\\"latitude_of_center\\\",\\\"Latitude_of_center\\\"],[\\\"lat0\\\",\\\"latitude_of_center\\\",L],[\\\"longitude_of_center\\\",\\\"Longitude_Of_Center\\\"],[\\\"longitude_of_center\\\",\\\"Longitude_of_center\\\"],[\\\"longc\\\",\\\"longitude_of_center\\\",L],[\\\"x0\\\",\\\"false_easting\\\",n],[\\\"y0\\\",\\\"false_northing\\\",n],[\\\"long0\\\",\\\"central_meridian\\\",L],[\\\"lat0\\\",\\\"latitude_of_origin\\\",L],[\\\"lat0\\\",\\\"standard_parallel_1\\\",L],[\\\"lat1\\\",\\\"standard_parallel_1\\\",L],[\\\"lat2\\\",\\\"standard_parallel_2\\\",L],[\\\"azimuth\\\",\\\"Azimuth\\\"],[\\\"alpha\\\",\\\"azimuth\\\",L],[\\\"srsCode\\\",\\\"name\\\"]].forEach((function(t){return function(A,t){var e=t[0],i=t[1];!(e in A)&&i in A&&(A[e]=A[i],3===t.length&&(A[e]=t[2](A[e])))}(A,t)})),A.long0||!A.longc||\\\"Albers_Conic_Equal_Area\\\"!==A.projName&&\\\"Lambert_Azimuthal_Equal_Area\\\"!==A.projName||(A.long0=A.longc),A.lat_ts||!A.lat1||\\\"Stereographic_South_Pole\\\"!==A.projName&&\\\"Polar Stereographic (variant B)\\\"!==A.projName?!A.lat_ts&&A.lat0&&\\\"Polar_Stereographic\\\"===A.projName&&(A.lat_ts=A.lat0,A.lat0=L(A.lat0>0?90:-90)):(A.lat0=L(A.lat1>0?90:-90),A.lat_ts=A.lat1)}(s),s}function O(A){var t=this;if(2===arguments.length){var e=arguments[1];\\\"string\\\"==typeof e?\\\"+\\\"===e.charAt(0)?O[A]=m(arguments[1]):O[A]=U(arguments[1]):O[A]=e}else if(1===arguments.length){if(Array.isArray(A))return A.map((function(A){Array.isArray(A)?O.apply(t,A):O(A)}));if(\\\"string\\\"==typeof A){if(A in O)return O[A]}else\\\"EPSG\\\"in A?O[\\\"EPSG:\\\"+A.EPSG]=A:\\\"ESRI\\\"in A?O[\\\"ESRI:\\\"+A.ESRI]=A:\\\"IAU2000\\\"in A?O[\\\"IAU2000:\\\"+A.IAU2000]=A:console.log(A);return}}!function(A){A(\\\"EPSG:4326\\\",\\\"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\\\"),A(\\\"EPSG:4269\\\",\\\"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\\\"),A(\\\"EPSG:3857\\\",\\\"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\\\"),A.WGS84=A[\\\"EPSG:4326\\\"],A[\\\"EPSG:3785\\\"]=A[\\\"EPSG:3857\\\"],A.GOOGLE=A[\\\"EPSG:3857\\\"],A[\\\"EPSG:900913\\\"]=A[\\\"EPSG:3857\\\"],A[\\\"EPSG:102113\\\"]=A[\\\"EPSG:3857\\\"]}(O);const P=O;var T=[\\\"PROJECTEDCRS\\\",\\\"PROJCRS\\\",\\\"GEOGCS\\\",\\\"GEOCCS\\\",\\\"PROJCS\\\",\\\"LOCAL_CS\\\",\\\"GEODCRS\\\",\\\"GEODETICCRS\\\",\\\"GEODETICDATUM\\\",\\\"ENGCRS\\\",\\\"ENGINEERINGCRS\\\"];var H=[\\\"3857\\\",\\\"900913\\\",\\\"3785\\\",\\\"102113\\\"];const J=function(A){if(!function(A){return\\\"string\\\"==typeof A}(A))return A;if(function(A){return A in P}(A))return P[A];if(function(A){return T.some((function(t){return A.indexOf(t)>-1}))}(A)){var t=U(A);if(function(A){var t=Q(A,\\\"authority\\\");if(t){var e=Q(t,\\\"epsg\\\");return e&&H.indexOf(e)>-1}}(t))return P[\\\"EPSG:3857\\\"];var e=function(A){var t=Q(A,\\\"extension\\\");if(t)return Q(t,\\\"proj4\\\")}(t);return e?m(e):t}return function(A){return\\\"+\\\"===A[0]}(A)?m(A):void 0};function q(A,t){var e,i;if(A=A||{},!t)return A;for(i in t)void 0!==(e=t[i])&&(A[i]=e);return A}function z(A,t,e){var i=A*t;return e/Math.sqrt(1-i*i)}function j(A){return A<0?-1:1}function K(A){return Math.abs(A)<=B?A:A-j(A)*C}function Y(A,t,e){var i=A*e,s=.5*A;return i=Math.pow((1-i)/(1+i),s),Math.tan(.5*(g-t))/i}function V(A,t){for(var e,i,s=.5*A,a=g-2*Math.atan(t),n=0;n<=15;n++)if(e=A*Math.sin(a),a+=i=g-2*Math.atan(t*Math.pow((1-e)/(1+e),s))-a,Math.abs(i)<=1e-10)return a;return-9999}function W(A){return A}var X=[{init:function(){var A=this.b/this.a;this.es=1-A*A,\\\"x0\\\"in this||(this.x0=0),\\\"y0\\\"in this||(this.y0=0),this.e=Math.sqrt(this.es),this.lat_ts?this.sphere?this.k0=Math.cos(this.lat_ts):this.k0=z(this.e,Math.sin(this.lat_ts),Math.cos(this.lat_ts)):this.k0||(this.k?this.k0=this.k:this.k0=1)},forward:function(A){var t,e,i=A.x,s=A.y;if(s*p>90&&s*p<-90&&i*p>180&&i*p<-180)return null;if(Math.abs(Math.abs(s)-g)<=d)return null;if(this.sphere)t=this.x0+this.a*this.k0*K(i-this.long0),e=this.y0+this.a*this.k0*Math.log(Math.tan(_+.5*s));else{var a=Math.sin(s),n=Y(this.e,s,a);t=this.x0+this.a*this.k0*K(i-this.long0),e=this.y0-this.a*this.k0*Math.log(n)}return A.x=t,A.y=e,A},inverse:function(A){var t,e,i=A.x-this.x0,s=A.y-this.y0;if(this.sphere)e=g-2*Math.atan(Math.exp(-s/(this.a*this.k0)));else{var a=Math.exp(-s/(this.a*this.k0));if(-9999===(e=V(this.e,a)))return null}return t=K(this.long0+i/(this.a*this.k0)),A.x=t,A.y=e,A},names:[\\\"Mercator\\\",\\\"Popular Visualisation Pseudo Mercator\\\",\\\"Mercator_1SP\\\",\\\"Mercator_Auxiliary_Sphere\\\",\\\"merc\\\"]},{init:function(){},forward:W,inverse:W,names:[\\\"longlat\\\",\\\"identity\\\"]}],Z={},$=[];function AA(A,t){var e=$.length;return A.names?($[e]=A,A.names.forEach((function(A){Z[A.toLowerCase()]=e})),this):(console.log(t),!0)}const tA={start:function(){X.forEach(AA)},add:AA,get:function(A){if(!A)return!1;var t=A.toLowerCase();return void 0!==Z[t]&&$[Z[t]]?$[Z[t]]:void 0}};var eA={MERIT:{a:6378137,rf:298.257,ellipseName:\\\"MERIT 1983\\\"},SGS85:{a:6378136,rf:298.257,ellipseName:\\\"Soviet Geodetic System 85\\\"},GRS80:{a:6378137,rf:298.257222101,ellipseName:\\\"GRS 1980(IUGG, 1980)\\\"},IAU76:{a:6378140,rf:298.257,ellipseName:\\\"IAU 1976\\\"},airy:{a:6377563.396,b:6356256.91,ellipseName:\\\"Airy 1830\\\"},APL4:{a:6378137,rf:298.25,ellipseName:\\\"Appl. Physics. 1965\\\"},NWL9D:{a:6378145,rf:298.25,ellipseName:\\\"Naval Weapons Lab., 1965\\\"},mod_airy:{a:6377340.189,b:6356034.446,ellipseName:\\\"Modified Airy\\\"},andrae:{a:6377104.43,rf:300,ellipseName:\\\"Andrae 1876 (Den., Iclnd.)\\\"},aust_SA:{a:6378160,rf:298.25,ellipseName:\\\"Australian Natl & S. Amer. 1969\\\"},GRS67:{a:6378160,rf:298.247167427,ellipseName:\\\"GRS 67(IUGG 1967)\\\"},bessel:{a:6377397.155,rf:299.1528128,ellipseName:\\\"Bessel 1841\\\"},bess_nam:{a:6377483.865,rf:299.1528128,ellipseName:\\\"Bessel 1841 (Namibia)\\\"},clrk66:{a:6378206.4,b:6356583.8,ellipseName:\\\"Clarke 1866\\\"},clrk80:{a:6378249.145,rf:293.4663,ellipseName:\\\"Clarke 1880 mod.\\\"},clrk80ign:{a:6378249.2,b:6356515,rf:293.4660213,ellipseName:\\\"Clarke 1880 (IGN)\\\"},clrk58:{a:6378293.645208759,rf:294.2606763692654,ellipseName:\\\"Clarke 1858\\\"},CPM:{a:6375738.7,rf:334.29,ellipseName:\\\"Comm. des Poids et Mesures 1799\\\"},delmbr:{a:6376428,rf:311.5,ellipseName:\\\"Delambre 1810 (Belgium)\\\"},engelis:{a:6378136.05,rf:298.2566,ellipseName:\\\"Engelis 1985\\\"},evrst30:{a:6377276.345,rf:300.8017,ellipseName:\\\"Everest 1830\\\"},evrst48:{a:6377304.063,rf:300.8017,ellipseName:\\\"Everest 1948\\\"},evrst56:{a:6377301.243,rf:300.8017,ellipseName:\\\"Everest 1956\\\"},evrst69:{a:6377295.664,rf:300.8017,ellipseName:\\\"Everest 1969\\\"},evrstSS:{a:6377298.556,rf:300.8017,ellipseName:\\\"Everest (Sabah & Sarawak)\\\"},fschr60:{a:6378166,rf:298.3,ellipseName:\\\"Fischer (Mercury Datum) 1960\\\"},fschr60m:{a:6378155,rf:298.3,ellipseName:\\\"Fischer 1960\\\"},fschr68:{a:6378150,rf:298.3,ellipseName:\\\"Fischer 1968\\\"},helmert:{a:6378200,rf:298.3,ellipseName:\\\"Helmert 1906\\\"},hough:{a:6378270,rf:297,ellipseName:\\\"Hough\\\"},intl:{a:6378388,rf:297,ellipseName:\\\"International 1909 (Hayford)\\\"},kaula:{a:6378163,rf:298.24,ellipseName:\\\"Kaula 1961\\\"},lerch:{a:6378139,rf:298.257,ellipseName:\\\"Lerch 1979\\\"},mprts:{a:6397300,rf:191,ellipseName:\\\"Maupertius 1738\\\"},new_intl:{a:6378157.5,b:6356772.2,ellipseName:\\\"New International 1967\\\"},plessis:{a:6376523,rf:6355863,ellipseName:\\\"Plessis 1817 (France)\\\"},krass:{a:6378245,rf:298.3,ellipseName:\\\"Krassovsky, 1942\\\"},SEasia:{a:6378155,b:6356773.3205,ellipseName:\\\"Southeast Asia\\\"},walbeck:{a:6376896,b:6355834.8467,ellipseName:\\\"Walbeck\\\"},WGS60:{a:6378165,rf:298.3,ellipseName:\\\"WGS 60\\\"},WGS66:{a:6378145,rf:298.25,ellipseName:\\\"WGS 66\\\"},WGS7:{a:6378135,rf:298.26,ellipseName:\\\"WGS 72\\\"}},iA=eA.WGS84={a:6378137,rf:298.257223563,ellipseName:\\\"WGS 84\\\"};eA.sphere={a:6370997,b:6370997,ellipseName:\\\"Normal Sphere (r=6370997)\\\"};var sA={};sA.wgs84={towgs84:\\\"0,0,0\\\",ellipse:\\\"WGS84\\\",datumName:\\\"WGS84\\\"},sA.ch1903={towgs84:\\\"674.374,15.056,405.346\\\",ellipse:\\\"bessel\\\",datumName:\\\"swiss\\\"},sA.ggrs87={towgs84:\\\"-199.87,74.79,246.62\\\",ellipse:\\\"GRS80\\\",datumName:\\\"Greek_Geodetic_Reference_System_1987\\\"},sA.nad83={towgs84:\\\"0,0,0\\\",ellipse:\\\"GRS80\\\",datumName:\\\"North_American_Datum_1983\\\"},sA.nad27={nadgrids:\\\"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\\\",ellipse:\\\"clrk66\\\",datumName:\\\"North_American_Datum_1927\\\"},sA.potsdam={towgs84:\\\"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\\\",ellipse:\\\"bessel\\\",datumName:\\\"Potsdam Rauenberg 1950 DHDN\\\"},sA.carthage={towgs84:\\\"-263.0,6.0,431.0\\\",ellipse:\\\"clark80\\\",datumName:\\\"Carthage 1934 Tunisia\\\"},sA.hermannskogel={towgs84:\\\"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\\\",ellipse:\\\"bessel\\\",datumName:\\\"Hermannskogel\\\"},sA.militargeographische_institut={towgs84:\\\"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\\\",ellipse:\\\"bessel\\\",datumName:\\\"Militar-Geographische Institut\\\"},sA.osni52={towgs84:\\\"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\\\",ellipse:\\\"airy\\\",datumName:\\\"Irish National\\\"},sA.ire65={towgs84:\\\"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\\\",ellipse:\\\"mod_airy\\\",datumName:\\\"Ireland 1965\\\"},sA.rassadiran={towgs84:\\\"-133.63,-157.5,-158.62\\\",ellipse:\\\"intl\\\",datumName:\\\"Rassadiran\\\"},sA.nzgd49={towgs84:\\\"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\\\",ellipse:\\\"intl\\\",datumName:\\\"New Zealand Geodetic Datum 1949\\\"},sA.osgb36={towgs84:\\\"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\\\",ellipse:\\\"airy\\\",datumName:\\\"Airy 1830\\\"},sA.s_jtsk={towgs84:\\\"589,76,480\\\",ellipse:\\\"bessel\\\",datumName:\\\"S-JTSK (Ferro)\\\"},sA.beduaram={towgs84:\\\"-106,-87,188\\\",ellipse:\\\"clrk80\\\",datumName:\\\"Beduaram\\\"},sA.gunung_segara={towgs84:\\\"-403,684,41\\\",ellipse:\\\"bessel\\\",datumName:\\\"Gunung Segara Jakarta\\\"},sA.rnb72={towgs84:\\\"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\\\",ellipse:\\\"intl\\\",datumName:\\\"Reseau National Belge 1972\\\"};const aA=function(A,t,e,o,r,l,g){var c={};return c.datum_type=void 0===A||\\\"none\\\"===A?n:4,t&&(c.datum_params=t.map(parseFloat),0===c.datum_params[0]&&0===c.datum_params[1]&&0===c.datum_params[2]||(c.datum_type=i),c.datum_params.length>3&&(0===c.datum_params[3]&&0===c.datum_params[4]&&0===c.datum_params[5]&&0===c.datum_params[6]||(c.datum_type=s,c.datum_params[3]*=h,c.datum_params[4]*=h,c.datum_params[5]*=h,c.datum_params[6]=c.datum_params[6]/1e6+1))),g&&(c.datum_type=a,c.grids=g),c.a=e,c.b=o,c.es=r,c.ep2=l,c};var nA={};function oA(A){if(0===A.length)return null;var t=\\\"@\\\"===A[0];return t&&(A=A.slice(1)),\\\"null\\\"===A?{name:\\\"null\\\",mandatory:!t,grid:null,isNull:!0}:{name:A,mandatory:!t,grid:nA[A]||null,isNull:!1}}function rA(A){return A/3600*Math.PI/180}function lA(A,t,e){return String.fromCharCode.apply(null,new Uint8Array(A.buffer.slice(t,e)))}function hA(A){return A.map((function(A){return[rA(A.longitudeShift),rA(A.latitudeShift)]}))}function gA(A,t,e){return{name:lA(A,t+8,t+16).trim(),parent:lA(A,t+24,t+24+8).trim(),lowerLatitude:A.getFloat64(t+72,e),upperLatitude:A.getFloat64(t+88,e),lowerLongitude:A.getFloat64(t+104,e),upperLongitude:A.getFloat64(t+120,e),latitudeInterval:A.getFloat64(t+136,e),longitudeInterval:A.getFloat64(t+152,e),gridNodeCount:A.getInt32(t+168,e)}}function cA(A,t,e,i){for(var s=t+176,a=[],n=0;n<e.gridNodeCount;n++){var o={latitudeShift:A.getFloat32(s+16*n,i),longitudeShift:A.getFloat32(s+16*n+4,i),latitudeAccuracy:A.getFloat32(s+16*n+8,i),longitudeAccuracy:A.getFloat32(s+16*n+12,i)};a.push(o)}return a}function fA(A,t){if(!(this instanceof fA))return new fA(A);t=t||function(A){if(A)throw A};var e=J(A);if(\\\"object\\\"==typeof e){var i=fA.projections.get(e.projName);if(i){if(e.datumCode&&\\\"none\\\"!==e.datumCode){var s=Q(sA,e.datumCode);s&&(e.datum_params=e.datum_params||(s.towgs84?s.towgs84.split(\\\",\\\"):null),e.ellps=s.ellipse,e.datumName=s.datumName?s.datumName:e.datumCode)}e.k0=e.k0||1,e.axis=e.axis||\\\"enu\\\",e.ellps=e.ellps||\\\"wgs84\\\",e.lat1=e.lat1||e.lat0;var a,n,o,r,l,h,g,I=function(A,t,e,i,s){if(!A){var a=Q(eA,i);a||(a=iA),A=a.a,t=a.b,e=a.rf}return e&&!t&&(t=(1-1/e)*A),(0===e||Math.abs(A-t)<d)&&(s=!0,t=A),{a:A,b:t,rf:e,sphere:s}}(e.a,e.b,e.rf,e.ellps,e.sphere),p=(a=I.a,n=I.b,I.rf,o=e.R_A,h=((r=a*a)-(l=n*n))/r,g=0,o?(r=(a*=1-h*(c+h*(f+h*u)))*a,h=0):g=Math.sqrt(h),{es:h,e:g,ep2:(r-l)/l}),_=function(A){return void 0===A?null:A.split(\\\",\\\").map(oA)}(e.nadgrids),C=e.datum||aA(e.datumCode,e.datum_params,I.a,I.b,p.es,p.ep2,_);q(this,e),q(this,i),this.a=I.a,this.b=I.b,this.rf=I.rf,this.sphere=I.sphere,this.es=p.es,this.e=p.e,this.ep2=p.ep2,this.datum=C,this.init(),t(null,this)}else t(A)}else t(A)}fA.projections=tA,fA.projections.start();const uA=fA;function dA(A,t,e){var i,s,a,n,o=A.x,r=A.y,l=A.z?A.z:0;if(r<-g&&r>-1.001*g)r=-g;else if(r>g&&r<1.001*g)r=g;else{if(r<-g)return{x:-1/0,y:-1/0,z:A.z};if(r>g)return{x:1/0,y:1/0,z:A.z}}return o>Math.PI&&(o-=2*Math.PI),s=Math.sin(r),n=Math.cos(r),a=s*s,{x:((i=e/Math.sqrt(1-t*a))+l)*n*Math.cos(o),y:(i+l)*n*Math.sin(o),z:(i*(1-t)+l)*s}}function IA(A,t,e,i){var s,a,n,o,r,l,h,c,f,u,d,I,p,_,C,B=1e-12,w=A.x,E=A.y,y=A.z?A.z:0;if(s=Math.sqrt(w*w+E*E),a=Math.sqrt(w*w+E*E+y*y),s/e<B){if(_=0,a/e<B)return g,C=-i,{x:A.x,y:A.y,z:A.z}}else _=Math.atan2(E,w);n=y/a,c=(o=s/a)*(1-t)*(r=1/Math.sqrt(1-t*(2-t)*o*o)),f=n*r,p=0;do{p++,l=t*(h=e/Math.sqrt(1-t*f*f))/(h+(C=s*c+y*f-h*(1-t*f*f))),I=(d=n*(r=1/Math.sqrt(1-l*(2-l)*o*o)))*c-(u=o*(1-l)*r)*f,c=u,f=d}while(I*I>1e-24&&p<30);return{x:_,y:Math.atan(d/Math.abs(u)),z:C}}function pA(A){return A===i||A===s}function _A(A,t,e){if(function(A,t){return A.datum_type===t.datum_type&&!(A.a!==t.a||Math.abs(A.es-t.es)>5e-11)&&(A.datum_type===i?A.datum_params[0]===t.datum_params[0]&&A.datum_params[1]===t.datum_params[1]&&A.datum_params[2]===t.datum_params[2]:A.datum_type!==s||A.datum_params[0]===t.datum_params[0]&&A.datum_params[1]===t.datum_params[1]&&A.datum_params[2]===t.datum_params[2]&&A.datum_params[3]===t.datum_params[3]&&A.datum_params[4]===t.datum_params[4]&&A.datum_params[5]===t.datum_params[5]&&A.datum_params[6]===t.datum_params[6])}(A,t))return e;if(A.datum_type===n||t.datum_type===n)return e;var h=A.a,g=A.es;if(A.datum_type===a){if(0!==CA(A,!1,e))return;h=o,g=l}var c=t.a,f=t.b,u=t.es;if(t.datum_type===a&&(c=o,f=r,u=l),g===u&&h===c&&!pA(A.datum_type)&&!pA(t.datum_type))return e;if((e=dA(e,g,h),pA(A.datum_type)&&(e=function(A,t,e){if(t===i)return{x:A.x+e[0],y:A.y+e[1],z:A.z+e[2]};if(t===s){var a=e[0],n=e[1],o=e[2],r=e[3],l=e[4],h=e[5],g=e[6];return{x:g*(A.x-h*A.y+l*A.z)+a,y:g*(h*A.x+A.y-r*A.z)+n,z:g*(-l*A.x+r*A.y+A.z)+o}}}(e,A.datum_type,A.datum_params)),pA(t.datum_type)&&(e=function(A,t,e){if(t===i)return{x:A.x-e[0],y:A.y-e[1],z:A.z-e[2]};if(t===s){var a=e[0],n=e[1],o=e[2],r=e[3],l=e[4],h=e[5],g=e[6],c=(A.x-a)/g,f=(A.y-n)/g,u=(A.z-o)/g;return{x:c+h*f-l*u,y:-h*c+f+r*u,z:l*c-r*f+u}}}(e,t.datum_type,t.datum_params)),e=IA(e,u,c,f),t.datum_type===a)&&0!==CA(t,!0,e))return;return e}function CA(A,t,e){if(null===A.grids||0===A.grids.length)return console.log(\\\"Grid shift grids not found\\\"),-1;var i={x:-e.x,y:e.y},s={x:Number.NaN,y:Number.NaN},a=[];A:for(var n=0;n<A.grids.length;n++){var o=A.grids[n];if(a.push(o.name),o.isNull){s=i;break}if(o.mandatory,null!==o.grid)for(var r=o.grid.subgrids,l=0,h=r.length;l<h;l++){var g=r[l],c=(Math.abs(g.del[1])+Math.abs(g.del[0]))/1e4,f=g.ll[0]-c,u=g.ll[1]-c,d=g.ll[0]+(g.lim[0]-1)*g.del[0]+c,I=g.ll[1]+(g.lim[1]-1)*g.del[1]+c;if(!(u>i.y||f>i.x||I<i.y||d<i.x)&&(s=BA(i,t,g),!isNaN(s.x)))break A}else if(o.mandatory)return console.log(\\\"Unable to find mandatory grid '\\\"+o.name+\\\"'\\\"),-1}return isNaN(s.x)?(console.log(\\\"Failed to find a grid shift table for location '\\\"+-i.x*p+\\\" \\\"+i.y*p+\\\" tried: '\\\"+a+\\\"'\\\"),-1):(e.x=-s.x,e.y=s.y,0)}function BA(A,t,e){var i={x:Number.NaN,y:Number.NaN};if(isNaN(A.x))return i;var s={x:A.x,y:A.y};s.x-=e.ll[0],s.y-=e.ll[1],s.x=K(s.x-Math.PI)+Math.PI;var a=wA(s,e);if(t){if(isNaN(a.x))return i;a.x=s.x-a.x,a.y=s.y-a.y;var n,o,r=9;do{if(o=wA(a,e),isNaN(o.x)){console.log(\\\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\\\");break}n={x:s.x-(o.x+a.x),y:s.y-(o.y+a.y)},a.x+=n.x,a.y+=n.y}while(r--&&Math.abs(n.x)>1e-12&&Math.abs(n.y)>1e-12);if(r<0)return console.log(\\\"Inverse grid shift iterator failed to converge.\\\"),i;i.x=K(a.x+e.ll[0]),i.y=a.y+e.ll[1]}else isNaN(a.x)||(i.x=A.x+a.x,i.y=A.y+a.y);return i}function wA(A,t){var e,i={x:A.x/t.del[0],y:A.y/t.del[1]},s=Math.floor(i.x),a=Math.floor(i.y),n=i.x-1*s,o=i.y-1*a,r={x:Number.NaN,y:Number.NaN};if(s<0||s>=t.lim[0])return r;if(a<0||a>=t.lim[1])return r;e=a*t.lim[0]+s;var l=t.cvs[e][0],h=t.cvs[e][1];e++;var g=t.cvs[e][0],c=t.cvs[e][1];e+=t.lim[0];var f=t.cvs[e][0],u=t.cvs[e][1];e--;var d=t.cvs[e][0],I=t.cvs[e][1],p=n*o,_=n*(1-o),C=(1-n)*(1-o),B=(1-n)*o;return r.x=C*l+_*g+B*d+p*f,r.y=C*h+_*c+B*I+p*u,r}function EA(A,t,e){var i,s,a,n=e.x,o=e.y,r=e.z||0,l={};for(a=0;a<3;a++)if(!t||2!==a||void 0!==e.z)switch(0===a?(i=n,s=-1!==\\\"ew\\\".indexOf(A.axis[a])?\\\"x\\\":\\\"y\\\"):1===a?(i=o,s=-1!==\\\"ns\\\".indexOf(A.axis[a])?\\\"y\\\":\\\"x\\\"):(i=r,s=\\\"z\\\"),A.axis[a]){case\\\"e\\\":case\\\"n\\\":l[s]=i;break;case\\\"w\\\":case\\\"s\\\":l[s]=-i;break;case\\\"u\\\":void 0!==e[s]&&(l.z=i);break;case\\\"d\\\":void 0!==e[s]&&(l.z=-i);break;default:return null}return l}function yA(A){var t={x:A[0],y:A[1]};return A.length>2&&(t.z=A[2]),A.length>3&&(t.m=A[3]),t}function QA(A){if(\\\"function\\\"==typeof Number.isFinite){if(Number.isFinite(A))return;throw new TypeError(\\\"coordinates must be finite numbers\\\")}if(\\\"number\\\"!=typeof A||A!=A||!isFinite(A))throw new TypeError(\\\"coordinates must be finite numbers\\\")}function mA(A,t,e,n){var o,r=void 0!==(e=Array.isArray(e)?yA(e):{x:e.x,y:e.y,z:e.z,m:e.m}).z;if(function(A){QA(A.x),QA(A.y)}(e),A.datum&&t.datum&&function(A,t){return(A.datum.datum_type===i||A.datum.datum_type===s||A.datum.datum_type===a)&&\\\"WGS84\\\"!==t.datumCode||(t.datum.datum_type===i||t.datum.datum_type===s||t.datum.datum_type===a)&&\\\"WGS84\\\"!==A.datumCode}(A,t)&&(e=mA(A,o=new uA(\\\"WGS84\\\"),e,n),A=o),n&&\\\"enu\\\"!==A.axis&&(e=EA(A,!1,e)),\\\"longlat\\\"===A.projName)e={x:e.x*I,y:e.y*I,z:e.z||0};else if(A.to_meter&&(e={x:e.x*A.to_meter,y:e.y*A.to_meter,z:e.z||0}),!(e=A.inverse(e)))return;if(A.from_greenwich&&(e.x+=A.from_greenwich),e=_A(A.datum,t.datum,e))return t.from_greenwich&&(e={x:e.x-t.from_greenwich,y:e.y,z:e.z||0}),\\\"longlat\\\"===t.projName?e={x:e.x*p,y:e.y*p,z:e.z||0}:(e=t.forward(e),t.to_meter&&(e={x:e.x/t.to_meter,y:e.y/t.to_meter,z:e.z||0})),n&&\\\"enu\\\"!==t.axis?EA(t,!0,e):(e&&!r&&delete e.z,e)}var kA=uA(\\\"WGS84\\\");function xA(A,t,e,i){var s,a,n;return Array.isArray(e)?(s=mA(A,t,e,i)||{x:NaN,y:NaN},e.length>2?void 0!==A.name&&\\\"geocent\\\"===A.name||void 0!==t.name&&\\\"geocent\\\"===t.name?\\\"number\\\"==typeof s.z?[s.x,s.y,s.z].concat(e.splice(3)):[s.x,s.y,e[2]].concat(e.splice(3)):[s.x,s.y].concat(e.splice(2)):[s.x,s.y]):(a=mA(A,t,e,i),2===(n=Object.keys(e)).length||n.forEach((function(i){if(void 0!==A.name&&\\\"geocent\\\"===A.name||void 0!==t.name&&\\\"geocent\\\"===t.name){if(\\\"x\\\"===i||\\\"y\\\"===i||\\\"z\\\"===i)return}else if(\\\"x\\\"===i||\\\"y\\\"===i)return;a[i]=e[i]})),a)}function MA(A){return A instanceof uA?A:A.oProj?A.oProj:uA(A)}const bA=function(A,t,e){A=MA(A);var i,s=!1;return void 0===t?(t=A,A=kA,s=!0):(void 0!==t.x||Array.isArray(t))&&(e=t,t=A,A=kA,s=!0),t=MA(t),e?xA(A,t,e):(i={forward:function(e,i){return xA(A,t,e,i)},inverse:function(e,i){return xA(t,A,e,i)}},s&&(i.oProj=t),i)};var DA=6,vA=\\\"AJSAJS\\\",SA=\\\"AFAFAF\\\",GA=65,NA=73,RA=79,FA=86,LA=90;const UA={forward:OA,inverse:function(A){var t=JA(jA(A.toUpperCase()));if(t.lat&&t.lon)return[t.lon,t.lat,t.lon,t.lat];return[t.left,t.bottom,t.right,t.top]},toPoint:PA};function OA(A,t){return t=t||5,function(A,t){var e=\\\"00000\\\"+A.easting,i=\\\"00000\\\"+A.northing;return A.zoneNumber+A.zoneLetter+(f=A.easting,u=A.northing,d=A.zoneNumber,I=zA(d),p=Math.floor(f/1e5),_=Math.floor(u/1e5)%20,s=p,a=_,n=I,o=n-1,r=vA.charCodeAt(o),l=SA.charCodeAt(o),h=r+s-1,g=l+a,c=!1,h>LA&&(h=h-LA+GA-1,c=!0),(h===NA||r<NA&&h>NA||(h>NA||r<NA)&&c)&&h++,(h===RA||r<RA&&h>RA||(h>RA||r<RA)&&c)&&++h===NA&&h++,h>LA&&(h=h-LA+GA-1),g>FA?(g=g-FA+GA-1,c=!0):c=!1,(g===NA||l<NA&&g>NA||(g>NA||l<NA)&&c)&&g++,(g===RA||l<RA&&g>RA||(g>RA||l<RA)&&c)&&++g===NA&&g++,g>FA&&(g=g-FA+GA-1),String.fromCharCode(h)+String.fromCharCode(g))+e.substr(e.length-5,t)+i.substr(i.length-5,t);var s,a,n,o,r,l,h,g,c;var f,u,d,I,p,_}(function(A){var t,e,i,s,a,n,o,r,l=A.lat,h=A.lon,g=6378137,c=.00669438,f=.9996,u=TA(l),d=TA(h);r=Math.floor((h+180)/6)+1,180===h&&(r=60);l>=56&&l<64&&h>=3&&h<12&&(r=32);l>=72&&l<84&&(h>=0&&h<9?r=31:h>=9&&h<21?r=33:h>=21&&h<33?r=35:h>=33&&h<42&&(r=37));o=TA(6*(r-1)-180+3),t=c/(1-c),e=g/Math.sqrt(1-c*Math.sin(u)*Math.sin(u)),i=Math.tan(u)*Math.tan(u),s=t*Math.cos(u)*Math.cos(u),a=Math.cos(u)*(d-o),n=g*((1-c/4-3*c*c/64-5*c*c*c/256)*u-(3*c/8+3*c*c/32+45*c*c*c/1024)*Math.sin(2*u)+(15*c*c/256+45*c*c*c/1024)*Math.sin(4*u)-35*c*c*c/3072*Math.sin(6*u));var I=f*e*(a+(1-i+s)*a*a*a/6+(5-18*i+i*i+72*s-58*t)*a*a*a*a*a/120)+5e5,p=f*(n+e*Math.tan(u)*(a*a/2+(5-i+9*s+4*s*s)*a*a*a*a/24+(61-58*i+i*i+600*s-330*t)*a*a*a*a*a*a/720));l<0&&(p+=1e7);return{northing:Math.round(p),easting:Math.round(I),zoneNumber:r,zoneLetter:qA(l)}}({lat:A[1],lon:A[0]}),t)}function PA(A){var t=JA(jA(A.toUpperCase()));return t.lat&&t.lon?[t.lon,t.lat]:[(t.left+t.right)/2,(t.top+t.bottom)/2]}function TA(A){return A*(Math.PI/180)}function HA(A){return A/Math.PI*180}function JA(A){var t=A.northing,e=A.easting,i=A.zoneLetter,s=A.zoneNumber;if(s<0||s>60)return null;var a,n,o,r,l,h,g,c,f,u=.9996,d=6378137,I=.00669438,p=(1-Math.sqrt(.99330562))/(1+Math.sqrt(.99330562)),_=e-5e5,C=t;i<\\\"N\\\"&&(C-=1e7),g=6*(s-1)-180+3,a=.006739496752268451,f=(c=C/u/6367449.145945056)+(3*p/2-27*p*p*p/32)*Math.sin(2*c)+(21*p*p/16-55*p*p*p*p/32)*Math.sin(4*c)+151*p*p*p/96*Math.sin(6*c),n=d/Math.sqrt(1-I*Math.sin(f)*Math.sin(f)),o=Math.tan(f)*Math.tan(f),r=a*Math.cos(f)*Math.cos(f),l=.99330562*d/Math.pow(1-I*Math.sin(f)*Math.sin(f),1.5),h=_/(n*u);var B=f-n*Math.tan(f)/l*(h*h/2-(5+3*o+10*r-4*r*r-9*a)*h*h*h*h/24+(61+90*o+298*r+45*o*o-1.6983531815716497-3*r*r)*h*h*h*h*h*h/720);B=HA(B);var w,E=(h-(1+2*o+r)*h*h*h/6+(5-2*r+28*o-3*r*r+8*a+24*o*o)*h*h*h*h*h/120)/Math.cos(f);if(E=g+HA(E),A.accuracy){var y=JA({northing:A.northing+A.accuracy,easting:A.easting+A.accuracy,zoneLetter:A.zoneLetter,zoneNumber:A.zoneNumber});w={top:y.lat,right:y.lon,bottom:B,left:E}}else w={lat:B,lon:E};return w}function qA(A){var t=\\\"Z\\\";return 84>=A&&A>=72?t=\\\"X\\\":72>A&&A>=64?t=\\\"W\\\":64>A&&A>=56?t=\\\"V\\\":56>A&&A>=48?t=\\\"U\\\":48>A&&A>=40?t=\\\"T\\\":40>A&&A>=32?t=\\\"S\\\":32>A&&A>=24?t=\\\"R\\\":24>A&&A>=16?t=\\\"Q\\\":16>A&&A>=8?t=\\\"P\\\":8>A&&A>=0?t=\\\"N\\\":0>A&&A>=-8?t=\\\"M\\\":-8>A&&A>=-16?t=\\\"L\\\":-16>A&&A>=-24?t=\\\"K\\\":-24>A&&A>=-32?t=\\\"J\\\":-32>A&&A>=-40?t=\\\"H\\\":-40>A&&A>=-48?t=\\\"G\\\":-48>A&&A>=-56?t=\\\"F\\\":-56>A&&A>=-64?t=\\\"E\\\":-64>A&&A>=-72?t=\\\"D\\\":-72>A&&A>=-80&&(t=\\\"C\\\"),t}function zA(A){var t=A%DA;return 0===t&&(t=DA),t}function jA(A){if(A&&0===A.length)throw\\\"MGRSPoint coverting from nothing\\\";for(var t,e=A.length,i=null,s=\\\"\\\",a=0;!/[A-Z]/.test(t=A.charAt(a));){if(a>=2)throw\\\"MGRSPoint bad conversion from: \\\"+A;s+=t,a++}var n=parseInt(s,10);if(0===a||a+3>e)throw\\\"MGRSPoint bad conversion from: \\\"+A;var o=A.charAt(a++);if(o<=\\\"A\\\"||\\\"B\\\"===o||\\\"Y\\\"===o||o>=\\\"Z\\\"||\\\"I\\\"===o||\\\"O\\\"===o)throw\\\"MGRSPoint zone letter \\\"+o+\\\" not handled: \\\"+A;i=A.substring(a,a+=2);for(var r=zA(n),l=function(A,t){var e=vA.charCodeAt(t-1),i=1e5,s=!1;for(;e!==A.charCodeAt(0);){if(++e===NA&&e++,e===RA&&e++,e>LA){if(s)throw\\\"Bad character: \\\"+A;e=GA,s=!0}i+=1e5}return i}(i.charAt(0),r),h=function(A,t){if(A>\\\"V\\\")throw\\\"MGRSPoint given invalid Northing \\\"+A;var e=SA.charCodeAt(t-1),i=0,s=!1;for(;e!==A.charCodeAt(0);){if(++e===NA&&e++,e===RA&&e++,e>FA){if(s)throw\\\"Bad character: \\\"+A;e=GA,s=!0}i+=1e5}return i}(i.charAt(1),r);h<KA(o);)h+=2e6;var g=e-a;if(g%2!=0)throw\\\"MGRSPoint has to have an even number \\\\nof digits after the zone letter and two 100km letters - front \\\\nhalf for easting meters, second half for \\\\nnorthing meters\\\"+A;var c,f,u,d=g/2,I=0,p=0;return d>0&&(c=1e5/Math.pow(10,d),f=A.substring(a,a+d),I=parseFloat(f)*c,u=A.substring(a+d),p=parseFloat(u)*c),{easting:I+l,northing:p+h,zoneLetter:o,zoneNumber:n,accuracy:c}}function KA(A){var t;switch(A){case\\\"C\\\":t=11e5;break;case\\\"D\\\":t=2e6;break;case\\\"E\\\":t=28e5;break;case\\\"F\\\":t=37e5;break;case\\\"G\\\":t=46e5;break;case\\\"H\\\":t=55e5;break;case\\\"J\\\":t=64e5;break;case\\\"K\\\":t=73e5;break;case\\\"L\\\":t=82e5;break;case\\\"M\\\":t=91e5;break;case\\\"N\\\":t=0;break;case\\\"P\\\":t=8e5;break;case\\\"Q\\\":t=17e5;break;case\\\"R\\\":t=26e5;break;case\\\"S\\\":t=35e5;break;case\\\"T\\\":t=44e5;break;case\\\"U\\\":t=53e5;break;case\\\"V\\\":t=62e5;break;case\\\"W\\\":t=7e6;break;case\\\"X\\\":t=79e5;break;default:t=-1}if(t>=0)return t;throw\\\"Invalid zone letter: \\\"+A}function YA(A,t,e){if(!(this instanceof YA))return new YA(A,t,e);if(Array.isArray(A))this.x=A[0],this.y=A[1],this.z=A[2]||0;else if(\\\"object\\\"==typeof A)this.x=A.x,this.y=A.y,this.z=A.z||0;else if(\\\"string\\\"==typeof A&&void 0===t){var i=A.split(\\\",\\\");this.x=parseFloat(i[0],10),this.y=parseFloat(i[1],10),this.z=parseFloat(i[2],10)||0}else this.x=A,this.y=t,this.z=e||0;console.warn(\\\"proj4.Point will be removed in version 3, use proj4.toPoint\\\")}YA.fromMGRS=function(A){return new YA(PA(A))},YA.prototype.toMGRS=function(A){return OA([this.x,this.y],A)};const VA=YA;var WA=1,XA=.25,ZA=.046875,$A=.01953125,At=.01068115234375,tt=.75,et=.46875,it=.013020833333333334,st=.007120768229166667,at=.3645833333333333,nt=.005696614583333333,ot=.3076171875;function rt(A){var t=[];t[0]=WA-A*(XA+A*(ZA+A*($A+A*At))),t[1]=A*(tt-A*(ZA+A*($A+A*At)));var e=A*A;return t[2]=e*(et-A*(it+A*st)),e*=A,t[3]=e*(at-A*nt),t[4]=e*A*ot,t}function lt(A,t,e,i){return e*=t,t*=t,i[0]*A-e*(i[1]+t*(i[2]+t*(i[3]+t*i[4])))}var ht=20;function gt(A,t,e){for(var i=1/(1-t),s=A,a=ht;a;--a){var n=Math.sin(s),o=1-t*n*n;if(s-=o=(lt(s,n,Math.cos(s),e)-A)*(o*Math.sqrt(o))*i,Math.abs(o)<d)return s}return s}const ct={init:function(){this.x0=void 0!==this.x0?this.x0:0,this.y0=void 0!==this.y0?this.y0:0,this.long0=void 0!==this.long0?this.long0:0,this.lat0=void 0!==this.lat0?this.lat0:0,this.es&&(this.en=rt(this.es),this.ml0=lt(this.lat0,Math.sin(this.lat0),Math.cos(this.lat0),this.en))},forward:function(A){var t,e,i,s=A.x,a=A.y,n=K(s-this.long0),o=Math.sin(a),r=Math.cos(a);if(this.es){var l=r*n,h=Math.pow(l,2),g=this.ep2*Math.pow(r,2),c=Math.pow(g,2),f=Math.abs(r)>d?Math.tan(a):0,u=Math.pow(f,2),I=Math.pow(u,2);t=1-this.es*Math.pow(o,2),l/=Math.sqrt(t);var p=lt(a,o,r,this.en);e=this.a*(this.k0*l*(1+h/6*(1-u+g+h/20*(5-18*u+I+14*g-58*u*g+h/42*(61+179*I-I*u-479*u)))))+this.x0,i=this.a*(this.k0*(p-this.ml0+o*n*l/2*(1+h/12*(5-u+9*g+4*c+h/30*(61+I-58*u+270*g-330*u*g+h/56*(1385+543*I-I*u-3111*u))))))+this.y0}else{var _=r*Math.sin(n);if(Math.abs(Math.abs(_)-1)<d)return 93;if(e=.5*this.a*this.k0*Math.log((1+_)/(1-_))+this.x0,i=r*Math.cos(n)/Math.sqrt(1-Math.pow(_,2)),(_=Math.abs(i))>=1){if(_-1>d)return 93;i=0}else i=Math.acos(i);a<0&&(i=-i),i=this.a*this.k0*(i-this.lat0)+this.y0}return A.x=e,A.y=i,A},inverse:function(A){var t,e,i,s,a=(A.x-this.x0)*(1/this.a),n=(A.y-this.y0)*(1/this.a);if(this.es)if(e=gt(t=this.ml0+n/this.k0,this.es,this.en),Math.abs(e)<g){var o=Math.sin(e),r=Math.cos(e),l=Math.abs(r)>d?Math.tan(e):0,h=this.ep2*Math.pow(r,2),c=Math.pow(h,2),f=Math.pow(l,2),u=Math.pow(f,2);t=1-this.es*Math.pow(o,2);var I=a*Math.sqrt(t)/this.k0,p=Math.pow(I,2);i=e-(t*=l)*p/(1-this.es)*.5*(1-p/12*(5+3*f-9*h*f+h-4*c-p/30*(61+90*f-252*h*f+45*u+46*h-p/56*(1385+3633*f+4095*u+1574*u*f)))),s=K(this.long0+I*(1-p/6*(1+2*f+h-p/20*(5+28*f+24*u+8*h*f+6*h-p/42*(61+662*f+1320*u+720*u*f))))/r)}else i=g*j(n),s=0;else{var _=Math.exp(a/this.k0),C=.5*(_-1/_),B=this.lat0+n/this.k0,w=Math.cos(B);t=Math.sqrt((1-Math.pow(w,2))/(1+Math.pow(C,2))),i=Math.asin(t),n<0&&(i=-i),s=0===C&&0===w?0:K(Math.atan2(C,w)+this.long0)}return A.x=s,A.y=i,A},names:[\\\"Fast_Transverse_Mercator\\\",\\\"Fast Transverse Mercator\\\"]};function ft(A){var t=Math.exp(A);return t=(t-1/t)/2}function ut(A,t){A=Math.abs(A),t=Math.abs(t);var e=Math.max(A,t),i=Math.min(A,t)/(e||1);return e*Math.sqrt(1+Math.pow(i,2))}function dt(A){var t=Math.abs(A);return t=function(A){var t=1+A,e=t-1;return 0===e?A:A*Math.log(t)/e}(t*(1+t/(ut(1,t)+1))),A<0?-t:t}function It(A,t){for(var e,i=2*Math.cos(2*t),s=A.length-1,a=A[s],n=0;--s>=0;)e=i*a-n+A[s],n=a,a=e;return t+e*Math.sin(2*t)}function pt(A,t,e){for(var i,s,a=Math.sin(t),n=Math.cos(t),o=ft(e),r=function(A){var t=Math.exp(A);return(t+1/t)/2}(e),l=2*n*r,h=-2*a*o,g=A.length-1,c=A[g],f=0,u=0,d=0;--g>=0;)i=u,s=f,c=l*(u=c)-i-h*(f=d)+A[g],d=h*u-s+l*f;return[(l=a*r)*c-(h=n*o)*d,l*d+h*c]}const _t={init:function(){if(!this.approx&&(isNaN(this.es)||this.es<=0))throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\\\"Fast_Transverse_Mercator\\\"] in the WKT.');this.approx&&(ct.init.apply(this),this.forward=ct.forward,this.inverse=ct.inverse),this.x0=void 0!==this.x0?this.x0:0,this.y0=void 0!==this.y0?this.y0:0,this.long0=void 0!==this.long0?this.long0:0,this.lat0=void 0!==this.lat0?this.lat0:0,this.cgb=[],this.cbg=[],this.utg=[],this.gtu=[];var A=this.es/(1+Math.sqrt(1-this.es)),t=A/(2-A),e=t;this.cgb[0]=t*(2+t*(-2/3+t*(t*(116/45+t*(26/45+t*(-2854/675)))-2))),this.cbg[0]=t*(t*(2/3+t*(4/3+t*(-82/45+t*(32/45+t*(4642/4725)))))-2),e*=t,this.cgb[1]=e*(7/3+t*(t*(-227/45+t*(2704/315+t*(2323/945)))-1.6)),this.cbg[1]=e*(5/3+t*(-16/15+t*(-13/9+t*(904/315+t*(-1522/945))))),e*=t,this.cgb[2]=e*(56/15+t*(-136/35+t*(-1262/105+t*(73814/2835)))),this.cbg[2]=e*(-26/15+t*(34/21+t*(1.6+t*(-12686/2835)))),e*=t,this.cgb[3]=e*(4279/630+t*(-332/35+t*(-399572/14175))),this.cbg[3]=e*(1237/630+t*(t*(-24832/14175)-2.4)),e*=t,this.cgb[4]=e*(4174/315+t*(-144838/6237)),this.cbg[4]=e*(-734/315+t*(109598/31185)),e*=t,this.cgb[5]=e*(601676/22275),this.cbg[5]=e*(444337/155925),e=Math.pow(t,2),this.Qn=this.k0/(1+t)*(1+e*(1/4+e*(1/64+e/256))),this.utg[0]=t*(t*(2/3+t*(-37/96+t*(1/360+t*(81/512+t*(-96199/604800)))))-.5),this.gtu[0]=t*(.5+t*(-2/3+t*(5/16+t*(41/180+t*(-127/288+t*(7891/37800)))))),this.utg[1]=e*(-1/48+t*(-1/15+t*(437/1440+t*(-46/105+t*(1118711/3870720))))),this.gtu[1]=e*(13/48+t*(t*(557/1440+t*(281/630+t*(-1983433/1935360)))-.6)),e*=t,this.utg[2]=e*(-17/480+t*(37/840+t*(209/4480+t*(-5569/90720)))),this.gtu[2]=e*(61/240+t*(-103/140+t*(15061/26880+t*(167603/181440)))),e*=t,this.utg[3]=e*(-4397/161280+t*(11/504+t*(830251/7257600))),this.gtu[3]=e*(49561/161280+t*(-179/168+t*(6601661/7257600))),e*=t,this.utg[4]=e*(-4583/161280+t*(108847/3991680)),this.gtu[4]=e*(34729/80640+t*(-3418889/1995840)),e*=t,this.utg[5]=e*(-20648693/638668800),this.gtu[5]=.6650675310896665*e;var i=It(this.cbg,this.lat0);this.Zb=-this.Qn*(i+function(A,t){for(var e,i=2*Math.cos(t),s=A.length-1,a=A[s],n=0;--s>=0;)e=i*a-n+A[s],n=a,a=e;return Math.sin(t)*e}(this.gtu,2*i))},forward:function(A){var t=K(A.x-this.long0),e=A.y;e=It(this.cbg,e);var i=Math.sin(e),s=Math.cos(e),a=Math.sin(t),n=Math.cos(t);e=Math.atan2(i,n*s),t=Math.atan2(a*s,ut(i,s*n)),t=dt(Math.tan(t));var o,r,l=pt(this.gtu,2*e,2*t);return e+=l[0],t+=l[1],Math.abs(t)<=2.623395162778?(o=this.a*(this.Qn*t)+this.x0,r=this.a*(this.Qn*e+this.Zb)+this.y0):(o=1/0,r=1/0),A.x=o,A.y=r,A},inverse:function(A){var t,e,i=(A.x-this.x0)*(1/this.a),s=(A.y-this.y0)*(1/this.a);if(s=(s-this.Zb)/this.Qn,i/=this.Qn,Math.abs(i)<=2.623395162778){var a=pt(this.utg,2*s,2*i);s+=a[0],i+=a[1],i=Math.atan(ft(i));var n=Math.sin(s),o=Math.cos(s),r=Math.sin(i),l=Math.cos(i);s=Math.atan2(n*l,ut(r,l*o)),t=K((i=Math.atan2(r,l*o))+this.long0),e=It(this.cgb,s)}else t=1/0,e=1/0;return A.x=t,A.y=e,A},names:[\\\"Extended_Transverse_Mercator\\\",\\\"Extended Transverse Mercator\\\",\\\"etmerc\\\",\\\"Transverse_Mercator\\\",\\\"Transverse Mercator\\\",\\\"Gauss Kruger\\\",\\\"Gauss_Kruger\\\",\\\"tmerc\\\"]};const Ct={init:function(){var A=function(A,t){if(void 0===A){if((A=Math.floor(30*(K(t)+Math.PI)/Math.PI)+1)<0)return 0;if(A>60)return 60}return A}(this.zone,this.long0);if(void 0===A)throw new Error(\\\"unknown utm zone\\\");this.lat0=0,this.long0=(6*Math.abs(A)-183)*I,this.x0=5e5,this.y0=this.utmSouth?1e7:0,this.k0=.9996,_t.init.apply(this),this.forward=_t.forward,this.inverse=_t.inverse},names:[\\\"Universal Transverse Mercator System\\\",\\\"utm\\\"],dependsOn:\\\"etmerc\\\"};function Bt(A,t){return Math.pow((1-A)/(1+A),t)}const wt={init:function(){var A=Math.sin(this.lat0),t=Math.cos(this.lat0);t*=t,this.rc=Math.sqrt(1-this.es)/(1-this.es*A*A),this.C=Math.sqrt(1+this.es*t*t/(1-this.es)),this.phic0=Math.asin(A/this.C),this.ratexp=.5*this.C*this.e,this.K=Math.tan(.5*this.phic0+_)/(Math.pow(Math.tan(.5*this.lat0+_),this.C)*Bt(this.e*A,this.ratexp))},forward:function(A){var t=A.x,e=A.y;return A.y=2*Math.atan(this.K*Math.pow(Math.tan(.5*e+_),this.C)*Bt(this.e*Math.sin(e),this.ratexp))-g,A.x=this.C*t,A},inverse:function(A){for(var t=A.x/this.C,e=A.y,i=Math.pow(Math.tan(.5*e+_)/this.K,1/this.C),s=20;s>0&&(e=2*Math.atan(i*Bt(this.e*Math.sin(A.y),-.5*this.e))-g,!(Math.abs(e-A.y)<1e-14));--s)A.y=e;return s?(A.x=t,A.y=e,A):null},names:[\\\"gauss\\\"]};const Et={init:function(){wt.init.apply(this),this.rc&&(this.sinc0=Math.sin(this.phic0),this.cosc0=Math.cos(this.phic0),this.R2=2*this.rc,this.title||(this.title=\\\"Oblique Stereographic Alternative\\\"))},forward:function(A){var t,e,i,s;return A.x=K(A.x-this.long0),wt.forward.apply(this,[A]),t=Math.sin(A.y),e=Math.cos(A.y),i=Math.cos(A.x),s=this.k0*this.R2/(1+this.sinc0*t+this.cosc0*e*i),A.x=s*e*Math.sin(A.x),A.y=s*(this.cosc0*t-this.sinc0*e*i),A.x=this.a*A.x+this.x0,A.y=this.a*A.y+this.y0,A},inverse:function(A){var t,e,i,s,a;if(A.x=(A.x-this.x0)/this.a,A.y=(A.y-this.y0)/this.a,A.x/=this.k0,A.y/=this.k0,a=ut(A.x,A.y)){var n=2*Math.atan2(a,this.R2);t=Math.sin(n),e=Math.cos(n),s=Math.asin(e*this.sinc0+A.y*t*this.cosc0/a),i=Math.atan2(A.x*t,a*this.cosc0*e-A.y*this.sinc0*t)}else s=this.phic0,i=0;return A.x=i,A.y=s,wt.inverse.apply(this,[A]),A.x=K(A.x+this.long0),A},names:[\\\"Stereographic_North_Pole\\\",\\\"Oblique_Stereographic\\\",\\\"sterea\\\",\\\"Oblique Stereographic Alternative\\\",\\\"Double_Stereographic\\\"]};const yt={init:function(){this.x0=this.x0||0,this.y0=this.y0||0,this.lat0=this.lat0||0,this.long0=this.long0||0,this.coslat0=Math.cos(this.lat0),this.sinlat0=Math.sin(this.lat0),this.sphere?1===this.k0&&!isNaN(this.lat_ts)&&Math.abs(this.coslat0)<=d&&(this.k0=.5*(1+j(this.lat0)*Math.sin(this.lat_ts))):(Math.abs(this.coslat0)<=d&&(this.lat0>0?this.con=1:this.con=-1),this.cons=Math.sqrt(Math.pow(1+this.e,1+this.e)*Math.pow(1-this.e,1-this.e)),1===this.k0&&!isNaN(this.lat_ts)&&Math.abs(this.coslat0)<=d&&Math.abs(Math.cos(this.lat_ts))>d&&(this.k0=.5*this.cons*z(this.e,Math.sin(this.lat_ts),Math.cos(this.lat_ts))/Y(this.e,this.con*this.lat_ts,this.con*Math.sin(this.lat_ts))),this.ms1=z(this.e,this.sinlat0,this.coslat0),this.X0=2*Math.atan(this.ssfn_(this.lat0,this.sinlat0,this.e))-g,this.cosX0=Math.cos(this.X0),this.sinX0=Math.sin(this.X0))},forward:function(A){var t,e,i,s,a,n,o=A.x,r=A.y,l=Math.sin(r),h=Math.cos(r),c=K(o-this.long0);return Math.abs(Math.abs(o-this.long0)-Math.PI)<=d&&Math.abs(r+this.lat0)<=d?(A.x=NaN,A.y=NaN,A):this.sphere?(t=2*this.k0/(1+this.sinlat0*l+this.coslat0*h*Math.cos(c)),A.x=this.a*t*h*Math.sin(c)+this.x0,A.y=this.a*t*(this.coslat0*l-this.sinlat0*h*Math.cos(c))+this.y0,A):(e=2*Math.atan(this.ssfn_(r,l,this.e))-g,s=Math.cos(e),i=Math.sin(e),Math.abs(this.coslat0)<=d?(a=Y(this.e,r*this.con,this.con*l),n=2*this.a*this.k0*a/this.cons,A.x=this.x0+n*Math.sin(o-this.long0),A.y=this.y0-this.con*n*Math.cos(o-this.long0),A):(Math.abs(this.sinlat0)<d?(t=2*this.a*this.k0/(1+s*Math.cos(c)),A.y=t*i):(t=2*this.a*this.k0*this.ms1/(this.cosX0*(1+this.sinX0*i+this.cosX0*s*Math.cos(c))),A.y=t*(this.cosX0*i-this.sinX0*s*Math.cos(c))+this.y0),A.x=t*s*Math.sin(c)+this.x0,A))},inverse:function(A){var t,e,i,s,a;A.x-=this.x0,A.y-=this.y0;var n=Math.sqrt(A.x*A.x+A.y*A.y);if(this.sphere){var o=2*Math.atan(n/(2*this.a*this.k0));return t=this.long0,e=this.lat0,n<=d?(A.x=t,A.y=e,A):(e=Math.asin(Math.cos(o)*this.sinlat0+A.y*Math.sin(o)*this.coslat0/n),t=Math.abs(this.coslat0)<d?this.lat0>0?K(this.long0+Math.atan2(A.x,-1*A.y)):K(this.long0+Math.atan2(A.x,A.y)):K(this.long0+Math.atan2(A.x*Math.sin(o),n*this.coslat0*Math.cos(o)-A.y*this.sinlat0*Math.sin(o))),A.x=t,A.y=e,A)}if(Math.abs(this.coslat0)<=d){if(n<=d)return e=this.lat0,t=this.long0,A.x=t,A.y=e,A;A.x*=this.con,A.y*=this.con,i=n*this.cons/(2*this.a*this.k0),e=this.con*V(this.e,i),t=this.con*K(this.con*this.long0+Math.atan2(A.x,-1*A.y))}else s=2*Math.atan(n*this.cosX0/(2*this.a*this.k0*this.ms1)),t=this.long0,n<=d?a=this.X0:(a=Math.asin(Math.cos(s)*this.sinX0+A.y*Math.sin(s)*this.cosX0/n),t=K(this.long0+Math.atan2(A.x*Math.sin(s),n*this.cosX0*Math.cos(s)-A.y*this.sinX0*Math.sin(s)))),e=-1*V(this.e,Math.tan(.5*(g+a)));return A.x=t,A.y=e,A},names:[\\\"stere\\\",\\\"Stereographic_South_Pole\\\",\\\"Polar Stereographic (variant B)\\\",\\\"Polar_Stereographic\\\"],ssfn_:function(A,t,e){return t*=e,Math.tan(.5*(g+A))*Math.pow((1-t)/(1+t),.5*e)}};const Qt={init:function(){var A=this.lat0;this.lambda0=this.long0;var t=Math.sin(A),e=this.a,i=1/this.rf,s=2*i-Math.pow(i,2),a=this.e=Math.sqrt(s);this.R=this.k0*e*Math.sqrt(1-s)/(1-s*Math.pow(t,2)),this.alpha=Math.sqrt(1+s/(1-s)*Math.pow(Math.cos(A),4)),this.b0=Math.asin(t/this.alpha);var n=Math.log(Math.tan(Math.PI/4+this.b0/2)),o=Math.log(Math.tan(Math.PI/4+A/2)),r=Math.log((1+a*t)/(1-a*t));this.K=n-this.alpha*o+this.alpha*a/2*r},forward:function(A){var t=Math.log(Math.tan(Math.PI/4-A.y/2)),e=this.e/2*Math.log((1+this.e*Math.sin(A.y))/(1-this.e*Math.sin(A.y))),i=-this.alpha*(t+e)+this.K,s=2*(Math.atan(Math.exp(i))-Math.PI/4),a=this.alpha*(A.x-this.lambda0),n=Math.atan(Math.sin(a)/(Math.sin(this.b0)*Math.tan(s)+Math.cos(this.b0)*Math.cos(a))),o=Math.asin(Math.cos(this.b0)*Math.sin(s)-Math.sin(this.b0)*Math.cos(s)*Math.cos(a));return A.y=this.R/2*Math.log((1+Math.sin(o))/(1-Math.sin(o)))+this.y0,A.x=this.R*n+this.x0,A},inverse:function(A){for(var t=A.x-this.x0,e=A.y-this.y0,i=t/this.R,s=2*(Math.atan(Math.exp(e/this.R))-Math.PI/4),a=Math.asin(Math.cos(this.b0)*Math.sin(s)+Math.sin(this.b0)*Math.cos(s)*Math.cos(i)),n=Math.atan(Math.sin(i)/(Math.cos(this.b0)*Math.cos(i)-Math.sin(this.b0)*Math.tan(s))),o=this.lambda0+n/this.alpha,r=0,l=a,h=-1e3,g=0;Math.abs(l-h)>1e-7;){if(++g>20)return;r=1/this.alpha*(Math.log(Math.tan(Math.PI/4+a/2))-this.K)+this.e*Math.log(Math.tan(Math.PI/4+Math.asin(this.e*Math.sin(l))/2)),h=l,l=2*Math.atan(Math.exp(r))-Math.PI/2}return A.x=o,A.y=l,A},names:[\\\"somerc\\\"]};var mt=1e-7;const kt={init:function(){var A,t,e,i,s,a,n,o,r,l,h,c,f,u=0,p=0,B=0,w=0,E=0,y=0,Q=0;this.no_off=(f=\\\"object\\\"==typeof(c=this).PROJECTION?Object.keys(c.PROJECTION)[0]:c.PROJECTION,\\\"no_uoff\\\"in c||\\\"no_off\\\"in c||-1!==[\\\"Hotine_Oblique_Mercator\\\",\\\"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\\\"].indexOf(f)),this.no_rot=\\\"no_rot\\\"in this;var m=!1;\\\"alpha\\\"in this&&(m=!0);var k=!1;if(\\\"rectified_grid_angle\\\"in this&&(k=!0),m&&(Q=this.alpha),k&&(u=this.rectified_grid_angle*I),m||k)p=this.longc;else if(B=this.long1,E=this.lat1,w=this.long2,y=this.lat2,Math.abs(E-y)<=mt||(A=Math.abs(E))<=mt||Math.abs(A-g)<=mt||Math.abs(Math.abs(this.lat0)-g)<=mt||Math.abs(Math.abs(y)-g)<=mt)throw new Error;var x=1-this.es;t=Math.sqrt(x),Math.abs(this.lat0)>d?(o=Math.sin(this.lat0),e=Math.cos(this.lat0),A=1-this.es*o*o,this.B=e*e,this.B=Math.sqrt(1+this.es*this.B*this.B/x),this.A=this.B*this.k0*t/A,(s=(i=this.B*t/(e*Math.sqrt(A)))*i-1)<=0?s=0:(s=Math.sqrt(s),this.lat0<0&&(s=-s)),this.E=s+=i,this.E*=Math.pow(Y(this.e,this.lat0,o),this.B)):(this.B=1/t,this.A=this.k0,this.E=i=s=1),m||k?(m?(h=Math.asin(Math.sin(Q)/i),k||(u=Q)):(h=u,Q=Math.asin(i*Math.sin(h))),this.lam0=p-Math.asin(.5*(s-1/s)*Math.tan(h))/this.B):(a=Math.pow(Y(this.e,E,Math.sin(E)),this.B),n=Math.pow(Y(this.e,y,Math.sin(y)),this.B),s=this.E/a,r=(n-a)/(n+a),l=((l=this.E*this.E)-n*a)/(l+n*a),(A=B-w)<-Math.pi?w-=C:A>Math.pi&&(w+=C),this.lam0=K(.5*(B+w)-Math.atan(l*Math.tan(.5*this.B*(B-w))/r)/this.B),h=Math.atan(2*Math.sin(this.B*K(B-this.lam0))/(s-1/s)),u=Q=Math.asin(i*Math.sin(h))),this.singam=Math.sin(h),this.cosgam=Math.cos(h),this.sinrot=Math.sin(u),this.cosrot=Math.cos(u),this.rB=1/this.B,this.ArB=this.A*this.rB,this.BrA=1/this.ArB,this.A,this.B,this.no_off?this.u_0=0:(this.u_0=Math.abs(this.ArB*Math.atan(Math.sqrt(i*i-1)/Math.cos(Q))),this.lat0<0&&(this.u_0=-this.u_0)),s=.5*h,this.v_pole_n=this.ArB*Math.log(Math.tan(_-s)),this.v_pole_s=this.ArB*Math.log(Math.tan(_+s))},forward:function(A){var t,e,i,s,a,n,o,r,l={};if(A.x=A.x-this.lam0,Math.abs(Math.abs(A.y)-g)>d){if(t=.5*((a=this.E/Math.pow(Y(this.e,A.y,Math.sin(A.y)),this.B))-(n=1/a)),e=.5*(a+n),s=Math.sin(this.B*A.x),i=(t*this.singam-s*this.cosgam)/e,Math.abs(Math.abs(i)-1)<d)throw new Error;r=.5*this.ArB*Math.log((1-i)/(1+i)),n=Math.cos(this.B*A.x),o=Math.abs(n)<mt?this.A*A.x:this.ArB*Math.atan2(t*this.cosgam+s*this.singam,n)}else r=A.y>0?this.v_pole_n:this.v_pole_s,o=this.ArB*A.y;return this.no_rot?(l.x=o,l.y=r):(o-=this.u_0,l.x=r*this.cosrot+o*this.sinrot,l.y=o*this.cosrot-r*this.sinrot),l.x=this.a*l.x+this.x0,l.y=this.a*l.y+this.y0,l},inverse:function(A){var t,e,i,s,a,n,o,r={};if(A.x=(A.x-this.x0)*(1/this.a),A.y=(A.y-this.y0)*(1/this.a),this.no_rot?(e=A.y,t=A.x):(e=A.x*this.cosrot-A.y*this.sinrot,t=A.y*this.cosrot+A.x*this.sinrot+this.u_0),s=.5*((i=Math.exp(-this.BrA*e))-1/i),a=.5*(i+1/i),o=((n=Math.sin(this.BrA*t))*this.cosgam+s*this.singam)/a,Math.abs(Math.abs(o)-1)<d)r.x=0,r.y=o<0?-g:g;else{if(r.y=this.E/Math.sqrt((1+o)/(1-o)),r.y=V(this.e,Math.pow(r.y,1/this.B)),r.y===1/0)throw new Error;r.x=-this.rB*Math.atan2(s*this.cosgam-n*this.singam,Math.cos(this.BrA*t))}return r.x+=this.lam0,r},names:[\\\"Hotine_Oblique_Mercator\\\",\\\"Hotine Oblique Mercator\\\",\\\"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\\\",\\\"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\\\",\\\"Hotine_Oblique_Mercator_Azimuth_Center\\\",\\\"Oblique_Mercator\\\",\\\"omerc\\\"]};const xt={init:function(){if(this.lat2||(this.lat2=this.lat1),this.k0||(this.k0=1),this.x0=this.x0||0,this.y0=this.y0||0,!(Math.abs(this.lat1+this.lat2)<d)){var A=this.b/this.a;this.e=Math.sqrt(1-A*A);var t=Math.sin(this.lat1),e=Math.cos(this.lat1),i=z(this.e,t,e),s=Y(this.e,this.lat1,t),a=Math.sin(this.lat2),n=Math.cos(this.lat2),o=z(this.e,a,n),r=Y(this.e,this.lat2,a),l=Y(this.e,this.lat0,Math.sin(this.lat0));Math.abs(this.lat1-this.lat2)>d?this.ns=Math.log(i/o)/Math.log(s/r):this.ns=t,isNaN(this.ns)&&(this.ns=t),this.f0=i/(this.ns*Math.pow(s,this.ns)),this.rh=this.a*this.f0*Math.pow(l,this.ns),this.title||(this.title=\\\"Lambert Conformal Conic\\\")}},forward:function(A){var t=A.x,e=A.y;Math.abs(2*Math.abs(e)-Math.PI)<=d&&(e=j(e)*(g-2*d));var i,s,a=Math.abs(Math.abs(e)-g);if(a>d)i=Y(this.e,e,Math.sin(e)),s=this.a*this.f0*Math.pow(i,this.ns);else{if((a=e*this.ns)<=0)return null;s=0}var n=this.ns*K(t-this.long0);return A.x=this.k0*(s*Math.sin(n))+this.x0,A.y=this.k0*(this.rh-s*Math.cos(n))+this.y0,A},inverse:function(A){var t,e,i,s,a,n=(A.x-this.x0)/this.k0,o=this.rh-(A.y-this.y0)/this.k0;this.ns>0?(t=Math.sqrt(n*n+o*o),e=1):(t=-Math.sqrt(n*n+o*o),e=-1);var r=0;if(0!==t&&(r=Math.atan2(e*n,e*o)),0!==t||this.ns>0){if(e=1/this.ns,i=Math.pow(t/(this.a*this.f0),e),-9999===(s=V(this.e,i)))return null}else s=-g;return a=K(r/this.ns+this.long0),A.x=a,A.y=s,A},names:[\\\"Lambert Tangential Conformal Conic Projection\\\",\\\"Lambert_Conformal_Conic\\\",\\\"Lambert_Conformal_Conic_1SP\\\",\\\"Lambert_Conformal_Conic_2SP\\\",\\\"lcc\\\",\\\"Lambert Conic Conformal (1SP)\\\",\\\"Lambert Conic Conformal (2SP)\\\"]};const Mt={init:function(){this.a=6377397.155,this.es=.006674372230614,this.e=Math.sqrt(this.es),this.lat0||(this.lat0=.863937979737193),this.long0||(this.long0=.4334234309119251),this.k0||(this.k0=.9999),this.s45=.785398163397448,this.s90=2*this.s45,this.fi0=this.lat0,this.e2=this.es,this.e=Math.sqrt(this.e2),this.alfa=Math.sqrt(1+this.e2*Math.pow(Math.cos(this.fi0),4)/(1-this.e2)),this.uq=1.04216856380474,this.u0=Math.asin(Math.sin(this.fi0)/this.alfa),this.g=Math.pow((1+this.e*Math.sin(this.fi0))/(1-this.e*Math.sin(this.fi0)),this.alfa*this.e/2),this.k=Math.tan(this.u0/2+this.s45)/Math.pow(Math.tan(this.fi0/2+this.s45),this.alfa)*this.g,this.k1=this.k0,this.n0=this.a*Math.sqrt(1-this.e2)/(1-this.e2*Math.pow(Math.sin(this.fi0),2)),this.s0=1.37008346281555,this.n=Math.sin(this.s0),this.ro0=this.k1*this.n0/Math.tan(this.s0),this.ad=this.s90-this.uq},forward:function(A){var t,e,i,s,a,n,o,r=A.x,l=A.y,h=K(r-this.long0);return t=Math.pow((1+this.e*Math.sin(l))/(1-this.e*Math.sin(l)),this.alfa*this.e/2),e=2*(Math.atan(this.k*Math.pow(Math.tan(l/2+this.s45),this.alfa)/t)-this.s45),i=-h*this.alfa,s=Math.asin(Math.cos(this.ad)*Math.sin(e)+Math.sin(this.ad)*Math.cos(e)*Math.cos(i)),a=Math.asin(Math.cos(e)*Math.sin(i)/Math.cos(s)),n=this.n*a,o=this.ro0*Math.pow(Math.tan(this.s0/2+this.s45),this.n)/Math.pow(Math.tan(s/2+this.s45),this.n),A.y=o*Math.cos(n)/1,A.x=o*Math.sin(n)/1,this.czech||(A.y*=-1,A.x*=-1),A},inverse:function(A){var t,e,i,s,a,n,o,r=A.x;A.x=A.y,A.y=r,this.czech||(A.y*=-1,A.x*=-1),a=Math.sqrt(A.x*A.x+A.y*A.y),s=Math.atan2(A.y,A.x)/Math.sin(this.s0),i=2*(Math.atan(Math.pow(this.ro0/a,1/this.n)*Math.tan(this.s0/2+this.s45))-this.s45),t=Math.asin(Math.cos(this.ad)*Math.sin(i)-Math.sin(this.ad)*Math.cos(i)*Math.cos(s)),e=Math.asin(Math.cos(i)*Math.sin(s)/Math.cos(t)),A.x=this.long0-e/this.alfa,n=t,o=0;var l=0;do{A.y=2*(Math.atan(Math.pow(this.k,-1/this.alfa)*Math.pow(Math.tan(t/2+this.s45),1/this.alfa)*Math.pow((1+this.e*Math.sin(n))/(1-this.e*Math.sin(n)),this.e/2))-this.s45),Math.abs(n-A.y)<1e-10&&(o=1),n=A.y,l+=1}while(0===o&&l<15);return l>=15?null:A},names:[\\\"Krovak\\\",\\\"krovak\\\"]};function bt(A,t,e,i,s){return A*s-t*Math.sin(2*s)+e*Math.sin(4*s)-i*Math.sin(6*s)}function Dt(A){return 1-.25*A*(1+A/16*(3+1.25*A))}function vt(A){return.375*A*(1+.25*A*(1+.46875*A))}function St(A){return.05859375*A*A*(1+.75*A)}function Gt(A){return A*A*A*(35/3072)}function Nt(A,t,e){var i=t*e;return A/Math.sqrt(1-i*i)}function Rt(A){return Math.abs(A)<g?A:A-j(A)*Math.PI}function Ft(A,t,e,i,s){var a,n;a=A/t;for(var o=0;o<15;o++)if(a+=n=(A-(t*a-e*Math.sin(2*a)+i*Math.sin(4*a)-s*Math.sin(6*a)))/(t-2*e*Math.cos(2*a)+4*i*Math.cos(4*a)-6*s*Math.cos(6*a)),Math.abs(n)<=1e-10)return a;return NaN}const Lt={init:function(){this.sphere||(this.e0=Dt(this.es),this.e1=vt(this.es),this.e2=St(this.es),this.e3=Gt(this.es),this.ml0=this.a*bt(this.e0,this.e1,this.e2,this.e3,this.lat0))},forward:function(A){var t,e,i=A.x,s=A.y;if(i=K(i-this.long0),this.sphere)t=this.a*Math.asin(Math.cos(s)*Math.sin(i)),e=this.a*(Math.atan2(Math.tan(s),Math.cos(i))-this.lat0);else{var a=Math.sin(s),n=Math.cos(s),o=Nt(this.a,this.e,a),r=Math.tan(s)*Math.tan(s),l=i*Math.cos(s),h=l*l,g=this.es*n*n/(1-this.es);t=o*l*(1-h*r*(1/6-(8-r+8*g)*h/120)),e=this.a*bt(this.e0,this.e1,this.e2,this.e3,s)-this.ml0+o*a/n*h*(.5+(5-r+6*g)*h/24)}return A.x=t+this.x0,A.y=e+this.y0,A},inverse:function(A){A.x-=this.x0,A.y-=this.y0;var t,e,i=A.x/this.a,s=A.y/this.a;if(this.sphere){var a=s+this.lat0;t=Math.asin(Math.sin(a)*Math.cos(i)),e=Math.atan2(Math.tan(i),Math.cos(a))}else{var n=Ft(this.ml0/this.a+s,this.e0,this.e1,this.e2,this.e3);if(Math.abs(Math.abs(n)-g)<=d)return A.x=this.long0,A.y=g,s<0&&(A.y*=-1),A;var o=Nt(this.a,this.e,Math.sin(n)),r=o*o*o/this.a/this.a*(1-this.es),l=Math.pow(Math.tan(n),2),h=i*this.a/o,c=h*h;t=n-o*Math.tan(n)/r*h*h*(.5-(1+3*l)*h*h/24),e=h*(1-c*(l/3+(1+3*l)*l*c/15))/Math.cos(n)}return A.x=K(e+this.long0),A.y=Rt(t),A},names:[\\\"Cassini\\\",\\\"Cassini_Soldner\\\",\\\"cass\\\"]};function Ut(A,t){var e;return A>1e-7?(1-A*A)*(t/(1-(e=A*t)*e)-.5/A*Math.log((1-e)/(1+e))):2*t}var Ot=.3333333333333333,Pt=.17222222222222222,Tt=.10257936507936508,Ht=.06388888888888888,Jt=.0664021164021164,qt=.016415012942191543;const zt={init:function(){var A,t=Math.abs(this.lat0);if(Math.abs(t-g)<d?this.mode=this.lat0<0?this.S_POLE:this.N_POLE:Math.abs(t)<d?this.mode=this.EQUIT:this.mode=this.OBLIQ,this.es>0)switch(this.qp=Ut(this.e,1),this.mmf=.5/(1-this.es),this.apa=function(A){var t,e=[];return e[0]=A*Ot,t=A*A,e[0]+=t*Pt,e[1]=t*Ht,t*=A,e[0]+=t*Tt,e[1]+=t*Jt,e[2]=t*qt,e}(this.es),this.mode){case this.N_POLE:case this.S_POLE:this.dd=1;break;case this.EQUIT:this.rq=Math.sqrt(.5*this.qp),this.dd=1/this.rq,this.xmf=1,this.ymf=.5*this.qp;break;case this.OBLIQ:this.rq=Math.sqrt(.5*this.qp),A=Math.sin(this.lat0),this.sinb1=Ut(this.e,A)/this.qp,this.cosb1=Math.sqrt(1-this.sinb1*this.sinb1),this.dd=Math.cos(this.lat0)/(Math.sqrt(1-this.es*A*A)*this.rq*this.cosb1),this.ymf=(this.xmf=this.rq)/this.dd,this.xmf*=this.dd}else this.mode===this.OBLIQ&&(this.sinph0=Math.sin(this.lat0),this.cosph0=Math.cos(this.lat0))},forward:function(A){var t,e,i,s,a,n,o,r,l,h,c=A.x,f=A.y;if(c=K(c-this.long0),this.sphere){if(a=Math.sin(f),h=Math.cos(f),i=Math.cos(c),this.mode===this.OBLIQ||this.mode===this.EQUIT){if((e=this.mode===this.EQUIT?1+h*i:1+this.sinph0*a+this.cosph0*h*i)<=d)return null;t=(e=Math.sqrt(2/e))*h*Math.sin(c),e*=this.mode===this.EQUIT?a:this.cosph0*a-this.sinph0*h*i}else if(this.mode===this.N_POLE||this.mode===this.S_POLE){if(this.mode===this.N_POLE&&(i=-i),Math.abs(f+this.lat0)<d)return null;e=_-.5*f,t=(e=2*(this.mode===this.S_POLE?Math.cos(e):Math.sin(e)))*Math.sin(c),e*=i}}else{switch(o=0,r=0,l=0,i=Math.cos(c),s=Math.sin(c),a=Math.sin(f),n=Ut(this.e,a),this.mode!==this.OBLIQ&&this.mode!==this.EQUIT||(o=n/this.qp,r=Math.sqrt(1-o*o)),this.mode){case this.OBLIQ:l=1+this.sinb1*o+this.cosb1*r*i;break;case this.EQUIT:l=1+r*i;break;case this.N_POLE:l=g+f,n=this.qp-n;break;case this.S_POLE:l=f-g,n=this.qp+n}if(Math.abs(l)<d)return null;switch(this.mode){case this.OBLIQ:case this.EQUIT:l=Math.sqrt(2/l),e=this.mode===this.OBLIQ?this.ymf*l*(this.cosb1*o-this.sinb1*r*i):(l=Math.sqrt(2/(1+r*i)))*o*this.ymf,t=this.xmf*l*r*s;break;case this.N_POLE:case this.S_POLE:n>=0?(t=(l=Math.sqrt(n))*s,e=i*(this.mode===this.S_POLE?l:-l)):t=e=0}}return A.x=this.a*t+this.x0,A.y=this.a*e+this.y0,A},inverse:function(A){A.x-=this.x0,A.y-=this.y0;var t,e,i,s,a,n,o,r,l,h,c=A.x/this.a,f=A.y/this.a;if(this.sphere){var u,I=0,p=0;if((e=.5*(u=Math.sqrt(c*c+f*f)))>1)return null;switch(e=2*Math.asin(e),this.mode!==this.OBLIQ&&this.mode!==this.EQUIT||(p=Math.sin(e),I=Math.cos(e)),this.mode){case this.EQUIT:e=Math.abs(u)<=d?0:Math.asin(f*p/u),c*=p,f=I*u;break;case this.OBLIQ:e=Math.abs(u)<=d?this.lat0:Math.asin(I*this.sinph0+f*p*this.cosph0/u),c*=p*this.cosph0,f=(I-Math.sin(e)*this.sinph0)*u;break;case this.N_POLE:f=-f,e=g-e;break;case this.S_POLE:e-=g}t=0!==f||this.mode!==this.EQUIT&&this.mode!==this.OBLIQ?Math.atan2(c,f):0}else{if(o=0,this.mode===this.OBLIQ||this.mode===this.EQUIT){if(c/=this.dd,f*=this.dd,(n=Math.sqrt(c*c+f*f))<d)return A.x=this.long0,A.y=this.lat0,A;s=2*Math.asin(.5*n/this.rq),i=Math.cos(s),c*=s=Math.sin(s),this.mode===this.OBLIQ?(o=i*this.sinb1+f*s*this.cosb1/n,a=this.qp*o,f=n*this.cosb1*i-f*this.sinb1*s):(o=f*s/n,a=this.qp*o,f=n*i)}else if(this.mode===this.N_POLE||this.mode===this.S_POLE){if(this.mode===this.N_POLE&&(f=-f),!(a=c*c+f*f))return A.x=this.long0,A.y=this.lat0,A;o=1-a/this.qp,this.mode===this.S_POLE&&(o=-o)}t=Math.atan2(c,f),r=Math.asin(o),l=this.apa,h=r+r,e=r+l[0]*Math.sin(h)+l[1]*Math.sin(h+h)+l[2]*Math.sin(h+h+h)}return A.x=K(this.long0+t),A.y=e,A},names:[\\\"Lambert Azimuthal Equal Area\\\",\\\"Lambert_Azimuthal_Equal_Area\\\",\\\"laea\\\"],S_POLE:1,N_POLE:2,EQUIT:3,OBLIQ:4};function jt(A){return Math.abs(A)>1&&(A=A>1?1:-1),Math.asin(A)}const Kt={init:function(){Math.abs(this.lat1+this.lat2)<d||(this.temp=this.b/this.a,this.es=1-Math.pow(this.temp,2),this.e3=Math.sqrt(this.es),this.sin_po=Math.sin(this.lat1),this.cos_po=Math.cos(this.lat1),this.t1=this.sin_po,this.con=this.sin_po,this.ms1=z(this.e3,this.sin_po,this.cos_po),this.qs1=Ut(this.e3,this.sin_po),this.sin_po=Math.sin(this.lat2),this.cos_po=Math.cos(this.lat2),this.t2=this.sin_po,this.ms2=z(this.e3,this.sin_po,this.cos_po),this.qs2=Ut(this.e3,this.sin_po),this.sin_po=Math.sin(this.lat0),this.cos_po=Math.cos(this.lat0),this.t3=this.sin_po,this.qs0=Ut(this.e3,this.sin_po),Math.abs(this.lat1-this.lat2)>d?this.ns0=(this.ms1*this.ms1-this.ms2*this.ms2)/(this.qs2-this.qs1):this.ns0=this.con,this.c=this.ms1*this.ms1+this.ns0*this.qs1,this.rh=this.a*Math.sqrt(this.c-this.ns0*this.qs0)/this.ns0)},forward:function(A){var t=A.x,e=A.y;this.sin_phi=Math.sin(e),this.cos_phi=Math.cos(e);var i=Ut(this.e3,this.sin_phi),s=this.a*Math.sqrt(this.c-this.ns0*i)/this.ns0,a=this.ns0*K(t-this.long0),n=s*Math.sin(a)+this.x0,o=this.rh-s*Math.cos(a)+this.y0;return A.x=n,A.y=o,A},inverse:function(A){var t,e,i,s,a,n;return A.x-=this.x0,A.y=this.rh-A.y+this.y0,this.ns0>=0?(t=Math.sqrt(A.x*A.x+A.y*A.y),i=1):(t=-Math.sqrt(A.x*A.x+A.y*A.y),i=-1),s=0,0!==t&&(s=Math.atan2(i*A.x,i*A.y)),i=t*this.ns0/this.a,this.sphere?n=Math.asin((this.c-i*i)/(2*this.ns0)):(e=(this.c-i*i)/this.ns0,n=this.phi1z(this.e3,e)),a=K(s/this.ns0+this.long0),A.x=a,A.y=n,A},names:[\\\"Albers_Conic_Equal_Area\\\",\\\"Albers\\\",\\\"aea\\\"],phi1z:function(A,t){var e,i,s,a,n=jt(.5*t);if(A<d)return n;for(var o=A*A,r=1;r<=25;r++)if(n+=a=.5*(s=1-(i=A*(e=Math.sin(n)))*i)*s/Math.cos(n)*(t/(1-o)-e/s+.5/A*Math.log((1-i)/(1+i))),Math.abs(a)<=1e-7)return n;return null}};const Yt={init:function(){this.sin_p14=Math.sin(this.lat0),this.cos_p14=Math.cos(this.lat0),this.infinity_dist=1e3*this.a,this.rc=1},forward:function(A){var t,e,i,s,a,n,o,r=A.x,l=A.y;return i=K(r-this.long0),t=Math.sin(l),e=Math.cos(l),s=Math.cos(i),1,(a=this.sin_p14*t+this.cos_p14*e*s)>0||Math.abs(a)<=d?(n=this.x0+1*this.a*e*Math.sin(i)/a,o=this.y0+1*this.a*(this.cos_p14*t-this.sin_p14*e*s)/a):(n=this.x0+this.infinity_dist*e*Math.sin(i),o=this.y0+this.infinity_dist*(this.cos_p14*t-this.sin_p14*e*s)),A.x=n,A.y=o,A},inverse:function(A){var t,e,i,s,a,n;return A.x=(A.x-this.x0)/this.a,A.y=(A.y-this.y0)/this.a,A.x/=this.k0,A.y/=this.k0,(t=Math.sqrt(A.x*A.x+A.y*A.y))?(s=Math.atan2(t,this.rc),e=Math.sin(s),n=jt((i=Math.cos(s))*this.sin_p14+A.y*e*this.cos_p14/t),a=Math.atan2(A.x*e,t*this.cos_p14*i-A.y*this.sin_p14*e),a=K(this.long0+a)):(n=this.phic0,a=0),A.x=a,A.y=n,A},names:[\\\"gnom\\\"]};const Vt={init:function(){this.sphere||(this.k0=z(this.e,Math.sin(this.lat_ts),Math.cos(this.lat_ts)))},forward:function(A){var t,e,i=A.x,s=A.y,a=K(i-this.long0);if(this.sphere)t=this.x0+this.a*a*Math.cos(this.lat_ts),e=this.y0+this.a*Math.sin(s)/Math.cos(this.lat_ts);else{var n=Ut(this.e,Math.sin(s));t=this.x0+this.a*this.k0*a,e=this.y0+this.a*n*.5/this.k0}return A.x=t,A.y=e,A},inverse:function(A){var t,e;return A.x-=this.x0,A.y-=this.y0,this.sphere?(t=K(this.long0+A.x/this.a/Math.cos(this.lat_ts)),e=Math.asin(A.y/this.a*Math.cos(this.lat_ts))):(e=function(A,t){var e=1-(1-A*A)/(2*A)*Math.log((1-A)/(1+A));if(Math.abs(Math.abs(t)-e)<1e-6)return t<0?-1*g:g;for(var i,s,a,n,o=Math.asin(.5*t),r=0;r<30;r++)if(s=Math.sin(o),a=Math.cos(o),n=A*s,o+=i=Math.pow(1-n*n,2)/(2*a)*(t/(1-A*A)-s/(1-n*n)+.5/A*Math.log((1-n)/(1+n))),Math.abs(i)<=1e-10)return o;return NaN}(this.e,2*A.y*this.k0/this.a),t=K(this.long0+A.x/(this.a*this.k0))),A.x=t,A.y=e,A},names:[\\\"cea\\\"]};const Wt={init:function(){this.x0=this.x0||0,this.y0=this.y0||0,this.lat0=this.lat0||0,this.long0=this.long0||0,this.lat_ts=this.lat_ts||0,this.title=this.title||\\\"Equidistant Cylindrical (Plate Carre)\\\",this.rc=Math.cos(this.lat_ts)},forward:function(A){var t=A.x,e=A.y,i=K(t-this.long0),s=Rt(e-this.lat0);return A.x=this.x0+this.a*i*this.rc,A.y=this.y0+this.a*s,A},inverse:function(A){var t=A.x,e=A.y;return A.x=K(this.long0+(t-this.x0)/(this.a*this.rc)),A.y=Rt(this.lat0+(e-this.y0)/this.a),A},names:[\\\"Equirectangular\\\",\\\"Equidistant_Cylindrical\\\",\\\"eqc\\\"]};const Xt={init:function(){this.temp=this.b/this.a,this.es=1-Math.pow(this.temp,2),this.e=Math.sqrt(this.es),this.e0=Dt(this.es),this.e1=vt(this.es),this.e2=St(this.es),this.e3=Gt(this.es),this.ml0=this.a*bt(this.e0,this.e1,this.e2,this.e3,this.lat0)},forward:function(A){var t,e,i,s=A.x,a=A.y,n=K(s-this.long0);if(i=n*Math.sin(a),this.sphere)Math.abs(a)<=d?(t=this.a*n,e=-1*this.a*this.lat0):(t=this.a*Math.sin(i)/Math.tan(a),e=this.a*(Rt(a-this.lat0)+(1-Math.cos(i))/Math.tan(a)));else if(Math.abs(a)<=d)t=this.a*n,e=-1*this.ml0;else{var o=Nt(this.a,this.e,Math.sin(a))/Math.tan(a);t=o*Math.sin(i),e=this.a*bt(this.e0,this.e1,this.e2,this.e3,a)-this.ml0+o*(1-Math.cos(i))}return A.x=t+this.x0,A.y=e+this.y0,A},inverse:function(A){var t,e,i,s,a,n,o,r,l;if(i=A.x-this.x0,s=A.y-this.y0,this.sphere)if(Math.abs(s+this.a*this.lat0)<=d)t=K(i/this.a+this.long0),e=0;else{var h;for(n=this.lat0+s/this.a,o=i*i/this.a/this.a+n*n,r=n,a=20;a;--a)if(r+=l=-1*(n*(r*(h=Math.tan(r))+1)-r-.5*(r*r+o)*h)/((r-n)/h-1),Math.abs(l)<=d){e=r;break}t=K(this.long0+Math.asin(i*Math.tan(r)/this.a)/Math.sin(e))}else if(Math.abs(s+this.ml0)<=d)e=0,t=K(this.long0+i/this.a);else{var g,c,f,u,I;for(n=(this.ml0+s)/this.a,o=i*i/this.a/this.a+n*n,r=n,a=20;a;--a)if(I=this.e*Math.sin(r),g=Math.sqrt(1-I*I)*Math.tan(r),c=this.a*bt(this.e0,this.e1,this.e2,this.e3,r),f=this.e0-2*this.e1*Math.cos(2*r)+4*this.e2*Math.cos(4*r)-6*this.e3*Math.cos(6*r),r-=l=(n*(g*(u=c/this.a)+1)-u-.5*g*(u*u+o))/(this.es*Math.sin(2*r)*(u*u+o-2*n*u)/(4*g)+(n-u)*(g*f-2/Math.sin(2*r))-f),Math.abs(l)<=d){e=r;break}g=Math.sqrt(1-this.es*Math.pow(Math.sin(e),2))*Math.tan(e),t=K(this.long0+Math.asin(i*g/this.a)/Math.sin(e))}return A.x=t,A.y=e,A},names:[\\\"Polyconic\\\",\\\"poly\\\"]};const Zt={init:function(){this.A=[],this.A[1]=.6399175073,this.A[2]=-.1358797613,this.A[3]=.063294409,this.A[4]=-.02526853,this.A[5]=.0117879,this.A[6]=-.0055161,this.A[7]=.0026906,this.A[8]=-.001333,this.A[9]=67e-5,this.A[10]=-34e-5,this.B_re=[],this.B_im=[],this.B_re[1]=.7557853228,this.B_im[1]=0,this.B_re[2]=.249204646,this.B_im[2]=.003371507,this.B_re[3]=-.001541739,this.B_im[3]=.04105856,this.B_re[4]=-.10162907,this.B_im[4]=.01727609,this.B_re[5]=-.26623489,this.B_im[5]=-.36249218,this.B_re[6]=-.6870983,this.B_im[6]=-1.1651967,this.C_re=[],this.C_im=[],this.C_re[1]=1.3231270439,this.C_im[1]=0,this.C_re[2]=-.577245789,this.C_im[2]=-.007809598,this.C_re[3]=.508307513,this.C_im[3]=-.112208952,this.C_re[4]=-.15094762,this.C_im[4]=.18200602,this.C_re[5]=1.01418179,this.C_im[5]=1.64497696,this.C_re[6]=1.9660549,this.C_im[6]=2.5127645,this.D=[],this.D[1]=1.5627014243,this.D[2]=.5185406398,this.D[3]=-.03333098,this.D[4]=-.1052906,this.D[5]=-.0368594,this.D[6]=.007317,this.D[7]=.0122,this.D[8]=.00394,this.D[9]=-.0013},forward:function(A){var t,e=A.x,i=A.y-this.lat0,s=e-this.long0,a=i/h*1e-5,n=s,o=1,r=0;for(t=1;t<=10;t++)o*=a,r+=this.A[t]*o;var l,g=r,c=n,f=1,u=0,d=0,I=0;for(t=1;t<=6;t++)l=u*g+f*c,f=f*g-u*c,u=l,d=d+this.B_re[t]*f-this.B_im[t]*u,I=I+this.B_im[t]*f+this.B_re[t]*u;return A.x=I*this.a+this.x0,A.y=d*this.a+this.y0,A},inverse:function(A){var t,e,i=A.x,s=A.y,a=i-this.x0,n=(s-this.y0)/this.a,o=a/this.a,r=1,l=0,g=0,c=0;for(t=1;t<=6;t++)e=l*n+r*o,r=r*n-l*o,l=e,g=g+this.C_re[t]*r-this.C_im[t]*l,c=c+this.C_im[t]*r+this.C_re[t]*l;for(var f=0;f<this.iterations;f++){var u,d=g,I=c,p=n,_=o;for(t=2;t<=6;t++)u=I*g+d*c,d=d*g-I*c,I=u,p+=(t-1)*(this.B_re[t]*d-this.B_im[t]*I),_+=(t-1)*(this.B_im[t]*d+this.B_re[t]*I);d=1,I=0;var C=this.B_re[1],B=this.B_im[1];for(t=2;t<=6;t++)u=I*g+d*c,d=d*g-I*c,I=u,C+=t*(this.B_re[t]*d-this.B_im[t]*I),B+=t*(this.B_im[t]*d+this.B_re[t]*I);var w=C*C+B*B;g=(p*C+_*B)/w,c=(_*C-p*B)/w}var E=g,y=c,Q=1,m=0;for(t=1;t<=9;t++)Q*=E,m+=this.D[t]*Q;var k=this.lat0+m*h*1e5,x=this.long0+y;return A.x=x,A.y=k,A},names:[\\\"New_Zealand_Map_Grid\\\",\\\"nzmg\\\"]};const $t={init:function(){},forward:function(A){var t=A.x,e=A.y,i=K(t-this.long0),s=this.x0+this.a*i,a=this.y0+this.a*Math.log(Math.tan(Math.PI/4+e/2.5))*1.25;return A.x=s,A.y=a,A},inverse:function(A){A.x-=this.x0,A.y-=this.y0;var t=K(this.long0+A.x/this.a),e=2.5*(Math.atan(Math.exp(.8*A.y/this.a))-Math.PI/4);return A.x=t,A.y=e,A},names:[\\\"Miller_Cylindrical\\\",\\\"mill\\\"]};const Ae={init:function(){this.sphere?(this.n=1,this.m=0,this.es=0,this.C_y=Math.sqrt((this.m+1)/this.n),this.C_x=this.C_y/(this.m+1)):this.en=rt(this.es)},forward:function(A){var t,e,i=A.x,s=A.y;if(i=K(i-this.long0),this.sphere){if(this.m)for(var a=this.n*Math.sin(s),n=20;n;--n){var o=(this.m*s+Math.sin(s)-a)/(this.m+Math.cos(s));if(s-=o,Math.abs(o)<d)break}else s=1!==this.n?Math.asin(this.n*Math.sin(s)):s;t=this.a*this.C_x*i*(this.m+Math.cos(s)),e=this.a*this.C_y*s}else{var r=Math.sin(s),l=Math.cos(s);e=this.a*lt(s,r,l,this.en),t=this.a*i*l/Math.sqrt(1-this.es*r*r)}return A.x=t,A.y=e,A},inverse:function(A){var t,e,i;return A.x-=this.x0,e=A.x/this.a,A.y-=this.y0,t=A.y/this.a,this.sphere?(t/=this.C_y,e/=this.C_x*(this.m+Math.cos(t)),this.m?t=jt((this.m*t+Math.sin(t))/this.n):1!==this.n&&(t=jt(Math.sin(t)/this.n)),e=K(e+this.long0),t=Rt(t)):(t=gt(A.y/this.a,this.es,this.en),(i=Math.abs(t))<g?(i=Math.sin(t),e=K(this.long0+A.x*Math.sqrt(1-this.es*i*i)/(this.a*Math.cos(t)))):i-d<g&&(e=this.long0)),A.x=e,A.y=t,A},names:[\\\"Sinusoidal\\\",\\\"sinu\\\"]};const te={init:function(){},forward:function(A){for(var t=A.x,e=A.y,i=K(t-this.long0),s=e,a=Math.PI*Math.sin(e);;){var n=-(s+Math.sin(s)-a)/(1+Math.cos(s));if(s+=n,Math.abs(n)<d)break}s/=2,Math.PI/2-Math.abs(e)<d&&(i=0);var o=.900316316158*this.a*i*Math.cos(s)+this.x0,r=1.4142135623731*this.a*Math.sin(s)+this.y0;return A.x=o,A.y=r,A},inverse:function(A){var t,e;A.x-=this.x0,A.y-=this.y0,e=A.y/(1.4142135623731*this.a),Math.abs(e)>.999999999999&&(e=.999999999999),t=Math.asin(e);var i=K(this.long0+A.x/(.900316316158*this.a*Math.cos(t)));i<-Math.PI&&(i=-Math.PI),i>Math.PI&&(i=Math.PI),e=(2*t+Math.sin(2*t))/Math.PI,Math.abs(e)>1&&(e=1);var s=Math.asin(e);return A.x=i,A.y=s,A},names:[\\\"Mollweide\\\",\\\"moll\\\"]};const ee={init:function(){Math.abs(this.lat1+this.lat2)<d||(this.lat2=this.lat2||this.lat1,this.temp=this.b/this.a,this.es=1-Math.pow(this.temp,2),this.e=Math.sqrt(this.es),this.e0=Dt(this.es),this.e1=vt(this.es),this.e2=St(this.es),this.e3=Gt(this.es),this.sinphi=Math.sin(this.lat1),this.cosphi=Math.cos(this.lat1),this.ms1=z(this.e,this.sinphi,this.cosphi),this.ml1=bt(this.e0,this.e1,this.e2,this.e3,this.lat1),Math.abs(this.lat1-this.lat2)<d?this.ns=this.sinphi:(this.sinphi=Math.sin(this.lat2),this.cosphi=Math.cos(this.lat2),this.ms2=z(this.e,this.sinphi,this.cosphi),this.ml2=bt(this.e0,this.e1,this.e2,this.e3,this.lat2),this.ns=(this.ms1-this.ms2)/(this.ml2-this.ml1)),this.g=this.ml1+this.ms1/this.ns,this.ml0=bt(this.e0,this.e1,this.e2,this.e3,this.lat0),this.rh=this.a*(this.g-this.ml0))},forward:function(A){var t,e=A.x,i=A.y;if(this.sphere)t=this.a*(this.g-i);else{var s=bt(this.e0,this.e1,this.e2,this.e3,i);t=this.a*(this.g-s)}var a=this.ns*K(e-this.long0),n=this.x0+t*Math.sin(a),o=this.y0+this.rh-t*Math.cos(a);return A.x=n,A.y=o,A},inverse:function(A){var t,e,i,s;A.x-=this.x0,A.y=this.rh-A.y+this.y0,this.ns>=0?(e=Math.sqrt(A.x*A.x+A.y*A.y),t=1):(e=-Math.sqrt(A.x*A.x+A.y*A.y),t=-1);var a=0;return 0!==e&&(a=Math.atan2(t*A.x,t*A.y)),this.sphere?(s=K(this.long0+a/this.ns),i=Rt(this.g-e/this.a),A.x=s,A.y=i,A):(i=Ft(this.g-e/this.a,this.e0,this.e1,this.e2,this.e3),s=K(this.long0+a/this.ns),A.x=s,A.y=i,A)},names:[\\\"Equidistant_Conic\\\",\\\"eqdc\\\"]};const ie={init:function(){this.R=this.a},forward:function(A){var t,e,i=A.x,s=A.y,a=K(i-this.long0);Math.abs(s)<=d&&(t=this.x0+this.R*a,e=this.y0);var n=jt(2*Math.abs(s/Math.PI));(Math.abs(a)<=d||Math.abs(Math.abs(s)-g)<=d)&&(t=this.x0,e=s>=0?this.y0+Math.PI*this.R*Math.tan(.5*n):this.y0+Math.PI*this.R*-Math.tan(.5*n));var o=.5*Math.abs(Math.PI/a-a/Math.PI),r=o*o,l=Math.sin(n),h=Math.cos(n),c=h/(l+h-1),f=c*c,u=c*(2/l-1),I=u*u,p=Math.PI*this.R*(o*(c-I)+Math.sqrt(r*(c-I)*(c-I)-(I+r)*(f-I)))/(I+r);a<0&&(p=-p),t=this.x0+p;var _=r+c;return p=Math.PI*this.R*(u*_-o*Math.sqrt((I+r)*(r+1)-_*_))/(I+r),e=s>=0?this.y0+p:this.y0-p,A.x=t,A.y=e,A},inverse:function(A){var t,e,i,s,a,n,o,r,l,h,g,c;return A.x-=this.x0,A.y-=this.y0,g=Math.PI*this.R,a=(i=A.x/g)*i+(s=A.y/g)*s,g=3*(s*s/(r=-2*(n=-Math.abs(s)*(1+a))+1+2*s*s+a*a)+(2*(o=n-2*s*s+i*i)*o*o/r/r/r-9*n*o/r/r)/27)/(l=(n-o*o/3/r)/r)/(h=2*Math.sqrt(-l/3)),Math.abs(g)>1&&(g=g>=0?1:-1),c=Math.acos(g)/3,e=A.y>=0?(-h*Math.cos(c+Math.PI/3)-o/3/r)*Math.PI:-(-h*Math.cos(c+Math.PI/3)-o/3/r)*Math.PI,t=Math.abs(i)<d?this.long0:K(this.long0+Math.PI*(a-1+Math.sqrt(1+2*(i*i-s*s)+a*a))/2/i),A.x=t,A.y=e,A},names:[\\\"Van_der_Grinten_I\\\",\\\"VanDerGrinten\\\",\\\"vandg\\\"]};const se={init:function(){this.sin_p12=Math.sin(this.lat0),this.cos_p12=Math.cos(this.lat0)},forward:function(A){var t,e,i,s,a,n,o,r,l,h,c,f,u,I,p,_,C,B,w,E,y,Q,m=A.x,k=A.y,x=Math.sin(A.y),M=Math.cos(A.y),b=K(m-this.long0);return this.sphere?Math.abs(this.sin_p12-1)<=d?(A.x=this.x0+this.a*(g-k)*Math.sin(b),A.y=this.y0-this.a*(g-k)*Math.cos(b),A):Math.abs(this.sin_p12+1)<=d?(A.x=this.x0+this.a*(g+k)*Math.sin(b),A.y=this.y0+this.a*(g+k)*Math.cos(b),A):(B=this.sin_p12*x+this.cos_p12*M*Math.cos(b),C=(_=Math.acos(B))?_/Math.sin(_):1,A.x=this.x0+this.a*C*M*Math.sin(b),A.y=this.y0+this.a*C*(this.cos_p12*x-this.sin_p12*M*Math.cos(b)),A):(t=Dt(this.es),e=vt(this.es),i=St(this.es),s=Gt(this.es),Math.abs(this.sin_p12-1)<=d?(a=this.a*bt(t,e,i,s,g),n=this.a*bt(t,e,i,s,k),A.x=this.x0+(a-n)*Math.sin(b),A.y=this.y0-(a-n)*Math.cos(b),A):Math.abs(this.sin_p12+1)<=d?(a=this.a*bt(t,e,i,s,g),n=this.a*bt(t,e,i,s,k),A.x=this.x0+(a+n)*Math.sin(b),A.y=this.y0+(a+n)*Math.cos(b),A):(o=x/M,r=Nt(this.a,this.e,this.sin_p12),l=Nt(this.a,this.e,x),h=Math.atan((1-this.es)*o+this.es*r*this.sin_p12/(l*M)),w=0===(c=Math.atan2(Math.sin(b),this.cos_p12*Math.tan(h)-this.sin_p12*Math.cos(b)))?Math.asin(this.cos_p12*Math.sin(h)-this.sin_p12*Math.cos(h)):Math.abs(Math.abs(c)-Math.PI)<=d?-Math.asin(this.cos_p12*Math.sin(h)-this.sin_p12*Math.cos(h)):Math.asin(Math.sin(b)*Math.cos(h)/Math.sin(c)),f=this.e*this.sin_p12/Math.sqrt(1-this.es),_=r*w*(1-(E=w*w)*(p=(u=this.e*this.cos_p12*Math.cos(c)/Math.sqrt(1-this.es))*u)*(1-p)/6+(y=E*w)/8*(I=f*u)*(1-2*p)+(Q=y*w)/120*(p*(4-7*p)-3*f*f*(1-7*p))-Q*w/48*I),A.x=this.x0+_*Math.sin(c),A.y=this.y0+_*Math.cos(c),A))},inverse:function(A){var t,e,i,s,a,n,o,r,l,h,c,f,u,I,p,_,C,B,w,E,y,Q,m;if(A.x-=this.x0,A.y-=this.y0,this.sphere){if((t=Math.sqrt(A.x*A.x+A.y*A.y))>2*g*this.a)return;return e=t/this.a,i=Math.sin(e),s=Math.cos(e),a=this.long0,Math.abs(t)<=d?n=this.lat0:(n=jt(s*this.sin_p12+A.y*i*this.cos_p12/t),o=Math.abs(this.lat0)-g,a=Math.abs(o)<=d?this.lat0>=0?K(this.long0+Math.atan2(A.x,-A.y)):K(this.long0-Math.atan2(-A.x,A.y)):K(this.long0+Math.atan2(A.x*i,t*this.cos_p12*s-A.y*this.sin_p12*i))),A.x=a,A.y=n,A}return r=Dt(this.es),l=vt(this.es),h=St(this.es),c=Gt(this.es),Math.abs(this.sin_p12-1)<=d?(n=Ft(((f=this.a*bt(r,l,h,c,g))-(t=Math.sqrt(A.x*A.x+A.y*A.y)))/this.a,r,l,h,c),a=K(this.long0+Math.atan2(A.x,-1*A.y)),A.x=a,A.y=n,A):Math.abs(this.sin_p12+1)<=d?(f=this.a*bt(r,l,h,c,g),n=Ft(((t=Math.sqrt(A.x*A.x+A.y*A.y))-f)/this.a,r,l,h,c),a=K(this.long0+Math.atan2(A.x,A.y)),A.x=a,A.y=n,A):(t=Math.sqrt(A.x*A.x+A.y*A.y),p=Math.atan2(A.x,A.y),u=Nt(this.a,this.e,this.sin_p12),_=Math.cos(p),B=-(C=this.e*this.cos_p12*_)*C/(1-this.es),w=3*this.es*(1-B)*this.sin_p12*this.cos_p12*_/(1-this.es),Q=1-B*(y=(E=t/u)-B*(1+B)*Math.pow(E,3)/6-w*(1+3*B)*Math.pow(E,4)/24)*y/2-E*y*y*y/6,I=Math.asin(this.sin_p12*Math.cos(y)+this.cos_p12*Math.sin(y)*_),a=K(this.long0+Math.asin(Math.sin(p)*Math.sin(y)/Math.cos(I))),m=Math.sin(I),n=Math.atan2((m-this.es*Q*this.sin_p12)*Math.tan(I),m*(1-this.es)),A.x=a,A.y=n,A)},names:[\\\"Azimuthal_Equidistant\\\",\\\"aeqd\\\"]};const ae={init:function(){this.sin_p14=Math.sin(this.lat0),this.cos_p14=Math.cos(this.lat0)},forward:function(A){var t,e,i,s,a,n,o,r=A.x,l=A.y;return i=K(r-this.long0),t=Math.sin(l),e=Math.cos(l),s=Math.cos(i),1,((a=this.sin_p14*t+this.cos_p14*e*s)>0||Math.abs(a)<=d)&&(n=1*this.a*e*Math.sin(i),o=this.y0+1*this.a*(this.cos_p14*t-this.sin_p14*e*s)),A.x=n,A.y=o,A},inverse:function(A){var t,e,i,s,a,n,o;return A.x-=this.x0,A.y-=this.y0,e=jt((t=Math.sqrt(A.x*A.x+A.y*A.y))/this.a),i=Math.sin(e),s=Math.cos(e),n=this.long0,Math.abs(t)<=d?(o=this.lat0,A.x=n,A.y=o,A):(o=jt(s*this.sin_p14+A.y*i*this.cos_p14/t),a=Math.abs(this.lat0)-g,Math.abs(a)<=d?(n=this.lat0>=0?K(this.long0+Math.atan2(A.x,-A.y)):K(this.long0-Math.atan2(-A.x,A.y)),A.x=n,A.y=o,A):(n=K(this.long0+Math.atan2(A.x*i,t*this.cos_p14*s-A.y*this.sin_p14*i)),A.x=n,A.y=o,A))},names:[\\\"ortho\\\"]};var ne=1,oe=2,re=3,le=4,he=5,ge=6,ce={AREA_0:1,AREA_1:2,AREA_2:3,AREA_3:4};function fe(A,t,e,i){var s;return A<d?(i.value=ce.AREA_0,s=0):(s=Math.atan2(t,e),Math.abs(s)<=_?i.value=ce.AREA_0:s>_&&s<=g+_?(i.value=ce.AREA_1,s-=g):s>g+_||s<=-(g+_)?(i.value=ce.AREA_2,s=s>=0?s-B:s+B):(i.value=ce.AREA_3,s+=g)),s}function ue(A,t){var e=A+t;return e<-B?e+=C:e>+B&&(e-=C),e}const de={init:function(){this.x0=this.x0||0,this.y0=this.y0||0,this.lat0=this.lat0||0,this.long0=this.long0||0,this.lat_ts=this.lat_ts||0,this.title=this.title||\\\"Quadrilateralized Spherical Cube\\\",this.lat0>=g-_/2?this.face=he:this.lat0<=-(g-_/2)?this.face=ge:Math.abs(this.long0)<=_?this.face=ne:Math.abs(this.long0)<=g+_?this.face=this.long0>0?oe:le:this.face=re,0!==this.es&&(this.one_minus_f=1-(this.a-this.b)/this.a,this.one_minus_f_squared=this.one_minus_f*this.one_minus_f)},forward:function(A){var t,e,i,s,a,n,o={x:0,y:0},r={value:0};if(A.x-=this.long0,t=0!==this.es?Math.atan(this.one_minus_f_squared*Math.tan(A.y)):A.y,e=A.x,this.face===he)s=g-t,e>=_&&e<=g+_?(r.value=ce.AREA_0,i=e-g):e>g+_||e<=-(g+_)?(r.value=ce.AREA_1,i=e>0?e-B:e+B):e>-(g+_)&&e<=-_?(r.value=ce.AREA_2,i=e+g):(r.value=ce.AREA_3,i=e);else if(this.face===ge)s=g+t,e>=_&&e<=g+_?(r.value=ce.AREA_0,i=-e+g):e<_&&e>=-_?(r.value=ce.AREA_1,i=-e):e<-_&&e>=-(g+_)?(r.value=ce.AREA_2,i=-e-g):(r.value=ce.AREA_3,i=e>0?-e+B:-e-B);else{var l,h,c,f,u,d;this.face===oe?e=ue(e,+g):this.face===re?e=ue(e,+B):this.face===le&&(e=ue(e,-g)),f=Math.sin(t),u=Math.cos(t),d=Math.sin(e),l=u*Math.cos(e),h=u*d,c=f,this.face===ne?i=fe(s=Math.acos(l),c,h,r):this.face===oe?i=fe(s=Math.acos(h),c,-l,r):this.face===re?i=fe(s=Math.acos(-l),c,-h,r):this.face===le?i=fe(s=Math.acos(-h),c,l,r):(s=i=0,r.value=ce.AREA_0)}return n=Math.atan(12/B*(i+Math.acos(Math.sin(i)*Math.cos(_))-g)),a=Math.sqrt((1-Math.cos(s))/(Math.cos(n)*Math.cos(n))/(1-Math.cos(Math.atan(1/Math.cos(i))))),r.value===ce.AREA_1?n+=g:r.value===ce.AREA_2?n+=B:r.value===ce.AREA_3&&(n+=1.5*B),o.x=a*Math.cos(n),o.y=a*Math.sin(n),o.x=o.x*this.a+this.x0,o.y=o.y*this.a+this.y0,A.x=o.x,A.y=o.y,A},inverse:function(A){var t,e,i,s,a,n,o,r,l,h,c,f,u={lam:0,phi:0},d={value:0};if(A.x=(A.x-this.x0)/this.a,A.y=(A.y-this.y0)/this.a,e=Math.atan(Math.sqrt(A.x*A.x+A.y*A.y)),t=Math.atan2(A.y,A.x),A.x>=0&&A.x>=Math.abs(A.y)?d.value=ce.AREA_0:A.y>=0&&A.y>=Math.abs(A.x)?(d.value=ce.AREA_1,t-=g):A.x<0&&-A.x>=Math.abs(A.y)?(d.value=ce.AREA_2,t=t<0?t+B:t-B):(d.value=ce.AREA_3,t+=g),l=B/12*Math.tan(t),a=Math.sin(l)/(Math.cos(l)-1/Math.sqrt(2)),n=Math.atan(a),(o=1-(i=Math.cos(t))*i*(s=Math.tan(e))*s*(1-Math.cos(Math.atan(1/Math.cos(n)))))<-1?o=-1:o>1&&(o=1),this.face===he)r=Math.acos(o),u.phi=g-r,d.value===ce.AREA_0?u.lam=n+g:d.value===ce.AREA_1?u.lam=n<0?n+B:n-B:d.value===ce.AREA_2?u.lam=n-g:u.lam=n;else if(this.face===ge)r=Math.acos(o),u.phi=r-g,d.value===ce.AREA_0?u.lam=-n+g:d.value===ce.AREA_1?u.lam=-n:d.value===ce.AREA_2?u.lam=-n-g:u.lam=n<0?-n-B:-n+B;else{var I,p,_;l=(I=o)*I,p=(l+=(_=l>=1?0:Math.sqrt(1-l)*Math.sin(n))*_)>=1?0:Math.sqrt(1-l),d.value===ce.AREA_1?(l=p,p=-_,_=l):d.value===ce.AREA_2?(p=-p,_=-_):d.value===ce.AREA_3&&(l=p,p=_,_=-l),this.face===oe?(l=I,I=-p,p=l):this.face===re?(I=-I,p=-p):this.face===le&&(l=I,I=p,p=-l),u.phi=Math.acos(-_)-g,u.lam=Math.atan2(p,I),this.face===oe?u.lam=ue(u.lam,-g):this.face===re?u.lam=ue(u.lam,-B):this.face===le&&(u.lam=ue(u.lam,+g))}return 0!==this.es&&(h=u.phi<0?1:0,c=Math.tan(u.phi),f=this.b/Math.sqrt(c*c+this.one_minus_f_squared),u.phi=Math.atan(Math.sqrt(this.a*this.a-f*f)/(this.one_minus_f*f)),h&&(u.phi=-u.phi)),u.lam+=this.long0,A.x=u.lam,A.y=u.phi,A},names:[\\\"Quadrilateralized Spherical Cube\\\",\\\"Quadrilateralized_Spherical_Cube\\\",\\\"qsc\\\"]};var Ie=[[1,22199e-21,-715515e-10,31103e-10],[.9986,-482243e-9,-24897e-9,-13309e-10],[.9954,-83103e-8,-448605e-10,-9.86701e-7],[.99,-.00135364,-59661e-9,36777e-10],[.9822,-.00167442,-449547e-11,-572411e-11],[.973,-.00214868,-903571e-10,1.8736e-8],[.96,-.00305085,-900761e-10,164917e-11],[.9427,-.00382792,-653386e-10,-26154e-10],[.9216,-.00467746,-10457e-8,481243e-11],[.8962,-.00536223,-323831e-10,-543432e-11],[.8679,-.00609363,-113898e-9,332484e-11],[.835,-.00698325,-640253e-10,9.34959e-7],[.7986,-.00755338,-500009e-10,9.35324e-7],[.7597,-.00798324,-35971e-9,-227626e-11],[.7186,-.00851367,-701149e-10,-86303e-10],[.6732,-.00986209,-199569e-9,191974e-10],[.6213,-.010418,883923e-10,624051e-11],[.5722,-.00906601,182e-6,624051e-11],[.5322,-.00677797,275608e-9,624051e-11]],pe=[[-520417e-23,.0124,121431e-23,-845284e-16],[.062,.0124,-1.26793e-9,4.22642e-10],[.124,.0124,5.07171e-9,-1.60604e-9],[.186,.0123999,-1.90189e-8,6.00152e-9],[.248,.0124002,7.10039e-8,-2.24e-8],[.31,.0123992,-2.64997e-7,8.35986e-8],[.372,.0124029,9.88983e-7,-3.11994e-7],[.434,.0123893,-369093e-11,-4.35621e-7],[.4958,.0123198,-102252e-10,-3.45523e-7],[.5571,.0121916,-154081e-10,-5.82288e-7],[.6176,.0119938,-241424e-10,-5.25327e-7],[.6769,.011713,-320223e-10,-5.16405e-7],[.7346,.0113541,-397684e-10,-6.09052e-7],[.7903,.0109107,-489042e-10,-104739e-11],[.8435,.0103431,-64615e-9,-1.40374e-9],[.8936,.00969686,-64636e-9,-8547e-9],[.9394,.00840947,-192841e-9,-42106e-10],[.9761,.00616527,-256e-6,-42106e-10],[1,.00328947,-319159e-9,-42106e-10]],_e=.8487,Ce=1.3523,Be=p/5,we=1/Be,Ee=18,ye=function(A,t){return A[0]+t*(A[1]+t*(A[2]+t*A[3]))};const Qe={init:function(){this.x0=this.x0||0,this.y0=this.y0||0,this.long0=this.long0||0,this.es=0,this.title=this.title||\\\"Robinson\\\"},forward:function(A){var t=K(A.x-this.long0),e=Math.abs(A.y),i=Math.floor(e*Be);i<0?i=0:i>=Ee&&(i=17);var s={x:ye(Ie[i],e=p*(e-we*i))*t,y:ye(pe[i],e)};return A.y<0&&(s.y=-s.y),s.x=s.x*this.a*_e+this.x0,s.y=s.y*this.a*Ce+this.y0,s},inverse:function(A){var t={x:(A.x-this.x0)/(this.a*_e),y:Math.abs(A.y-this.y0)/(this.a*Ce)};if(t.y>=1)t.x/=Ie[18][0],t.y=A.y<0?-g:g;else{var e=Math.floor(t.y*Ee);for(e<0?e=0:e>=Ee&&(e=17);;)if(pe[e][0]>t.y)--e;else{if(!(pe[e+1][0]<=t.y))break;++e}var i=pe[e],s=5*(t.y-i[0])/(pe[e+1][0]-i[0]);s=function(A,t,e,i){for(var s=t;i;--i){var a=A(s);if(s-=a,Math.abs(a)<e)break}return s}((function(A){return(ye(i,A)-t.y)/function(A,t){return A[1]+t*(2*A[2]+3*t*A[3])}(i,A)}),s,d,100),t.x/=ye(Ie[e],s),t.y=(5*e+s)*I,A.y<0&&(t.y=-t.y)}return t.x=K(t.x+this.long0),t},names:[\\\"Robinson\\\",\\\"robin\\\"]};const me={init:function(){this.name=\\\"geocent\\\"},forward:function(A){return dA(A,this.es,this.a)},inverse:function(A){return IA(A,this.es,this.a,this.b)},names:[\\\"Geocentric\\\",\\\"geocentric\\\",\\\"geocent\\\",\\\"Geocent\\\"]};var ke=0,xe=1,Me=2,be=3,De={h:{def:1e5,num:!0},azi:{def:0,num:!0,degrees:!0},tilt:{def:0,num:!0,degrees:!0},long0:{def:0,num:!0},lat0:{def:0,num:!0}};const ve={init:function(){if(Object.keys(De).forEach(function(A){if(void 0===this[A])this[A]=De[A].def;else{if(De[A].num&&isNaN(this[A]))throw new Error(\\\"Invalid parameter value, must be numeric \\\"+A+\\\" = \\\"+this[A]);De[A].num&&(this[A]=parseFloat(this[A]))}De[A].degrees&&(this[A]=this[A]*I)}.bind(this)),Math.abs(Math.abs(this.lat0)-g)<d?this.mode=this.lat0<0?xe:ke:Math.abs(this.lat0)<d?this.mode=Me:(this.mode=be,this.sinph0=Math.sin(this.lat0),this.cosph0=Math.cos(this.lat0)),this.pn1=this.h/this.a,this.pn1<=0||this.pn1>1e10)throw new Error(\\\"Invalid height\\\");this.p=1+this.pn1,this.rp=1/this.p,this.h1=1/this.pn1,this.pfact=(this.p+1)*this.h1,this.es=0;var A=this.tilt,t=this.azi;this.cg=Math.cos(t),this.sg=Math.sin(t),this.cw=Math.cos(A),this.sw=Math.sin(A)},forward:function(A){A.x-=this.long0;var t,e,i,s,a=Math.sin(A.y),n=Math.cos(A.y),o=Math.cos(A.x);switch(this.mode){case be:e=this.sinph0*a+this.cosph0*n*o;break;case Me:e=n*o;break;case xe:e=-a;break;case ke:e=a}switch(t=(e=this.pn1/(this.p-e))*n*Math.sin(A.x),this.mode){case be:e*=this.cosph0*a-this.sinph0*n*o;break;case Me:e*=a;break;case ke:e*=-n*o;break;case xe:e*=n*o}return s=1/((i=e*this.cg+t*this.sg)*this.sw*this.h1+this.cw),t=(t*this.cg-e*this.sg)*this.cw*s,e=i*s,A.x=t*this.a,A.y=e*this.a,A},inverse:function(A){A.x/=this.a,A.y/=this.a;var t,e,i,s={x:A.x,y:A.y};i=1/(this.pn1-A.y*this.sw),t=this.pn1*A.x*i,e=this.pn1*A.y*this.cw*i,A.x=t*this.cg+e*this.sg,A.y=e*this.cg-t*this.sg;var a=ut(A.x,A.y);if(Math.abs(a)<d)s.x=0,s.y=A.y;else{var n,o;switch(o=1-a*a*this.pfact,o=(this.p-Math.sqrt(o))/(this.pn1/a+a/this.pn1),n=Math.sqrt(1-o*o),this.mode){case be:s.y=Math.asin(n*this.sinph0+A.y*o*this.cosph0/a),A.y=(n-this.sinph0*Math.sin(s.y))*a,A.x*=o*this.cosph0;break;case Me:s.y=Math.asin(A.y*o/a),A.y=n*a,A.x*=o;break;case ke:s.y=Math.asin(n),A.y=-A.y;break;case xe:s.y=-Math.asin(n)}s.x=Math.atan2(A.x,A.y)}return A.x=s.x+this.long0,A.y=s.y,A},names:[\\\"Tilted_Perspective\\\",\\\"tpers\\\"]};const Se={init:function(){if(this.flip_axis=\\\"x\\\"===this.sweep?1:0,this.h=Number(this.h),this.radius_g_1=this.h/this.a,this.radius_g_1<=0||this.radius_g_1>1e10)throw new Error;if(this.radius_g=1+this.radius_g_1,this.C=this.radius_g*this.radius_g-1,0!==this.es){var A=1-this.es,t=1/A;this.radius_p=Math.sqrt(A),this.radius_p2=A,this.radius_p_inv2=t,this.shape=\\\"ellipse\\\"}else this.radius_p=1,this.radius_p2=1,this.radius_p_inv2=1,this.shape=\\\"sphere\\\";this.title||(this.title=\\\"Geostationary Satellite View\\\")},forward:function(A){var t,e,i,s,a=A.x,n=A.y;if(a-=this.long0,\\\"ellipse\\\"===this.shape){n=Math.atan(this.radius_p2*Math.tan(n));var o=this.radius_p/ut(this.radius_p*Math.cos(n),Math.sin(n));if(e=o*Math.cos(a)*Math.cos(n),i=o*Math.sin(a)*Math.cos(n),s=o*Math.sin(n),(this.radius_g-e)*e-i*i-s*s*this.radius_p_inv2<0)return A.x=Number.NaN,A.y=Number.NaN,A;t=this.radius_g-e,this.flip_axis?(A.x=this.radius_g_1*Math.atan(i/ut(s,t)),A.y=this.radius_g_1*Math.atan(s/t)):(A.x=this.radius_g_1*Math.atan(i/t),A.y=this.radius_g_1*Math.atan(s/ut(i,t)))}else\\\"sphere\\\"===this.shape&&(t=Math.cos(n),e=Math.cos(a)*t,i=Math.sin(a)*t,s=Math.sin(n),t=this.radius_g-e,this.flip_axis?(A.x=this.radius_g_1*Math.atan(i/ut(s,t)),A.y=this.radius_g_1*Math.atan(s/t)):(A.x=this.radius_g_1*Math.atan(i/t),A.y=this.radius_g_1*Math.atan(s/ut(i,t))));return A.x=A.x*this.a,A.y=A.y*this.a,A},inverse:function(A){var t,e,i,s,a=-1,n=0,o=0;if(A.x=A.x/this.a,A.y=A.y/this.a,\\\"ellipse\\\"===this.shape){this.flip_axis?(o=Math.tan(A.y/this.radius_g_1),n=Math.tan(A.x/this.radius_g_1)*ut(1,o)):(n=Math.tan(A.x/this.radius_g_1),o=Math.tan(A.y/this.radius_g_1)*ut(1,n));var r=o/this.radius_p;if(t=n*n+r*r+a*a,(i=(e=2*this.radius_g*a)*e-4*t*this.C)<0)return A.x=Number.NaN,A.y=Number.NaN,A;s=(-e-Math.sqrt(i))/(2*t),a=this.radius_g+s*a,n*=s,o*=s,A.x=Math.atan2(n,a),A.y=Math.atan(o*Math.cos(A.x)/a),A.y=Math.atan(this.radius_p_inv2*Math.tan(A.y))}else if(\\\"sphere\\\"===this.shape){if(this.flip_axis?(o=Math.tan(A.y/this.radius_g_1),n=Math.tan(A.x/this.radius_g_1)*Math.sqrt(1+o*o)):(n=Math.tan(A.x/this.radius_g_1),o=Math.tan(A.y/this.radius_g_1)*Math.sqrt(1+n*n)),t=n*n+o*o+a*a,(i=(e=2*this.radius_g*a)*e-4*t*this.C)<0)return A.x=Number.NaN,A.y=Number.NaN,A;s=(-e-Math.sqrt(i))/(2*t),a=this.radius_g+s*a,n*=s,o*=s,A.x=Math.atan2(n,a),A.y=Math.atan(o*Math.cos(A.x)/a)}return A.x=A.x+this.long0,A},names:[\\\"Geostationary Satellite View\\\",\\\"Geostationary_Satellite\\\",\\\"geos\\\"]};bA.defaultDatum=\\\"WGS84\\\",bA.Proj=uA,bA.WGS84=new bA.Proj(\\\"WGS84\\\"),bA.Point=VA,bA.toPoint=yA,bA.defs=P,bA.nadgrid=function(A,t){var e=new DataView(t),i=function(A){var t=A.getInt32(8,!1);if(11===t)return!1;t=A.getInt32(8,!0),11!==t&&console.warn(\\\"Failed to detect nadgrid endian-ness, defaulting to little-endian\\\");return!0}(e),s=function(A,t){return{nFields:A.getInt32(8,t),nSubgridFields:A.getInt32(24,t),nSubgrids:A.getInt32(40,t),shiftType:lA(A,56,64).trim(),fromSemiMajorAxis:A.getFloat64(120,t),fromSemiMinorAxis:A.getFloat64(136,t),toSemiMajorAxis:A.getFloat64(152,t),toSemiMinorAxis:A.getFloat64(168,t)}}(e,i),a=function(A,t,e){for(var i=176,s=[],a=0;a<t.nSubgrids;a++){var n=gA(A,i,e),o=cA(A,i,n,e),r=Math.round(1+(n.upperLongitude-n.lowerLongitude)/n.longitudeInterval),l=Math.round(1+(n.upperLatitude-n.lowerLatitude)/n.latitudeInterval);s.push({ll:[rA(n.lowerLongitude),rA(n.lowerLatitude)],del:[rA(n.longitudeInterval),rA(n.latitudeInterval)],lim:[r,l],count:n.gridNodeCount,cvs:hA(o)}),i+=176+16*n.gridNodeCount}return s}(e,s,i),n={header:s,subgrids:a};return nA[A]=n,n},bA.transform=mA,bA.mgrs=UA,bA.version=\\\"__VERSION__\\\",function(A){A.Proj.projections.add(ct),A.Proj.projections.add(_t),A.Proj.projections.add(Ct),A.Proj.projections.add(Et),A.Proj.projections.add(yt),A.Proj.projections.add(Qt),A.Proj.projections.add(kt),A.Proj.projections.add(xt),A.Proj.projections.add(Mt),A.Proj.projections.add(Lt),A.Proj.projections.add(zt),A.Proj.projections.add(Kt),A.Proj.projections.add(Yt),A.Proj.projections.add(Vt),A.Proj.projections.add(Wt),A.Proj.projections.add(Xt),A.Proj.projections.add(Zt),A.Proj.projections.add($t),A.Proj.projections.add(Ae),A.Proj.projections.add(te),A.Proj.projections.add(ee),A.Proj.projections.add(ie),A.Proj.projections.add(se),A.Proj.projections.add(ae),A.Proj.projections.add(de),A.Proj.projections.add(Qe),A.Proj.projections.add(me),A.Proj.projections.add(ve),A.Proj.projections.add(Se)}(bA);const Ge=bA},5209:A=>{const t=\\\" +no_defs\\\",e=\\\" +towgs84=0,0,0,0,0,0,0\\\",i=\\\" +ellps=GRS80\\\",s=\\\"+proj=tmerc\\\",a=\\\" +units=m\\\",n=\\\" +towgs84=23.92,-141.27,-80.9,-0,0.35,0.82,-0.12\\\",o=\\\" +towgs84=24.47,-130.89,-81.56,-0,-0,0.13,-0.22\\\",r=\\\"+proj=lcc\\\",l=\\\"+proj=utm\\\",h=\\\" +units=us-ft\\\",g=\\\"+proj=longlat\\\",c=\\\" +lat_0=0\\\",f=\\\" +ellps=krass\\\",u=\\\" +y_0=0\\\",d=\\\" +x_0=500000\\\",I=\\\" +towgs84=0,0,4.5,0,0,0.554,0.2263\\\",p=\\\" +towgs84=0,0,1.9,0,0,0.814,-0.38\\\",_=\\\" +ellps=intl\\\",C=\\\" +datum=WGS84\\\",B=\\\" +ellps=WGS72\\\",w=\\\" +towgs84=15.8,-154.4,-82.3,0,0,0,0\\\",E=\\\" +k=0.9999\\\",y=\\\" +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\\\",Q=\\\" +datum=NAD27\\\",m=\\\" +ellps=bessel\\\",k=\\\" +x_0=609601.2192024384\\\",x=\\\" +x_0=600000\\\",M=\\\" +towgs84=33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84\\\",b=\\\" +ellps=clrk80\\\",D=\\\" +b=6356755.288157528\\\",v=\\\" +x_0=152400.3048006096\\\",S=\\\" +lat_0=36.66666666666666\\\",G=\\\" +towgs84=-146.414,507.337,680.507,0,0,0,0\\\",N=\\\" +x_0=200000\\\",R=\\\" +ellps=clrk66\\\",F=\\\" +ellps=WGS84\\\",L=\\\" +x_0=500000.001016002\\\",U=\\\" +x_0=240000\\\",O=\\\" +lat_0=-90\\\",P=\\\" +towgs84=-87,-98,-121,0,0,0,0\\\",T=\\\" +south\\\",H=\\\" +lat_0=41.66666666666666\\\",J=\\\" +y_0=36000\\\",q=\\\" +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29\\\",z=\\\" +x_0=0\\\",j=\\\" +units=ft\\\",K=\\\" +x_0=400000\\\",Y=\\\" +towgs84=-115.854,-99.0583,-152.462,0,0,0,0\\\",V=\\\" +towgs84=-208.406,-109.878,-2.5764,0,0,0,0\\\",W=\\\" +ellps=aust_SA\\\",X=\\\" +lat_0=39.33333333333334\\\",Z=\\\" +towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232\\\",$=\\\" +lat_0=37.66666666666666\\\",AA=\\\" +lat_0=36.33333333333334\\\",tA=\\\" +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7\\\",eA=\\\" +y_0=500000.0001016001\\\",iA=\\\" +x_0=200000.0001016002\\\",sA=\\\" +x_0=500000.0001016001\\\",aA=\\\" +x_0=500000.00001016\\\",nA=\\\" +y_0=1000000\\\",oA=\\\" +x_0=300000\\\",rA=\\\" +lon_0=-120.5\\\",lA=\\\" +lat_0=43.66666666666666\\\",hA=\\\" +lat_0=43.83333333333334\\\",gA=\\\" +lat_1=-68.66666666666667\\\",cA=\\\" +lat_2=-71.33333333333333\\\",fA=\\\" +k=0.999966667\\\",uA=\\\" +k=0.9996\\\",dA=\\\" +lat_0=38.33333333333334\\\",IA=\\\" +lat_1=73.66666666666667\\\",pA=\\\" +lat_2=70.33333333333333\\\",_A=\\\" +lat_0=72.02500919444445\\\",CA=\\\" +a=6378249.2\\\",BA=\\\" +x_0=1500000\\\",wA=\\\" +lat_ts=-80.23861111111111\\\",EA=\\\" +towgs84=-288,175,-376,0,0,0,0\\\",yA=\\\" +lat_1=41.78333333333333\\\",QA=\\\" +lat_2=-75.33333333333333\\\",mA=\\\" +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21\\\",kA=\\\" +x_0=304800\\\",xA=\\\" +x_0=2000000.0001016\\\",MA=\\\" +k=0.9999375\\\",bA=\\\" +y_0=500000\\\",DA=\\\" +towgs84=-209.362,-87.8162,404.62,0.0046,3.4784,0.5805,-1.4547\\\",vA=\\\" +lon_0=-100.3333333333333\\\",SA=\\\" +lat_1=-72.66666666666667\\\",GA=\\\" +lat_1=-76.66666666666667\\\",NA=\\\" +lat_2=-79.33333333333333\\\",RA=\\\" +y_0=10000000\\\",FA=\\\" +towgs84=-57,1,-41,0,0,0,0\\\",LA=\\\" +k=0.999941177\\\",UA=\\\" +x_0=800000.0000101599\\\",OA=\\\" +y_0=99999.99998983997\\\",PA=\\\" +lat_1=38.43333333333333\\\",TA=\\\" +lat_0=24.33333333333333\\\",HA=\\\" +towgs84=26,-121,-78,0,0,0,0\\\",JA=\\\" +a=6378140\\\",qA=\\\" +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496\\\",zA=\\\" +x_0=399999.99998984\\\",jA=\\\" +towgs84=-24,-15,5,0,0,0,0\\\",KA=\\\" +towgs84=682,-203,480,0,0,0,0\\\",YA=\\\" +towgs84=-136,-108,-292,0,0,0,0\\\",VA=\\\" +b=6356075.41314024\\\",WA=\\\" +lat_1=37.96666666666667\\\",XA=\\\" +lat_0=38.83333333333334\\\",ZA=\\\" +lat_0=40.16666666666666\\\",$A=\\\" +lat_0=34.33333333333334\\\",At=\\\" +lat_0=42.83333333333334\\\",tt=\\\" +lon_0=-84.36666666666666\\\",et=\\\" +x_0=300000.0000000001\\\",it=\\\" +k=0.999933333\\\",st=\\\" +lat_1=48.73333333333333\\\",at=\\\" +lon_0=-111.5\\\",nt=\\\" +k=0.9999473679999999\\\",ot=\\\" +towgs84=-67.35,3.88,-38.22,0,0,0,0\\\",rt=\\\" +lat_2=73.66666666666667\\\",lt=\\\" +lat_0=75.36440330555556\\\",ht=\\\" +b=6356515\\\",gt=\\\" +towgs84=25,-141,-78.5,-0,0.35,0.736,0\\\",ct=\\\"+proj=stere\\\",ft=\\\" +lat_1=-64.66666666666667\\\",ut=\\\" +lat_2=-67.33333333333333\\\",dt=\\\" +b=6356514.966398753\\\",It=\\\" +towgs84=295,736,257,0,0,0,0\\\",pt=\\\" +x_0=100000\\\",_t=\\\" +towgs84=-11,851,5,0,0,0,0\\\",Ct=\\\" +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0\\\",Bt=\\\" +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06\\\",wt=\\\" +lat_0=39.66666666666666\\\",Et=\\\" +x_0=1000000\\\",yt=\\\" +lon_0=-105.5\\\",Qt=\\\" +towgs84=482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15\\\",mt=\\\" +a=6378249.145\\\",kt=\\\" +x_0=2000000\\\",xt=\\\" +lat_0=45.66666666666666\\\",Mt=\\\" +lat_1=80.33333333333333\\\",bt=\\\" +lat_0=78.70733752777778\\\",Dt=\\\" +b=6356774.50408554\\\",vt=\\\" +lon_0=-91.33333333333333\\\",St=\\\" +lon_0=-123.3333333333333\\\",Gt=\\\" +towgs84=-168,-60,320,0,0,0,0\\\",Nt=\\\" +lat_0=31\\\",Rt=\\\" +towgs84=0.072,-0.507,-0.245,-0.0183,0.0003,-0.007,-0.0093\\\",Ft=\\\" +x_0=150000\\\",Lt=\\\" +x_0=3500000\\\",Ut=\\\" +towgs84=213.11,9.37,-74.95,0,0,0,0\\\",Ot=\\\" +lat_1=43.66666666666666\\\",Pt=\\\" +lat_0=40.33333333333334\\\",Tt=\\\" +towgs84=-148,136,90,0,0,0,0\\\",Ht=\\\" +towgs84=616,97,-251,0,0,0,0\\\",Jt=\\\" +lon_0=-90\\\",qt=\\\" +x_0=250000\\\",zt=\\\" +x_0=914401.8288036576\\\",jt=\\\" +lon_0=-90.33333333333333\\\",Kt=\\\" +a=6377276.345\\\",Yt=\\\" +b=6356103.038993155\\\",Vt=\\\" +lat_0=40.5\\\",Wt=\\\" +towgs84=-134,-48,149,0,0,0,0\\\",Xt=\\\" +towgs84=25,-141,-78.5,0,0.35,0.736,0\\\",Zt=\\\" +lat_1=27.83333333333333\\\",$t=\\\" +lat_2=26.16666666666667\\\",Ae=\\\" +lat_2=40.71666666666667\\\",te=\\\" +lat_2=39.01666666666667\\\",ee=\\\" +lat_2=37.21666666666667\\\",ie=\\\" +lat_1=70.33333333333333\\\",se=\\\" +lat_0=68.68747555555557\\\",ae=\\\" +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68\\\",ne=\\\" +y_0=304800.6096012192\\\",oe=\\\" +x_0=699999.9998983998\\\",re=\\\" +y_0=999999.9998983998\\\",le=\\\" +y_0=800000\\\",he=\\\" +k=0.99995\\\",ge=\\\" +lat_0=34.75\\\",ce=\\\" +lon_0=-81\\\",fe=\\\" +lon_0=-100\\\",ue=\\\" +b=6356098.145120132\\\",de=\\\"+proj=omerc\\\",Ie=\\\" +lon_0=-98.5\\\",pe=\\\" +towgs84=-103.746,-9.614,-255.95,0,0,0,0\\\",_e=\\\" +x_0=800000\\\",Ce=\\\" +lat_0=37.83333333333334\\\",Be=\\\" +lat_2=44.33333333333334\\\",we=\\\" +lat_2=42.33333333333334\\\",Ee=\\\" +lat_0=29.66666666666667\\\",ye=\\\" +lat_0=25.66666666666667\\\",Qe=\\\" +lat_0=35.83333333333334\\\",me=\\\" +lat_1=83.66666666666667\\\",ke=\\\" +lat_2=80.33333333333333\\\",xe=\\\" +lat_0=82.05842488888888\\\",Me=\\\" +lat_0=38\\\",be=\\\" +x_0=2500000\\\",De=\\\" +towgs84=-377,681,-50,0,0,0,0\\\",ve=\\\"+proj=cass\\\",Se=\\\" +y_0=2000000\\\",Ge=\\\" +towgs84=-143,-236,7,0,0,0,0\\\",Ne=\\\" +lon_0=-110.1666666666667\\\",Re=\\\" +lon_0=-111.9166666666667\\\",Fe=\\\" +lon_0=-75.41666666666667\\\",Le=\\\" +lon_0=-82.16666666666667\\\",Ue=\\\" +lon_0=-84.16666666666667\\\",Oe=\\\" +lon_0=-112.1666666666667\\\",Pe=\\\" +lon_0=-88.83333333333333\\\",Te=\\\" +lon_0=-104.3333333333333\\\",He=\\\" +lon_0=-107.8333333333333\\\",Je=\\\" +lon_0=-76.58333333333333\\\",qe=\\\" +lon_0=-78.58333333333333\\\",ze=\\\" +lon_0=-120.8333333333333\\\",je=\\\" +lon_0=-88.33333333333333\\\",Ke=\\\" +lon_0=-90.16666666666667\\\",Ye=\\\" +lon_0=-85.66666666666667\\\",Ve=\\\" +lon_0=-87.08333333333333\\\",We=\\\" +lon_0=-70.16666666666667\\\",Xe=\\\" +lon_0=-93.09999999999999\\\",Ze=\\\" +lon_0=-115.5833333333333\\\",$e=\\\" +lon_0=-116.6666666666667\\\",Ai=\\\" +lon_0=-118.5833333333333\\\",ti=\\\" +lon_0=-71.66666666666667\\\",ei=\\\" +lon_0=-105.1666666666667\\\",ii=\\\" +lon_0=-107.3333333333333\\\",si=\\\" +lon_0=-110.0833333333333\\\",ai=\\\" +lat_0=37.5\\\",ni=\\\" +y_0=700000\\\",oi=\\\" +towgs84=-242.2,-144.9,370.3,0,0,0,0\\\",ri=\\\" +x_0=4500000\\\",li=\\\" +y_0=1500000\\\",hi=\\\" +x_0=599999.9999976\\\",gi=\\\" +towgs84=-275.722,94.7824,340.894,-8.001,-4.42,-11.821,1\\\",ci=\\\"+proj=aea\\\",fi=\\\" +y_0=-2500000\\\",ui=\\\" +lat_2=38.96666666666667\\\",di=\\\" +lat_1=41.66666666666666\\\",Ii=\\\" +lat_1=39.83333333333334\\\",pi=\\\" +lat_2=38.33333333333334\\\",_i=\\\" +lat_2=37.06666666666667\\\",Ci=\\\" +lat_0=35.33333333333334\\\",Bi=\\\" +lat_1=35.46666666666667\\\",wi=\\\" +lat_2=34.03333333333333\\\",Ei=\\\" +lat_1=33.88333333333333\\\",yi=\\\" +lat_2=32.78333333333333\\\",Qi=\\\" +lat_0=32.16666666666666\\\",mi=\\\" +lat_2=37.23333333333333\\\",ki=\\\" +lat_1=41.86666666666667\\\",xi=\\\" +lat_0=40.83333333333334\\\",Mi=\\\" +lat_2=29.58333333333333\\\",bi=\\\" +lat_2=41.71666666666667\\\",Di=\\\" +lat_1=41.03333333333333\\\",vi=\\\" +lat_2=40.66666666666666\\\",Si=\\\" +lat_1=36.76666666666667\\\",Gi=\\\" +lat_0=33.33333333333334\\\",Ni=\\\" +lat_1=40.96666666666667\\\",Ri=\\\" +lat_2=39.93333333333333\\\",Fi=\\\" +lat_0=31.83333333333333\\\",Li=\\\" +lat_0=31.66666666666667\\\",Ui=\\\" +lat_0=27.83333333333333\\\",Oi=\\\" +lat_2=36.76666666666667\\\",Pi=\\\" +lat_0=45.33333333333334\\\",Ti=\\\" +lat_0=45.16666666666666\\\",Hi=\\\" +lat_1=36.23333333333333\\\",Ji=\\\" +lat_2=34.93333333333333\\\",qi=\\\" +lat_1=34.76666666666667\\\",zi=\\\" +lat_0=32.66666666666666\\\",ji=\\\" +lat_1=43.26666666666667\\\",Ki=\\\" +lat_2=42.06666666666667\\\",Yi=\\\" +lat_2=40.61666666666667\\\",Vi=\\\" +lat_1=39.78333333333333\\\",Wi=\\\" +lat_2=38.71666666666667\\\",Xi=\\\" +lat_1=38.56666666666667\\\",Zi=\\\" +lat_2=37.26666666666667\\\",$i=\\\" +lat_0=41.08333333333334\\\",As=\\\" +lat_0=42.33333333333334\\\",ts=\\\" +y_0=100000\\\",es=\\\" +b=6356173.508712696\\\",is=\\\" +y_0=5500000\\\",ss=\\\" +lon_0=105\\\",as=\\\" +y_0=-5000000\\\",ns=\\\" +k=0.9995000000000001\\\",os=\\\" +k=0.9999749999999999\\\",rs=\\\" +towgs84=-160,-6,-302,0,0,0,0\\\",ls=\\\" +towgs84=307,304,-318,0,0,0,0\\\",hs=\\\" +lon_0=-82.5\\\",gs=\\\" +towgs84=70.995,-335.916,262.898,0,0,0,0\\\",cs=\\\" +towgs84=-304.046,-60.576,103.64,0,0,0,0\\\",fs=\\\" +x_0=700000\\\",us=\\\" +x_0=213360\\\",ds=\\\" +lon_0=-85.75\\\",Is=\\\" +lon_0=-100.5\\\",ps=\\\" +lon_0=-77.75\\\",_s=\\\" +x_0=999999.9999898402\\\",Cs=\\\" +towgs84=-151.99,287.04,-147.45,0,0,0,0\\\",Bs=\\\" +lon_0=129\\\",ws=\\\" +a=6378293.645208759\\\",Es=\\\" +b=6356617.987679838\\\",ys=\\\" +x_0=5500000\\\",Qs=\\\" +lat_1=40.78333333333333\\\",ms=\\\" +lat_2=39.71666666666667\\\",ks=\\\" +lat_1=37.93333333333333\\\",xs=\\\" +lat_2=36.73333333333333\\\",Ms=\\\" +lat_1=42.68333333333333\\\",bs=\\\" +lat_1=41.48333333333333\\\",Ds=\\\" +lat_2=41.28333333333333\\\",vs=\\\" +lat_1=47.08333333333334\\\",Ss=\\\" +lat_2=45.48333333333333\\\",Gs=\\\" +lat_0=44.78333333333333\\\",Ns=\\\" +lat_2=44.18333333333333\\\",Rs=\\\" +lat_0=43.31666666666667\\\",Fs=\\\" +lat_1=36.16666666666666\\\",Ls=\\\" +lat_2=34.33333333333334\\\",Us=\\\" +lat_2=47.43333333333333\\\",Os=\\\" +lat_1=47.48333333333333\\\",Ps=\\\" +lat_2=46.18333333333333\\\",Ts=\\\" +lat_2=35.56666666666667\\\",Hs=\\\" +lat_1=35.23333333333333\\\",Js=\\\" +lat_2=33.93333333333333\\\",qs=\\\" +lat_2=40.88333333333333\\\",zs=\\\" +lat_1=34.83333333333334\\\",js=\\\" +lat_1=36.41666666666666\\\",Ks=\\\" +lat_1=36.18333333333333\\\",Ys=\\\" +lat_1=33.96666666666667\\\",Vs=\\\" +lat_2=32.13333333333333\\\",Ws=\\\" +lat_1=31.88333333333333\\\",Xs=\\\" +lat_2=30.11666666666667\\\",Zs=\\\" +lat_1=30.28333333333333\\\",$s=\\\" +lat_2=28.38333333333333\\\",Aa=\\\" +lat_2=38.03333333333333\\\",ta=\\\" +lat_1=47.33333333333334\\\",ea=\\\" +lat_2=45.83333333333334\\\",ia=\\\" +lat_1=46.76666666666667\\\",sa=\\\" +lat_2=45.56666666666667\\\",aa=\\\" +lat_1=44.06666666666667\\\",na=\\\" +lat_2=42.73333333333333\\\",oa=\\\" +lat_1=32.66666666666666\\\",ra=\\\" +lat_2=31.16666666666667\\\",la=\\\" +lat_1=48.63333333333333\\\",ha=\\\" +lat_2=47.03333333333333\\\",ga=\\\" +lat_2=45.61666666666667\\\",ca=\\\" +lat_1=45.21666666666667\\\",fa=\\\" +lat_2=43.78333333333333\\\",ua=\\\" +lat_0=39.83333333333334\\\",da=\\\" +lat_2=40.43333333333333\\\",Ia=\\\" +lat_1=40.03333333333333\\\",pa=\\\" +lat_2=38.73333333333333\\\",_a=\\\" +lat_1=45.68333333333333\\\",Ca=\\\" +lat_2=44.41666666666666\\\",Ba=\\\" +lat_2=42.83333333333334\\\",wa=\\\" +lat_1=38.88333333333333\\\",Ea=\\\" +lat_2=37.48333333333333\\\",ya=\\\" +lat_1=37.08333333333334\\\",Qa=\\\" +lat_2=38.66666666666666\\\",ma=\\\" +lat_0=58\\\",ka=\\\" +lon_0=-98\\\",xa=\\\" +lon_0=117\\\",Ma=\\\" +lon_0=135\\\",ba=\\\" +lat_0=41.5\\\",Da=\\\" +lat_0=42.5\\\",va=\\\" +y_0=3000000\\\",Sa=\\\" +lon_0=123\\\",Ga=\\\" +lat_0=40\\\",Na=\\\" +lat_0=54\\\",Ra=\\\" +towgs84=-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188\\\",Fa=\\\" +towgs84=565.417,50.3319,465.552,-0.398957,0.343988,-1.8774,4.0725\\\",La=\\\" +x_0=914401.8289\\\",Ua=\\\" +y_0=304800.6096\\\",Oa=\\\" +lon_0=111\\\",Pa=\\\" +k_0=0.99878641\\\",Ta=\\\" +lon_0=-66.43333333333334\\\",Ha=\\\" +towgs84=61,-285,-181,0,0,0,0\\\",Ja=\\\" +towgs84=-133,-77,-51,0,0,0,0\\\",qa=\\\" +towgs84=-679,669,-48,0,0,0,0\\\",za=\\\" +lon_0=-71.5\\\",ja=\\\" +lon_0=-78.5\\\",Ka=\\\" +lon_0=-93.5\\\",Ya=\\\" +lat_0=41.75\\\",Va=\\\" +y_0=249999.9998983998\\\",Wa=\\\" +y_0=999999.9999898402\\\",Xa=\\\" +to_meter=1.0000135965\\\",Za=\\\" +a=6377304.063\\\",$a=\\\" +lat_0=36\\\",An=\\\" +towgs84=-79.9,-158,-168.9,0,0,0,0\\\",tn=\\\" +towgs84=-50.9,-347.6,-231,0,0,0,0\\\",en=\\\" +towgs84=-106.869,52.2978,-103.724,0.3366,-0.457,1.8422,-1.2747\\\",sn=\\\" +towgs84=283,682,231,0,0,0,0\\\",an=\\\" +towgs84=-206,172,-6,0,0,0,0\\\",nn=\\\" +towgs84=-92,-93,122,0,0,0,0\\\",on=\\\" +to_meter=0.9143985307444408\\\",rn=\\\"+proj=sterea\\\",ln=\\\" +lat_0=21.16666666666667\\\",hn=\\\" +lat_1=18.43333333333333\\\",gn=\\\" +lat_2=18.03333333333333\\\",cn=\\\" +lat_0=17.83333333333333\\\",fn=\\\" +gamma=323.1301023611111\\\",un=\\\" +lon_0=-79.5\\\",dn=\\\" +y_0=4500000\\\",In=\\\" +x_0=31500000\\\",pn=\\\" +x_0=500000.0001504\\\",_n=\\\" +b=6356514.96582849\\\",Cn=\\\" +towgs84=674.4,15.1,405.3,0,0,0,0\\\",Bn=\\\" +towgs84=-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.7101\\\",wn=\\\" +towgs84=589,76,480,0,0,0,0\\\",En=\\\" +towgs84=-263,6,431,0,0,0,0\\\",yn=\\\" +lon_0=15\\\",Qn=\\\" +axis=wsu\\\",mn=\\\" +lon_0=21\\\",kn=\\\" +lat_0=30\\\",xn=\\\" +ellps=helmert\\\",Mn=\\\" +a=6377299.151\\\",bn=\\\" +lon_0=-74.5\\\",Dn=\\\" +b=6356750.304921594\\\",vn=\\\" +y_0=2000000.0001016\\\",Sn=\\\" +x_0=3500000.0001016\\\",Gn=\\\" +y_0=399999.99998984\\\",Nn=\\\" +x_0=200000.00001016\\\",Rn=\\\" +b=6356098.359005156\\\",Fn=\\\" +x_0=14500000\\\",Ln=\\\" +x_0=29500000\\\",Un=\\\" +towgs84=-117,-132,-164,0,0,0,0\\\",On=\\\" +zone=20\\\",Pn=\\\" +lon_0=-122\\\",Tn=\\\" +ellps=bess_nam\\\",Hn=\\\" +lon_0=-86.15000000000001\\\",Jn=\\\" +towgs84=-189,-242,-91,0,0,0,0\\\",qn=\\\" +towgs84=-265,120,-358,0,0,0,0\\\",zn=\\\" +towgs84=-73.472,-51.66,-112.482,0.953,4.6,-2.368,0.586\\\",jn=\\\" +towgs84=-17.51,-108.32,-62.39,0,0,0,0\\\",Kn=\\\" +towgs84=-10.18,-350.43,291.37,0,0,0,0\\\",Yn=\\\" +towgs84=-190.421,8.532,238.69,0,0,0,0\\\",Vn=\\\" +lon_0=-68.5\\\",Wn=\\\" +a=6377299.36559538\\\",Xn=\\\" +x_0=79999.99999968\\\",Zn=\\\" +x_0=50000.00001504\\\",$n=\\\" +lon_0=0\\\",Ao=\\\" +lon_0=27\\\",to=\\\" +lon_0=75\\\",eo=\\\" +lon_0=81\\\",io=\\\" +lon_0=93\\\",so=\\\" +lon_0=99\\\",ao=\\\" +x_0=900000\\\",no=\\\" +x_0=13500000\\\",oo=\\\" +x_0=20500000\\\",ro=\\\" +x_0=22500000\\\",lo=\\\" +towgs84=-166,-15,204,0,0,0,0\\\",ho=\\\" +towgs84=-130,110,-13,0,0,0,0\\\",go=\\\" +towgs84=-587.8,519.75,145.76,0,0,0,0\\\",co=\\\" +lat_2=83.66666666666667\\\",fo=\\\" +lat_0=85.43711833333333\\\",uo=\\\" +towgs84=-273.5,110.6,-357.9,0,0,0,0\\\",Io=\\\" +lon_0=87\\\",po=\\\"+proj=laea\\\",_o=\\\" +towgs84=-403,684,41,0,0,0,0\\\",Co=\\\" +lon_0=-92.5\\\",Bo=\\\" +y_0=6000000\\\",wo=\\\" +zone=19\\\",Eo=\\\" +lat_0=29.5\\\",yo=\\\" +y_0=300000\\\",Qo=\\\" +lat_2=45.5\\\",mo=\\\" +k=0.999909091\\\",ko=\\\" +a=6377492.018\\\",xo=\\\" +b=6356751.689189189\\\",Mo=\\\" +b=6356100.230165384\\\",bo=\\\" +lon_0=90\\\",Do=\\\" +lat_0=90\\\",vo=\\\" +x_0=18500000\\\",So=\\\" +x_0=19500000\\\",Go=\\\" +x_0=15500000\\\",No=\\\" +x_0=16500000\\\",Ro=\\\" +x_0=21500000\\\",Fo=\\\" +x_0=23500000\\\",Lo=\\\" +x_0=25500000\\\",Uo=\\\" +x_0=26500000\\\",Oo=\\\" +x_0=27500000\\\",Po=\\\" +x_0=28500000\\\",To=\\\" +zone=18\\\",Ho=\\\" +zone=21\\\",Jo=\\\" +towgs84=-124.76,53,466.79,0,0,0,0\\\",qo=\\\" +lon_0=-92\\\",zo=\\\" +lon_0=33\\\",jo=\\\" +lon_0=12\\\",Ko=\\\" +lon_0=24\\\",Yo=\\\" +lat_2=77\\\",Vo=\\\" +y_0=200000\\\",Wo=\\\" +lon_0=-70.5\\\",Xo=\\\" +x_0=7500000\\\",Zo=\\\" +y_0=3500000\\\",$o=\\\" +towgs84=31,146,47,0,0,0,0\\\",Ar=\\\" +lat_0=45\\\",tr=\\\" +lat_0=26\\\",er=\\\" +a=6378160\\\",ir=\\\" +lon_0=-109.5\\\",sr=\\\" +x_0=30500000\\\",ar=\\\" +x_0=32500000\\\",nr=\\\" +lon_0=-85.83333333333333\\\",or=\\\" +lon_0=-118.3333333333333\\\",rr=\\\" +y_0=0.003048006096012192\\\",lr=\\\" +lat_0=30.5\\\",hr=\\\" +lat_0=44\\\",gr=\\\" +lon_0=30\\\",cr=\\\" +lat_0=47\\\",fr=\\\" +lat_1=77\\\",ur=\\\" +lat_0=36.16666666666666\\\",dr=\\\" +lat_0=4.596200416666666\\\",Ir=\\\" +gamma=53.13010236111111\\\",pr=\\\" +lon_0=13.33333333333333\\\",_r=\\\" +lat_0=81.31722600000001\\\",Cr=\\\" +lat_0=73.15574086111111\\\",Br=\\\" +lat_0=65.10127088888888\\\",wr=\\\" +zone=17\\\",Er=\\\" +lon_0=132\\\",yr=\\\" +lon_0=114\\\",Qr=\\\" +towgs84=-143,-90,-294,0,0,0,0\\\",mr=\\\" +zone=22\\\",kr=\\\" +lat_0=41\\\",xr=\\\" +lat_0=46.5\\\",Mr=\\\" +lon_0=-118\\\",br=\\\" +y_0=400000\\\",Dr=\\\" +x_0=17500000\\\",vr=\\\" +x_0=33500000\\\",Sr=\\\" +lon_0=-113.75\\\",Gr=\\\" +lon_0=-116.25\\\",Nr=\\\" +lon_0=-115.75\\\",Rr=\\\" +lon_0=-106.25\\\",Fr=\\\" +k=0.999916667\\\",Lr=\\\" +k=0.999964286\\\",Ur=\\\" +lon_0=-108.75\\\",Or=\\\" +towgs84=-73,-247,227,0,0,0,0\\\",Pr=\\\" +towgs84=265.025,384.929,-194.046,0,0,0,0\\\",Tr=\\\" +k=0.99998\\\",Hr=\\\" +lat_1=40.65\\\",Jr=\\\" +lat_1=38.35\\\",qr=\\\" +y_0=2500000\\\",zr=\\\" +y_0=6500000\\\",jr=\\\" +x_0=39999.99999984\\\",Kr=\\\" +towgs84=-61.702,284.488,472.052,0,0,0,0\\\",Yr=\\\" +towgs84=-223.237,110.193,36.649,0,0,0,0\\\",Vr=\\\" +zone=39\\\",Wr=\\\" +zone=32\\\",Xr=\\\" +towgs84=-125,53,467,0,0,0,0\\\",Zr=\\\" +towgs84=198,881,317,0,0,0,0\\\",$r=\\\" +towgs84=214,804,268,0,0,0,0\\\",Al=\\\" +towgs84=217,823,299,0,0,0,0\\\",tl=\\\" +lon_0=45\\\",el=\\\" +lat_1=43\\\",il=\\\"+proj=merc\\\",sl=\\\" +x_0=99999.99998983997\\\",al=\\\" +x_0=99999.99999960001\\\",nl=\\\" +x_0=2743195.592233322\\\",ol=\\\" +y_0=914398.5307444407\\\",rl=\\\" +zone=38\\\",ll=\\\" +zone=28\\\",hl=\\\" +lon_0=-114\\\",gl=\\\" +lat_1=45.5\\\",cl=\\\" +towgs84=-73,46,-86,0,0,0,0\\\",fl=\\\" +towgs84=11,72,-101,0,0,0,0\\\",ul=\\\" +towgs84=287.58,177.78,-135.41,0,0,0,0\\\",dl=\\\" +towgs84=-162.619,-276.959,-161.764,0.067753,-2.24365,-1.15883,-1.09425\\\",Il=\\\" +lon_0=-87\\\",pl=\\\" +lon_0=-99\\\",_l=\\\" +lon_0=102\\\",Cl=\\\" +lon_0=126\\\",Bl=\\\" +k=0.99999\\\",wl=\\\" +x_0=50000\\\",El=\\\" +lat_2=40\\\",yl=\\\" +lon_0=-84.25\\\",Ql=\\\" +x_0=11500000\\\",ml=\\\" +lon_0=-72.75\\\",kl=\\\" +lon_0=-101.5\\\",xl=\\\" +lon_0=-94.25\\\",Ml=\\\" +x_0=6500000\\\",bl=\\\" +y_0=5000000\\\",Dl=\\\" +x_0=1700000\\\",vl=\\\" +towgs84=31.95,300.99,419.19,0,0,0,0\\\",Sl=\\\" +towgs84=-189.681,18.3463,-42.7695,-0.33746,-3.09264,2.53861,0.4598\\\",Gl=\\\" +towgs84=-119.425,-303.659,-11.0006,1.1643,0.174458,1.09626,3.65706\\\",Nl=\\\" +towgs84=982.609,552.753,-540.873,6.68163,-31.6115,-19.8482,16.805\\\",Rl=\\\" +zone=29\\\",Fl=\\\" +lon_0=9\\\",Ll=\\\" +zone=33\\\",Ul=\\\" +zone=37\\\",Ol=\\\" +no_uoff\\\",Pl=\\\" +lon_0=120\\\",Tl=\\\" +lon_0=177\\\",Hl=\\\" +lon_0=-177\\\",Jl=\\\" +lon_0=-158\\\",ql=\\\" +y_0=250000\\\",zl=\\\" +lon_0=-111\\\",jl=\\\" +x_0=2500000.0001424\\\",Kl=\\\" +x_0=1500000.0001464\\\",Yl=\\\" +lon_0=-71.60561777777777\\\",Vl=\\\" +lon_0=-156.6666666666667\\\",Wl=\\\" +lon_0=-160.1666666666667\\\",Xl=\\\" +lat_0=0.1166666666666667\\\",Zl=\\\" +towgs84=0,0,0,-0,-0,-0,0\\\",$l=\\\" +lon_0=-117.8333333333333\\\",Ah=\\\" +lon_0=-123.1666666666667\\\",th=\\\" +lon_0=-122.3333333333333\\\",eh=\\\" +lon_0=-119.1666666666667\\\",ih=\\\" +lon_0=-123.0833333333333\\\",sh=\\\" +lon_0=-85.84999999999999\\\",ah=\\\" +lon_0=-87.09999999999999\\\",nh=\\\" +lon_0=-86.90000000000001\\\",oh=\\\" +lon_0=-89.24166666666667\\\",rh=\\\" +lon_0=-92.63333333333334\\\",lh=\\\" +towgs84=347.103,1078.12,2623.92,-33.8875,70.6773,-9.3943,186.074\\\",hh=\\\" +towgs84=8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926\\\",gh=\\\" +towgs84=-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7\\\",ch=\\\" +towgs84=-0.293,766.95,87.713,0.195704,1.69507,3.47302,-0.039338\\\",fh=\\\" +towgs84=221.525,152.948,176.768,-2.3847,-1.3896,-0.877,11.4741\\\",uh=\\\" +towgs84=215.525,149.593,176.229,-3.2624,-1.692,-1.1571,10.4773\\\",dh=\\\" +zone=35\\\",Ih=\\\" +lat_0=46.95240555555556\\\",ph=\\\" +alpha=30.28813972222222\\\",_h=\\\" +lat_1=10.16666666666667\\\",Ch=\\\" +lat_0=10.16666666666667\\\",Bh=\\\" +lat_0=18.83333333333333\\\",wh=\\\" +lat_0=20.33333333333333\\\",Eh=\\\" +lat_0=21.83333333333333\\\",yh=\\\" +lat_0=21.66666666666667\\\",Qh=\\\" +lat_0=45.30916666666666\\\",mh=\\\" +lat_1=49.83333333333334\\\",kh=\\\" +lat_2=51.16666666666666\\\",xh=\\\" +lonc=-133.6666666666667\\\",Mh=\\\" +alpha=323.1301023611111\\\",bh=\\\" +lat_1=53.83333333333334\\\",Dh=\\\" +lat_2=51.83333333333334\\\",vh=\\\" +lat_1=44.66666666666666\\\",Sh=\\\" +lat_0=44.66666666666666\\\",Gh=\\\" +lat_1=45.66666666666666\\\",Nh=\\\" +lat_0=45.91666666666666\\\",Rh=\\\" +lat_0=45.08333333333334\\\",Fh=\\\" +lat_0=44.33333333333334\\\",Lh=\\\" +lat_0=44.08333333333334\\\",Uh=\\\" +lat_1=48.33333333333334\\\",Oh=\\\" +lat_0=48.33333333333334\\\",Ph=\\\" +lat_0=31.73409694444445\\\",Th=\\\" +lon_0=35.21208055555556\\\",Hh=\\\" +lat_0=44.03611111111111\\\",Jh=\\\" +lat_0=4.599047222222222\\\",qh=\\\" +lat_0=40.66666666666666\\\",zh=\\\" +lat_1=49\\\",jh=\\\" +lon_0=39\\\",Kh=\\\" +lat_1=37.25\\\",Yh=\\\" +lat_1=39.75\\\",Vh=\\\" +lat_2=38.45\\\",Wh=\\\" +lat_1=30.75\\\",Xh=\\\" +lon_0=-84.5\\\",Zh=\\\" +lat_0=33.75\\\",$h=\\\" +x_0=4000000\\\",Ag=\\\" +y_0=4000000\\\",tg=\\\" +lon_0=-72.5\\\",eg=\\\" +x_0=5000000\\\",ig=\\\" +x_0=10500000\\\",sg=\\\" +x_0=12500000\\\",ag=\\\" +x_0=24500000\\\",ng=\\\" +k=0.99999375\\\",og=\\\" +x_0=399999.9999984\\\",rg=\\\" +lon_0=-77\\\",lg=\\\" +lon_0=108\\\",hg=\\\" +lon_0=171\\\",gg=\\\" +towgs84=-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925\\\",cg=\\\" +lon_0=-171\\\",fg=\\\" +lat_0=32.5\\\",ug=\\\" +lon_0=-117\\\",dg=\\\" +k=1.000015\\\",Ig=\\\" +k=1.000034\\\",pg=\\\" +k=1.000031\\\",_g=\\\" +k=1.000026\\\",Cg=\\\" +ellps=evrstSS\\\",Bg=\\\" +a=6377301.243\\\",wg=\\\" +towgs84=410.721,55.049,80.746,2.5779,2.3514,0.6664,17.3311\\\",Eg=\\\" +towgs84=72.438,345.918,79.486,1.6045,0.8823,0.5565,1.3746\\\",yg=\\\" +pm=ferro\\\",Qg=\\\" +lon_0=78\\\",mg=\\\" +lon_0=10\\\",kg=\\\" +pm=paris\\\",xg=\\\" +towgs84=0.055,-0.541,-0.185,0.0183,-0.0003,-0.007,-0.014\\\",Mg=\\\" +towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489\\\",bg=\\\" +towgs84=8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081\\\",Dg=\\\" +towgs84=572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378\\\",vg=\\\" +zone=58\\\",Sg=\\\" +zone=23\\\",Gg=\\\" +x_0=304800.6096012192\\\",Ng=\\\" +y_0=152400.3048006096\\\",Rg=\\\" +x_0=800000.0001016001\\\",Fg=\\\" +x_0=399999.9998983998\\\",Lg=\\\" +x_0=7999999.999968001\\\",Ug=\\\" +x_0=5999999.999976001\\\",Og=\\\" +x_0=830000.0001016001\\\",Pg=\\\" +x_0=249999.9998983998\\\",Tg=\\\" +x_0=350000.0001016001\\\",Hg=\\\" +to_meter=0.3047972654\\\",Jg=\\\" +x_0=99999.99989839978\\\",qg=\\\" +y_0=8000000.000010163\\\",zg=\\\" +x_0=699999.9999898402\\\",jg=\\\" +lon_0=-69\\\",Kg=\\\" +lon_0=-86\\\",Yg=\\\" +towgs84=-3.2,-5.7,2.8,0,0,0,0\\\",Vg=\\\" +x_0=8500000\\\",Wg=\\\" +x_0=9500000\\\",Xg=\\\" +lat_1=39.45\\\",Zg=\\\" +lat_0=44.25\\\",$g=\\\" +lat_1=41.95\\\",Ac=\\\" +lat_2=35.25\\\",tc=\\\" +lat_2=34.65\\\",ec=\\\" +lat_2=44.25\\\",ic=\\\" +lat_1=47.05\\\",sc=\\\" +lat_1=40.25\\\",ac=\\\" +k_0=1.00012\\\",nc=\\\" +lat_0=40.25\\\",oc=\\\" +zone=40\\\",rc=\\\" +zone=36\\\",lc=\\\" +zone=51\\\",hc=\\\" +zone=48\\\",gc=\\\" +zone=49\\\",cc=\\\" +lon_0=96\\\",fc=\\\" +y_0=750000\\\",uc=\\\" +lat_0=36.5\\\",dc=\\\" +lon_0=-119\\\",Ic=\\\" +lat_0=33.5\\\",pc=\\\" +lat_2=41.2\\\",_c=\\\" +k=0.999995\\\",Cc=\\\" +lat_2=33.3\\\",Bc=\\\" +lat_0=38.5\\\",wc=\\\" +lon_0=-154\\\",Ec=\\\" +lon_0=-120\\\",yc=\\\" +x_0=34500000\\\",Qc=\\\" +x_0=35500000\\\",mc=\\\" +x_0=36500000\\\",kc=\\\" +x_0=37500000\\\",xc=\\\" +x_0=38500000\\\",Mc=\\\" +x_0=39500000\\\",bc=\\\" +x_0=40500000\\\",Dc=\\\" +x_0=41500000\\\",vc=\\\" +x_0=43500000\\\",Sc=\\\" +x_0=45500000\\\",Gc=\\\" +y_0=3999999.99998984\\\",Nc=\\\" +y_0=2000000.00001016\\\",Rc=\\\" +towgs84=164,138,-189,0,0,0,0\\\",Fc=\\\" +towgs84=-186,230,110,0,0,0,0\\\",Lc=\\\" +towgs84=-199,32,322,0,0,0,0\\\",Uc=\\\" +to_meter=0.3047997101815088\\\",Oc=\\\" +towgs84=-76,-138,67,0,0,0,0\\\",Pc=\\\" +towgs84=-43,-163,45,0,0,0,0\\\",Tc=\\\" +towgs84=-346,-1,224,0,0,0,0\\\",Hc=\\\" +towgs84=210,814,289,0,0,0,0\\\",Jc=\\\" +towgs84=-74,-130,42,0,0,0,0\\\",qc=\\\" +zone=15\\\",zc=\\\" +zone=16\\\",jc=\\\" +zone=34\\\",Kc=\\\" +zone=50\\\",Yc=\\\" +zone=52\\\",Vc=\\\" +lon_0=-62\\\",Wc=\\\" +lon_0=-84\\\",Xc=\\\" +lon_0=-79\\\",Zc=\\\" +lon_0=131\\\",$c=\\\" +lon_0=153\\\",Af=\\\" +lon_0=165\\\",tf=\\\" +lon_0=-94\\\",ef=\\\" +lon_0=-54\\\",sf=\\\" +a=6378300.789\\\",af=\\\" +b=6356566.435\\\",nf=\\\" +y_0=3999999.9998984\\\",of=\\\" +y_0=5000000.0001016\\\",rf=\\\" +x_0=150000.00001464\\\",lf=\\\" +lat_2=46\\\",hf=\\\" +lon_0=84\\\",gf=\\\" +lat_0=43\\\",cf=\\\" +k_0=0.999625769\\\",ff=\\\" +towgs84=51,391,-36,0,0,0,0\\\",uf=\\\" +towgs84=-83,37,124,0,0,0,0\\\",df=\\\" +towgs84=-355,21,72,0,0,0,0\\\",If=\\\" +towgs84=-23,259,-9,0,0,0,0\\\",pf=\\\" +towgs84=174.05,-25.49,112.57,-0,-0,0.554,0.2263\\\",_f=\\\" +zone=59\\\",Cf=\\\" +zone=25\\\",Bf=\\\" +zone=11\\\",wf=\\\" +zone=12\\\",Ef=\\\" +zone=13\\\",yf=\\\" +zone=54\\\",Qf=\\\" +zone=14\\\",mf=\\\" +zone=24\\\",kf=\\\" +zone=47\\\",xf=\\\" +lat_2=38.3\\\",Mf=\\\" +lat_1=45.7\\\",bf=\\\" +lat_2=42.1\\\",Df=\\\" +x_0=165000\\\",vf=\\\" +lat_2=32.5\\\",Sf=\\\" +x_0=609600\\\",Gf=\\\" +lat_1=39.2\\\",Nf=\\\" +lat_2=47.5\\\",Rf=\\\" +lat_1=30.7\\\",Ff=\\\" +lat_2=29.3\\\",Lf=\\\" +lat_0=28.5\\\",Uf=\\\" +lat_1=41.7\\\",Of=\\\" +lat_1=44.4\\\",Pf=\\\" +lat_1=27.5\\\",Tf=\\\" +lon_0=-150\\\",Hf=\\\" +lat_0=44.5\\\",Jf=\\\" +k=1.000027\\\",qf=\\\" +k=1.000038\\\",zf=\\\" +k=1.000036\\\",jf=\\\" +lon_0=-87.5\\\",Kf=\\\" +x_0=3999999.999984\\\",Yf=\\\" +x_0=199999.9999992\\\",Vf=\\\" +towgs84=16,196,93,0,0,0,0\\\",Wf=\\\" +towgs84=-88,4,101,0,0,0,0\\\",Xf=\\\" +lat_0=18\\\",Zf=\\\" +lat_2=67\\\",$f=\\\" +lon_0=-96\\\",Au=\\\" +x_0=80000\\\",tu=\\\" +lon_0=-82\\\",eu=\\\" +lon_0=-74\\\",iu=\\\" +lon_0=147\\\",su=\\\" +lon_0=150\\\",au=\\\" +x_0=40000\\\",nu=\\\" +k=1.00002\\\",ou=\\\" +x_0=42500000\\\",ru=\\\" +x_0=44500000\\\",lu=\\\" +lon_0=-85.05\\\",hu=\\\" +ellps=mod_airy\\\",gu=\\\" +lat_0=0.1333333333333333\\\",cu=\\\" +lat_1=-60.66666666666666\\\",fu=\\\" +lat_2=-63.33333333333334\\\",uu=\\\" +lon_0=-91.91666666666667\\\",du=\\\" +y_0=0.003352806705613411\\\",Iu=\\\" +zone=30\\\",pu=\\\" +lon_0=3\\\",_u=\\\" +zone=26\\\",Cu=\\\" +zone=53\\\",Bu=\\\" +lat_0=31.73439361111111\\\",wu=\\\" +lon_0=35.20451694444445\\\",Eu=\\\" +lon_0=7.439583333333333\\\",yu=\\\" +lon_0=132.1666666666667\\\",Qu=\\\" +lon_0=134.3333333333333\\\",mu=\\\" +lon_0=137.1666666666667\\\",ku=\\\" +lon_0=139.8333333333333\\\",xu=\\\" +lon_0=140.8333333333333\\\",Mu=\\\" +lon_0=3.192280555555556\\\",bu=\\\" +lat_1=49.50000000000001\\\",Du=\\\" +lat_0=49.50000000000001\\\",vu=\\\" +alpha=53.31582047222222\\\",Su=\\\" +lon_0=10.33333333333333\\\",Gu=\\\" +lon_0=16.33333333333333\\\",Nu=\\\" +towgs84=-502.862,-247.438,312.724,0,0,0,0\\\",Ru=\\\" +towgs84=-381.788,-57.501,-256.673,0,0,0,0\\\",Fu=\\\" +towgs84=-43.685,-179.785,-267.721,0,0,0,0\\\",Lu=\\\" +zone=60\\\",Uu=\\\" +zone=55\\\",Ou=\\\" +lon_0=36\\\",Pu=\\\" +lon_0=42\\\",Tu=\\\" +lat_1=46\\\",Hu=\\\" +lat_1=44\\\",Ju=\\\" +lat_0=42\\\",qu=\\\" +lon_0=51\\\",zu=\\\" +lat_0=33\\\",ju=\\\" +lat_0=52\\\",Ku=\\\" +ellps=airy\\\",Yu=\\\" +pm=jakarta\\\",Vu=\\\" +x_0=2743195.5\\\",Wu=\\\" +y_0=-4354009.816\\\",Xu=\\\" +k_0=0.9987864078000001\\\",Zu=\\\" +towgs84=-106.226,166.366,-37.893,0,0,0,0\\\",$u=\\\" +towgs84=508.088,-191.042,565.223,0,0,0,0\\\",Ad=\\\" +k=0.99996\\\",td=\\\" +a=6378135\\\",ed=\\\" +lon_0=-66\\\",id=\\\" +lon_0=141\\\",sd=\\\" +lon_0=159\\\",ad=\\\" +k=0.99984\\\",nd=\\\" +lat_0=-22\\\",od=\\\" +lon_0=127.5\\\",rd=\\\" +x_0=6000000\\\",ld=\\\" +x_0=3900000\\\",hd=\\\" +y_0=1300000\\\",gd=\\\" +lat_0=44.75\\\",cd=\\\" +lat_0=37.75\\\",fd=\\\" +lat_0=40.55\\\",ud=\\\" +lon_0=-87.3\\\",dd=\\\" +lon_0=-86.5\\\",Id=\\\" +towgs84=195.671,332.517,274.607,0,0,0,0\\\",pd=\\\" +towgs84=-204.619,140.176,55.226,0,0,0,0\\\",_d=\\\"+proj=somerc\\\",Cd=\\\" +y_0=30480.06096012192\\\",Bd=\\\" +y_0=999999.9999960001\\\",wd=\\\" +x_0=182880.3657607315\\\",Ed=\\\" +towgs84=674.374,15.056,405.346,0,0,0,0\\\",yd=\\\" +towgs84=-133.63,-157.5,-158.62,0,0,0,0\\\",Qd=\\\" +towgs84=-0.465,372.095,171.736,0,0,0,0\\\",md=\\\" +towgs84=-56.263,16.136,-22.856,0,0,0,0\\\",kd=\\\" +towgs84=-241.54,-163.64,396.06,0,0,0,0\\\",xd=\\\" +zone=31\\\",Md=\\\" +zone=10\\\",bd=\\\" +zone=46\\\",Dd=\\\" +x_0=304800.6096\\\",vd=\\\" +y_0=152400.3048\\\",Sd=\\\" +alpha=337.25556\\\",Gd=\\\" +x_0=2546731.496\\\",Nd=\\\" +gamma=337.25556\\\",Rd=\\\" +k_0=0.999625544\\\",Fd=\\\" +towgs84=335.47,222.58,-230.94,0,0,0,0\\\",Ld=\\\" +towgs84=217.037,86.959,23.956,0,0,0,0\\\",Ud=\\\" +towgs84=-128.16,-282.42,21.93,0,0,0,0\\\",Od=\\\" +towgs84=103.25,-100.4,-307.19,0,0,0,0\\\",Pd=\\\" +lon_0=31\\\",Td=\\\" +lon_0=18\\\",Hd=\\\" +lat_2=36\\\",Jd=\\\" +lat_0=29\\\",qd=\\\" +lat_0=35\\\",zd=\\\" +lat_0=34\\\",jd=\\\" +lon_0=63\\\",Kd=\\\" +lat_0=37\\\",Yd=\\\" +lat_2=65\\\",Vd=\\\" +y_0=-4000000\\\",Wd=\\\" +y_0=914398.5\\\",Xd=\\\" +towgs84=-199.87,74.79,246.62,0,0,0,0\\\",Zd=\\\" +towgs84=-11.64,-348.6,291.98,0,0,0,0\\\",$d=\\\" +towgs84=-254.1,-5.36,-100.29,0,0,0,0\\\",AI=\\\" +towgs84=-206.1,-174.7,-87.7,0,0,0,0\\\",tI=\\\" +towgs84=-770.1,158.4,-498.2,0,0,0,0\\\",eI=\\\" +towgs84=-146.21,112.63,4.05,0,0,0,0\\\",iI=\\\" +towgs84=-294.7,-200.1,525.5,0,0,0,0\\\",sI=\\\" +lat_0=4\\\",aI=\\\" +a=6378300\\\",nI=\\\" +lon_0=-63\\\",oI=\\\" +lon_0=162\\\",rI=\\\" +lat_ts=90\\\",lI=\\\" +y_0=600000\\\",hI=\\\" +x_0=350000\\\",gI=\\\" +y_0=900000\\\",cI=\\\" +lat_1=32.5\\\",fI=\\\" +lon_0=-147\\\",uI=\\\" +k=1.000043\\\",dI=\\\" +lat_0=48.5\\\",II=\\\" +lat_0=40.9\\\",pI=\\\" +k=1.000028\\\",_I=\\\" +k=1.000025\\\",CI=\\\" +x_0=170251.555\\\",BI=\\\" +b=6356657.142669561\\\",wI=\\\" +b=6356094.667915204\\\",EI=\\\" +b=6355862.933255573\\\",yI=\\\" +a=6378249.144808011\\\",QI=\\\" +b=6356514.966204134\\\",mI=\\\" +towgs84=-70.9,-151.8,-41.4,0,0,0,0\\\",kI=\\\" +towgs84=52.17,-71.82,-14.9,0,0,0,0\\\",xI=\\\" +towgs84=283.7,735.9,261.1,0,0,0,0\\\",MI=\\\" +zone=5\\\",bI=\\\" +zone=7\\\",DI=\\\" +lon_0=19\\\",vI=\\\" +lon_0=25\\\",SI=\\\" +lat_2=45\\\",GI=\\\" +lon_0=57\\\",NI=\\\" +lon_0=69\\\",RI=\\\" +lat_2=39\\\",FI=\\\" +lat_2=35\\\",LI=\\\" +lon_0=28\\\",UI=\\\" +lon_0=-61.5\\\",OI=\\\" +lon_0=-64.5\\\",PI=\\\" +lon_0=-90.5\\\",TI=\\\" +lon_0=-94.5\\\",HI=\\\" +y_0=2800000\\\",JI=\\\" +x_0=4321000\\\",qI=\\\" +y_0=3210000\\\",zI=\\\" +y_0=14743.5\\\",jI=\\\" +y_0=1999999.999992\\\",KI=\\\" +y_0=2999999.999988\\\",YI=\\\" +y_0=50000.00001504\\\",VI=\\\" +zone=41\\\",WI=\\\" +zone=42\\\",XI=\\\" +k=0.994\\\",ZI=\\\" +zone=56\\\",$I=\\\" +lon_0=-67.875\\\",Ap=\\\" +lon_0=-70.375\\\",tp=\\\" +x_0=609601.22\\\",ep=\\\" +b=6356889.449\\\",ip=\\\" +lon_0=-69.125\\\",sp=\\\" +lon_0=-121.75\\\",ap=\\\" +lon_0=-121.25\\\",np=\\\" +lon_0=-119.75\\\",op=\\\" +lon_0=-122.75\\\",rp=\\\" +zone=6\\\",lp=\\\"+proj=krovak\\\",hp=\\\" +towgs84=-637,-549,-203,0,0,0,0\\\",gp=\\\" +towgs84=-20.8,11.3,2.4,0,0,0,0\\\",cp=\\\" +lon_0=-93\\\",fp=\\\" +lon_0=127\\\",up=\\\" +lon_0=125\\\",dp=\\\" +k=0.99975\\\",Ip=\\\" +lon_0=136\\\",pp=\\\" +lon_0=138\\\",_p=\\\" +lon_0=180\\\",Cp=\\\" +y_0=50000\\\",Bp=\\\" +lon_0=-85\\\",wp=\\\" +k=1.00016\\\",Ep=\\\" +lon_0=2.7\\\",yp=\\\" +towgs84=27.5,14,186.4,0,0,0,0\\\",Qp=\\\" +towgs84=-499,-249,314,0,0,0,0\\\",mp=\\\" +towgs84=-467,-16,-300,0,0,0,0\\\",kp=\\\" +towgs84=-382,-59,-262,0,0,0,0\\\",xp=\\\" +towgs84=253,-132,-127,0,0,0,0\\\",Mp=\\\" +towgs84=-963,510,-359,0,0,0,0\\\",bp=\\\" +towgs84=94,-948,-1262,0,0,0,0\\\",Dp=\\\" +zone=1\\\",vp=\\\" +zone=27\\\",Sp=\\\" +zone=57\\\",Gp=\\\" +pm=oslo\\\",Np=\\\" +zone=43\\\",Rp=\\\" +lon_0=23\\\",Fp=\\\" +lon_0=48\\\",Lp=\\\" +lon_0=54\\\",Up=\\\" +lat_0=49.5\\\",Op=\\\" +k=0.999912\\\",Pp=\\\" +lon_0=-174\\\",Tp=\\\" +lon_0=-168\\\",Hp=\\\" +lon_0=-170\\\",Jp=\\\" +lon_0=-165\\\",qp=\\\" +lat_2=40.5\\\",zp=\\\" +lon_0=-115\\\",jp=\\\" +lat_1=29.5\\\",Kp=\\\" +k=1.000045\\\",Yp=\\\" +lat_1=39.5\\\",Vp=\\\" +lat_1=33.3\\\",Wp=\\\" +lat_0=33.3\\\",Xp=\\\" +lon_0=-155.5\\\",Zp=\\\" +lon_0=-159.5\\\",$p=\\\" +y_0=-4480000\\\",A_=\\\" +lon_0=-176.5\\\",t_=\\\" +lon_0=-89.75\\\",e_=\\\" +k_0=1.000008\\\",i_=\\\" +lonc=-124.05\\\",s_=\\\" +k_0=1.000002\\\",a_=\\\" +lon_0=-122.5\\\",n_=\\\" +lon_0=-98.25\\\",o_=\\\" +lon_0=-112.5\\\",r_=\\\" +lon_0=-84.95\\\",l_=\\\" +lon_0=-86.95\\\",h_=\\\" +lon_0=-85.45\\\",g_=\\\" +lon_0=-87.45\\\",c_=\\\" +lon_0=-87.55\\\",f_=\\\" +towgs84=-149,128,296,0,0,0,0\\\",u_=\\\" +towgs84=-425,-169,81,0,0,0,0\\\",d_=\\\" +towgs84=-104,167,-38,0,0,0,0\\\",I_=\\\" +towgs84=-106,-87,188,0,0,0,0\\\",p_=\\\" +towgs84=-289,-124,60,0,0,0,0\\\",__=\\\" +towgs84=137,248,-430,0,0,0,0\\\",C_=\\\" +towgs84=-13,-348,292,0,0,0,0\\\",B_=\\\" +towgs84=-115,118,426,0,0,0,0\\\",w_=\\\" +towgs84=0,-0.15,0.68,0,0,0,0\\\",E_=\\\" +towgs84=145,-187,103,0,0,0,0\\\",y_=\\\" +towgs84=-134,229,-29,0,0,0,0\\\",Q_=\\\" +towgs84=70,207,389.5,0,0,0,0\\\",m_=\\\" +towgs84=-148,51,-291,0,0,0,0\\\",k_=\\\" +towgs84=-255,-15,71,0,0,0,0\\\",x_=\\\" +towgs84=725,685,536,0,0,0,0\\\",M_=\\\" +towgs84=72,213.7,93,0,0,0,0\\\",b_=\\\" +towgs84=174,359,365,0,0,0,0\\\",D_=\\\" +towgs84=-173,253,27,0,0,0,0\\\",v_=\\\" +towgs84=-203,141,53,0,0,0,0\\\",S_=\\\" +towgs84=186,482,151,0,0,0,0\\\",G_=\\\" +towgs84=162,117,154,0,0,0,0\\\",N_=\\\" +towgs84=-73,213,296,0,0,0,0\\\",R_=\\\" +towgs84=-130,29,364,0,0,0,0\\\",F_=\\\" +towgs84=-10,375,165,0,0,0,0\\\",L_=\\\" +towgs84=175,-38,113,0,0,0,0\\\",U_=\\\" +to_meter=0.9143984146160287\\\",O_=\\\" +zone=2\\\",P_=\\\" +zone=8\\\",T_=\\\" +zone=9\\\",H_=\\\" +zone=4\\\",J_=\\\" +towgs84=30,430,368,0,0,0,0\\\",q_=\\\" +towgs84=185,165,42,0,0,0,0\\\",z_=\\\" +towgs84=-97,787,86,0,0,0,0\\\",j_=\\\" +towgs84=639,405,60,0,0,0,0\\\",K_=\\\" +zone=44\\\",Y_=\\\" +zone=45\\\",V_=\\\" +lon_0=-58.5\\\",W_=\\\" +lon_0=-67.5\\\",X_=\\\" +lon_0=-73.5\\\",Z_=\\\" +lon_0=-76.5\\\",$_=\\\" +y_0=1200000\\\",AC=\\\" +lon_0=133.5\\\",tC=\\\" +x_0=8000000\\\",eC=\\\" +y_0=8000000\\\",iC=\\\" +k=0.9998335\\\",sC=\\\" +lon_0=-85.5\\\",aC=\\\" +x_0=7000000\\\",nC=\\\" +lat_0=43.75\\\",oC=\\\" +lat_0=43.25\\\",rC=\\\" +lat_0=45.25\\\",lC=\\\" +lon_0=-86.3\\\",hC=\\\" +lat_0=38.15\\\",gC=\\\" +lat_0=39.15\\\",cC=\\\" +lat_0=41.25\\\",fC=\\\" +lat_0=40.65\\\",uC=\\\" +lat_0=39.25\\\",dC=\\\" +lat_0=40.35\\\",IC=\\\" +lon_0=-85.8\\\",pC=\\\" +towgs84=9,183,236,0,0,0,0\\\",_C=\\\" +towgs84=-48,55,52,0,0,0,0\\\",CC=\\\" +towgs84=84,274,65,0,0,0,0\\\",BC=\\\" +lon_0=17\\\",wC=\\\" +lat_1=60\\\",EC=\\\" +k=0.9998\\\",yC=\\\" +lon_0=66\\\",QC=\\\" +lon_0=20\\\",mC=\\\" +lon_0=26\\\",kC=\\\" +lat_0=51\\\",xC=\\\" +lat_1=87\\\",MC=\\\" +lat_1=26\\\",bC=\\\" +lon_0=144\\\",DC=\\\" +lon_0=168\\\",vC=\\\" +lon_0=174\\\",SC=\\\" +lon_0=-72\\\",GC=\\\" +lon_0=-75\\\",NC=\\\" +lon_0=-60\\\",RC=\\\" +lon_0=-39\\\",FC=\\\"+proj=poly\\\",LC=\\\" +x_0=219529.584\\\",UC=\\\" +a=6378306.3696\\\",OC=\\\" +lon_0=-61.33333333333334\\\",PC=\\\" +lon_0=-91.86666666666666\\\",TC=\\\" +lon_0=-8.131906111111112\\\",HC=\\\" +lon_0=-83.66666666666667\\\",JC=\\\" +lon_0=-108.4166666666667\\\",qC=\\\" +lon_0=-108.3333333333333\\\",zC=\\\" +lon_0=-85.40000000000001\\\",jC=\\\" +lon_0=-86.65000000000001\\\",KC=\\\" +lon_0=-86.40000000000001\\\",YC=\\\" +lon_0=-85.59999999999999\\\",VC=\\\" +lon_0=-87.15000000000001\\\",WC=\\\" +lon_0=-86.59999999999999\\\",XC=\\\" +lon_0=-84.90000000000001\\\",ZC=\\\" +lon_0=-85.65000000000001\\\",$C=\\\" +lon_0=-87.65000000000001\\\",AB=\\\" +lon_0=-85.34999999999999\\\",tB=\\\" +lon_0=-87.40000000000001\\\",eB=\\\" +lon_0=-87.34999999999999\\\",iB=\\\" +lon_0=-85.90000000000001\\\",sB=\\\" +lon_0=-90.62222222222222\\\",aB=\\\" +lon_0=-91.84999999999999\\\",nB=\\\" +lon_0=-91.15277777777779\\\",oB=\\\" +lon_0=-91.79722222222222\\\",rB=\\\" +lon_0=-92.45777777777778\\\",lB=\\\" +lon_0=-91.29444444444444\\\",hB=\\\" +lon_0=-90.70833333333334\\\",gB=\\\" +lon_0=-89.39444444444445\\\",cB=\\\" +lon_0=-89.42222222222223\\\",fB=\\\" +lon_0=-88.77500000000001\\\",uB=\\\" +lon_0=-87.27222222222223\\\",dB=\\\" +lon_0=-91.89444444444445\\\",IB=\\\" +lon_0=-91.28888888888889\\\",pB=\\\" +lon_0=-88.14166666666668\\\",_B=\\\" +lon_0=-88.63333333333334\\\",CB=\\\" +lon_0=-89.83888888888889\\\",BB=\\\" +lon_0=-90.16111111111111\\\",wB=\\\" +lon_0=-90.25555555555556\\\",EB=\\\" +lon_0=-90.84429651944444\\\",yB=\\\" +lon_0=-87.89444444444445\\\",QB=\\\" +lon_0=-91.31666666666666\\\",mB=\\\" +lon_0=-89.03333333333333\\\",kB=\\\" +lon_0=-89.73333333333333\\\",xB=\\\" +lon_0=-87.71111111111111\\\",MB=\\\" +lon_0=-88.41666666666667\\\",bB=\\\" +lon_0=-90.64166666666668\\\",DB=\\\" +lon_0=-87.90833333333335\\\",vB=\\\" +lon_0=-89.54444444444444\\\",SB=\\\" +lon_0=-92.22777777777777\\\",GB=\\\" +lon_0=-90.48888888888889\\\",NB=\\\" +lon_0=-90.43055555555556\\\",RB=\\\" +lon_0=-89.07222222222222\\\",FB=\\\" +lon_0=-91.06666666666666\\\",LB=\\\" +lon_0=-89.90000000000001\\\",UB=\\\" +lon_0=-91.11666666666666\\\",OB=\\\" +lon_0=-88.60555555555555\\\",PB=\\\" +lon_0=-90.48333333333333\\\",TB=\\\" +lon_0=-91.36666666666666\\\",HB=\\\" +lon_0=-90.78333333333333\\\",JB=\\\" +lon_0=-89.48888888888889\\\",qB=\\\" +lon_0=-88.54166666666667\\\",zB=\\\" +lon_0=-91.78333333333333\\\",jB=\\\" +lon_0=-88.06388888888888\\\",KB=\\\" +lon_0=-88.22499999999999\\\",YB=\\\" +lon_0=-88.81666666666666\\\",VB=\\\" +y_0=0.004876809753619507\\\",WB=\\\" +y_0=0.008534417068834137\\\",XB=\\\" +y_0=0.003962407924815849\\\",ZB=\\\" +y_0=0.005791211582423164\\\",$B=\\\" +lon_0=-55.68333333333333\\\",Aw=\\\" +to_meter=0.201166195164\\\",tw=\\\" +lat_0=4.666666666666667\\\",ew=\\\" +lat_0=6.666666666666667\\\",iw=\\\" +lon_0=6.166666666666667\\\",sw=\\\" +lat_0=10.44166666666667\\\",aw=\\\" +lat_0=22.31213333333334\\\",nw=\\\" +lon_0=114.1785555555556\\\",ow=\\\" +lon_0=51.21666666666667\\\",rw=\\\" +lon_0=11.30827777777778\\\",lw=\\\" +lon_0=13.55827777777778\\\",hw=\\\" +lon_0=15.80827777777778\\\",gw=\\\" +lon_0=18.05827777777778\\\",cw=\\\" +lon_0=20.30827777777778\\\",fw=\\\" +lon_0=22.55827777777778\\\",uw=\\\" +lat_1=27.41666666666667\\\",dw=\\\" +lat_2=34.91666666666666\\\",Iw=\\\" +lat_0=31.16666666666667\\\",pw=\\\" +lat_1=59.33333333333334\\\",_w=\\\" +lat_0=57.51755393055556\\\",Cw=\\\" +lon_0=4.359215833333333\\\",Bw=\\\" +lat_1=61.66666666666666\\\",ww=\\\" +lat_0=29.02626833333333\\\",Ew=\\\" +lat_1=48.66666666666666\\\",yw=\\\" +lat_2=53.66666666666666\\\",Qw=\\\" +lon_0=127.0028902777778\\\",mw=\\\" +lon_0=89.84999999999999\\\",kw=\\\" +lon_0=91.56666666666666\\\",xw=\\\" +lon_0=24.83333333333333\\\",Mw=\\\" +lat_2=63.66666666666666\\\",bw=\\\" +lat_0=65.35103930555555\\\",Dw=\\\" +lat_1=63.66666666666666\\\",vw=\\\" +lat_2=60.33333333333334\\\",Sw=\\\" +lat_0=62.01530688888889\\\",Gw=\\\" +lat_1=45.78333333333333\\\",Nw=\\\" +lat_0=45.78333333333333\\\",Rw=\\\" +lat_0=42.66666666666666\\\",Fw=\\\" +lat_0=43.36666666666667\\\",Lw=\\\" +lat_0=45.70611111111111\\\",Uw=\\\" +lat_0=45.13333333333333\\\",Ow=\\\" +lat_1=46.66964837722222\\\",Pw=\\\" +lat_0=46.66964837722222\\\",Tw=\\\" +lat_0=43.48138888888889\\\",Hw=\\\" +lat_1=45.89871486583333\\\",Jw=\\\" +lat_0=45.89871486583333\\\",qw=\\\" +lat_0=42.71944444444445\\\",zw=\\\" +lat_1=44.97785689861112\\\",jw=\\\" +lat_0=44.97785689861112\\\",Kw=\\\" +lat_1=43.46254664583333\\\",Yw=\\\" +lat_0=43.46254664583333\\\",Vw=\\\" +lon_0=-90.9388888888889\\\",Ww=\\\" +lat_0=41.47222222222222\\\",Xw=\\\" +lat_0=45.88333333333333\\\",Zw=\\\" +lat_0=44.40833333333333\\\",$w=\\\" +lat_1=44.87228112638889\\\",AE=\\\" +lat_0=44.87228112638889\\\",tE=\\\" +lat_0=45.43888888888888\\\",eE=\\\" +lat_0=44.00555555555555\\\",iE=\\\" +lat_0=41.41111111111111\\\",sE=\\\" +lat_1=42.63756227694444\\\",aE=\\\" +lat_0=42.63756227694444\\\",nE=\\\" +lat_1=43.80700011777778\\\",oE=\\\" +lat_0=43.80700011777778\\\",rE=\\\" +lat_0=42.53888888888888\\\",lE=\\\" +lat_0=45.43333333333333\\\",hE=\\\" +lat_0=44.25333512777778\\\",gE=\\\" +lat_0=42.21666666666667\\\",cE=\\\" +lat_0=43.26666666666667\\\",fE=\\\" +lat_0=43.45111111111111\\\",uE=\\\" +lat_1=45.15423710527778\\\",dE=\\\" +lat_0=45.15423710527778\\\",IE=\\\" +lat_0=44.84444444444445\\\",pE=\\\" +lat_1=44.90090442361111\\\",_E=\\\" +lat_0=44.90090442361111\\\",CE=\\\" +lat_0=44.69166666666666\\\",BE=\\\" +lat_0=44.71666666666667\\\",wE=\\\" +lat_1=44.00007392861111\\\",EE=\\\" +lat_0=44.00007392861111\\\",yE=\\\" +lat_0=44.39722222222222\\\",QE=\\\" +lat_1=45.70422377027778\\\",mE=\\\" +lat_0=45.70422377027778\\\",kE=\\\" +lat_1=44.63614887194444\\\",xE=\\\" +lat_0=44.63614887194444\\\",ME=\\\" +lat_0=44.66111111111111\\\",bE=\\\" +lat_1=44.41682397527777\\\",DE=\\\" +lat_0=44.41682397527777\\\",vE=\\\" +lat_0=44.55555555555555\\\",SE=\\\" +lat_0=41.94444444444444\\\",GE=\\\" +lat_0=43.91944444444444\\\",NE=\\\" +lat_0=42.81944444444445\\\",RE=\\\" +lat_1=45.90009913138888\\\",FE=\\\" +lat_0=45.90009913138888\\\",LE=\\\" +lat_1=45.17782208583333\\\",UE=\\\" +lat_0=45.17782208583333\\\",OE=\\\" +lat_0=43.16111111111111\\\",PE=\\\" +lat_1=43.57503293972223\\\",TE=\\\" +lat_0=43.57503293972223\\\",HE=\\\" +lat_1=46.07784409055556\\\",JE=\\\" +lat_0=46.07784409055556\\\",qE=\\\" +lat_1=42.66946209694444\\\",zE=\\\" +lat_0=42.66946209694444\\\",jE=\\\" +lat_1=45.96121983333334\\\",KE=\\\" +lat_0=45.96121983333334\\\",YE=\\\" +lat_0=42.91805555555555\\\",VE=\\\" +lat_0=42.56944444444445\\\",WE=\\\" +lat_0=43.42027777777778\\\",XE=\\\" +lat_1=44.11394404583334\\\",ZE=\\\" +lat_0=44.11394404583334\\\",$E=\\\" +lat_1=44.36259546944444\\\",Ay=\\\" +lat_0=44.36259546944444\\\",ty=\\\" +lat_1=44.10000000000001\\\",ey=\\\" +lat_0=44.10000000000001\\\",iy=\\\" +lat_1=42.16500000000001\\\",sy=\\\" +lat_0=42.16500000000001\\\",ay=\\\" +lat_0=52.15616055555555\\\",ny=\\\" +lat_2=48.73333333333333\\\",oy=\\\" +zone=3\\\",ry=\\\" +lat_0=53.5\\\",ly=\\\" +k=0.999923\\\",hy=\\\" +x_0=850000\\\",gy=\\\" +x_0=830000\\\",cy=\\\" +lon_0=16.5\\\",fy=\\\" +x_0=520000\\\",uy=\\\" +lat_2=31.5\\\",dy=\\\" +lon_0=10.5\\\",Iy=\\\" +lat_1=44.5\\\",py=\\\" +lon_0=-153\\\",_y=\\\" +lon_0=-135\\\",Cy=\\\" +x_0=750000\\\",By=\\\" +lat_0=43.5\\\",wy=\\\" +lon_0=-142\\\",Ey=\\\" +lon_0=-146\\\",yy=\\\" +lon_0=-162\\\",Qy=\\\" +lon_0=-166\\\",my=\\\" +lon_0=-176\\\",ky=\\\" +lat_2=39.5\\\",xy=\\\" +lon_0=-129\\\",My=\\\" +k_0=1.0002\\\",by=\\\" +k=1.000023\\\",Dy=\\\" +lon_0=-121\\\",vy=\\\" +k=1.000175\\\",Sy=\\\" +lat_0=45.5\\\",Gy=\\\" +k=1.000155\\\",Ny=\\\" +lat_2=37.5\\\",Ry=\\\" +lat_1=48.5\\\",Fy=\\\" +k=1.000029\\\",Ly=\\\" +lat_0=39.6\\\",Uy=\\\" +k=1.000013\\\",Oy=\\\" +k=1.000022\\\",Py=\\\" +lat_0=40.7\\\",Ty=\\\" +lat_0=39.3\\\",Hy=\\\" +lat_0=37.8\\\",Jy=\\\" +lat_0=38.9\\\",qy=\\\" +lon_0=-5.4\\\",zy=\\\" +y_0=626907.39\\\",jy=\\\" +b=6356571.996\\\",Ky=\\\" +a=6377295.664\\\",Yy=\\\" +lon_0=5.38763888888889\\\",Vy=\\\" +y_0=-4600000.00001208\\\",Wy=\\\" +y_0=1889763.779527559\\\",Xy=\\\" +y_0=99999.99999960001\\\",Zy=\\\" +x_0=120091.4401828804\\\",$y=\\\" +lon_0=72\\\",AQ=\\\" +lat_0=50\\\",tQ=\\\" +lat_1=50\\\",eQ=\\\" +lat_1=35\\\",iQ=\\\" +lon_0=22\\\",sQ=\\\" +lat_1=34\\\",aQ=\\\" +lonc=115\\\",nQ=\\\" +lat_0=-9\\\",oQ=\\\" +lat_0=23\\\",rQ=\\\" +lat_1=85\\\",lQ=\\\" +lat_2=69\\\",hQ=\\\" +lat_1=69\\\",gQ=\\\" +lat_2=61\\\",cQ=\\\" +lon_0=34\\\",fQ=\\\" +lon_0=140.25\\\",uQ=\\\" +lon_0=142.25\\\",dQ=\\\" +lon_0=144.25\\\",IQ=\\\" +x_0=47500000\\\",pQ=\\\" +y_0=-3000000\\\",_Q=\\\" +pm=2.337208333333333\\\",CQ=\\\" +x_0=7000000.00000248\\\",BQ=\\\" +lon_0=6\\\",wQ=\\\" +k=0.997\\\",EQ=\\\" +lon_0=106\\\",yQ=\\\" +lon_0=154\\\",QQ=\\\" +lon_0=156\\\",mQ=\\\" +lat_2=-36\\\",kQ=\\\" +lon_0=119\\\",xQ=\\\" +lon_0=121\\\",MQ=\\\" +lon_0=166\\\",bQ=\\\" +a=6371228\\\",DQ=\\\" +b=6371228\\\",vQ=\\\" +a=6378273\\\",SQ=\\\" +lat_0=-44\\\",GQ=\\\" +pm=lisbon\\\",NQ=\\\" +lon_0=-57\\\",RQ=\\\" +lon_0=-56\\\",FQ=\\\" +k=1.00007\\\",LQ=\\\" +lonc=-123\\\",UQ=\\\" +alpha=295\\\",OQ=\\\" +gamma=295\\\",PQ=\\\" +k=1.00011\\\",TQ=\\\" +k=1.00005\\\",HQ=\\\" +k=1.00013\\\",JQ=\\\" +x_0=30000\\\",qQ=\\\" +k=1.00001\\\",zQ=\\\" +k=1.00003\\\",jQ=\\\" +y_0=130000.00001472\\\",KQ=\\\" +x_0=119999.99999952\\\",YQ=\\\" +y_0=-2999999.999988\\\",VQ=\\\" +x_0=-299999.9999988\\\",WQ=\\\" +lat_1=43.0695160375\\\",XQ=\\\" +lat_0=43.0695160375\\\",ZQ=\\\" +lat_1=43.3223129275\\\",$Q=\\\" +lat_0=43.3223129275\\\",Am=\\\" +k=1.0000067\\\",tm=\\\" +a=6378298.3\\\",em=\\\" +lon_0=-66.5\\\",im=\\\" +lon_0=129.5\\\",sm=\\\" +lon_0=138.5\\\",am=\\\" +x_0=2300000\\\",nm=\\\" +x_0=3300000\\\",om=\\\" +x_0=4300000\\\",rm=\\\" +y_0=7500000\\\",lm=\\\" +lonc=102.25\\\",hm=\\\" +y_0=1166200\\\",gm=\\\" +x_0=3000000\\\",cm=\\\" +lat_1=46.25\\\",fm=\\\" +ellps=WGS66\\\",um=\\\" +ellps=GRS67\\\",dm=\\\" +lat_1=34.65\\\",Im=\\\" +y_0=59999.99999976\\\",pm=\\\" +y_0=30000.00001512\\\",_m=\\\" +x_0=59999.99999976\\\",Cm=\\\" +x_0=30000.00001512\\\",Bm=\\\" +lat_1=43.200055605\\\",wm=\\\" +lat_0=43.200055605\\\",Em=\\\" +y_0=65379.0134283\\\",ym=\\\" +alpha=323.0257905\\\",Qm=\\\" +alpha=53.31580995\\\",mm=\\\" +x_0=10000.0000152\\\";A.exports=[2e3,s+c+Vc+ns+K+u+b+a+t,1,s+c+Vc+ns+K+u+b+k_+a+t,1,s+c+Vc+ns+K+u+b+x_+a+t,1,s+c+Vc+ns+K+u+b+M_+a+t,1,s+c+Vc+ns+K+u+b+b_+a+t,1,s+c+Vc+ns+K+u+b+pC+a+t,1,s+c+Vc+ns+K+u+b+f_+a+t,1,s+c+Vc+ns+K+u+b+Id+a+t,2,s+c+V_+E+kA+u+R+a+t,1,s+c+UI+E+kA+u+R+a+t,1,s+c+OI+E+kA+u+R+a+t,1,s+c+W_+E+kA+u+R+a+t,1,s+c+Wo+E+kA+u+R+a+t,1,s+c+X_+E+kA+u+R+a+t,1,s+c+Z_+E+kA+u+R+a+t,1,s+c+un+E+kA+u+R+a+t,1,s+c+X_+E+kA+u+R+a+t,1,s+c+Z_+E+kA+u+R+a+t,1,s+c+un+E+kA+u+R+a+t,1,s+c+hs+E+kA+u+R+a+t,1,s+c+ce+E+kA+u+R+a+t,1,s+c+Wc+E+kA+u+R+a+t,1,s+c+Il+E+kA+u+R+a+t,1,s+c+Jt+E+kA+u+R+a+t,1,s+c+cp+E+kA+u+R+a+t,1,s+c+$f+E+kA+u+R+a+t,1,l+qc+R+a+t,1,l+zc+R+a+t,1,l+wr+R+a+t,1,l+To+R+a+t,1,l+wr+R+a+t,1,l+To+R+a+t,1,l+wo+R+a+t,1,l+On+R+a+t,1,l+Ho+R+a+t,4,s+Bu+wu+Am+LC+zy+i+_C+a+t,1,l+Iu+b+Xr+a+t,1,l+Iu+b+Jo+a+t,1,l+Rl+b+Xr+a+t,1,l+Rl+b+Jo+a+t,1,s+c+ss+\\\" +k=1\\\"+vo+u+f+jn+a+t,1,s+c+Oa+\\\" +k=1\\\"+So+u+f+jn+a+t,1,s+c+yn+\\\" +k=1\\\"+z+u+Qn+F+e+a+t,1,s+c+BC+\\\" +k=1\\\"+z+u+Qn+F+e+a+t,1,s+c+DI+\\\" +k=1\\\"+z+u+Qn+F+e+a+t,1,s+c+mn+\\\" +k=1\\\"+z+u+Qn+F+e+a+t,1,s+c+Rp+\\\" +k=1\\\"+z+u+Qn+F+e+a+t,1,s+c+vI+\\\" +k=1\\\"+z+u+Qn+F+e+a+t,1,s+c+Ao+\\\" +k=1\\\"+z+u+Qn+F+e+a+t,1,s+c+\\\" +lon_0=29 +k=1\\\"+z+u+Qn+F+e+a+t,1,s+c+Pd+\\\" +k=1\\\"+z+u+Qn+F+e+a+t,1,s+c+zo+\\\" +k=1\\\"+z+u+Qn+F+e+a+t,1,_d+Ih+Eu+\\\" +k_0=1 +x_0=2600000\\\"+$_+m+Ed+a+t,1,de+\\\" +lat_0=27.51882880555555 +lonc=52.60353916666667 +alpha=0.5716611944444444 +k=0.999895934 +x_0=658377.437 +y_0=3044969.194 +gamma=0.5716611944444444\\\"+_+yd+a+t,1,l+rl+_+Un+a+t,1,l+Vr+_+Un+a+t,1,l+oc+_+Un+a+t,1,l+VI+_+Un+a+t,1,r+\\\" +lat_1=40\\\"+Ga+$n+\\\" +k_0=0.9988085293\\\"+x+lI+tm+BI+\\\" +pm=madrid\\\"+a+t,3,lp+Up+\\\" +lon_0=42.5\\\"+ph+E+z+u+m+wn+yg+a+t,1,ve+\\\" +lat_0=11.25217861111111 +lon_0=-60.68600888888889 +x_0=37718.66159325 +y_0=36209.91512952\\\"+ws+Es+Aw+t,1,l+On+_+Qd+a+t,1,s+c+Fl+E+N+u+_+Y+a+t,1,s+c+\\\" +lon_0=11\\\"+E+N+u+_+Y+a+t,1,s+c+\\\" +lon_0=13\\\"+E+N+u+_+Y+a+t,1,s+c+yn+E+N+u+_+Y+a+t,1,s+c+BC+E+N+u+_+Y+a+t,1,s+c+DI+E+N+u+_+Y+a+t,1,s+c+mn+E+N+u+_+Y+a+t,1,s+c+Rp+E+N+u+_+Y+a+t,1,s+c+vI+E+N+u+_+Y+a+t,1,l+Wr+_+Y+a+t,1,l+Ll+_+Y+a+t,1,l+jc+_+Y+a+t,1,l+dh+_+Y+a+t,1,s+O+jg+\\\" +k=1\\\"+be+u+_+a+t,1,s+O+jg+\\\" +k=1\\\"+be+u+_+yp+a+t,1,s+O+jg+\\\" +k=1\\\"+be+u+_+Vf+a+t,1,l+wo+T+_+Vf+a+t,3,s+c+jo+uA+d+u+_+Y+a+t,1,s+c+\\\" +lon_0=11\\\"+uA+d+u+CA+ht+En+a+t,1,l+rl+F+e+a+t,1,l+Vr+F+e+a+t,3,s+c+EQ+\\\" +k=1\\\"+d+u+f+jn+a+t,1,s+c+EQ+uA+d+u+B+p+a+t,1,l+ll+_+D_+a+t,1,s+Me+Bs+\\\" +k=1\\\"+N+bA+m+a+t,1,s+Me+fp+\\\" +k=1\\\"+N+bA+m+a+t,1,s+Me+up+\\\" +k=1\\\"+N+bA+m+a+t,1,ve+\\\" +lat_0=25.38236111111111 +lon_0=50.76138888888889\\\"+pt+ts+xn+a+t,1,s+c+Ko+uA+d+u+i+Xd+a+t,1,r+_h+Ch+Yl+\\\" +k_0=1\\\"+z+\\\" +y_0=-52684.972\\\"+_+a+t,1,r+_h+Ch+Yl+\\\" +k_0=1\\\"+N+\\\" +y_0=147315.028\\\"+_+a+t,1,r+_h+Ch+Yl+\\\" +k_0=1\\\"+d+\\\" +y_0=447315.028\\\"+_+a+t,1,r+_h+Ch+Yl+\\\" +k_0=1 +x_0=-17044 +y_0=-23139.97\\\"+_+a+t,1,s+\\\" +lat_0=-36.87972222222222 +lon_0=174.7641666666667\\\"+E+K+le+i+e+a+t,1,s+\\\" +lat_0=-37.76111111111111 +lon_0=176.4661111111111 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-38.62444444444444 +lon_0=177.8855555555556 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-39.65083333333333 +lon_0=176.6736111111111 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-39.13555555555556 +lon_0=174.2277777777778 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-39.51222222222222 +lon_0=175.64 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-40.24194444444444 +lon_0=175.4880555555555 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-40.92527777777777 +lon_0=175.6472222222222 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-41.3011111111111 +lon_0=174.7763888888889 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-40.71472222222223 +lon_0=172.6719444444444 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-41.27444444444444 +lon_0=173.2991666666667 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-41.28972222222222 +lon_0=172.1088888888889 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-41.81055555555555 +lon_0=171.5811111111111 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-42.33361111111111 +lon_0=171.5497222222222 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-42.68888888888888 +lon_0=173.01 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-41.54444444444444 +lon_0=173.8019444444444 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-42.88611111111111 +lon_0=170.9797222222222 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-43.11 +lon_0=170.2608333333333 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-43.97777777777778 +lon_0=168.6061111111111 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-43.59055555555556 +lon_0=172.7269444444445 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-43.74861111111111 +lon_0=171.3605555555555 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-44.40194444444445 +lon_0=171.0572222222222 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-44.735 +lon_0=169.4675 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-45.13277777777778 +lon_0=168.3986111111111 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-45.56361111111111 +lon_0=167.7386111111111 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-45.81611111111111 +lon_0=170.6283333333333 +k=1\\\"+K+le+i+e+a+t,1,s+\\\" +lat_0=-45.86138888888889 +lon_0=170.2825\\\"+Ad+K+le+i+e+a+t,1,s+\\\" +lat_0=-46.6 +lon_0=168.3427777777778 +k=1\\\"+K+le+i+e+a+t,1,l+vg+T+i+e+a+t,1,l+_f+T+i+e+a+t,1,l+Lu+T+i+e+a+t,1,s+tw+\\\" +lon_0=-1\\\"+dp+\\\" +x_0=274319.7391633579\\\"+u+aI+xo+Lc+Uc+t,1,s+c+\\\" +lon_0=-1\\\"+uA+d+u+aI+xo+Lc+a+t,1,r+wC+lf+hr+Vn+z+u+R+a+t,16,r+zh+\\\" +lat_2=44\\\"+xr+pu+fs+\\\" +y_0=6600000\\\"+i+e+a+t,3,s+ry+\\\" +lon_0=-8 +k=0.99982\\\"+x+fc+i+e+a+t,1,l+Rl+i+e+a+t,1,s+ew+\\\" +lon_0=-12 +k=1 +x_0=152399.8550907544\\\"+u+aI+xo+Uc+t,1,s+ew+\\\" +lon_0=-12 +k=1 +x_0=243839.7681452071 +y_0=182879.8261089053\\\"+aI+xo+Uc+t,1,l+ll+b+Wf+a+t,1,l+Rl+b+Wf+a+t,1,po+Ar+fe+z+u+\\\" +a=6370997 +b=6370997\\\"+a+t,1,s+c+\\\" +lon_0=-5\\\"+uA+d+u+b+Xr+a+t,1,s+c+\\\" +lon_0=-5\\\"+uA+d+u+b+Jo+a+t,4,s+\\\" +lat_0=49.83333333333334\\\"+iw+\\\" +k=1\\\"+Au+ts+_+Sl+a+t,3,rn+\\\" +lat_0=53.00194444444445 +lon_0=21.50277777777778\\\"+EC+\\\" +x_0=4603000 +y_0=5806000\\\"+f+M+a+t,1,rn+\\\" +lat_0=53.58333333333334 +lon_0=17.00833333333333\\\"+EC+\\\" +x_0=3501000 +y_0=5999000\\\"+f+M+a+t,1,rn+\\\" +lat_0=51.67083333333333 +lon_0=16.67222222222222\\\"+EC+\\\" +x_0=3703000 +y_0=5627000\\\"+f+M+a+t,1,s+c+\\\" +lon_0=18.95833333333333 +k=0.999983 +x_0=237000 +y_0=-4700000\\\"+f+M+a+t,1,s+c+yn+ly+ys+u+i+e+a+t,1,s+c+Td+ly+Ml+u+i+e+a+t,1,s+c+mn+ly+Xo+u+i+e+a+t,1,s+c+Ko+ly+Vg+u+i+e+a+t,1,s+c+DI+\\\" +k=0.9993\\\"+d+\\\" +y_0=-5300000\\\"+i+e+a+t,8,l+Cf+_+u_+a+t,1,l+_u+_+d_+a+t,1,l+_u+_+v_+a+t,3,s+c+\\\" +lon_0=173\\\"+uA+\\\" +x_0=1600000\\\"+RA+i+e+a+t,2,l+O_+T+i+e+a+t,1,s+c+\\\" +lon_0=9.5\\\"+he+N+u+i+e+a+t,1,s+c+jo+he+d+u+i+e+a+t,1,s+c+yn+\\\" +k=1\\\"+ao+u+i+e+a+t,2,rn+xr+em+Op+oA+le+td+Dn+a+t,1,l+To+i+e+a+t,1,l+wo+i+e+a+t,1,l+On+i+e+a+t,1,r+\\\" +lat_1=35.25 +lat_2=36.41666666666666 +lat_0=34.66666666666666\\\"+Kg+k+Cd+Q+h+t,1,r+WA+ui+ai+yl+d+u+i+e+a+t,1,s+c+Ao+\\\" +k=1\\\"+Wg+u+_+P+a+t,1,s+c+gr+\\\" +k=1\\\"+ig+u+_+P+a+t,1,s+c+zo+\\\" +k=1\\\"+Ql+u+_+P+a+t,1,s+c+Ou+\\\" +k=1\\\"+sg+u+_+P+a+t,1,s+c+jh+\\\" +k=1\\\"+no+u+_+P+a+t,1,s+c+Pu+\\\" +k=1\\\"+Fn+u+_+P+a+t,1,s+c+tl+\\\" +k=1\\\"+Go+u+_+P+a+t,1,s+c+gr+uA+d+u+i+e+a+t,2,l+Wr+CA+ht+mI+a+t,1,l+mr+_+Rc+a+t,1,l+Sg+_+Rc+a+t,2,l+wo+td+Dn+a+t,1,l+On+td+Dn+a+t,2,s+Nt+Ne+E+us+u+i+e+j+t,1,s+Nt+Re+E+us+u+i+e+j+t,1,s+Nt+Sr+it+us+u+i+e+j+t,1,r+di+El+X+Pn+xA+eA+i+e+h+t,1,r+Ii+pi+$+Pn+xA+eA+i+e+h+t,1,r+PA+_i+uc+rA+xA+eA+i+e+h+t,1,r+Kh+Hd+Ci+dc+xA+eA+i+e+h+t,1,r+Bi+wi+Ic+Mr+xA+eA+i+e+h+t,1,r+Ei+yi+Qi+Gr+xA+eA+i+e+h+t,1,r+Qs+ms+X+yt+zt+ne+i+e+h+t,1,r+Yh+Vh+Ce+yt+zt+ne+i+e+h+t,1,r+PA+mi+S+yt+zt+ne+i+e+h+t,1,r+ki+pc+xi+ml+Gg+Ng+i+e+h+t,1,s+Me+Fe+_c+iA+u+i+e+h+t,1,s+TA+ce+LA+iA+u+i+e+h+t,1,s+TA+tu+LA+iA+u+i+e+h+t,1,r+Wh+Mi+Jd+Xh+x+u+i+e+h+t,1,s+kn+Le+E+iA+u+i+e+h+t,1,s+kn+Ue+E+oe+u+i+e+h+t,1,s+H+Oe+nt+iA+u+i+e+h+t,1,s+H+hl+nt+sA+u+i+e+h+t,1,s+H+Nr+it+Rg+u+i+e+h+t,3,r+WA+ui+ai+yl+sA+u+i+e+h+t,1,r+ks+xs+AA+ds+sA+eA+i+e+h+t,1,r+Xg+xf+$+rg+Fg+u+i+e+h+t,1,r+Ms+bi+kr+za+iA+fc+i+e+h+t,1,r+bs+Ds+kr+Wo+sA+u+i+e+h+t,1,r+vs+Ss+Gs+Il+Lg+u+i+e+j+t,1,r+Mf+Ns+Rs+tt+Ug+u+i+e+j+t,1,r+Ot+bf+ba+tt+Kf+u+i+e+j+t,1,s+Eo+Pe+he+et+u+i+e+h+t,1,s+Eo+jt+he+oe+u+i+e+h+t,1,r+zh+SI+Zg+ir+hi+u+i+e+j+t,1,s+Nt+Te+mo+Df+u+i+e+h+t,1,s+Nt+Rr+E+sA+u+i+e+h+t,1,s+Nt+He+Fr+Og+u+i+e+h+t,1,s+XA+bn+E+Ft+u+i+e+h+t,1,s+Ga+Je+MA+Pg+u+i+e+h+t,1,s+Ga+qe+MA+Tg+u+i+e+h+t,1,r+Di+vi+ZA+eu+et+u+i+e+h+t,1,r+Fs+Ls+Zh+Xc+k+u+i+e+h+t,1,r+st+Us+cr+Is+hi+u+i+e+j+t,1,r+Os+Ps+xt+Is+hi+u+i+e+j+t,1,r+Si+Ts+qd+ka+x+u+i+e+h+t,1,r+Hs+Js+Gi+ka+x+u+i+e+h+t,1,r+Tu+Be+lA+rA+jl+u+i+e+j+t,1,r+Hu+we+H+rA+Kl+u+i+e+j+t,1,r+$g+qs+ZA+ps+x+u+i+e+h+t,1,r+Ni+Ri+X+ps+x+u+i+e+h+t,1,r+zs+vf+Fi+ce+Sf+u+i+e+j+t,1,r+js+Ac+$A+Kg+x+u+i+e+h+t,1,r+Ks+tc+zd+kl+iA+re+i+e+h+t,1,r+Ys+Vs+Li+Ie+x+vn+i+e+h+t,1,r+Ws+Xs+Ee+vA+oe+va+i+e+h+t,1,r+Zs+$s+Ui+pl+x+nf+i+e+h+t,1,r+Zt+$t+ye+Ie+et+of+i+e+h+t,1,r+yA+Ae+Pt+at+pn+Bd+i+e+j+t,1,r+Hr+te+dA+at+pn+jI+i+e+j+t,1,r+Jr+ee+S+at+pn+KI+i+e+j+t,1,r+Gf+Aa+$+ja+Sn+vn+i+e+h+t,1,r+WA+Oi+AA+ja+Sn+re+i+e+h+t,1,r+st+Nf+cr+ze+sA+u+i+e+h+t,1,r+ta+ea+Pi+rA+sA+u+i+e+h+t,1,r+ia+sa+Ti+Jt+x+u+i+e+h+t,1,r+gl+ec+hA+Jt+x+u+i+e+h+t,1,r+aa+na+Ju+Jt+x+u+i+e+h+t,1,rn+\\\" +lat_0=47.25\\\"+nI+Op+fs+br+td+Dn+a+t,4,s+c+UI+E+ri+u+td+Dn+a+t,1,s+c+OI+E+ys+u+td+Dn+a+t,13,s+c+\\\" +lon_0=109\\\"+uA+d+RA+m+De+a+t,1,s+c+\\\" +lon_0=116\\\"+uA+d+RA+C+a+t,1,s+c+Er+uA+d+RA+C+a+t,1,s+c+BQ+uA+d+u+C+a+t,1,l+Ll+b+a+t,1,l+Ll+b+a+t,1,ve+sw+OC+\\\" +x_0=86501.46392052001\\\"+Em+ws+Es+Kr+Hg+t,1,l+wo+T+_+Tt+a+t,1,l+On+T+_+Tt+a+t,1,r+\\\" +lat_1=9 +lat_2=3 +lat_0=6\\\"+ed+Et+nA+_+EA+a+t,1,r+\\\" +lat_1=17 +lat_2=33 +lat_0=25.08951\\\"+Fp+z+u+_+Ge+a+t,1,s+c+Ao+\\\" +k=1\\\"+d+u+_+P+a+t,1,s+c+gr+\\\" +k=1\\\"+d+u+_+P+a+t,1,s+c+zo+\\\" +k=1\\\"+d+u+_+P+a+t,1,s+c+Ou+\\\" +k=1\\\"+d+u+_+P+a+t,1,s+c+jh+\\\" +k=1\\\"+d+u+_+P+a+t,1,s+c+Pu+\\\" +k=1\\\"+d+u+_+P+a+t,1,s+c+tl+\\\" +k=1\\\"+d+u+_+P+a+t,1,s+aw+nw+\\\" +k=1 +x_0=836694.05 +y_0=819069.8\\\"+_+dl+a+t,1,s+c+to+\\\" +k=1\\\"+no+u+JA+D+a+t,1,s+c+eo+\\\" +k=1\\\"+Fn+u+JA+D+a+t,1,s+c+Io+\\\" +k=1\\\"+Go+u+JA+D+a+t,1,s+c+io+\\\" +k=1\\\"+No+u+JA+D+a+t,1,s+c+so+\\\" +k=1\\\"+Dr+u+JA+D+a+t,1,s+c+ss+\\\" +k=1\\\"+vo+u+JA+D+a+t,1,s+c+Oa+\\\" +k=1\\\"+So+u+JA+D+a+t,1,s+c+xa+\\\" +k=1\\\"+oo+u+JA+D+a+t,1,s+c+Sa+\\\" +k=1\\\"+Ro+u+JA+D+a+t,1,s+c+Bs+\\\" +k=1\\\"+ro+u+JA+D+a+t,1,s+c+Ma+\\\" +k=1\\\"+Fo+u+JA+D+a+t,1,s+c+to+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+to+\\\" +k=1\\\"+Lo+u+JA+D+a+t,1,s+c+Qg+\\\" +k=1\\\"+Uo+u+JA+D+a+t,1,s+c+eo+\\\" +k=1\\\"+Oo+u+JA+D+a+t,1,s+c+hf+\\\" +k=1\\\"+Po+u+JA+D+a+t,1,s+c+Io+\\\" +k=1\\\"+Ln+u+JA+D+a+t,1,s+c+bo+\\\" +k=1\\\"+sr+u+JA+D+a+t,1,s+c+io+\\\" +k=1\\\"+In+u+JA+D+a+t,1,s+c+cc+\\\" +k=1\\\"+ar+u+JA+D+a+t,1,s+c+so+\\\" +k=1\\\"+vr+u+JA+D+a+t,1,s+c+_l+\\\" +k=1\\\"+yc+u+JA+D+a+t,1,s+c+ss+\\\" +k=1\\\"+Qc+u+JA+D+a+t,1,s+c+lg+\\\" +k=1\\\"+mc+u+JA+D+a+t,1,s+c+Oa+\\\" +k=1\\\"+kc+u+JA+D+a+t,1,s+c+yr+\\\" +k=1\\\"+xc+u+JA+D+a+t,1,s+c+xa+\\\" +k=1\\\"+Mc+u+JA+D+a+t,1,s+c+Pl+\\\" +k=1\\\"+bc+u+JA+D+a+t,1,s+c+Sa+\\\" +k=1\\\"+Dc+u+JA+D+a+t,1,s+c+Cl+\\\" +k=1\\\"+ou+u+JA+D+a+t,1,s+c+Bs+\\\" +k=1\\\"+vc+u+JA+D+a+t,1,s+c+Er+\\\" +k=1\\\"+ru+u+JA+D+a+t,1,s+c+Ma+\\\" +k=1\\\"+Sc+u+JA+D+a+t,1,s+c+to+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Qg+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+hf+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+bo+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+cc+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+_l+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+lg+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+yr+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Pl+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Cl+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Er+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+JA+D+a+t,1,s+c+mn+\\\" +k=1\\\"+BA+u+_+qA+a+t,1,s+c+Ko+\\\" +k=1\\\"+be+u+_+qA+a+t,1,s+c+Ao+\\\" +k=1\\\"+Lt+u+_+qA+a+t,1,s+c+gr+\\\" +k=1\\\"+ri+u+_+qA+a+t,1,s+c+tl+\\\" +k=1\\\"+Vg+u+f+Oc+a+t,1,s+c+qu+\\\" +k=1\\\"+Wg+u+f+Oc+a+t,1,s+c+Fl+\\\" +k=1\\\"+Lt+u+f+HA+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+f+HA+a+t,1,s+c+yn+\\\" +k=1\\\"+ys+u+f+HA+a+t,2,s+c+to+\\\" +k=1\\\"+Lo+u+f+w+a+t,1,s+c+Qg+\\\" +k=1\\\"+Uo+u+f+w+a+t,1,s+c+eo+\\\" +k=1\\\"+Oo+u+f+w+a+t,1,s+c+hf+\\\" +k=1\\\"+Po+u+f+w+a+t,1,s+c+Io+\\\" +k=1\\\"+Ln+u+f+w+a+t,1,s+c+bo+\\\" +k=1\\\"+sr+u+f+w+a+t,1,s+c+io+\\\" +k=1\\\"+In+u+f+w+a+t,1,s+c+cc+\\\" +k=1\\\"+ar+u+f+w+a+t,1,s+c+so+\\\" +k=1\\\"+vr+u+f+w+a+t,1,s+c+_l+\\\" +k=1\\\"+yc+u+f+w+a+t,1,s+c+ss+\\\" +k=1\\\"+Qc+u+f+w+a+t,1,s+c+lg+\\\" +k=1\\\"+mc+u+f+w+a+t,1,s+c+Oa+\\\" +k=1\\\"+kc+u+f+w+a+t,1,s+c+yr+\\\" +k=1\\\"+xc+u+f+w+a+t,1,s+c+xa+\\\" +k=1\\\"+Mc+u+f+w+a+t,1,s+c+Pl+\\\" +k=1\\\"+bc+u+f+w+a+t,1,s+c+Sa+\\\" +k=1\\\"+Dc+u+f+w+a+t,1,s+c+Cl+\\\" +k=1\\\"+ou+u+f+w+a+t,1,s+c+Bs+\\\" +k=1\\\"+vc+u+f+w+a+t,1,s+c+Er+\\\" +k=1\\\"+ru+u+f+w+a+t,1,s+c+Ma+\\\" +k=1\\\"+Sc+u+f+w+a+t,1,s+c+to+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Qg+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+hf+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+bo+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+cc+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+_l+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+lg+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+yr+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Pl+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Cl+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Er+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+zu+im+E+z+u+i+e+a+t,1,s+zu+Zc+E+z+u+i+e+a+t,1,s+$a+yu+E+z+u+i+e+a+t,1,s+zu+AC+E+z+u+i+e+a+t,1,s+$a+Qu+E+z+u+i+e+a+t,1,s+$a+Ip+E+z+u+i+e+a+t,1,s+$a+mu+E+z+u+i+e+a+t,1,s+$a+sm+E+z+u+i+e+a+t,1,s+$a+ku+E+z+u+i+e+a+t,1,s+Ga+xu+E+z+u+i+e+a+t,1,s+hr+fQ+E+z+u+i+e+a+t,1,s+hr+uQ+E+z+u+i+e+a+t,1,s+hr+dQ+E+z+u+i+e+a+t,1,s+tr+\\\" +lon_0=142\\\"+E+z+u+i+e+a+t,1,s+tr+od+E+z+u+i+e+a+t,1,s+tr+\\\" +lon_0=124\\\"+E+z+u+i+e+a+t,1,s+tr+Zc+E+z+u+i+e+a+t,1,s+\\\" +lat_0=20\\\"+Ip+E+z+u+i+e+a+t,1,s+tr+yQ+E+z+u+i+e+a+t,1,s+c+mn+\\\" +k=1\\\"+ri+u+f+a+t,1,s+c+mn+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Ao+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+zo+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+jh+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+tl+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+qu+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+GI+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+jd+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+NI+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+to+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+id+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+iu+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+$c+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+sd+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Af+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+hg+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Tl+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Hl+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+cg+\\\" +k=1\\\"+d+u+f+o+a+t,3,s+c+mn+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Ao+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+zo+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+jh+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+tl+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+qu+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+GI+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+jd+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+NI+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+to+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+id+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+iu+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+$c+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+sd+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Af+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+hg+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Tl+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Hl+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+cg+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+mn+\\\" +k=1\\\"+Xo+u+f+n+a+t,1,s+c+Ko+\\\" +k=1\\\"+Vg+u+f+n+a+t,1,s+c+Ao+\\\" +k=1\\\"+Wg+u+f+n+a+t,1,s+c+gr+\\\" +k=1\\\"+ig+u+f+n+a+t,1,s+c+zo+\\\" +k=1\\\"+Ql+u+f+n+a+t,1,s+c+Ou+\\\" +k=1\\\"+sg+u+f+n+a+t,1,s+c+jh+\\\" +k=1\\\"+no+u+f+n+a+t,1,s+c+Pu+\\\" +k=1\\\"+Fn+u+f+n+a+t,1,s+c+tl+\\\" +k=1\\\"+Go+u+f+n+a+t,1,s+c+Fp+\\\" +k=1\\\"+No+u+f+n+a+t,1,s+c+qu+\\\" +k=1\\\"+Dr+u+f+n+a+t,1,s+c+Lp+\\\" +k=1\\\"+vo+u+f+n+a+t,1,s+c+GI+\\\" +k=1\\\"+So+u+f+n+a+t,1,s+c+\\\" +lon_0=60 +k=1\\\"+oo+u+f+n+a+t,1,s+c+jd+\\\" +k=1\\\"+Ro+u+f+n+a+t,1,s+c+yC+\\\" +k=1\\\"+ro+u+f+n+a+t,1,s+c+NI+\\\" +k=1\\\"+Fo+u+f+n+a+t,1,s+c+$y+\\\" +k=1\\\"+ag+u+f+n+a+t,1,s+c+to+\\\" +k=1\\\"+Lo+u+f+n+a+t,1,s+c+Qg+\\\" +k=1\\\"+Uo+u+f+n+a+t,1,s+c+eo+\\\" +k=1\\\"+Oo+u+f+n+a+t,1,s+c+hf+\\\" +k=1\\\"+Po+u+f+n+a+t,1,s+c+Io+\\\" +k=1\\\"+Ln+u+f+n+a+t,1,s+c+bo+\\\" +k=1\\\"+sr+u+f+n+a+t,1,s+c+io+\\\" +k=1\\\"+In+u+f+n+a+t,1,s+c+cc+\\\" +k=1\\\"+ar+u+f+n+a+t,1,s+c+so+\\\" +k=1\\\"+vr+u+f+n+a+t,2,s+c+_l+\\\" +k=1\\\"+yc+u+f+n+a+t,1,s+c+ss+\\\" +k=1\\\"+Qc+u+f+n+a+t,1,s+c+lg+\\\" +k=1\\\"+mc+u+f+n+a+t,1,s+c+Oa+\\\" +k=1\\\"+kc+u+f+n+a+t,1,s+c+yr+\\\" +k=1\\\"+xc+u+f+n+a+t,1,s+c+xa+\\\" +k=1\\\"+Mc+u+f+n+a+t,1,s+c+Pl+\\\" +k=1\\\"+bc+u+f+n+a+t,1,s+c+Sa+\\\" +k=1\\\"+Dc+u+f+n+a+t,1,s+c+Cl+\\\" +k=1\\\"+ou+u+f+n+a+t,1,s+c+Bs+\\\" +k=1\\\"+vc+u+f+n+a+t,1,s+c+Er+\\\" +k=1\\\"+ru+u+f+n+a+t,1,s+c+Ma+\\\" +k=1\\\"+Sc+u+f+n+a+t,1,s+c+pp+\\\" +k=1 +x_0=46500000\\\"+u+f+n+a+t,1,s+c+id+\\\" +k=1\\\"+IQ+u+f+n+a+t,1,s+c+bC+\\\" +k=1 +x_0=48500000\\\"+u+f+n+a+t,1,s+c+iu+\\\" +k=1 +x_0=49500000\\\"+u+f+n+a+t,1,s+c+su+\\\" +k=1 +x_0=50500000\\\"+u+f+n+a+t,1,s+c+$c+\\\" +k=1 +x_0=51500000\\\"+u+f+n+a+t,1,s+c+QQ+\\\" +k=1 +x_0=52500000\\\"+u+f+n+a+t,1,s+c+sd+\\\" +k=1 +x_0=53500000\\\"+u+f+n+a+t,1,s+c+oI+\\\" +k=1 +x_0=54500000\\\"+u+f+n+a+t,1,s+c+Af+\\\" +k=1 +x_0=55500000\\\"+u+f+n+a+t,1,s+c+DC+\\\" +k=1 +x_0=56500000\\\"+u+f+n+a+t,1,s+c+hg+\\\" +k=1 +x_0=57500000\\\"+u+f+n+a+t,1,s+c+vC+\\\" +k=1 +x_0=58500000\\\"+u+f+n+a+t,1,s+c+Tl+\\\" +k=1 +x_0=59500000\\\"+u+f+n+a+t,2,s+c+Hl+\\\" +k=1 +x_0=61500000\\\"+u+f+n+a+t,1,s+c+Pp+\\\" +k=1 +x_0=62500000\\\"+u+f+n+a+t,1,s+c+cg+\\\" +k=1 +x_0=63500000\\\"+u+f+n+a+t,1,s+c+Tp+\\\" +k=1 +x_0=64500000\\\"+u+f+n+a+t,1,s+c+mn+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Ko+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Ao+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+gr+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+zo+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Ou+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+jh+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Pu+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+tl+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Fp+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+qu+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Lp+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+GI+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+\\\" +lon_0=60 +k=1\\\"+d+u+f+n+a+t,1,s+c+jd+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+yC+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+NI+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+$y+\\\" +k=1\\\"+d+u+f+n+a+t,2,s+c+to+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Qg+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+hf+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+bo+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+cc+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+_l+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+lg+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+yr+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Pl+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Cl+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Er+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+pp+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+id+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+bC+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+iu+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+su+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+$c+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+QQ+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+sd+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+oI+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Af+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+DC+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+hg+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+vC+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Tl+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+_p+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Hl+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Pp+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+cg+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+Tp+\\\" +k=1\\\"+d+u+f+n+a+t,1,s+c+mn+\\\" +k=1\\\"+Xo+u+f+o+a+t,1,s+c+Ko+\\\" +k=1\\\"+Vg+u+f+o+a+t,1,s+c+Ao+\\\" +k=1\\\"+Wg+u+f+o+a+t,1,s+c+gr+\\\" +k=1\\\"+ig+u+f+o+a+t,1,s+c+zo+\\\" +k=1\\\"+Ql+u+f+o+a+t,1,s+c+Ou+\\\" +k=1\\\"+sg+u+f+o+a+t,1,s+c+jh+\\\" +k=1\\\"+no+u+f+o+a+t,1,s+c+Pu+\\\" +k=1\\\"+Fn+u+f+o+a+t,1,s+c+tl+\\\" +k=1\\\"+Go+u+f+o+a+t,1,s+c+Fp+\\\" +k=1\\\"+No+u+f+o+a+t,1,s+c+qu+\\\" +k=1\\\"+Dr+u+f+o+a+t,1,s+c+Lp+\\\" +k=1\\\"+vo+u+f+o+a+t,1,s+c+GI+\\\" +k=1\\\"+So+u+f+o+a+t,1,s+c+\\\" +lon_0=60 +k=1\\\"+oo+u+f+o+a+t,1,s+c+jd+\\\" +k=1\\\"+Ro+u+f+o+a+t,1,s+c+yC+\\\" +k=1\\\"+ro+u+f+o+a+t,1,s+c+NI+\\\" +k=1\\\"+Fo+u+f+o+a+t,1,s+c+$y+\\\" +k=1\\\"+ag+u+f+o+a+t,1,s+c+to+\\\" +k=1\\\"+Lo+u+f+o+a+t,1,s+c+Qg+\\\" +k=1\\\"+Uo+u+f+o+a+t,1,s+c+eo+\\\" +k=1\\\"+Oo+u+f+o+a+t,1,s+c+hf+\\\" +k=1\\\"+Po+u+f+o+a+t,1,s+c+Io+\\\" +k=1\\\"+Ln+u+f+o+a+t,1,s+c+bo+\\\" +k=1\\\"+sr+u+f+o+a+t,1,s+c+io+\\\" +k=1\\\"+In+u+f+o+a+t,1,s+c+cc+\\\" +k=1\\\"+ar+u+f+o+a+t,1,s+c+so+\\\" +k=1\\\"+vr+u+f+o+a+t,1,s+c+_l+\\\" +k=1\\\"+yc+u+f+o+a+t,1,s+c+ss+\\\" +k=1\\\"+Qc+u+f+o+a+t,1,s+c+lg+\\\" +k=1\\\"+mc+u+f+o+a+t,1,s+c+Oa+\\\" +k=1\\\"+kc+u+f+o+a+t,1,s+c+yr+\\\" +k=1\\\"+xc+u+f+o+a+t,1,s+c+xa+\\\" +k=1\\\"+Mc+u+f+o+a+t,1,s+c+Pl+\\\" +k=1\\\"+bc+u+f+o+a+t,1,s+c+Sa+\\\" +k=1\\\"+Dc+u+f+o+a+t,1,s+c+Cl+\\\" +k=1\\\"+ou+u+f+o+a+t,1,s+c+Bs+\\\" +k=1\\\"+vc+u+f+o+a+t,1,s+c+Er+\\\" +k=1\\\"+ru+u+f+o+a+t,1,s+c+Ma+\\\" +k=1\\\"+Sc+u+f+o+a+t,1,s+c+pp+\\\" +k=1 +x_0=46500000\\\"+u+f+o+a+t,1,s+c+id+\\\" +k=1\\\"+IQ+u+f+o+a+t,1,s+c+bC+\\\" +k=1 +x_0=48500000\\\"+u+f+o+a+t,1,s+c+iu+\\\" +k=1 +x_0=49500000\\\"+u+f+o+a+t,1,s+c+su+\\\" +k=1 +x_0=50500000\\\"+u+f+o+a+t,1,s+c+$c+\\\" +k=1 +x_0=51500000\\\"+u+f+o+a+t,1,s+c+QQ+\\\" +k=1 +x_0=52500000\\\"+u+f+o+a+t,1,s+c+sd+\\\" +k=1 +x_0=53500000\\\"+u+f+o+a+t,1,s+c+oI+\\\" +k=1 +x_0=54500000\\\"+u+f+o+a+t,1,s+c+Af+\\\" +k=1 +x_0=55500000\\\"+u+f+o+a+t,1,s+c+DC+\\\" +k=1 +x_0=56500000\\\"+u+f+o+a+t,1,s+c+hg+\\\" +k=1 +x_0=57500000\\\"+u+f+o+a+t,1,s+c+vC+\\\" +k=1 +x_0=58500000\\\"+u+f+o+a+t,1,s+c+Tl+\\\" +k=1 +x_0=59500000\\\"+u+f+o+a+t,2,s+c+Hl+\\\" +k=1 +x_0=61500000\\\"+u+f+o+a+t,1,s+c+Pp+\\\" +k=1 +x_0=62500000\\\"+u+f+o+a+t,1,s+c+cg+\\\" +k=1 +x_0=63500000\\\"+u+f+o+a+t,1,s+c+Tp+\\\" +k=1 +x_0=64500000\\\"+u+f+o+a+t,1,s+c+mn+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Ko+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Ao+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+gr+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+zo+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Ou+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+jh+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Pu+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+tl+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Fp+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+qu+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Lp+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+GI+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+\\\" +lon_0=60 +k=1\\\"+d+u+f+o+a+t,1,s+c+jd+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+yC+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+NI+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+$y+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+to+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Qg+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+hf+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+bo+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+cc+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+_l+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+lg+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+yr+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Pl+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Cl+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+f+o+a+t,1,l+rc+T+R+zn+a+t,1,l+Ul+T+R+zn+a+t,1,s+c+Er+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+pp+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+id+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+bC+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+iu+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+su+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+$c+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+QQ+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+sd+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+oI+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Af+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+DC+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+hg+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+vC+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Tl+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+_p+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Hl+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Pp+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+cg+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+c+Tp+\\\" +k=1\\\"+d+u+f+o+a+t,1,s+lr+nr+Ad+N+u+i+e+a+t,1,s+kn+jf+it+x+u+i+e+a+t,1,s+Nt+Ne+E+us+u+i+e+a+t,1,s+Nt+Re+E+us+u+i+e+a+t,1,s+Nt+Sr+it+us+u+i+e+a+t,1,r+Hi+Ji+$A+qo+K+u+i+e+a+t,1,r+qi+Cc+zi+qo+K+br+i+e+a+t,1,r+di+El+X+Pn+kt+bA+i+e+a+t,1,r+Ii+pi+$+Pn+kt+bA+i+e+a+t,1,r+PA+_i+uc+rA+kt+bA+i+e+a+t,1,r+Kh+Hd+Ci+dc+kt+bA+i+e+a+t,1,r+Bi+wi+Ic+Mr+kt+bA+i+e+a+t,1,r+Ei+yi+Qi+Gr+kt+bA+i+e+a+t,1,r+Qs+ms+X+yt+La+Ua+i+e+a+t,1,r+Yh+Vh+Ce+yt+La+Ua+i+e+a+t,1,r+PA+mi+S+yt+La+Ua+i+e+a+t,1,r+ki+pc+xi+ml+Dd+vd+i+e+a+t,1,s+Me+Fe+_c+N+u+i+e+a+t,1,s+TA+ce+LA+N+u+i+e+a+t,1,s+TA+tu+LA+N+u+i+e+a+t,1,r+Wh+Mi+Jd+Xh+x+u+i+e+a+t,1,s+kn+Le+E+N+u+i+e+a+t,1,s+kn+Ue+E+fs+u+i+e+a+t,1,s+Bh+Xp+fA+d+u+i+e+a+t,1,s+wh+Vl+fA+d+u+i+e+a+t,1,s+ln+Jl+Bl+d+u+i+e+a+t,1,s+Eh+Zp+Bl+d+u+i+e+a+t,1,s+yh+Wl+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+H+Oe+nt+N+u+i+e+a+t,1,s+H+hl+nt+d+u+i+e+a+t,1,s+H+Nr+it+_e+u+i+e+a+t,1,s+S+je+os+oA+u+i+e+a+t,1,s+S+Ke+LA+fs+u+i+e+a+t,1,s+ai+Ye+fA+pt+ql+i+e+a+t,1,s+ai+Ve+fA+ao+ql+i+e+a+t,1,r+ji+Ki+ba+Ka+BA+nA+i+e+a+t,1,r+yA+Yi+Ga+Ka+d+u+i+e+a+t,1,r+Vi+Wi+dA+ka+K+u+i+e+a+t,1,r+Xi+Zi+S+Ie+K+br+i+e+a+t,1,r+WA+ui+ai+yl+d+u+i+e+a+t,1,r+ks+xs+AA+ds+d+bA+i+e+a+t,1,r+oa+ra+lr+Co+Et+u+i+e+a+t,1,r+Rf+Ff+Lf+vt+Et+u+i+e+a+t,1,s+lA+Vn+E+oA+u+i+e+a+t,1,s+At+We+fA+ao+u+i+e+a+t,1,r+Xg+xf+$+rg+K+u+i+e+a+t,1,r+Ms+bi+kr+za+N+fc+i+e+a+t,1,r+bs+Ds+kr+Wo+d+u+i+e+a+t,1,r+vs+Ss+Gs+Il+tC+u+i+e+a+t,1,r+Mf+Ns+Rs+tt+rd+u+i+e+a+t,1,r+Ot+bf+ba+tt+$h+u+i+e+a+t,1,r+la+ha+xr+Xe+_e+ts+i+e+a+t,1,r+ic+ga+Ar+xl+_e+ts+i+e+a+t,1,r+ca+fa+gf+tf+_e+ts+i+e+a+t,1,s+Eo+Pe+he+oA+u+i+e+a+t,1,s+Eo+jt+he+fs+u+i+e+a+t,1,s+Qe+PI+it+qt+u+i+e+a+t,1,s+Qe+Co+it+d+u+i+e+a+t,1,s+ur+TI+LA+hy+u+i+e+a+t,1,r+zh+SI+Zg+ir+x+u+i+e+a+t,1,r+el+El+ua+fe+d+u+i+e+a+t,1,s+ge+Ze+E+N+eC+i+e+a+t,1,s+ge+$e+E+d+Bo+i+e+a+t,1,s+ge+Ai+E+_e+Ag+i+e+a+t,1,s+Da+ti+fA+oA+u+i+e+a+t,1,s+XA+bn+E+Ft+u+i+e+a+t,1,s+Nt+Te+mo+Df+u+i+e+a+t,1,s+Nt+Rr+E+d+u+i+e+a+t,1,s+Nt+He+Fr+gy+u+i+e+a+t,1,s+XA+bn+E+Ft+u+i+e+a+t,1,s+Ga+Je+MA+qt+u+i+e+a+t,1,s+Ga+qe+MA+hI+u+i+e+a+t,1,r+Di+vi+ZA+eu+oA+u+i+e+a+t,1,r+st+Us+cr+Is+x+u+i+e+a+t,1,r+Os+Ps+xt+Is+x+u+i+e+a+t,1,r+Uf+da+wt+hs+x+u+i+e+a+t,1,r+Ia+pa+Me+hs+x+u+i+e+a+t,1,r+Si+Ts+qd+ka+x+u+i+e+a+t,1,r+Hs+Js+Gi+ka+x+u+i+e+a+t,1,r+Tu+Be+lA+rA+be+u+i+e+a+t,1,r+Hu+we+H+rA+BA+u+i+e+a+t,1,s+$i+za+ng+pt+u+i+e+a+t,1,r+_a+Ca+hA+fe+x+u+i+e+a+t,1,r+Of+Ba+As+vA+x+u+i+e+a+t,1,r+js+Ac+$A+Kg+x+u+i+e+a+t,1,r+Ks+tc+zd+kl+N+nA+i+e+a+t,1,r+Ys+Vs+Li+Ie+x+Se+i+e+a+t,1,r+Ws+Xs+Ee+vA+fs+va+i+e+a+t,1,r+Zs+$s+Ui+pl+x+Ag+i+e+a+t,1,r+Zt+$t+ye+Ie+oA+bl+i+e+a+t,1,r+yA+Ae+Pt+at+d+nA+i+e+a+t,1,r+Hr+te+dA+at+d+Se+i+e+a+t,1,r+Jr+ee+S+at+d+va+i+e+a+t,1,s+Da+tg+Lr+d+u+i+e+a+t,1,r+Gf+Aa+$+ja+Lt+Se+i+e+a+t,1,r+WA+Oi+AA+ja+Lt+nA+i+e+a+t,1,r+st+Nf+cr+ze+d+u+i+e+a+t,1,r+ta+ea+Pi+rA+d+u+i+e+a+t,1,r+sc+RI+Bc+un+x+u+i+e+a+t,1,r+wa+Ea+Kd+ce+x+u+i+e+a+t,1,r+ia+sa+Ti+Jt+x+u+i+e+a+t,1,r+gl+ec+hA+Jt+x+u+i+e+a+t,1,r+aa+na+Ju+Jt+x+u+i+e+a+t,1,s+Vt+ei+MA+N+u+i+e+a+t,1,s+Vt+ii+MA+K+ts+i+e+a+t,1,s+Vt+Ur+MA+x+u+i+e+a+t,1,s+Vt+si+MA+_e+ts+i+e+a+t,1,r+hn+gn+cn+Ta+N+Vo+i+e+a+t,1,s+Nt+Ne+E+us+u+i+e+j+t,1,s+Nt+Re+E+us+u+i+e+j+t,1,s+Nt+Sr+it+us+u+i+e+j+t,1,r+di+El+X+Pn+xA+eA+i+e+h+t,1,r+Ii+pi+$+Pn+xA+eA+i+e+h+t,1,r+PA+_i+uc+rA+xA+eA+i+e+h+t,1,r+Kh+Hd+Ci+dc+xA+eA+i+e+h+t,1,r+Bi+wi+Ic+Mr+xA+eA+i+e+h+t,1,r+Ei+yi+Qi+Gr+xA+eA+i+e+h+t,1,r+Qs+ms+X+yt+zt+ne+i+e+h+t,1,r+Yh+Vh+Ce+yt+zt+ne+i+e+h+t,1,r+PA+mi+S+yt+zt+ne+i+e+h+t,1,r+ki+pc+xi+ml+Gg+Ng+i+e+h+t,1,s+Me+Fe+_c+iA+u+i+e+h+t,1,s+TA+ce+LA+iA+u+i+e+h+t,1,s+TA+tu+LA+iA+u+i+e+h+t,1,r+Wh+Mi+Jd+Xh+x+u+i+e+h+t,1,s+kn+Le+E+iA+u+i+e+h+t,1,s+kn+Ue+E+oe+u+i+e+h+t,1,s+H+Oe+nt+iA+u+i+e+h+t,1,s+H+hl+nt+sA+u+i+e+h+t,1,s+H+Nr+it+Rg+u+i+e+h+t,3,r+WA+ui+ai+yl+sA+u+i+e+h+t,1,r+ks+xs+AA+ds+sA+eA+i+e+h+t,1,r+Xg+xf+$+rg+Fg+u+i+e+h+t,1,r+Ms+bi+kr+za+iA+fc+i+e+h+t,1,r+bs+Ds+kr+Wo+sA+u+i+e+h+t,1,r+vs+Ss+Gs+Il+Lg+u+i+e+j+t,1,r+Mf+Ns+Rs+tt+Ug+u+i+e+j+t,1,r+Ot+bf+ba+tt+Kf+u+i+e+j+t,1,s+Eo+Pe+he+et+u+i+e+h+t,1,s+Eo+jt+he+oe+u+i+e+h+t,1,r+zh+SI+Zg+ir+hi+u+i+e+j+t,1,s+Nt+Te+mo+Df+u+i+e+h+t,1,s+Nt+Rr+E+sA+u+i+e+h+t,1,s+Nt+He+Fr+Og+u+i+e+h+t,1,s+XA+bn+E+Ft+u+i+e+h+t,1,s+Ga+Je+MA+Pg+u+i+e+h+t,1,s+Ga+qe+MA+Tg+u+i+e+h+t,1,r+Di+vi+ZA+eu+et+u+i+e+h+t,1,r+st+Us+cr+Is+hi+u+i+e+j+t,1,r+Os+Ps+xt+Is+hi+u+i+e+j+t,1,r+Si+Ts+qd+ka+x+u+i+e+h+t,1,r+Hs+Js+Gi+ka+x+u+i+e+h+t,1,r+Tu+Be+lA+rA+jl+u+i+e+j+t,1,r+Hu+we+H+rA+Kl+u+i+e+j+t,1,r+js+Ac+$A+Kg+x+u+i+e+h+t,1,r+Ks+tc+zd+kl+iA+re+i+e+h+t,1,r+Ys+Vs+Li+Ie+x+vn+i+e+h+t,1,r+Ws+Xs+Ee+vA+oe+va+i+e+h+t,1,r+Zs+$s+Ui+pl+x+nf+i+e+h+t,1,r+Zt+$t+ye+Ie+et+of+i+e+h+t,1,r+yA+Ae+Pt+at+pn+Bd+i+e+j+t,1,r+Hr+te+dA+at+pn+jI+i+e+j+t,1,r+Jr+ee+S+at+pn+KI+i+e+j+t,1,r+Gf+Aa+$+ja+Sn+vn+i+e+h+t,1,r+WA+Oi+AA+ja+Sn+re+i+e+h+t,1,r+st+Nf+cr+ze+sA+u+i+e+h+t,1,r+ta+ea+Pi+rA+sA+u+i+e+h+t,1,r+ia+sa+Ti+Jt+x+u+i+e+h+t,1,r+gl+ec+hA+Jt+x+u+i+e+h+t,1,r+aa+na+Ju+Jt+x+u+i+e+h+t,1,s+c+\\\" +lon_0=13\\\"+uA+d+u+CA+ht+I_+a+t,1,s+\\\" +lat_0=24.45\\\"+ow+Bl+N+yo+_+Gl+a+t,1,l+Kc+T+m+_o+a+t,2,s+Xl+\\\" +lon_0=41.53333333333333 +k=1 +x_0=1300000\\\"+u+f+n+a+t,1,s+Xl+\\\" +lon_0=44.53333333333333 +k=1\\\"+am+u+f+n+a+t,1,s+Xl+\\\" +lon_0=47.53333333333333 +k=1\\\"+nm+u+f+n+a+t,1,s+Xl+\\\" +lon_0=50.53333333333333 +k=1\\\"+om+u+f+n+a+t,1,s+gu+\\\" +lon_0=50.76666666666667 +k=1\\\"+am+u+f+n+a+t,1,s+gu+\\\" +lon_0=53.76666666666667 +k=1\\\"+nm+u+f+n+a+t,1,s+gu+\\\" +lon_0=56.76666666666667 +k=1\\\"+om+u+f+n+a+t,1,l+ll+_+Qp+a+t,1,l+ll+_+p_+a+t,2,s+c+V_+E+kA+u+i+e+a+t,1,s+c+UI+E+kA+u+i+e+a+t,1,s+c+OI+E+kA+u+i+e+a+t,1,s+c+W_+E+kA+u+i+e+a+t,1,s+c+Wo+E+kA+u+i+e+a+t,1,s+c+X_+E+kA+u+i+e+a+t,1,s+c+Z_+E+kA+u+i+e+a+t,1,s+c+un+E+kA+u+i+e+a+t,1,rn+xr+em+Op+be+rm+i+e+a+t,1,rn+\\\" +lat_0=47.25\\\"+nI+Op+K+le+i+e+a+t,1,l+Bf+i+e+a+t,1,l+wf+i+e+a+t,1,l+Ef+i+e+a+t,1,l+wr+i+e+a+t,1,l+To+i+e+a+t,1,l+wo+i+e+a+t,1,l+On+i+e+a+t,1,l+Ho+i+e+a+t,2,ci+\\\" +lat_1=55\\\"+Yd+AQ+wc+z+u+Q+h+t,1,s+ai+Ye+fA+Jg+Va+i+e+h+t,1,s+ai+Ve+fA+ao+Va+i+e+h+t,1,s+ai+Ye+fA+Jg+Va+i+e+h+t,1,s+ai+Ve+fA+ao+Va+i+e+h+t,1,l+On+_+__+a+t,1,l+On+_+mp+a+t,1,l+mr+_+Fc+a+t,1,l+mr+i+e+a+t,1,l+On+_+S_+a+t,2,l+oc+T+i+e+a+t,1,l+rp+T+_+G_+a+t,1,l+MI+T+_+Eg+a+t,1,l+bI+T+_+CC+a+t,2,l+rl+T+_+kp+a+t,1,l+vg+T+_+Fd+a+t,6,l+Ho+R+J_+a+t,1,l+Dp+T+_+xp+a+t,3,r+el+Qo+Ya+rA+K+u+i+e+a+t,1,r+el+Qo+Ya+rA+og+u+i+e+j+t,1,r+el+Qo+Ya+rA+K+u+i+e+a+t,1,r+el+Qo+Ya+rA+og+u+i+e+j+t,1,l+vg+T+_+ul+a+t,1,l+vg+T+_+C_+a+t,1,l+vg+T+_+gh+a+t,1,l+vg+T+_+Kn+a+t,1,l+rl+T+_+Mp+a+t,1,il+\\\" +lon_0=110\\\"+wQ+ld+gI+m+_o+a+t,1,il+\\\" +lon_0=110\\\"+wQ+ld+gI+m+De+a+t,1,il+\\\" +lon_0=110\\\"+wQ+ld+gI+m+go+a+t,1,s+c+Fl+uA+BA+u+_+ae+a+t,1,s+c+yn+uA+\\\" +x_0=2520000\\\"+u+_+ae+a+t,1,ci+tQ+\\\" +lat_2=58.5\\\"+Ar+\\\" +lon_0=-126\\\"+Et+u+i+e+a+t,1,l+Ll+i+e+a+t,1,s+c+jo+\\\" +k=1\\\"+Ft+u+i+e+a+t,1,s+c+\\\" +lon_0=13.5 +k=1\\\"+Ft+u+i+e+a+t,1,s+c+yn+\\\" +k=1\\\"+Ft+u+i+e+a+t,1,s+c+cy+\\\" +k=1\\\"+Ft+u+i+e+a+t,1,s+c+Td+\\\" +k=1\\\"+Ft+u+i+e+a+t,1,s+c+\\\" +lon_0=14.25 +k=1\\\"+Ft+u+i+e+a+t,1,s+c+\\\" +lon_0=15.75 +k=1\\\"+Ft+u+i+e+a+t,1,s+c+\\\" +lon_0=17.25 +k=1\\\"+Ft+u+i+e+a+t,1,s+c+\\\" +lon_0=18.75 +k=1\\\"+Ft+u+i+e+a+t,1,s+c+\\\" +lon_0=20.25 +k=1\\\"+Ft+u+i+e+a+t,1,s+c+\\\" +lon_0=21.75 +k=1\\\"+Ft+u+i+e+a+t,1,s+c+\\\" +lon_0=23.25 +k=1\\\"+Ft+u+i+e+a+t,1,s+c+rw+\\\" +k=1\\\"+BA+u+m+Ct+a+t,1,s+c+lw+\\\" +k=1\\\"+BA+u+m+Ct+a+t,1,s+c+hw+\\\" +k=1\\\"+BA+u+m+Ct+a+t,1,s+c+gw+\\\" +k=1\\\"+BA+u+m+Ct+a+t,1,s+c+cw+\\\" +k=1\\\"+BA+u+m+Ct+a+t,1,s+c+fw+\\\" +k=1\\\"+BA+u+m+Ct+a+t,1,s+c+rw+\\\" +k=1\\\"+BA+u+m+a+t,1,s+c+lw+\\\" +k=1\\\"+BA+u+m+a+t,1,s+c+hw+\\\" +k=1\\\"+BA+u+m+a+t,1,s+c+gw+\\\" +k=1\\\"+BA+u+m+a+t,1,s+c+cw+\\\" +k=1\\\"+BA+u+m+a+t,1,s+c+fw+\\\" +k=1\\\"+BA+u+m+a+t,1,ct+O+\\\" +lat_ts=-71\\\"+$n+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+\\\" +lat_ts=-71 +lon_0=70 +k=1\\\"+rd+Bo+C+a+t,1,r+\\\" +lat_1=-68.5 +lat_2=-74.5 +lat_0=-50 +lon_0=70\\\"+rd+Bo+C+a+t,1,r+eQ+Yd+ju+mg+$h+HI+i+e+a+t,1,po+ju+mg+JI+qI+i+e+a+t,1,l+rc+T+F+Zl+a+t,1,l+Ul+T+F+Zl+a+t,3,l+ll+i+e+a+t,1,l+Rl+i+e+a+t,1,l+Iu+i+e+a+t,1,l+xd+i+e+a+t,1,l+Wr+i+e+a+t,1,l+Ll+i+e+a+t,1,l+jc+i+e+a+t,1,l+dh+i+e+a+t,1,l+rc+i+e+a+t,1,l+Ul+i+e+a+t,5,l+_u+_+cl+a+t,1,l+vp+_+cl+a+t,1,l+ll+_+cl+a+t,1,r+\\\" +lat_1=64.25 +lat_2=65.75 +lat_0=65 +lon_0=-19\\\"+d+bA+i+e+a+t,1,s+c+\\\" +lon_0=-8.5 +k=1\\\"+wl+\\\" +y_0=-7800000\\\"+_+Nl+a+t,1,s+c+Ko+uA+d+\\\" +y_0=-6000000\\\"+i+e+a+t,1,l+vg+T+_+Zd+a+t,1,l+ll+_+Nu+a+t,1,l+_u+_+pd+a+t,1,l+_u+_+Zu+a+t,1,l+Wr+F+e+a+t,1,l+Ll+F+e+a+t,1,s+c+\\\" +lon_0=37\\\"+EC+d+pQ+_+P+a+t,1,l+dh+i+e+a+t,1,ve+\\\" +lat_0=52.41864827777778 +lon_0=13.62720366666667\\\"+au+\\\" +y_0=10000\\\"+m+tA+a+t,1,s+c+Jt+uA+d+\\\" +y_0=-4500000\\\"+Q+a+t,1,s+c+Jt+uA+fy+$p+i+e+a+t,1,s+c+Jt+uA+fy+$p+i+e+a+t,1,s+hA+$I+Tr+fs+u+i+e+a+t,2,s+At+Ap+Tr+oA+u+i+e+a+t,1,s+hA+$I+Tr+fs+u+i+e+a+t,2,s+At+Ap+Tr+oA+u+i+e+a+t,1,de+Qh+\\\" +lonc=-86\\\"+Sd+uA+Gd+Wu+Ol+Nd+i+e+a+t,1,de+Qh+\\\" +lonc=-86\\\"+Sd+uA+Gd+Wu+Ol+Nd+i+e+a+t,1,r+uw+dw+Iw+fe+\\\" +x_0=914400 +y_0=914400\\\"+Q+j+t,1,r+uw+dw+Iw+fe+Et+nA+i+e+a+t,1,r+Pf+FI+Xf+fe+BA+bl+i+e+a+t,1,ci+Pf+FI+Xf+fe+BA+Bo+i+e+a+t,1,r+Pf+FI+Xf+fe+BA+bl+i+e+a+t,1,ci+Pf+FI+Xf+fe+BA+Bo+i+e+a+t,1,ci+\\\" +lat_1=24\\\"+uy+\\\" +lat_0=24\\\"+Wc+K+u+i+e+a+t,1,ci+\\\" +lat_1=24\\\"+uy+\\\" +lat_0=24\\\"+Wc+K+u+i+e+a+t,1,r+ya+Qa+AA+ds+BA+nA+i+e+a+t,1,r+ya+Qa+AA+ds+BA+re+i+e+h+t,1,r+ya+Qa+AA+ds+BA+nA+i+e+a+t,1,r+ya+Qa+AA+ds+BA+re+i+e+h+t,1,l+lc+m+G+a+t,1,l+Yc+m+G+a+t,1,l+Cu+m+G+a+t,1,l+yf+m+G+a+t,1,l+Uu+m+G+a+t,1,l+lc+i+e+a+t,1,l+Yc+i+e+a+t,1,l+Cu+i+e+a+t,1,l+yf+i+e+a+t,1,l+Uu+i+e+a+t,1,r+\\\" +lat_1=-14.26666666666667 +lat_0=-14.26666666666667\\\"+Hp+\\\" +k_0=1\\\"+v+\\\" +y_0=95169.31165862332\\\"+R+B_+h+t,4,s+c+bo+uA+d+u+Kt+VA+xI+a+t,1,r+\\\" +lat_1=-28\\\"+mQ+\\\" +lat_0=-32\\\"+Ma+Et+Se+i+e+a+t,1,s+Up+\\\" +lon_0=-2.416666666666667 +k=0.999997 +x_0=47000\\\"+Cp+i+e+a+t,1,s+\\\" +lat_0=49.225 +lon_0=-2.135 +k=0.9999999000000001\\\"+au+\\\" +y_0=70000\\\"+i+e+a+t,1,r+\\\" +lat_1=-36 +lat_2=-38 +lat_0=-37 +lon_0=145\\\"+be+dn+W+q+a+t,1,r+\\\" +lat_1=-36 +lat_2=-38 +lat_0=-37 +lon_0=145\\\"+be+qr+i+e+a+t,1,r+\\\" +lat_1=-18\\\"+mQ+c+\\\" +lon_0=134\\\"+z+u+i+e+a+t,1,s+\\\" +lat_0=-28\\\"+$c+Bl+wl+ts+i+e+a+t,1,s+dr+\\\" +lon_0=-80.07750791666666 +k=1\\\"+Et+nA+i+e+a+t,1,s+dr+\\\" +lon_0=-77.07750791666666 +k=1\\\"+Et+nA+i+e+a+t,1,s+dr+\\\" +lon_0=-74.07750791666666 +k=1\\\"+Et+nA+i+e+a+t,1,s+dr+\\\" +lon_0=-71.07750791666666 +k=1\\\"+Et+nA+i+e+a+t,1,s+dr+\\\" +lon_0=-68.07750791666666 +k=1\\\"+Et+nA+i+e+a+t,1,s+c+dy+\\\" +k=0.999\\\"+Et+nA+_+AI+a+t,1,rn+\\\" +lat_0=50.625 +lon_0=21.08333333333333\\\"+EC+\\\" +x_0=4637000 +y_0=5467000\\\"+f+M+a+t,1,s+c+xa+he+d+u+R+Bt+a+t,1,s+c+kQ+he+d+u+R+Bt+a+t,1,s+c+xQ+he+d+u+R+Bt+a+t,1,s+c+Sa+he+d+u+R+Bt+a+t,1,s+c+up+he+d+u+R+Bt+a+t,1,s+c+DI+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+QC+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+mn+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+iQ+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+Rp+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+Ko+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+vI+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+mC+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+Ao+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+LI+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+\\\" +lon_0=29 +k=1\\\"+d+u+i+e+a+t,1,s+c+gr+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+Pd+\\\" +k=1\\\"+d+u+i+e+a+t,2,ve+\\\" +lat_0=-18 +lon_0=178 +x_0=109435.392 +y_0=141622.272\\\"+UC+jy+ff+\\\" +to_meter=0.201168\\\"+t,1,l+Lu+T+_+Pr+a+t,1,l+Dp+T+_+Pr+a+t,6,l+hc+Kt+VA+Zr+a+t,1,l+gc+Kt+VA+Zr+a+t,3,s+c+\\\" +lon_0=18.05779 +k=0.99999425 +x_0=100178.1808 +y_0=-6500614.7836\\\"+i+e+a+t,1,ci+tQ+\\\" +lat_2=58.5\\\"+Ar+\\\" +lon_0=-126\\\"+Et+u+i+e+a+t,1,l+bI+i+e+a+t,1,l+P_+i+e+a+t,1,l+T_+i+e+a+t,1,l+Md+i+e+a+t,1,l+Qf+i+e+a+t,1,l+qc+i+e+a+t,1,l+zc+i+e+a+t,1,r+Iy+\\\" +lat_2=53.5\\\"+c+Bp+\\\" +x_0=930000 +y_0=6430000\\\"+i+e+a+t,1,r+Iy+\\\" +lat_2=53.5\\\"+c+Bp+\\\" +x_0=930000 +y_0=6430000\\\"+i+e+a+t,1,r+\\\" +lat_1=-20.66666666666667 +lat_2=-22.33333333333333 +lat_0=-21.5\\\"+MQ+K+yo+i+e+a+t,1,l+vg+T+F+md+a+t,1,r+\\\" +lat_1=-22.24469175 +lat_2=-22.29469175 +lat_0=-22.26969175 +lon_0=166.44242575 +x_0=0.66 +y_0=1.02\\\"+_+Kn+a+t,1,r+\\\" +lat_1=-22.24472222222222 +lat_2=-22.29472222222222 +lat_0=-22.26972222222222 +lon_0=166.4425 +x_0=8.313000000000001 +y_0=-2.354\\\"+_+Kn+a+t,1,de+sI+lm+ym+ad+au+u+Ol+fn+Ky+wI+\\\" +to_meter=20.116756\\\"+t,1,de+sI+lm+ym+ad+\\\" +x_0=804670.24\\\"+u+Ol+fn+Ky+wI+a+t,1,l+Sp+T+i+e+a+t,1,l+vg+T+i+e+a+t,1,l+_f+T+i+e+a+t,1,l+_f+T+_+ul+a+t,2,ci+\\\" +lat_1=42.122774 +lat_2=49.01518 +lat_0=45.568977 +lon_0=-84.455955\\\"+Et+nA+i+e+a+t,1,ci+\\\" +lat_1=42.122774 +lat_2=49.01518 +lat_0=45.568977 +lon_0=-83.248627\\\"+Et+nA+i+e+a+t,1,s+c+EQ+uA+d+u+Kt+VA+Zr+a+t,1,s+c+BC+\\\" +k=0.9965000000000001\\\"+Et+u+_+V+a+t,1,l+To+i+e+a+t,1,l+wo+i+e+a+t,1,l+On+i+e+a+t,1,l+Ho+i+e+a+t,1,l+mr+i+e+a+t,1,l+Sg+i+e+a+t,1,l+mf+i+e+a+t,1,l+Cf+i+e+a+t,1,l+_u+i+e+a+t,1,l+vp+i+e+a+t,1,l+ll+i+e+a+t,1,l+Rl+i+e+a+t,1,s+c+Fl+he+N+u+_+V+a+t,1,s+c+\\\" +lon_0=11\\\"+he+N+u+_+V+a+t,1,s+c+\\\" +lon_0=13\\\"+he+N+u+_+V+a+t,1,s+c+yn+he+N+u+_+V+a+t,1,s+c+BC+he+N+u+_+V+a+t,1,s+c+DI+he+N+u+_+V+a+t,1,s+c+mn+he+N+u+_+V+a+t,1,s+c+Rp+he+N+u+_+V+a+t,1,s+c+vI+he+N+u+_+V+a+t,1,l+Wr+_+V+a+t,1,r+cI+fg+tl+Xu+BA+hm+b+kd+a+t,1,l+Ll+_+V+a+t,1,l+jc+_+V+a+t,1,l+dh+_+V+a+t,1,r+cu+fu+O+ed+z+u+C+a+t,1,r+cu+fu+O+ef+z+u+C+a+t,1,r+cu+fu+O+\\\" +lon_0=-42\\\"+z+u+C+a+t,1,r+ft+ut+O+Pp+z+u+C+a+t,1,r+ft+ut+O+ed+z+u+C+a+t,1,r+ft+ut+O+ef+z+u+C+a+t,1,r+ft+ut+O+Pu+z+u+C+a+t,1,r+ft+ut+O+Lp+z+u+C+a+t,1,r+ft+ut+O+yC+z+u+C+a+t,1,r+ft+ut+O+Qg+z+u+C+a+t,1,r+ft+ut+O+bo+z+u+C+a+t,1,r+ft+ut+O+_l+z+u+C+a+t,1,r+ft+ut+O+yr+z+u+C+a+t,1,r+ft+ut+O+Cl+z+u+C+a+t,1,r+ft+ut+O+pp+z+u+C+a+t,1,r+ft+ut+O+su+z+u+C+a+t,1,r+ft+ut+O+oI+z+u+C+a+t,1,r+gA+cA+O+\\\" +lon_0=-102\\\"+z+u+C+a+t,1,r+gA+cA+O+Jt+z+u+C+a+t,1,r+gA+cA+O+\\\" +lon_0=-78\\\"+z+u+C+a+t,1,r+gA+cA+O+ed+z+u+C+a+t,1,r+gA+cA+O+\\\" +lon_0=-18\\\"+z+u+C+a+t,1,r+gA+cA+O+\\\" +lon_0=-6\\\"+z+u+C+a+t,1,r+gA+cA+O+BQ+z+u+C+a+t,1,r+gA+cA+O+Td+z+u+C+a+t,1,r+gA+cA+O+gr+z+u+C+a+t,1,r+gA+cA+O+Pu+z+u+C+a+t,1,r+gA+cA+O+Lp+z+u+C+a+t,1,r+gA+cA+O+yC+z+u+C+a+t,1,r+gA+cA+O+Qg+z+u+C+a+t,1,r+gA+cA+O+bo+z+u+C+a+t,1,r+gA+cA+O+_l+z+u+C+a+t,1,r+gA+cA+O+yr+z+u+C+a+t,1,r+gA+cA+O+Cl+z+u+C+a+t,1,r+gA+cA+O+pp+z+u+C+a+t,1,r+gA+cA+O+su+z+u+C+a+t,1,r+gA+cA+O+oI+z+u+C+a+t,1,r+gA+cA+O+vC+z+u+C+a+t,1,r+SA+QA+O+py+z+u+C+a+t,1,r+SA+QA+O+_y+z+u+C+a+t,1,r+SA+QA+O+ug+z+u+C+a+t,1,r+SA+QA+O+pl+z+u+C+a+t,1,r+SA+QA+O+ce+z+u+C+a+t,1,r+SA+QA+O+nI+z+u+C+a+t,1,r+SA+QA+O+\\\" +lon_0=-27\\\"+z+u+C+a+t,1,r+SA+QA+O+\\\" +lon_0=-9\\\"+z+u+C+a+t,1,r+SA+QA+O+Fl+z+u+C+a+t,1,r+SA+QA+O+Ao+z+u+C+a+t,1,r+SA+QA+O+tl+z+u+C+a+t,1,r+SA+QA+O+jd+z+u+C+a+t,1,r+SA+QA+O+eo+z+u+C+a+t,1,r+SA+QA+O+so+z+u+C+a+t,1,r+SA+QA+O+xa+z+u+C+a+t,1,r+SA+QA+O+Ma+z+u+C+a+t,1,r+SA+QA+O+$c+z+u+C+a+t,1,r+SA+QA+O+hg+z+u+C+a+t,1,r+GA+NA+O+Tp+z+u+C+a+t,1,r+GA+NA+O+\\\" +lon_0=-144\\\"+z+u+C+a+t,1,r+GA+NA+O+Ec+z+u+C+a+t,1,r+GA+NA+O+$f+z+u+C+a+t,1,r+GA+NA+O+SC+z+u+C+a+t,1,r+GA+NA+O+\\\" +lon_0=-48\\\"+z+u+C+a+t,1,r+GA+NA+O+\\\" +lon_0=-24\\\"+z+u+C+a+t,1,r+GA+NA+O+$n+z+u+C+a+t,1,r+GA+NA+O+Ko+z+u+C+a+t,1,r+GA+NA+O+Fp+z+u+C+a+t,1,r+GA+NA+O+$y+z+u+C+a+t,1,r+GA+NA+O+cc+z+u+C+a+t,1,r+GA+NA+O+Pl+z+u+C+a+t,1,r+GA+NA+O+bC+z+u+C+a+t,1,r+GA+NA+O+DC+z+u+C+a+t,1,ct+O+wA+Jp+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+_y+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+\\\" +lon_0=-105 +k=1\\\"+z+u+C+a+t,1,ct+O+wA+GC+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+\\\" +lon_0=-45 +k=1\\\"+z+u+C+a+t,1,ct+O+wA+\\\" +lon_0=-15 +k=1\\\"+z+u+C+a+t,1,ct+O+wA+yn+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+tl+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+to+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+ss+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+Ma+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+Af+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+Tf+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+Jt+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+\\\" +lon_0=-30 +k=1\\\"+z+u+C+a+t,1,ct+O+wA+gr+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+bo+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+su+\\\" +k=1\\\"+z+u+C+a+t,1,ct+O+wA+$n+\\\" +k=1\\\"+z+u+C+a+t,1,r+GA+NA+\\\" +lat_0=-78\\\"+oI+z+u+C+a+t,2,l+MI+T+i+Rt+a+t,1,l+rp+T+i+Rt+a+t,1,l+bI+T+i+Rt+a+t,1,l+P_+T+i+Rt+a+t,1,r+pw+\\\" +lat_2=58\\\"+_w+Ko+d+\\\" +y_0=6375000\\\"+i+xg+a+t,1,r+pw+\\\" +lat_2=58\\\"+_w+Ko+d+\\\" +y_0=6375000\\\"+i+e+a+t,1,l+bI+T+_+wg+a+t,1,l+bI+T+_+lh+a+t,1,l+rp+T+_+fh+a+t,1,l+rp+T+_+uh+a+t,1,l+MI+T+_+Ld+a+t,1,l+Vr+F+w_+a+t,1,r+\\\" +lat_1=-30.75 +lat_2=-35.75 +lat_0=-33.25\\\"+iu+\\\" +x_0=9300000\\\"+dn+i+e+a+t,1,ci+sQ+qp+c+Ec+z+Vd+Q+a+t,1,ci+sQ+qp+c+Ec+z+Vd+i+e+a+t,1,ci+sQ+qp+c+Ec+z+Vd+i+e+a+t,1,l+Ho+_+Fc+a+t,1,l+Ho+i+e+a+t,3,s+c+iQ+E+d+RA+b+a+t,1,s+c+Ko+E+d+RA+b+a+t,1,s+c+jo+E+d+RA+b+a+t,1,s+c+\\\" +lon_0=14\\\"+E+d+RA+b+a+t,1,s+c+\\\" +lon_0=16\\\"+E+d+RA+b+a+t,1,s+c+Td+E+d+RA+b+a+t,1,s+c+QC+E+d+RA+b+a+t,1,s+c+iQ+E+d+RA+b+a+t,1,s+c+Ko+E+d+RA+b+a+t,1,s+c+mC+E+d+RA+b+a+t,1,s+c+LI+E+d+RA+b+a+t,1,s+c+gr+E+d+RA+b+a+t,1,rn+\\\" +lat_0=52.16666666666666 +lon_0=19.16666666666667 +k=0.999714\\\"+d+bA+f+M+a+t,1,s+c+yn+\\\" +k=1\\\"+ys+u+f+M+a+t,1,s+c+Td+\\\" +k=1\\\"+Ml+u+f+M+a+t,1,s+c+mn+\\\" +k=1\\\"+Xo+u+f+M+a+t,1,s+c+Ko+\\\" +k=1\\\"+Vg+u+f+M+a+t,1,s+c+yn+\\\" +k=1\\\"+Lt+u+f+M+a+t,1,s+c+mn+\\\" +k=1\\\"+ri+u+f+M+a+t,1,s+c+Ao+\\\" +k=1\\\"+ys+u+f+M+a+t,1,l+WI+T+_+E_+a+t,1,r+\\\" +lat_1=-20.19506944444445 +lat_0=-20.19506944444445 +lon_0=57.52182777777778 +k_0=1\\\"+Et+nA+b+tI+a+t,1,ci+\\\" +lat_1=55\\\"+Yd+AQ+wc+z+u+i+e+a+t,1,s+c+jo+E+d+RA+b+An+a+t,1,s+c+\\\" +lon_0=14\\\"+E+d+RA+b+An+a+t,1,s+c+\\\" +lon_0=16\\\"+E+d+RA+b+An+a+t,1,l+Ll+T+b+An+a+t,1,l+ll+i+e+a+t,1,l+Rl+i+e+a+t,1,l+Iu+i+e+a+t,1,s+c+Ko+EC+d+u+i+e+a+t,1,r+zh+Yo+\\\" +lat_0=63.390675\\\"+PC+\\\" +x_0=6200000\\\"+va+i+e+a+t,1,r+zh+Yo+\\\" +lat_0=63.390675\\\"+PC+\\\" +x_0=6200000\\\"+va+i+e+a+t,2,s+\\\" +lat_0=0.1 +lon_0=21.95 +k=1\\\"+qt+u+f+n+a+t,1,s+\\\" +lat_0=0.1 +lon_0=24.95 +k=1 +x_0=1250000\\\"+u+f+n+a+t,1,s+\\\" +lat_0=0.1 +lon_0=27.95 +k=1 +x_0=2250000\\\"+u+f+n+a+t,1,l+Wr+T+_+a+t,1,l+Wr+T+_+a+t,1,s+kn+Pd+\\\" +k=1 +x_0=615000 +y_0=810000\\\"+xn+eI+a+t,3,r+Fs+Ls+Zh+Xc+tp+u+i+e+a+t,2,r+zs+vf+Fi+ce+Sf+u+i+e+a+t,1,r+zs+vf+Fi+ce+Sf+u+i+e+j+t,1,r+$g+qs+ZA+ps+x+u+i+e+a+t,1,r+$g+qs+ZA+ps+x+u+i+e+h+t,1,r+Ni+Ri+X+ps+x+u+i+e+a+t,1,r+Ni+Ri+X+ps+x+u+i+e+h+t,2,l+ll+b+a+t,1,l+Rl+b+a+t,1,l+Iu+b+a+t,1,l+_f+Q+a+t,1,l+Lu+Q+a+t,1,l+_f+i+e+a+t,1,l+Lu+i+e+a+t,1,l+Rl+_+a+t,1,de+sI+lm+\\\" +alpha=323.0257964666666\\\"+ad+\\\" +x_0=804671\\\"+u+Ol+fn+i+a+t,1,de+sI+aQ+Qm+ad+z+u+Ol+Ir+i+a+t,1,ve+\\\" +lat_0=2.121679744444445 +lon_0=103.4279362361111 +x_0=-14810.562 +y_0=8758.32\\\"+i+a+t,1,ve+\\\" +lat_0=2.682347636111111 +lon_0=101.9749050416667 +x_0=3673.785 +y_0=-4240.573\\\"+i+a+t,1,ve+\\\" +lat_0=3.769388088888889 +lon_0=102.3682989833333 +x_0=-7368.228 +y_0=6485.858\\\"+i+a+t,1,ve+\\\" +lat_0=3.68464905 +lon_0=101.3891079138889 +x_0=-34836.161 +y_0=56464.049\\\"+i+a+t,1,ve+\\\" +lat_0=4.9762852 +lon_0=103.070275625 +x_0=19594.245 +y_0=3371.895\\\"+i+a+t,1,ve+\\\" +lat_0=5.421517541666667 +lon_0=100.3443769638889 +x_0=-23.414 +y_0=62.283\\\"+i+a+t,1,ve+\\\" +lat_0=5.964672713888889 +lon_0=100.6363711111111\\\"+z+u+i+a+t,1,ve+\\\" +lat_0=4.859063022222222 +lon_0=100.8154105861111 +x_0=-1.769 +y_0=133454.779\\\"+i+a+t,1,ve+\\\" +lat_0=5.972543658333334 +lon_0=102.2952416694444 +x_0=13227.851 +y_0=8739.894\\\"+i+a+t,1,s+c+Td+\\\" +k=1\\\"+d+u+_+qA+a+t,1,s+c+zo+\\\" +k=1\\\"+ys+u+_+qA+a+t,1,il+qu+\\\" +lat_ts=42\\\"+z+u+f+n+a+t,1,s+c+_p+\\\" +k=1 +x_0=60500000\\\"+u+f+n+a+t,1,s+c+_p+\\\" +k=1 +x_0=60500000\\\"+u+f+o+a+t,1,l+Ul+b+gs+a+t,1,l+rl+b+gs+a+t,1,l+Vr+b+gs+a+t,1,r+cI+fg+tl+Xu+BA+hm+b+a+t,1,il+$n+\\\" +k=1\\\"+z+u+C+a+t,1,s+c+Fl+\\\" +k=1\\\"+Lt+u+m+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+m+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+m+a+t,1,s+c+yn+\\\" +k=1\\\"+ys+u+m+a+t,1,s+c+zp+\\\" +k=0.9992\\\"+d+u+i+e+a+t,1,s+c+zp+\\\" +k=0.9992\\\"+z+u+i+e+a+t,1,s+c+zp+\\\" +k=0.9992\\\"+d+u+i+e+a+t,1,s+c+zp+\\\" +k=0.9992\\\"+z+u+i+e+a+t,1,r+Fs+Ls+Zh+Xc+k+u+i+e+h+t,1,l+hc+F+Ra+a+t,1,l+gc+F+Ra+a+t,1,ve+aw+nw+\\\" +x_0=40243.57775604237 +y_0=19069.93351512578\\\"+ws+Es+Hg+t,1,po+Do+$n+z+u+bQ+DQ+a+t,1,po+O+$n+z+u+bQ+DQ+a+t,1,\\\"+proj=cea\\\"+$n+\\\" +lat_ts=30\\\"+z+u+bQ+DQ+a+t,1,ct+Do+\\\" +lat_ts=70 +lon_0=-45 +k=1\\\"+z+u+vQ+ep+a+t,1,ct+O+\\\" +lat_ts=-70\\\"+$n+\\\" +k=1\\\"+z+u+vQ+ep+a+t,1,ct+Do+\\\" +lat_ts=70 +lon_0=-45 +k=1\\\"+z+u+C+a+t,1,s+\\\" +lat_0=1.366666666666667 +lon_0=103.8333333333333 +k=1 +x_0=28001.642 +y_0=38744.572\\\"+F+a+t,1,r+\\\" +lat_1=18 +lat_2=24 +lat_0=21\\\"+yr+d+bA+B+p+a+t,1,r+zh+lf+\\\" +lat_0=47.5\\\"+pr+K+br+i+e+a+t,1,r+ji+Ki+ba+Ka+BA+Wa+i+e+h+t,1,r+yA+Yi+Ga+Ka+aA+u+i+e+h+t,1,r+Vi+Wi+dA+ka+zA+u+i+e+h+t,1,r+Xi+Zi+S+Ie+zA+Gn+i+e+h+t,1,s+ge+Ze+E+Nn+qg+i+e+h+t,1,s+ge+$e+E+aA+Bo+i+e+h+t,1,s+ge+Ai+E+UA+Gc+i+e+h+t,1,s+XA+bn+E+Ft+u+i+e+h+t,1,r+ji+Ki+ba+Ka+BA+Wa+i+e+h+t,1,r+yA+Yi+Ga+Ka+aA+u+i+e+h+t,1,r+Vi+Wi+dA+ka+zA+u+i+e+h+t,1,r+Xi+Zi+S+Ie+zA+Gn+i+e+h+t,1,s+ge+Ze+E+Nn+qg+i+e+h+t,1,s+ge+$e+E+aA+Bo+i+e+h+t,1,s+ge+Ai+E+UA+Gc+i+e+h+t,1,s+XA+bn+E+Ft+u+i+e+h+t,1,r+Hi+Ji+$A+qo+zA+u+i+e+h+t,1,r+qi+Cc+zi+qo+zA+Gn+i+e+h+t,1,s+S+je+os+et+u+i+e+h+t,1,s+S+Ke+LA+zg+u+i+e+h+t,1,s+Da+ti+fA+et+u+i+e+h+t,1,s+$i+za+ng+sl+u+i+e+h+t,1,l+Vr+b+Bn+a+t,1,l+oc+b+Bn+a+t,1,r+Hi+Ji+$A+qo+zA+u+i+e+h+t,1,r+qi+Cc+zi+qo+zA+Gn+i+e+h+t,1,s+S+je+os+et+u+i+e+h+t,1,s+S+Ke+LA+zg+u+i+e+h+t,1,s+Da+ti+fA+et+u+i+e+h+t,1,s+$i+za+ng+sl+u+i+e+h+t,1,r+mh+kh+\\\" +lat_0=50.797815\\\"+Cw+\\\" +x_0=150328 +y_0=166262\\\"+i+e+a+t,1,r+\\\" +lat_1=18\\\"+Xf+rg+\\\" +k_0=1\\\"+Cy+\\\" +y_0=650000\\\"+F+e+a+t,1,l+wr+F+e+a+t,1,l+To+F+e+a+t,1,r+oa+ra+lr+Co+_s+u+i+e+h+t,1,r+Rf+Ff+Lf+vt+_s+u+i+e+h+t,1,r+Zt+$t+\\\" +lat_0=25.5\\\"+vt+_s+u+i+e+h+t,2,r+Of+Ba+As+vA+x+u+i+e+h+t,1,r+oa+ra+lr+Co+_s+u+i+e+h+t,1,r+Rf+Ff+Lf+vt+_s+u+i+e+h+t,1,r+_a+Ca+hA+fe+x+u+i+e+h+t,1,r+Of+Ba+As+vA+x+u+i+e+h+t,1,s+\\\" +lat_0=-17 +lon_0=178.75 +k=0.99985\\\"+kt+Ag+B+I+a+t,1,l+ll+CA+ht+uf+a+t,1,l+Rl+CA+ht+uf+a+t,1,s+By+ip+Tr+d+u+i+e+a+t,1,s+By+ip+Tr+d+u+i+e+a+t,1,s+lr+nr+Ad+N+u+i+e+a+t,1,s+kn+jf+it+x+u+i+e+a+t,1,ci+\\\" +lat_1=55\\\"+Yd+AQ+wc+z+u+i+e+a+t,1,de+\\\" +lat_0=57\\\"+xh+Mh+E+eg+as+Ol+fn+i+e+a+t,1,s+Na+wy+E+d+u+i+e+a+t,1,s+Na+Ey+E+d+u+i+e+a+t,1,s+Na+Tf+E+d+u+i+e+a+t,1,s+Na+wc+E+d+u+i+e+a+t,1,s+Na+Jl+E+d+u+i+e+a+t,1,s+Na+yy+E+d+u+i+e+a+t,1,s+Na+Qy+E+d+u+i+e+a+t,1,s+Na+Hp+E+d+u+i+e+a+t,1,r+bh+Dh+kC+my+Et+u+i+e+a+t,1,s+Nt+Re+E+us+u+i+e+a+t,1,s+Nt+Re+E+us+u+i+e+j+t,1,s+Nt+Ne+E+us+u+i+e+a+t,1,s+Nt+Ne+E+us+u+i+e+j+t,1,s+Nt+Sr+it+us+u+i+e+a+t,1,s+Nt+Sr+it+us+u+i+e+j+t,1,r+Hi+Ji+$A+qo+K+u+i+e+a+t,1,r+Hi+Ji+$A+qo+zA+u+i+e+h+t,1,r+qi+Cc+zi+qo+K+br+i+e+a+t,1,r+qi+Cc+zi+qo+zA+Gn+i+e+h+t,1,ci+sQ+qp+c+Ec+z+Vd+i+e+a+t,1,r+di+El+X+Pn+kt+bA+i+e+a+t,1,r+di+El+X+Pn+xA+eA+i+e+h+t,1,r+Ii+pi+$+Pn+kt+bA+i+e+a+t,1,r+Ii+pi+$+Pn+xA+eA+i+e+h+t,1,r+PA+_i+uc+rA+kt+bA+i+e+a+t,1,r+PA+_i+uc+rA+xA+eA+i+e+h+t,1,r+Kh+Hd+Ci+dc+kt+bA+i+e+a+t,1,r+Kh+Hd+Ci+dc+xA+eA+i+e+h+t,1,r+Bi+wi+Ic+Mr+kt+bA+i+e+a+t,1,r+Bi+wi+Ic+Mr+xA+eA+i+e+h+t,1,r+Ei+yi+Qi+Gr+kt+bA+i+e+a+t,1,r+Ei+yi+Qi+Gr+xA+eA+i+e+h+t,1,r+Yh+Vh+Ce+yt+La+Ua+i+e+a+t,1,r+Yh+Vh+Ce+yt+zt+ne+i+e+h+t,1,r+Qs+ms+X+yt+La+Ua+i+e+a+t,1,r+Qs+ms+X+yt+zt+ne+i+e+h+t,1,r+PA+mi+S+yt+La+Ua+i+e+a+t,1,r+PA+mi+S+yt+zt+ne+i+e+h+t,1,r+ki+pc+xi+ml+Dd+vd+i+e+a+t,1,r+ki+pc+xi+ml+Gg+Ng+i+e+h+t,1,s+Me+Fe+_c+N+u+i+e+a+t,1,s+Me+Fe+_c+iA+u+i+e+h+t,1,s+TA+ce+LA+N+u+i+e+a+t,1,s+TA+ce+LA+iA+u+i+e+h+t,1,ci+\\\" +lat_1=24\\\"+uy+\\\" +lat_0=24\\\"+Wc+K+u+i+e+a+t,1,r+Wh+Mi+Jd+Xh+x+u+i+e+a+t,1,r+Wh+Mi+Jd+Xh+x+u+i+e+h+t,1,s+TA+tu+LA+N+u+i+e+a+t,1,s+TA+tu+LA+iA+u+i+e+h+t,1,s+kn+Le+E+N+u+i+e+a+t,1,s+kn+Le+E+iA+u+i+e+h+t,1,s+kn+Ue+E+fs+u+i+e+a+t,1,s+kn+Ue+E+oe+u+i+e+h+t,1,s+H+hl+nt+d+u+i+e+a+t,1,s+H+hl+nt+sA+u+i+e+h+t,1,s+H+Oe+nt+N+u+i+e+a+t,1,s+H+Oe+nt+iA+u+i+e+h+t,1,s+H+Nr+it+_e+u+i+e+a+t,1,s+H+Nr+it+Rg+u+i+e+h+t,1,s+S+je+os+oA+u+i+e+a+t,1,s+S+je+os+et+u+i+e+h+t,1,s+S+Ke+LA+fs+u+i+e+a+t,1,s+S+Ke+LA+zg+u+i+e+h+t,1,s+ai+Ye+fA+pt+ql+i+e+a+t,1,s+ai+Ye+fA+Jg+Va+i+e+h+t,1,s+ai+Ve+fA+ao+ql+i+e+a+t,1,s+ai+Ve+fA+ao+Va+i+e+h+t,1,r+ji+Ki+ba+Ka+BA+nA+i+e+a+t,1,r+ji+Ki+ba+Ka+BA+Wa+i+e+h+t,1,r+yA+Yi+Ga+Ka+d+u+i+e+a+t,1,r+yA+Yi+Ga+Ka+aA+u+i+e+h+t,1,r+Vi+Wi+dA+ka+K+u+i+e+a+t,1,r+Vi+Wi+dA+ka+zA+u+i+e+h+t,1,r+Xi+Zi+S+Ie+K+br+i+e+a+t,1,r+Xi+Zi+S+Ie+zA+Gn+i+e+h+t,1,r+WA+ui+ai+yl+d+u+i+e+a+t,1,r+WA+ui+ai+yl+sA+u+i+e+h+t,1,r+ya+Qa+AA+ds+BA+nA+i+e+a+t,1,r+ya+Qa+AA+ds+BA+re+i+e+h+t,1,r+ks+xs+AA+ds+d+bA+i+e+a+t,1,r+ks+xs+AA+ds+sA+eA+i+e+h+t,1,r+oa+ra+lr+Co+Et+u+i+e+a+t,1,r+oa+ra+lr+Co+_s+u+i+e+h+t,1,r+Rf+Ff+Lf+vt+Et+u+i+e+a+t,1,r+Rf+Ff+Lf+vt+_s+u+i+e+h+t,1,s+By+ip+Tr+d+u+i+e+a+t,1,s+hA+$I+Tr+fs+u+i+e+a+t,1,s+At+Ap+Tr+oA+u+i+e+a+t,1,s+lA+Vn+E+oA+u+i+e+a+t,1,s+At+We+fA+ao+u+i+e+a+t,1,r+Xg+xf+$+rg+K+u+i+e+a+t,1,r+yA+Ae+Pt+at+aA+Wa+i+e+h+t,1,s+Bh+Xp+fA+v+u+R+Ha+h+t,1,s+wh+Vl+fA+v+u+R+Ha+h+t,1,s+ln+Jl+Bl+v+u+R+Ha+h+t,1,s+Eh+Zp+Bl+v+u+R+Ha+h+t,1,s+yh+Wl+\\\" +k=1\\\"+v+u+R+Ha+h+t,1,r+Hr+te+dA+at+aA+Nc+i+e+h+t,1,r+Jr+ee+S+at+aA+va+i+e+h+t,1,r+yA+Ae+Pt+at+aA+Wa+i+e+h+t,1,r+Hr+te+dA+at+aA+Nc+i+e+h+t,1,r+Jr+ee+S+at+aA+va+i+e+h+t,1,po+Do+_p+z+u+C+a+t,1,po+Do+Tf+z+u+C+a+t,1,po+Do+fe+z+u+C+a+t,1,po+Do+\\\" +lon_0=-40\\\"+z+u+C+a+t,1,po+Do+mg+z+u+C+a+t,1,po+Do+bo+z+u+C+a+t,1,ci+\\\" +lat_1=-18\\\"+mQ+c+Er+z+u+i+e+a+t,1,ci+Bw+\\\" +lat_2=68 +lat_0=59 +lon_0=-132.5\\\"+d+bA+i+e+a+t,1,ci+Bw+\\\" +lat_2=68 +lat_0=59 +lon_0=-132.5\\\"+d+bA+i+e+a+t,1,r+\\\" +lat_1=62 +lat_2=70\\\"+c+\\\" +lon_0=-112\\\"+z+u+i+e+a+t,1,r+\\\" +lat_1=62 +lat_2=70\\\"+c+\\\" +lon_0=-112\\\"+z+u+i+e+a+t,1,r+Xg+xf+$+rg+Fg+u+i+e+h+t,1,r+bs+Ds+kr+Wo+d+u+i+e+a+t,1,r+bs+Ds+kr+Wo+sA+u+i+e+h+t,1,r+Ms+bi+kr+za+N+fc+i+e+a+t,1,r+Ms+bi+kr+za+iA+fc+i+e+h+t,1,r+Mf+Ns+Rs+tt+rd+u+i+e+a+t,1,r+Mf+Ns+Rs+tt+Ug+u+i+e+j+t,1,r+vs+Ss+Gs+Il+tC+u+i+e+a+t,1,r+vs+Ss+Gs+Il+Lg+u+i+e+j+t,1,de+Qh+\\\" +lonc=-86\\\"+Sd+uA+Gd+Wu+Ol+Nd+i+e+a+t,1,r+Ot+bf+ba+tt+$h+u+i+e+a+t,1,r+Ot+bf+ba+tt+Kf+u+i+e+j+t,1,r+ic+ga+Ar+xl+_e+ts+i+e+a+t,1,r+la+ha+xr+Xe+_e+ts+i+e+a+t,1,r+ca+fa+gf+tf+_e+ts+i+e+a+t,1,s+Eo+Pe+he+oA+u+i+e+a+t,1,s+Eo+Pe+he+et+u+i+e+h+t,1,s+Eo+jt+he+fs+u+i+e+a+t,1,s+Eo+jt+he+oe+u+i+e+h+t,1,s+Qe+Co+it+d+u+i+e+a+t,1,s+Qe+PI+it+qt+u+i+e+a+t,1,s+ur+TI+LA+hy+u+i+e+a+t,1,r+zh+SI+Zg+ir+x+u+i+e+a+t,1,r+zh+SI+Zg+ir+hi+u+i+e+j+t,1,r+el+El+ua+fe+d+u+i+e+a+t,1,s+ge+$e+E+d+Bo+i+e+a+t,1,s+ge+$e+E+aA+Bo+i+e+h+t,1,s+ge+Ze+E+N+eC+i+e+a+t,1,s+ge+Ze+E+Nn+qg+i+e+h+t,1,s+ge+Ai+E+_e+Ag+i+e+a+t,1,s+ge+Ai+E+UA+Gc+i+e+h+t,1,s+Da+ti+fA+oA+u+i+e+a+t,1,s+Da+ti+fA+et+u+i+e+h+t,1,s+XA+bn+E+Ft+u+i+e+a+t,1,s+XA+bn+E+Ft+u+i+e+h+t,1,s+Nt+Rr+E+d+u+i+e+a+t,1,s+Nt+Rr+E+sA+u+i+e+h+t,1,s+Nt+Te+mo+Df+u+i+e+a+t,1,s+Nt+Te+mo+Df+u+i+e+h+t,1,s+Nt+He+Fr+gy+u+i+e+a+t,1,s+Nt+He+Fr+Og+u+i+e+h+t,1,s+Ga+Je+MA+qt+u+i+e+a+t,1,s+Ga+Je+MA+Pg+u+i+e+h+t,1,s+XA+bn+E+Ft+u+i+e+a+t,1,s+XA+bn+E+Ft+u+i+e+h+t,1,r+Di+vi+ZA+eu+oA+u+i+e+a+t,1,r+Di+vi+ZA+eu+et+u+i+e+h+t,1,s+Ga+qe+MA+hI+u+i+e+a+t,1,s+Ga+qe+MA+Tg+u+i+e+h+t,1,r+Fs+Ls+Zh+Xc+tp+u+i+e+a+t,1,r+Fs+Ls+Zh+Xc+k+u+i+e+h+t,1,r+st+Us+cr+Is+x+u+i+e+a+t,1,r+st+Us+cr+Is+hi+u+i+e+j+t,1,r+Os+Ps+xt+Is+x+u+i+e+a+t,1,r+Os+Ps+xt+Is+hi+u+i+e+j+t,1,r+Uf+da+wt+hs+x+u+i+e+a+t,1,r+Ia+pa+Me+hs+x+u+i+e+a+t,1,r+Si+Ts+qd+ka+x+u+i+e+a+t,1,r+Si+Ts+qd+ka+x+u+i+e+h+t,1,r+Hs+Js+Gi+ka+x+u+i+e+a+t,1,r+Hs+Js+Gi+ka+x+u+i+e+h+t,1,r+el+Qo+Ya+rA+K+u+i+e+a+t,1,r+el+Qo+Ya+rA+og+u+i+e+j+t,1,r+Tu+Be+lA+rA+be+u+i+e+a+t,1,r+Tu+Be+lA+rA+jl+u+i+e+j+t,1,r+Hu+we+H+rA+BA+u+i+e+a+t,1,r+Hu+we+H+rA+Kl+u+i+e+j+t,1,r+$g+qs+ZA+ps+x+u+i+e+a+t,1,r+$g+qs+ZA+ps+x+u+i+e+h+t,1,r+Ni+Ri+X+ps+x+u+i+e+a+t,1,r+Ni+Ri+X+ps+x+u+i+e+h+t,1,s+$i+za+ng+pt+u+i+e+a+t,1,s+$i+za+ng+sl+u+i+e+h+t,1,r+zs+vf+Fi+ce+Sf+u+i+e+a+t,1,r+zs+vf+Fi+ce+Sf+u+i+e+j+t,1,r+_a+Ca+hA+fe+x+u+i+e+a+t,1,r+_a+Ca+hA+fe+x+u+i+e+h+t,1,r+Of+Ba+As+vA+x+u+i+e+a+t,1,r+Of+Ba+As+vA+x+u+i+e+h+t,1,r+js+Ac+$A+Kg+x+u+i+e+a+t,1,r+js+Ac+$A+Kg+x+u+i+e+h+t,1,r+Ws+Xs+Ee+vA+fs+va+i+e+a+t,1,r+Ws+Xs+Ee+vA+oe+va+i+e+h+t,1,ci+Pf+FI+Xf+fe+BA+Bo+i+e+a+t,1,r+Pf+FI+Xf+fe+BA+bl+i+e+a+t,1,r+Ks+tc+zd+kl+N+nA+i+e+a+t,1,r+Ks+tc+zd+kl+iA+re+i+e+h+t,1,r+Ys+Vs+Li+Ie+x+Se+i+e+a+t,1,r+Ys+Vs+Li+Ie+x+vn+i+e+h+t,1,r+Zt+$t+ye+Ie+oA+bl+i+e+a+t,1,r+Zt+$t+ye+Ie+et+of+i+e+h+t,1,r+Zs+$s+Ui+pl+x+Ag+i+e+a+t,1,r+Zs+$s+Ui+pl+x+nf+i+e+h+t,1,r+Hr+te+dA+at+d+Se+i+e+a+t,1,r+Hr+te+dA+at+pn+jI+i+e+j+t,1,r+Hr+te+dA+at+aA+Nc+i+e+h+t,1,r+yA+Ae+Pt+at+d+nA+i+e+a+t,1,r+yA+Ae+Pt+at+pn+Bd+i+e+j+t,1,r+yA+Ae+Pt+at+aA+Wa+i+e+h+t,1,r+Jr+ee+S+at+d+va+i+e+a+t,1,r+Jr+ee+S+at+pn+KI+i+e+j+t,1,r+Jr+ee+S+at+aA+va+i+e+h+t,1,s+Da+tg+Lr+d+u+i+e+a+t,1,r+Gf+Aa+$+ja+Lt+Se+i+e+a+t,1,r+Gf+Aa+$+ja+Sn+vn+i+e+h+t,1,r+WA+Oi+AA+ja+Lt+nA+i+e+a+t,1,r+WA+Oi+AA+ja+Sn+re+i+e+h+t,1,r+st+Nf+cr+ze+d+u+i+e+a+t,1,r+st+Nf+cr+ze+sA+u+i+e+h+t,1,r+ta+ea+Pi+rA+d+u+i+e+a+t,1,r+ta+ea+Pi+rA+sA+u+i+e+h+t,1,r+sc+RI+Bc+un+x+u+i+e+a+t,1,r+wa+Ea+Kd+ce+x+u+i+e+a+t,1,r+gl+ec+hA+Jt+x+u+i+e+a+t,1,r+gl+ec+hA+Jt+x+u+i+e+h+t,1,r+ia+sa+Ti+Jt+x+u+i+e+a+t,1,r+ia+sa+Ti+Jt+x+u+i+e+h+t,1,r+aa+na+Ju+Jt+x+u+i+e+a+t,1,r+aa+na+Ju+Jt+x+u+i+e+h+t,1,s+c+Jt+uA+fy+$p+i+e+a+t,1,s+Vt+ei+MA+N+u+i+e+a+t,1,s+Vt+ii+MA+K+ts+i+e+a+t,1,s+Vt+Ur+MA+x+u+i+e+a+t,1,s+Vt+si+MA+_e+ts+i+e+a+t,1,l+_f+i+e+a+t,1,l+Lu+i+e+a+t,1,l+Dp+i+e+a+t,1,l+O_+i+e+a+t,1,l+oy+i+e+a+t,1,l+H_+i+e+a+t,1,l+MI+i+e+a+t,1,l+rp+i+e+a+t,1,l+bI+i+e+a+t,1,l+P_+i+e+a+t,1,l+T_+i+e+a+t,1,l+Md+i+e+a+t,1,l+Bf+i+e+a+t,1,l+wf+i+e+a+t,1,l+Ef+i+e+a+t,1,l+Qf+i+e+a+t,1,l+qc+i+e+a+t,1,l+zc+i+e+a+t,1,l+wr+i+e+a+t,1,l+To+i+e+a+t,1,l+wo+i+e+a+t,1,s+\\\" +lat_0=-21.11666666666667 +lon_0=55.53333333333333 +k=1 +x_0=160000\\\"+Cp+_+bp+a+t,1,r+Uf+da+wt+hs+x+u+i+e+h+t,1,r+Ia+pa+Me+hs+x+u+i+e+h+t,1,s+Vt+ei+MA+Nn+u+i+e+h+t,1,s+Vt+ii+MA+zA+OA+i+e+h+t,1,s+Vt+Ur+MA+x+u+i+e+h+t,1,s+Vt+si+MA+UA+OA+i+e+h+t,1,r+Uf+da+wt+hs+x+u+i+e+h+t,1,r+Ia+pa+Me+hs+x+u+i+e+h+t,1,s+Vt+ei+MA+Nn+u+i+e+h+t,1,s+Vt+ii+MA+zA+OA+i+e+h+t,1,s+Vt+Ur+MA+x+u+i+e+h+t,1,s+Vt+si+MA+UA+OA+i+e+h+t,1,l+Md+i+e+a+t,1,l+Bf+i+e+a+t,1,l+wf+i+e+a+t,1,l+Ef+i+e+a+t,1,l+Qf+i+e+a+t,1,l+qc+i+e+a+t,1,l+zc+i+e+a+t,1,l+wr+i+e+a+t,1,l+To+i+e+a+t,1,l+wo+i+e+a+t,1,l+H_+i+e+a+t,1,l+MI+i+e+a+t,2,r+Uf+da+wt+hs+x+u+i+e+h+t,1,r+Ia+pa+Me+hs+x+u+i+e+h+t,1,s+Vt+ei+MA+Nn+u+i+e+h+t,1,s+Vt+ii+MA+zA+OA+i+e+h+t,1,s+Vt+Ur+MA+x+u+i+e+h+t,1,s+Vt+si+MA+UA+OA+i+e+h+t,1,s+ln+Jl+Bl+aA+u+i+e+h+t,1,s+ln+Jl+Bl+aA+u+i+e+h+t,1,l+mr+i+e+a+t,1,r+\\\" +lat_1=-54 +lat_2=-54.75 +lat_0=-55 +lon_0=-37\\\"+z+u+C+a+t,1,s+\\\" +lat_0=39.66825833333333 +lon_0=-8.133108333333334 +k=1\\\"+z+u+i+e+a+t,1,s+SQ+A_+\\\" +k=1\\\"+K+le+i+e+a+t,1,s+c+cy+E+d+u+i+e+a+t,1,r+\\\" +lat_1=45.91666666666666 +lat_2=43.08333333333334\\\"+c+cy+z+u+i+e+a+t,1,l+Ll+i+e+a+t,1,l+jc+i+e+a+t,1,l+On+R+N_+a+t,1,s+\\\" +lat_0=32 +lon_0=-64.75 +k=1 +x_0=550000\\\"+ts+F+e+a+t,1,s+c+zl+E+z+u+Q+a+t,1,s+c+hl+E+z+u+Q+a+t,1,s+c+ug+E+z+u+Q+a+t,2,s+c+zl+E+z+u+i+e+a+t,1,s+c+hl+E+z+u+i+e+a+t,1,s+c+ug+E+z+u+i+e+a+t,2,s+c+zl+E+z+u+i+e+a+t,1,s+c+hl+E+z+u+i+e+a+t,1,s+c+ug+E+z+u+i+e+a+t,2,s+\\\" +lat_0=-25.06855261111111 +lon_0=-130.1129671111111 +k=1 +x_0=14200 +y_0=15500\\\"+F+e+a+t,1,l+T_+T+_+q_+a+t,4,s+c+MQ+\\\" +k=1\\\"+Lt+RA+i+e+a+t,1,s+c+\\\" +lon_0=169 +k=1\\\"+Lt+RA+i+e+a+t,1,s+c+\\\" +lon_0=179 +k=1\\\"+Lt+RA+i+e+a+t,1,s+c+\\\" +lon_0=-178 +k=1\\\"+Lt+RA+i+e+a+t,2,s+c+A_+\\\" +k=1\\\"+Lt+RA+i+e+a+t,1,s+c+yn+E+d+as+i+e+a+t,1,r+\\\" +lat_1=23 +lat_2=21.7 +lat_0=22.35\\\"+ce+d+\\\" +y_0=280296.016\\\"+Q+a+t,1,r+\\\" +lat_1=21.3 +lat_2=20.13333333333333 +lat_0=20.71666666666667 +lon_0=-76.83333333333333\\\"+d+\\\" +y_0=229126.939\\\"+Q+a+t,1,r+tQ+lf+hr+\\\" +lon_0=-70\\\"+_e+u+Q+a+t,1,r+tQ+lf+hr+\\\" +lon_0=-70\\\"+_e+u+i+e+a+t,1,r+tQ+lf+hr+\\\" +lon_0=-70\\\"+_e+u+i+e+a+t,1,s+c+Ec+E+z+u+Q+a+t,1,s+c+Ec+E+z+u+i+e+a+t,1,s+c+Ec+E+z+u+i+e+a+t,10,r+mh+kh+\\\" +lat_0=50.797815\\\"+Cw+\\\" +x_0=649328 +y_0=665262\\\"+i+e+a+t,2,s+fg+t_+iC+d+hd+i+e+a+t,1,s+fg+t_+iC+d+hd+i+e+a+t,1,s+fg+t_+iC+d+hd+i+e+a+t,3,g+m+\\\" +towgs84=595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408\\\"+t,2,g+W+t,3,g+i+e+t,1,s+c+kQ+E+qt+u+i+e+a+t,1,s+c+xQ+E+qt+u+i+e+a+t,1,s+c+kQ+E+qt+u+W+a+t,1,s+c+xQ+E+qt+u+W+a+t,1,l+lc+_+hp+a+t,3,il+su+\\\" +k=1\\\"+z+u+C+a+t,1,s+c+Fl+\\\" +k=1\\\"+be+u+f+M+a+t,1,s+c+Fl+\\\" +k=1\\\"+be+u+f+HA+a+t,1,s+c+yn+\\\" +k=1\\\"+Lt+u+f+HA+a+t,1,s+c+mn+\\\" +k=1\\\"+ri+u+f+HA+a+t,1,s+c+Fl+\\\" +k=1\\\"+Lt+u+f+M+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+f+M+a+t,1,s+c+Ao+\\\" +k=1\\\"+Wg+u+f+M+a+t,1,s+c+gr+\\\" +k=1\\\"+ig+u+f+M+a+t,1,s+c+Td+\\\" +k=1\\\"+Ml+u+f+HA+a+t,3,rn+\\\" +lat_0=46\\\"+vI+dp+d+bA+f+M+a+t,1,s+c+\\\" +lon_0=11.30625 +k=1.000006 +x_0=1500025.141 +y_0=-667.282\\\"+i+e+a+t,1,s+c+\\\" +lon_0=13.55626666666667 +k=1.0000058 +x_0=1500044.695 +y_0=-667.13\\\"+i+e+a+t,1,s+c+\\\" +lon_0=15.80628452944445 +k=1.00000561024 +x_0=1500064.274 +y_0=-667.711\\\"+i+e+a+t,1,s+c+\\\" +lon_0=18.0563 +k=1.0000054 +x_0=1500083.521 +y_0=-668.8440000000001\\\"+i+e+a+t,1,s+c+\\\" +lon_0=20.30631666666667 +k=1.0000052 +x_0=1500102.765 +y_0=-670.706\\\"+i+e+a+t,1,s+c+\\\" +lon_0=22.55633333333333 +k=1.0000049 +x_0=1500121.846 +y_0=-672.557\\\"+i+e+a+t,1,r+\\\" +lat_1=-37.5 +lat_2=-44.5 +lat_0=-41 +lon_0=173\\\"+gm+\\\" +y_0=7000000\\\"+i+e+a+t,1,r+GA+NA+O+\\\" +lon_0=157\\\"+d+u+i+e+a+t,2,s+c+\\\" +lon_0=18.05787 +k=0.99999506 +x_0=100182.7406 +y_0=-6500620.1207\\\"+i+e+a+t,3,il+\\\" +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0\\\"+u+\\\" +k=1.0\\\"+a+\\\" +nadgrids=@null +wktext \\\"+t,16,s+c+DI+\\\" +k=1\\\"+So+u+i+e+a+t,1,s+c+QC+\\\" +k=1\\\"+oo+u+i+e+a+t,1,s+c+mn+\\\" +k=1\\\"+Ro+u+i+e+a+t,1,s+c+iQ+\\\" +k=1\\\"+ro+u+i+e+a+t,1,s+c+Rp+\\\" +k=1\\\"+Fo+u+i+e+a+t,1,s+c+Ko+\\\" +k=1\\\"+ag+u+i+e+a+t,1,s+c+vI+\\\" +k=1\\\"+Lo+u+i+e+a+t,1,s+c+mC+\\\" +k=1\\\"+Uo+u+i+e+a+t,1,s+c+Ao+\\\" +k=1\\\"+Oo+u+i+e+a+t,1,s+c+LI+\\\" +k=1\\\"+Po+u+i+e+a+t,1,s+c+\\\" +lon_0=29 +k=1\\\"+Ln+u+i+e+a+t,1,s+c+gr+\\\" +k=1\\\"+sr+u+i+e+a+t,1,s+c+Pd+\\\" +k=1\\\"+In+u+i+e+a+t,4,g+i+e+t,1,l+Ul+i+e+a+t,1,l+rl+i+e+a+t,1,l+Vr+i+e+a+t,1,s+ww+\\\" +lon_0=46.5 +k=0.9994\\\"+_e+u+_+P+a+t,13,g+m+KA+t,6,s+c+yn+E+d+as+m+KA+a+t,8,l+On+R+fl+a+t,22,r+\\\" +lat_1=41.25 +lat_2=42.75\\\"+Ju+pu+Dl+$_+i+e+a+t,1,r+\\\" +lat_1=42.25 +lat_2=43.75\\\"+gf+pu+Dl+\\\" +y_0=2200000\\\"+i+e+a+t,1,r+\\\" +lat_1=43.25 +lat_2=44.75\\\"+hr+pu+Dl+\\\" +y_0=3200000\\\"+i+e+a+t,1,r+\\\" +lat_1=44.25 +lat_2=45.75\\\"+Ar+pu+Dl+\\\" +y_0=4200000\\\"+i+e+a+t,1,r+\\\" +lat_1=45.25 +lat_2=46.75 +lat_0=46\\\"+pu+Dl+\\\" +y_0=5200000\\\"+i+e+a+t,1,r+cm+\\\" +lat_2=47.75\\\"+cr+pu+Dl+\\\" +y_0=6200000\\\"+i+e+a+t,1,r+\\\" +lat_1=47.25 +lat_2=48.75 +lat_0=48\\\"+pu+Dl+\\\" +y_0=7200000\\\"+i+e+a+t,1,r+\\\" +lat_1=48.25 +lat_2=49.75 +lat_0=49\\\"+pu+Dl+\\\" +y_0=8200000\\\"+i+e+a+t,1,r+\\\" +lat_1=49.25 +lat_2=50.75\\\"+AQ+pu+Dl+\\\" +y_0=9200000\\\"+i+e+a+t,18,r+\\\" +lat_1=37\\\"+ky+$a+un+z+u+i+e+a+t,1,r+\\\" +lat_1=37\\\"+ky+$a+un+z+u+i+e+a+t,1,r+\\\" +lat_1=37\\\"+ky+$a+un+z+u+i+e+a+t,6,ct+O+\\\" +lat_ts=-70\\\"+$n+\\\" +k=1\\\"+z+u+C+a+t,2,r+zh+Yo+\\\" +lat_0=49 +lon_0=-95\\\"+z+u+i+e+a+t,1,r+zh+Yo+\\\" +lat_0=49 +lon_0=-95\\\"+z+u+i+e+a+t,7,s+nQ+gr+\\\" +k=1\\\"+N+bA+R+pe+a+t,1,s+nQ+LI+\\\" +k=1\\\"+N+bA+R+pe+a+t,1,s+nQ+mC+\\\" +k=1\\\"+N+bA+R+pe+a+t,1,s+nQ+Ko+\\\" +k=1\\\"+N+bA+R+pe+a+t,2,r+hn+gn+cn+Ta+v+u+R+fl+h+t,1,r+hn+gn+cn+Ta+v+Cd+R+fl+h+t,2,il+\\\" +lon_0=100 +lat_ts=-41\\\"+z+u+C+a+t,1,ct+Do+\\\" +lat_ts=71\\\"+$n+\\\" +k=1\\\"+z+u+C+a+t,1,ct+Do+\\\" +lat_ts=75\\\"+$n+\\\" +k=1\\\"+z+u+C+a+t,1,s+c+\\\" +lon_0=55.33333333333334 +k=1\\\"+d+u+C+a+t,4,g+Ku+t,1,g+hu+t,1,g+W+t,1,g+m+t,1,g+ko+es+t,1,g+Tn+t,1,g+ws+Es+t,1,g+R+t,2,g+sf+af+t,1,g+CA+ht+t,1,g+b+t,1,g+mt+dt+t,1,g+CA+\\\" +b=6356514.996941779\\\"+t,1,g+Kt+VA+t,1,g+Cg+t,2,g+Za+Yt+t,1,g+i+t,1,g+xn+t,1,g+er+Dt+t,1,g+_+t,1,g+i+e+t,0,g+i+e+t,1,g+f+t,1,g+fm+t,1,s+c+\\\" +lon_0=28.4 +k=0.9999400000000001\\\"+N+as+i+e+a+t,1,g+\\\" +a=6376523\\\"+EI+t,1,g+tm+BI+t,1,g+aI+xo+t,1,g+F+t,1,g+F+t,1,g+\\\" +a=6378136.2 +b=6356751.516927429\\\"+t,1,g+\\\" +a=6378136.3 +b=6356751.616592146\\\"+t,1,g+yI+QI+t,2,g+um+t,1,l+dh+C+a+t,1,l+rc+C+a+t,3,g+td+Dn+t,1,g+Wn+Rn+t,1,g+B+t,1,g+Bg+Mo+t,1,g+Mn+ue+t,1,g+i+e+t,1,g+\\\" +a=6371007 +b=6371007\\\"+t,1,s+c+jo+E+d+RA+i+e+a+t,1,s+c+\\\" +lon_0=14\\\"+E+d+RA+i+e+a+t,1,s+c+\\\" +lon_0=16\\\"+E+d+RA+i+e+a+t,1,s+c+Td+E+d+RA+i+e+a+t,1,g+\\\" +a=6370997 +b=6370997\\\"+t,1,g+bQ+DQ+t,1,g+vQ+ep+t,2,s+c+QC+E+d+RA+i+e+a+t,1,s+c+iQ+E+d+RA+i+e+a+t,1,s+c+Ko+E+d+RA+i+e+a+t,1,s+c+mC+E+d+RA+i+e+a+t,1,s+c+LI+E+d+RA+i+e+a+t,1,l+Ll+T+i+e+a+t,1,l+jc+T+i+e+a+t,1,l+dh+T+i+e+a+t,8,l+Sg+T+_+y_+a+t,4,g+i+e+t,6,g+i+e+t,1,l+vp+i+e+a+t,1,l+ll+i+e+a+t,4,\\\"+proj=eqc +lat_ts=0\\\"+c+$n+z+u+C+a+t,1,\\\"+proj=eqc +lat_ts=0\\\"+c+$n+z+u+\\\" +a=6371007 +b=6371007\\\"+a+t,5,s+c+Fl+Tr+N+as+i+e+a+t,1,s+c+mg+Tr+K+as+i+e+a+t,1,s+c+\\\" +lon_0=11.75\\\"+Tr+x+as+i+e+a+t,1,s+c+yn+\\\" +k=1\\\"+_e+as+i+e+a+t,24,g+m+t,1,g+i+Xd+t,1,g+td+Dn+t,1,g+_+qA+t,1,g+m+Ct+t,3,g+R+zn+t,1,g+R+t,1,g+R+t,1,g+F+Zl+t,1,g+Kt+VA+Zr+t,1,g+b+kd+t,1,g+i+xg+t,1,g+b+Bn+t,1,g+R+Ha+t,1,g+R+t,1,g+R+t,1,g+R+t,1,g+R+fl+t,2,g+i+_C+t,1,g+b+Xr+t,1,g+b+Jo+t,1,g+Kt+VA+$r+t,1,g+Bg+Mo+sn+t,1,g+Mn+ue+It+t,1,g+f+jn+t,1,g+F+e+t,1,g+m+Cn+t,1,g+m+Ed+t,1,g+i+e+t,1,g+i+e+t,1,g+_+yd+t,1,g+_+Un+t,1,g+CA+ht+uf+t,1,g+m+wn+t,1,g+ws+Es+t,1,g+_+Qd+t,1,g+_+Y+t,1,g+_+t,1,g+_+yp+t,1,g+m+t,1,g+F+e+t,1,g+f+Oc+t,1,g+_+D_+t,1,g+F+e+t,1,g+i+e+t,1,g+aI+xo+Lc+t,1,g+R+B_+t,1,g+i+e+t,1,g+i+e+t,2,g+i+e+t,1,g+aI+xo+t,1,g+b+Wf+t,1,g+i+e+t,2,g+f+HA+t,1,g+f+M+t,1,g+i+e+t,1,g+_+Sl+t,1,g+_+u_+t,1,g+_+d_+t,1,g+_+v_+t,4,g+Ku+Qt+t,1,g+i+e+t,1,g+i+e+t,1,g+f+t,1,g+_+AI+t,1,g+CA+ht+mI+t,1,g+_+Rc+t,1,g+_+\\\" +towgs84=105,326,-102.5,0,0,0.814,-0.6\\\"+t,1,g+_+\\\" +towgs84=-45,417,-3.5,0,0,0.814,-0.6\\\"+t,1,g+b+t,1,g+b+t,1,g+_+t,1,g+f+o+t,1,g+b+lo+t,1,g+W+q+t,1,g+W+Wt+t,1,g+_+Ge+t,1,g+f+Pc+t,1,g+CA+ht+t,1,g+_+cs+t,1,g+_+Cs+t,1,g+mt+dt+Qr+t,1,g+b+rs+t,1,g+m+De+t,1,g+b+vl+t,1,g+CA+ht+I_+t,1,g+f+w+t,1,g+_+t,1,g+R+N_+t,1,s+c+hg+uA+L+u+i+e+h+t,0,s+c+hg+uA+L+u+i+e+h+t,1,g+_+ls+t,1,g+m+\\\" +towgs84=-384,664,-48,0,0,0,0\\\"+t,1,g+b+tn+t,1,g+_+Tt+t,1,g+mt+dt+YA+t,1,g+CA+ht+En+t,1,g+_+y_+t,1,g+_+an+t,2,g+CA+ht+Yn+t,2,g+xn+ho+t,1,g+_+P+t,1,g+_+\\\" +towgs84=-83.11,-97.38,-117.22,0.00569291,-0.0446976,0.0442851,0.1218\\\"+t,1,g+b+Tc+t,4,g+_+hp+t,1,g+um+kI+t,1,g+er+Dt+jA+t,1,g+Kt+VA+Al+t,1,g+Kt+VA+Hc+t,1,g+yI+QI+t,1,g+R+Q_+t,1,g+Wn+Rn+t,1,g+Kt+VA+z_+t,1,g+Za+Yt+_t+t,1,g+b+iI+t,1,g+_+uo+t,1,g+_+EA+t,1,g+_+t,1,g+b+R_+t,1,g+b+\\\" +towgs84=-90,40,88,0,0,0,0\\\"+t,1,g+CA+ht+t,1,g+R+Ja+t,1,g+_+Vf+t,1,g+_+\\\" +towgs84=-333,-222,114,0,0,0,0\\\"+t,1,g+b+\\\" +towgs84=41,-220,-134,0,0,0,0\\\"+t,1,g+m+go+t,1,g+i+e+t,1,g+_+$d+t,2,g+CA+ht+$o+t,1,g+m+j_+t,1,g+b+nn+t,2,g+_+ae+t,1,g+CA+ht+Jc+t,1,g+Q+t,2,g+i+e+t,1,g+b+oi+t,1,g+_+F_+t,1,g+_+y+t,1,g+ko+es+mA+t,1,g+_+Yr+t,1,g+CA+ht+Gt+t,1,g+fm+t,1,g+Ku+Mg+t,1,g+Ku+t,1,g+Ku+t,1,g+m+t,1,g+sf+af+gi+t,1,g+CA+ht+m_+t,1,g+i+e+t,1,g+f+n+t,1,g+_+Ud+t,1,g+xn+t,2,g+_+t,1,g+m+Fa+t,3,g+_+df+t,1,g+Tn+Ht+t,2,g+m+t,2,g+_+Jn+t,1,g+Cg+qa+t,1,g+hu+Qt+t,1,g+hu+Qt+t,1,g+m+G+t,1,g+ws+Es+Kr+t,1,g+xn+t,1,g+CA+ht+Or+t,2,g+m+t,1,g+b+DA+t,1,g+m+t,1,g+_+\\\" +towgs84=-155,171,37,0,0,0,0\\\"+t,1,g+CA+ht+t,1,g+_+qn+t,1,g+m+Z+t,1,g+_+en+t,1,g+m+tA+t,1,g+CA+ht+If+t,1,g+_+Od+t,2,g+F+Yg+t,1,g+i+gp+t,3,g+B+I+t,2,g+B+p+t,2,g+C+t,64,ve+\\\" +lat_0=2.042583333333333 +lon_0=103.5627583333333\\\"+z+u+Za+Yt+_t+a+t,1,ve+\\\" +lat_0=2.712283333333334 +lon_0=101.9411666666667 +x_0=-242.005 +y_0=-948.547\\\"+Za+Yt+_t+a+t,1,ve+\\\" +lat_0=3.710972222222222 +lon_0=102.4361777777778\\\"+z+u+Za+Yt+_t+a+t,1,ve+\\\" +lat_0=3.680344444444444 +lon_0=101.5082444444444 +x_0=-21759.438 +y_0=55960.906\\\"+Za+Yt+_t+a+t,1,ve+\\\" +lat_0=4.946141666666667 +lon_0=102.8952083333333\\\"+z+u+Za+Yt+_t+a+t,1,ve+\\\" +lat_0=5.421325 +lon_0=100.3458694444444\\\"+z+u+Za+Yt+_t+a+t,1,ve+\\\" +lat_0=5.965147222222223 +lon_0=100.6375944444444\\\"+z+u+Za+Yt+_t+a+t,1,ve+\\\" +lat_0=4.859380555555555 +lon_0=100.8167666666667\\\"+z+\\\" +y_0=133453.669\\\"+Za+Yt+_t+a+t,1,ve+\\\" +lat_0=5.893922222222222 +lon_0=102.1772916666667\\\"+z+u+Za+Yt+_t+a+t,1,s+c+hg+uA+L+u+Q+h+t,1,s+c+Tl+uA+L+u+Q+h+t,1,s+c+Hl+uA+L+u+Q+h+t,1,s+c+cg+uA+L+u+Q+h+t,1,s+c+Jp+uA+L+u+Q+h+t,1,s+c+\\\" +lon_0=-159\\\"+uA+L+u+Q+h+t,0,s+c+\\\" +lon_0=-159\\\"+uA+L+u+Q+h+t,1,s+c+py+uA+L+u+Q+h+t,1,s+c+fI+uA+L+u+Q+h+t,1,s+c+\\\" +lon_0=-141\\\"+uA+L+u+Q+h+t,1,s+c+_y+uA+L+u+Q+h+t,1,s+c+xy+uA+L+u+Q+h+t,1,s+c+\\\" +lon_0=-123\\\"+uA+L+u+Q+h+t,1,s+c+ug+uA+L+u+Q+h+t,1,s+c+zl+uA+L+u+Q+h+t,1,s+c+\\\" +lon_0=-105\\\"+uA+L+u+Q+h+t,1,s+\\\" +lat_0=13.5 +lon_0=144.75 +k=1\\\"+pt+Vo+i+e+a+t,1,r+\\\" +lat_1=-6.5 +lat_2=-11.5\\\"+nQ+mC+d+bA+R+pe+a+t,2,s+c+mn+\\\" +k=1\\\"+Xo+u+f+HA+a+t,1,s+c+GC+uA+L+u+Q+h+t,1,s+c+jg+uA+L+u+Q+h+t,1,s+c+Tl+uA+L+u+i+e+h+t,1,s+c+Hl+uA+L+u+i+e+h+t,1,s+c+cg+uA+L+u+i+e+h+t,1,s+c+Jp+uA+L+u+i+e+h+t,1,s+c+\\\" +lon_0=-159\\\"+uA+L+u+i+e+h+t,1,s+c+py+uA+L+u+i+e+h+t,1,s+c+fI+uA+L+u+i+e+h+t,1,s+c+\\\" +lon_0=-141\\\"+uA+L+u+i+e+h+t,1,s+c+_y+uA+L+u+i+e+h+t,1,s+c+xy+uA+L+u+i+e+h+t,1,s+c+\\\" +lon_0=-123\\\"+uA+L+u+i+e+h+t,1,s+c+ug+uA+L+u+i+e+h+t,1,s+c+zl+uA+L+u+i+e+h+t,1,s+c+\\\" +lon_0=-105\\\"+uA+L+u+i+e+h+t,1,s+c+Ko+\\\" +k=1\\\"+Vg+u+f+HA+a+t,3,r+hn+gn+cn+Ta+N+Vo+i+e+a+t,1,s+c+GC+uA+L+u+i+e+h+t,1,s+c+jg+uA+L+u+i+e+h+t,16,r+Ni+Ri+X+ps+k+u+Q+h+t,1,r+Di+vi+Vt+eu+k+Cd+Q+h+t,1,r+_a+Ca+hA+fe+x+u+i+e+h+t,5,r+\\\" +lat_1=-18\\\"+mQ+\\\" +lat_0=-27\\\"+Er+z+u+C+a+t,1,g+i+e+t,4,l+Ho+i+e+a+t,3,g+i+e+t,1,l+rl+T+i+e+a+t,4,g+_+Ru+t,8,g+i+e+t,1,l+Bf+i+e+a+t,1,l+wf+i+e+a+t,1,l+Ef+i+e+a+t,1,l+Qf+i+e+a+t,1,l+qc+i+e+a+t,1,l+zc+i+e+a+t,1,g+i+t,1,s+c+to+\\\" +k=1\\\"+no+u+i+a+t,1,s+c+eo+\\\" +k=1\\\"+Fn+u+i+a+t,1,s+c+Io+\\\" +k=1\\\"+Go+u+i+a+t,1,s+c+io+\\\" +k=1\\\"+No+u+i+a+t,1,s+c+so+\\\" +k=1\\\"+Dr+u+i+a+t,1,s+c+ss+\\\" +k=1\\\"+vo+u+i+a+t,1,s+c+Oa+\\\" +k=1\\\"+So+u+i+a+t,1,s+c+xa+\\\" +k=1\\\"+oo+u+i+a+t,1,s+c+Sa+\\\" +k=1\\\"+Ro+u+i+a+t,1,s+c+Bs+\\\" +k=1\\\"+ro+u+i+a+t,1,s+c+Ma+\\\" +k=1\\\"+Fo+u+i+a+t,1,s+c+to+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+to+\\\" +k=1\\\"+Lo+u+i+a+t,1,s+c+Qg+\\\" +k=1\\\"+Uo+u+i+a+t,1,s+c+eo+\\\" +k=1\\\"+Oo+u+i+a+t,1,s+c+hf+\\\" +k=1\\\"+Po+u+i+a+t,1,s+c+Io+\\\" +k=1\\\"+Ln+u+i+a+t,1,s+c+bo+\\\" +k=1\\\"+sr+u+i+a+t,1,s+c+io+\\\" +k=1\\\"+In+u+i+a+t,1,s+c+cc+\\\" +k=1\\\"+ar+u+i+a+t,1,s+c+so+\\\" +k=1\\\"+vr+u+i+a+t,1,s+c+_l+\\\" +k=1\\\"+yc+u+i+a+t,1,s+c+ss+\\\" +k=1\\\"+Qc+u+i+a+t,1,s+c+lg+\\\" +k=1\\\"+mc+u+i+a+t,1,s+c+Oa+\\\" +k=1\\\"+kc+u+i+a+t,1,s+c+yr+\\\" +k=1\\\"+xc+u+i+a+t,1,s+c+xa+\\\" +k=1\\\"+Mc+u+i+a+t,1,s+c+Pl+\\\" +k=1\\\"+bc+u+i+a+t,1,s+c+Sa+\\\" +k=1\\\"+Dc+u+i+a+t,1,s+c+Cl+\\\" +k=1\\\"+ou+u+i+a+t,1,s+c+Bs+\\\" +k=1\\\"+vc+u+i+a+t,1,s+c+Er+\\\" +k=1\\\"+ru+u+i+a+t,1,s+c+Ma+\\\" +k=1\\\"+Sc+u+i+a+t,1,s+c+to+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Qg+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+hf+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+bo+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+cc+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+_l+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+lg+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+yr+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Pl+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Cl+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Er+\\\" +k=1\\\"+d+u+i+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+i+a+t,1,g+f+t,3,g+i+e+t,1,l+On+i+e+a+t,9,s+c+to+\\\" +k=1\\\"+no+u+f+a+t,1,s+c+eo+\\\" +k=1\\\"+Fn+u+f+a+t,1,s+c+Io+\\\" +k=1\\\"+Go+u+f+a+t,1,s+c+io+\\\" +k=1\\\"+No+u+f+a+t,1,s+c+so+\\\" +k=1\\\"+Dr+u+f+a+t,1,s+c+ss+\\\" +k=1\\\"+vo+u+f+a+t,1,s+c+Oa+\\\" +k=1\\\"+So+u+f+a+t,1,s+c+xa+\\\" +k=1\\\"+oo+u+f+a+t,1,s+c+Sa+\\\" +k=1\\\"+Ro+u+f+a+t,1,s+c+Bs+\\\" +k=1\\\"+ro+u+f+a+t,1,s+c+Ma+\\\" +k=1\\\"+Fo+u+f+a+t,1,s+c+to+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+f+a+t,11,g+b+t,1,g+b+k_+t,1,g+b+x_+t,1,g+b+M_+t,1,g+b+b_+t,1,g+b+pC+t,1,g+b+f_+t,1,g+b+Id+t,1,g+R+t,1,g+R+t,1,g+JA+D+t,1,g+_+dl+t,1,g+i+e+t,1,g+m+_o+t,1,g+_+Gl+t,1,g+_+Qp+t,1,g+_+p_+t,1,g+i+e+t,1,g+W+FA+t,1,g+i+e+t,1,g+b+\\\" +towgs84=-106,-129,165,0,0,0,0\\\"+t,1,g+_+__+t,1,g+_+mp+t,1,g+_+Fc+t,1,g+i+e+t,1,g+_+S_+t,1,g+_+bp+t,1,g+i+e+t,1,g+_+G_+t,1,g+_+Eg+t,1,g+_+CC+t,2,g+_+kp+t,1,g+_+Fd+t,3,g+_+\\\" +towgs84=365,194,166,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=325,154,172,0,0,0,0\\\"+t,1,g+R+J_+t,1,g+_+xp+t,2,g+_+ul+t,1,g+_+C_+t,1,g+_+gh+t,1,g+_+Kn+t,2,g+_+Mp+t,1,s+c+Fl+uA+ar+u+i+e+a+t,5,s+c+to+\\\" +k=1\\\"+Lo+u+f+a+t,1,s+c+Qg+\\\" +k=1\\\"+Uo+u+f+a+t,1,s+c+eo+\\\" +k=1\\\"+Oo+u+f+a+t,1,s+c+hf+\\\" +k=1\\\"+Po+u+f+a+t,1,s+c+Io+\\\" +k=1\\\"+Ln+u+f+a+t,1,g+\\\" +a=6377019.27 +b=6355762.5391 +towgs84=-28,199,5,0,0,0,0\\\"+t,1,g+_+cl+t,1,g+i+e+t,1,g+_+Nl+t,1,g+i+e+t,1,g+_+Zd+t,1,g+_+Nu+t,1,g+_+pd+t,1,g+_+Zu+t,1,g+m+$u+t,1,g+F+e+t,1,g+_+\\\" +towgs84=-86,-98,-119,0,0,0,0\\\"+t,1,g+i+e+t,1,g+F+e+t,1,g+CA+ht+t,1,g+_+L_+t,1,g+_+pf+t,1,g+i+e+t,1,g+R+\\\" +towgs84=-100,-248,259,0,0,0,0\\\"+t,1,g+f+t,1,g+f+t,1,g+f+\\\" +towgs84=44.585,-131.212,-39.544,0,0,0,0\\\"+t,1,g+b+\\\" +towgs84=-80.01,253.26,291.19,0,0,0,0\\\"+t,1,g+b+\\\" +towgs84=124.5,-63.5,-281,0,0,0,0\\\"+t,2,g+Kt+VA+xI+t,1,g+R+Bt+t,1,g+_+\\\" +towgs84=-133,-321,50,0,0,0,0\\\"+t,2,g+i+e+t,1,g+i+Rt+t,1,g+_+lh+t,1,g+_+wg+t,1,g+_+fh+t,1,g+_+uh+t,1,g+_+Ld+t,1,g+F+w_+t,1,g+F+e+t,1,g+R+pe+t,1,g+b+t,1,g+b+t,1,g+_+E_+t,1,g+b+tI+t,1,g+b+t,1,g+b+An+t,1,g+i+e+t,1,g+b+t,1,g+_+t,1,g+_+t,1,g+xn+eI+t,1,g+_+\\\" +towgs84=114,-116,-333,0,0,0,0\\\"+t,1,g+W+\\\" +towgs84=-491,-22,435,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=145,75,-272,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=-320,550,-494,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=124,-234,-25,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=-205,107,53,0,0,0,0\\\"+t,1,g+b+\\\" +towgs84=-79,-129,145,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=-127,-769,472,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=-104,-129,239,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=298,-304,-375,0,0,0,0\\\"+t,1,g+R+\\\" +towgs84=-2,151,181,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=230,-199,-752,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=211,147,111,0,0,0,0\\\"+t,1,g+B+I+t,1,g+_+Pr+t,1,g+_+\\\" +towgs84=-794,119,-298,0,0,0,0\\\"+t,1,g+R+gg+t,1,g+_+\\\" +towgs84=208,-435,-229,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=189,-79,-202,0,0,0,0\\\"+t,1,g+R+bg+t,1,g+_+\\\" +towgs84=403,-81,277,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=-307,-92,127,0,0,0,0\\\"+t,1,g+_+q_+t,1,g+_+\\\" +towgs84=170,42,84,0,0,0,0\\\"+t,2,g+\\\" +a=6378270 +b=6356794.343434343 +towgs84=102,52,-38,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=276,-57,149,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=-632,438,-609,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=647,1777,-1124,0,0,0,0\\\"+t,1,g+b+\\\" +towgs84=260,12,-147,0,0,0,0\\\"+t,1,g+i+e+t,1,g+ws+Es+t,1,g+_+\\\" +towgs84=-156,-271,-189,0,0,0,0\\\"+t,1,g+\\\" +a=6378136 +b=6356751.361745712 +towgs84=0,0,1.5,-0,-0,0.076,0\\\"+t,1,g+_+t,1,g+i+t,1,g+b+gs+t,1,g+b+t,1,g+m+t,1,g+m+t,1,g+i+e+t,1,g+UC+jy+ff+t,1,g+i+e+t,1,g+F+md+t,1,g+Ky+wI+t,1,g+UC+jy+ff+t,1,g+_+t,1,g+_+V+t,1,g+F+e+t,1,g+F+Ra+t,1,g+F+t,1,g+F+e+t,1,g+i+e+t,1,g+fm+t,1,g+i+e+t,1,g+F+e+t,1,g+F+e+t,1,g+i+e+t,1,g+i+e+t,1,s+c+bo+\\\" +k=1\\\"+sr+u+f+a+t,1,s+c+io+\\\" +k=1\\\"+In+u+f+a+t,1,s+c+cc+\\\" +k=1\\\"+ar+u+f+a+t,1,s+c+so+\\\" +k=1\\\"+vr+u+f+a+t,1,s+c+_l+\\\" +k=1\\\"+yc+u+f+a+t,1,s+c+ss+\\\" +k=1\\\"+Qc+u+f+a+t,1,s+c+lg+\\\" +k=1\\\"+mc+u+f+a+t,1,s+c+Oa+\\\" +k=1\\\"+kc+u+f+a+t,1,s+c+yr+\\\" +k=1\\\"+xc+u+f+a+t,1,s+c+xa+\\\" +k=1\\\"+Mc+u+f+a+t,1,s+c+Pl+\\\" +k=1\\\"+bc+u+f+a+t,1,s+c+Sa+\\\" +k=1\\\"+Dc+u+f+a+t,1,s+c+Cl+\\\" +k=1\\\"+ou+u+f+a+t,1,s+c+Bs+\\\" +k=1\\\"+vc+u+f+a+t,1,s+c+Er+\\\" +k=1\\\"+ru+u+f+a+t,1,s+c+Ma+\\\" +k=1\\\"+Sc+u+f+a+t,1,s+c+to+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Qg+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+hf+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+bo+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+cc+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+_l+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+lg+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+yr+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Pl+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Cl+\\\" +k=1\\\"+d+u+f+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+f+a+t,1,g+m+Cn+\\\" +pm=bern\\\"+t,1,g+_+ls+\\\" +pm=bogota\\\"+t,1,g+_+cs+GQ+t,1,g+m+go+Yu+t,1,g+m+KA+yg+t,1,g+_+ae+\\\" +pm=rome\\\"+t,1,g+CA+ht+Gt+kg+t,1,g+m+Yu+t,1,g+_+\\\" +pm=brussels\\\"+t,1,g+_+Jn+kg+t,1,g+CA+ht+Or+kg+t,1,s+c+Er+\\\" +k=1\\\"+d+u+f+a+t,0,s+c+Er+\\\" +k=1\\\"+d+u+f+a+t,1,g+m+De+Yu+t,1,g+m+\\\" +pm=stockholm\\\"+t,1,g+m+\\\" +pm=athens\\\"+t,1,g+CA+ht+En+kg+t,1,g+ko+es+mA+Gp+t,1,g+m+wn+yg+t,2,g+m+_o+Yu+t,1,g+CA+ht+kg+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+f+a+t,1,g+_+t,1,g+_+t,2,r+\\\" +lat_1=15 +lat_2=16.66666666666667 +lat_0=15.83333333333333 +lon_0=-24 +x_0=161587.83 +y_0=128511.202\\\"+C+a+t,13,r+Ew+yw+kC+dy+z+u+i+e+a+t,62,g+\\\" +a=6376523\\\"+EI+_Q+t,2,g+tm+BI+\\\" +pm=madrid\\\"+t,1,g+m+$u+GQ+t,109,g+i+e+t,1,l+Cf+i+e+a+t,1,l+_u+i+e+a+t,1,l+ll+i+e+a+t,2,s+wt+TC+\\\" +k=1\\\"+z+u+_+cs+a+t,23,ct+Do+rI+$n+XI+kt+Se+C+a+t,1,ct+O+\\\" +lat_ts=-90\\\"+$n+XI+kt+Se+C+a+t,6,l+dh+i+e+a+t,21,ci+jp+Qo+oQ+$f+z+u+Q+a+t,1,ci+jp+Qo+oQ+$f+z+u+i+e+a+t,1,ci+jp+Qo+oQ+$f+z+u+i+e+a+t,1,ci+jp+Qo+oQ+$f+z+u+i+e+a+t,33,s+ma+\\\" +lon_0=5.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=6.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=7.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=8.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=9.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+dy+\\\" +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=11.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=12.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=13.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=14.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=15.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+cy+\\\" +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=17.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=18.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=19.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=20.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=21.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=22.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=23.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=24.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=25.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=26.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=27.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=28.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=29.5 +k=1\\\"+pt+nA+i+e+a+t,1,s+ma+\\\" +lon_0=30.5 +k=1\\\"+pt+nA+i+e+a+t,2,g+m+t,35,s+Me+Zc+\\\" +k=1\\\"+N+bA+m+a+t,1,s+Me+fp+\\\" +k=1\\\"+N+\\\" +y_0=550000\\\"+m+a+t,1,s+Me+up+\\\" +k=1\\\"+N+bA+m+a+t,1,s+Me+fp+\\\" +k=1\\\"+N+bA+m+a+t,1,s+Me+Bs+\\\" +k=1\\\"+N+bA+m+a+t,1,s+Me+Zc+\\\" +k=1\\\"+N+bA+m+a+t,1,s+Me+\\\" +lon_0=125.0028902777778 +k=1\\\"+N+bA+m+a+t,1,s+Me+Qw+\\\" +k=1\\\"+N+bA+m+a+t,1,s+Me+Qw+\\\" +k=1\\\"+N+\\\" +y_0=550000\\\"+m+a+t,1,s+Me+\\\" +lon_0=129.0028902777778 +k=1\\\"+N+bA+m+a+t,1,s+Me+\\\" +lon_0=131.0028902777778 +k=1\\\"+N+bA+m+a+t,1,s+Me+od+uA+Et+Se+m+a+t,1,s+Me+od+uA+Et+Se+i+e+a+t,1,s+Me+up+\\\" +k=1\\\"+N+bA+i+e+a+t,1,s+Me+fp+\\\" +k=1\\\"+N+bA+i+e+a+t,1,s+Me+fp+\\\" +k=1\\\"+N+\\\" +y_0=550000\\\"+i+e+a+t,1,s+Me+Bs+\\\" +k=1\\\"+N+bA+i+e+a+t,1,s+Me+Zc+\\\" +k=1\\\"+N+bA+i+e+a+t,1,s+Me+up+\\\" +k=1\\\"+N+lI+i+e+a+t,1,s+Me+fp+\\\" +k=1\\\"+N+lI+i+e+a+t,1,s+Me+Bs+\\\" +k=1\\\"+N+lI+i+e+a+t,1,s+Me+Zc+\\\" +k=1\\\"+N+lI+i+e+a+t,33,lp+Up+\\\" +lon_0=42.5\\\"+ph+E+z+u+m+wn+yg+a+t,2,s+c+jo+uA+d+bA+C+a+t,5,g+m+Dg+t,1,g+m+Dg+yg+t,4,g+Kt+VA+ch+t,1,s+\\\" +lat_0=7.000480277777778 +lon_0=80.77171111111112 +k=0.9999238418\\\"+N+Vo+Kt+VA+z_+a+t,1,s+\\\" +lat_0=7.000471527777778 +lon_0=80.77171308333334 +k=0.9999238418\\\"+d+bA+Kt+VA+ch+a+t,8,r+Ew+yw+kC+dy+z+u+i+e+a+t,3,g+i+t,1,de+sI+aQ+Qm+ad+z+u+Ol+Ir+i+a+t,5,g+i+e+t,1,s+c+Ao+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+gr+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+zo+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+Ou+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+jh+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+Pu+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+c+tl+\\\" +k=1\\\"+d+u+i+e+a+t,5,g+i+e+t,2,s+c+bo+\\\" +k=1\\\"+qt+u+i+e+a+t,3,s+c+Ao+\\\" +k=1\\\"+Wg+u+i+e+a+t,1,s+c+gr+\\\" +k=1\\\"+ig+u+i+e+a+t,1,s+c+zo+\\\" +k=1\\\"+Ql+u+i+e+a+t,1,s+c+Ou+\\\" +k=1\\\"+sg+u+i+e+a+t,1,s+c+jh+\\\" +k=1\\\"+no+u+i+e+a+t,1,s+c+Pu+\\\" +k=1\\\"+Fn+u+i+e+a+t,1,s+c+tl+\\\" +k=1\\\"+Go+u+i+e+a+t,17,s+c+\\\" +lon_0=90.73333333333333 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=89.55 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+mw+\\\" +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=90.03333333333333 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=90.15000000000001 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=91.13333333333334 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=91.23333333333333 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=89.34999999999999 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=91.34999999999999 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+mw+\\\" +k=1\\\"+qt+fi+i+e+a+t,1,s+c+kw+\\\" +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=89.06666666666666 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=90.26666666666667 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=89.55 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=91.75 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=90.5 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=90.16666666666667 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=90.11666666666666 +k=1\\\"+qt+fi+i+e+a+t,1,s+c+kw+\\\" +k=1\\\"+qt+fi+i+e+a+t,1,s+c+\\\" +lon_0=90.86666666666666 +k=1\\\"+qt+fi+i+e+a+t,5,s+c+\\\" +lon_0=-7 +k=0.999997\\\"+N+\\\" +y_0=-6000000\\\"+i+e+a+t,4,r+Iy+\\\" +lat_2=54.5\\\"+c+Wc+Et+u+i+e+a+t,1,r+Iy+\\\" +lat_2=54.5\\\"+c+Wc+Et+u+i+e+a+t,3,g+i+e+t,1,r+\\\" +lat_1=64.25 +lat_2=65.75 +lat_0=65 +lon_0=-19\\\"+Dl+yo+i+e+a+t,4,il+Mu+wQ+ld+gI+m+_o+Yu+a+t,1,il+Mu+wQ+ld+gI+m+De+Yu+a+t,1,il+Mu+wQ+ld+gI+m+go+Yu+a+t,6,l+Cf+T+_+Cs+a+t,3,g+i+e+t,3,s+O+SC+\\\" +k=1\\\"+BA+u+i+e+a+t,1,s+O+jg+\\\" +k=1\\\"+be+u+i+e+a+t,1,s+O+ed+\\\" +k=1\\\"+Lt+u+i+e+a+t,1,s+O+nI+\\\" +k=1\\\"+ri+u+i+e+a+t,1,s+O+NC+\\\" +k=1\\\"+ys+u+i+e+a+t,1,s+O+NQ+\\\" +k=1\\\"+Ml+u+i+e+a+t,1,s+O+ef+\\\" +k=1\\\"+Xo+u+i+e+a+t,5,g+i+e+t,1,l+On+T+i+e+a+t,1,l+wo+T+i+e+a+t,1,l+Ho+T+i+e+a+t,3,g+i+e+t,1,l+wo+T+i+e+a+t,1,l+To+T+i+e+a+t,3,g+F+e+t,2,s+c+Wc+E+d+u+F+e+a+t,4,g+i+e+t,2,g+i+e+t,8,g+F+e+t,1,l+Ho+T+F+e+a+t,1,l+mr+T+F+e+a+t,4,l+To+T+i+e+a+t,2,l+wo+T+i+e+a+t,4,g+i+e+t,3,l+_u+T+i+e+a+t,55,g+R+Ut+t,5,r+\\\" +lat_1=10.46666666666667 +lat_0=10.46666666666667 +lon_0=-84.33333333333333 +k_0=0.99995696\\\"+d+\\\" +y_0=271820.522\\\"+R+Ut+a+t,1,r+\\\" +lat_1=9 +lat_0=9\\\"+HC+\\\" +k_0=0.99995696\\\"+d+\\\" +y_0=327987.436\\\"+R+Ut+a+t,2,r+\\\" +lat_1=14.9 +lat_0=14.9\\\"+jt+\\\" +k_0=0.99989906\\\"+d+\\\" +y_0=325992.681\\\"+R+Ut+a+t,1,r+\\\" +lat_1=13.78333333333333 +lat_0=13.78333333333333 +lon_0=-89 +k_0=0.99996704\\\"+d+\\\" +y_0=295809.184\\\"+R+Ut+a+t,1,r+\\\" +lat_1=13.86666666666667 +lat_0=13.86666666666667\\\"+sC+\\\" +k_0=0.99990314\\\"+d+\\\" +y_0=359891.816\\\"+R+Ut+a+t,1,r+\\\" +lat_1=11.73333333333333 +lat_0=11.73333333333333\\\"+sC+\\\" +k_0=0.9999222800000001\\\"+d+\\\" +y_0=288876.327\\\"+R+Ut+a+t,1,l+wr+W+FA+a+t,1,g+ws+Es+t,3,g+R+t,2,r+\\\" +lat_1=8.416666666666666 +lat_0=8.416666666666666 +lon_0=-80 +k_0=0.99989909\\\"+d+\\\" +y_0=294865.303\\\"+R+a+t,3,FC+\\\" +lat_0=8.25\\\"+ce+\\\" +x_0=914391.7962 +y_0=999404.7217154861\\\"+R+\\\" +to_meter=0.9143917962\\\"+t,7,r+GA+NA+\\\" +lat_0=-78 +lon_0=163\\\"+aC+bl+i+e+a+t,1,r+\\\" +lat_1=-73.66666666666667\\\"+QA+\\\" +lat_0=-74.5\\\"+Af+eg+va+i+e+a+t,1,r+\\\" +lat_1=-70.66666666666667 +lat_2=-72.33333333333333 +lat_0=-71.5\\\"+MQ+gm+nA+i+e+a+t,1,ct+O+\\\" +lat_ts=-90\\\"+_p+XI+eg+nA+i+e+a+t,7,g+i+e+t,1,l+On+i+e+a+t,23,lp+Up+xw+ph+E+z+u+m+wn+a+t,1,lp+Up+xw+ph+E+z+u+m+wn+a+t,4,s+SQ+A_+\\\" +k=1\\\"+hI+\\\" +y_0=650000\\\"+_+L_+a+t,1,s+SQ+A_+\\\" +k=1\\\"+hI+\\\" +y_0=650000\\\"+_+pf+a+t,1,s+c+pu+\\\" +k=1\\\"+BA+u+m+tA+a+t,3,s+c+\\\" +lon_0=11.5\\\"+uA+BA+is+C+a+t,1,g+_+t,3,g+W+ot+t,3,FC+c+ef+eg+RA+W+ot+a+t,1,l+Ho+T+W+ot+a+t,2,l+Sg+T+W+ot+a+t,1,l+mf+T+W+ot+a+t,1,l+Cf+T+W+ot+a+t,1,l+Ho+T+_+a+t,1,l+mr+T+_+a+t,1,l+Sg+T+_+a+t,1,l+mf+T+_+a+t,7,g+i+e+t,4,l+yf+T+i+e+a+t,1,l+Uu+T+i+e+a+t,1,l+ZI+T+i+e+a+t,7,r+\\\" +lat_1=16.81666666666667 +lat_0=16.81666666666667\\\"+jt+\\\" +k_0=0.99992226\\\"+d+\\\" +y_0=292209.579\\\"+R+Ut+a+t,2,g+f+gt+t,1,s+c+mn+\\\" +k=1\\\"+ri+u+f+gt+a+t,1,s+c+Ao+\\\" +k=1\\\"+ys+u+f+gt+a+t,1,s+c+zo+\\\" +k=1\\\"+Ml+u+f+gt+a+t,1,s+c+jh+\\\" +k=1\\\"+Xo+u+f+gt+a+t,1,s+c+mn+\\\" +k=1\\\"+d+u+f+gt+a+t,1,s+c+Ao+\\\" +k=1\\\"+d+u+f+gt+a+t,1,s+c+zo+\\\" +k=1\\\"+d+u+f+gt+a+t,1,s+c+jh+\\\" +k=1\\\"+d+u+f+gt+a+t,19,rn+xr+em+Op+kA+\\\" +y_0=304800\\\"+Q+j+t,1,s+\\\" +lat_0=17.06124194444444 +lon_0=-88.6318575 +k=1 +x_0=66220.02833082761 +y_0=135779.5099885299\\\"+ws+Es+Hg+t,4,g+i+e+t,3,s+c+\\\" +lon_0=11.33333333333333 +k=1\\\"+Et+u+i+e+a+t,27,s+ba+HC+\\\" +k=0.999942857\\\"+v+u+Q+h+t,1,s+ba+ds+mo+v+u+Q+h+t,1,s+ba+\\\" +lon_0=-88.75\\\"+mo+v+u+Q+h+t,2,s+c+BQ+uA+d+u+_+P+a+t,2,l+rl+T+F+Zl+a+t,2,s+c+Fl+\\\" +k=1\\\"+be+u+f+M+a+t,1,r+eQ+Yd+ju+mg+$h+HI+i+e+a+t,1,po+ju+mg+JI+qI+i+e+a+t,1,r+eQ+Yd+ju+mg+$h+HI+i+e+a+t,1,po+ju+mg+JI+qI+i+e+a+t,1,po+ju+mg+JI+qI+i+e+a+t,1,r+eQ+Yd+ju+mg+$h+HI+i+e+a+t,1,po+ju+mg+JI+qI+i+e+a+t,1,r+eQ+Yd+ju+mg+$h+HI+i+e+a+t,2,il+\\\" +lon_0=-43 +lat_ts=-2\\\"+eg+RA+i+e+a+t,2,r+\\\" +lat_1=52.66666666666666 +lat_2=54.33333333333334 +lat_0=48\\\"+mg+\\\" +x_0=815000\\\"+u+_+P+a+t,1,l+Vr+T+i+e+a+t,2,s+Da+tg+Lr+aA+u+i+e+h+t,3,s+c+pu+uA+In+u+i+e+a+t,1,s+c+yn+uA+vr+u+i+e+a+t,1,s+c+pu+uA+In+u+i+e+a+t,1,s+c+Fl+uA+ar+u+i+e+a+t,1,s+c+yn+uA+vr+u+i+e+a+t,1,s+Da+tg+Lr+aA+u+i+e+h+t,1,s+Da+tg+Lr+aA+u+i+e+h+t,4,s+c+Fl+uA+\\\" +x_0=500053 +y_0=-3999820\\\"+_+ae+a+t,4,s+c+yn+\\\" +k=1\\\"+Lt+u+f+M+a+t,1,s+c+Fl+\\\" +k=1\\\"+be+u+f+HA+a+t,1,s+c+yn+\\\" +k=1\\\"+Lt+u+f+HA+a+t,1,s+c+Fl+\\\" +k=1\\\"+Lt+u+m+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+m+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+m+a+t,1,s+c+yn+\\\" +k=1\\\"+ys+u+m+a+t,1,s+c+Fl+\\\" +k=1\\\"+Lt+u+f+M+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+f+M+a+t,1,s+c+yn+\\\" +k=1\\\"+ys+u+f+M+a+t,1,s+c+Fl+\\\" +k=1\\\"+Lt+u+f+HA+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+f+HA+a+t,1,s+c+yn+\\\" +k=1\\\"+ys+u+f+HA+a+t,1,s+c+BQ+\\\" +k=1\\\"+be+u+m+tA+a+t,1,s+c+Fl+\\\" +k=1\\\"+Lt+u+m+tA+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+m+tA+a+t,1,s+c+yn+\\\" +k=1\\\"+ys+u+m+tA+a+t,1,s+c+pu+\\\" +k=1\\\"+BA+u+m+tA+a+t,1,g+m+t,1,s+c+BQ+\\\" +k=1\\\"+be+u+m+a+t,1,s+c+Fl+\\\" +k=1\\\"+Lt+u+m+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+m+a+t,1,s+c+yn+\\\" +k=1\\\"+ys+u+m+a+t,15,l+Dp+T+i+e+a+t,125,s+\\\" +lat_0=-35.31773627777778 +lon_0=149.0092948305555 +k=1.000086\\\"+N+lI+W+q+a+t,11,l+Ul+F+e+a+t,1,l+oc+F+e+a+t,2,l+wr+T+i+e+a+t,3,s+c+jo+uA+d+RA+C+a+t,2,s+c+gr+E+d+RA+i+e+a+t,14,l+mr+T+W+ot+a+t,17,l+To+T+W+ot+a+t,1,l+wo+T+W+ot+a+t,1,l+On+T+W+ot+a+t,2,l+rl+T+_+Ru+a+t,1,FC+c+ef+eg+RA+i+e+a+t,6,g+i+t,1,s+c+Hl+uA+BA+bl+i+a+t,3,ct+Do+\\\" +lat_ts=70\\\"+bo+\\\" +k=1\\\"+z+u+vQ+ep+a+t,31,r+rQ+Yo+_r+zl+z+u+C+a+t,1,r+rQ+Yo+_r+RC+z+u+C+a+t,1,r+rQ+Yo+_r+zo+z+u+C+a+t,1,r+rQ+Yo+_r+ss+z+u+C+a+t,1,r+rQ+Yo+_r+Tl+z+u+C+a+t,1,r+fr+lQ+Cr+zl+z+u+C+a+t,1,r+fr+lQ+Cr+RC+z+u+C+a+t,1,r+fr+lQ+Cr+zo+z+u+C+a+t,1,r+fr+lQ+Cr+ss+z+u+C+a+t,1,r+fr+lQ+Cr+Tl+z+u+C+a+t,1,r+hQ+gQ+Br+zl+z+u+C+a+t,1,r+hQ+gQ+Br+RC+z+u+C+a+t,1,r+hQ+gQ+Br+zo+z+u+C+a+t,1,r+hQ+gQ+Br+ss+z+u+C+a+t,1,r+hQ+gQ+Br+Tl+z+u+C+a+t,1,ct+Do+rI+Tf+XI+kt+Se+C+a+t,1,ct+Do+rI+fe+XI+kt+Se+C+a+t,1,ct+Do+rI+\\\" +lon_0=-33\\\"+XI+kt+Se+C+a+t,1,ct+Do+rI+Td+XI+kt+Se+C+a+t,1,ct+Do+rI+ss+XI+kt+Se+C+a+t,110,r+xC+co+fo+\\\" +lon_0=-30\\\"+Lo+li+i+e+a+t,1,r+me+ke+xe+\\\" +lon_0=-52\\\"+vo+qr+i+e+a+t,1,r+me+ke+xe+\\\" +lon_0=-12\\\"+oo+qr+i+e+a+t,1,r+Mt+Yo+bt+jg+Ln+Zo+i+e+a+t,1,r+Mt+Yo+bt+RC+In+Zo+i+e+a+t,1,r+Mt+Yo+bt+\\\" +lon_0=-10\\\"+vr+Zo+i+e+a+t,1,r+fr+rt+lt+\\\" +lon_0=-64\\\"+oo+dn+i+e+a+t,1,r+fr+rt+lt+RC+ro+dn+i+e+a+t,1,r+fr+rt+lt+\\\" +lon_0=-14\\\"+ag+dn+i+e+a+t,1,r+IA+pA+_A+Vc+Dc+is+i+e+a+t,1,r+IA+pA+_A+\\\" +lon_0=-42\\\"+vc+is+i+e+a+t,1,r+IA+pA+_A+\\\" +lon_0=-22\\\"+Sc+is+i+e+a+t,1,r+ie+Zf+se+RQ+Uo+zr+i+e+a+t,1,r+ie+Zf+se+\\\" +lon_0=-38\\\"+Po+zr+i+e+a+t,1,r+ie+Zf+se+\\\" +lon_0=-20\\\"+sr+zr+i+e+a+t,1,r+\\\" +lat_1=67\\\"+Mw+bw+\\\" +lon_0=-51\\\"+Ql+rm+i+e+a+t,1,r+\\\" +lat_1=67\\\"+Mw+bw+\\\" +lon_0=-34\\\"+no+rm+i+e+a+t,1,r+Dw+vw+Sw+\\\" +lon_0=-52\\\"+oo+\\\" +y_0=8500000\\\"+i+e+a+t,1,r+Dw+vw+Sw+\\\" +lon_0=-37\\\"+ro+\\\" +y_0=8500000\\\"+i+e+a+t,1,r+me+ke+xe+\\\" +lon_0=16\\\"+ro+qr+i+e+a+t,1,r+Mt+Yo+bt+mn+Ql+Zo+i+e+a+t,1,r+fr+rt+lt+mg+Uo+dn+i+e+a+t,1,r+fr+rt+lt+cQ+Po+dn+i+e+a+t,1,r+IA+pA+_A+\\\" +lon_0=14\\\"+Ql+is+i+e+a+t,1,r+IA+pA+_A+cQ+no+is+i+e+a+t,1,r+me+ke+xe+\\\" +lon_0=53\\\"+ag+qr+C+a+t,1,r+me+ke+xe+io+Uo+qr+C+a+t,1,r+Mt+Yo+bt+\\\" +lon_0=52\\\"+no+Zo+C+a+t,1,r+Mt+Yo+bt+\\\" +lon_0=83\\\"+Go+Zo+C+a+t,1,r+Mt+Yo+bt+yr+Dr+Zo+C+a+t,1,r+Mt+Yo+bt+\\\" +lon_0=145\\\"+So+Zo+C+a+t,1,r+fr+rt+lt+\\\" +lon_0=58\\\"+sr+dn+C+a+t,1,r+fr+rt+lt+\\\" +lon_0=82\\\"+ar+dn+C+a+t,1,r+fr+rt+lt+EQ+yc+dn+C+a+t,1,r+fr+rt+lt+\\\" +lon_0=130\\\"+mc+dn+C+a+t,1,r+fr+rt+lt+yQ+xc+dn+C+a+t,1,r+fr+rt+lt+\\\" +lon_0=179\\\"+bc+dn+C+a+t,1,r+IA+pA+_A+Lp+Go+is+C+a+t,1,r+IA+pA+_A+\\\" +lon_0=74\\\"+Dr+is+C+a+t,1,r+IA+pA+_A+\\\" +lon_0=95\\\"+So+is+C+a+t,1,r+IA+pA+_A+\\\" +lon_0=116\\\"+Ro+is+C+a+t,1,r+IA+pA+_A+\\\" +lon_0=137\\\"+Fo+is+C+a+t,1,r+IA+pA+_A+\\\" +lon_0=158\\\"+Lo+is+C+a+t,1,r+IA+pA+_A+\\\" +lon_0=179\\\"+Oo+is+C+a+t,1,r+IA+pA+_A+\\\" +lon_0=-163\\\"+Ln+is+i+e+a+t,1,r+IA+pA+_A+fI+In+is+i+e+a+t,1,r+ie+Zf+se+Jp+Fn+zr+i+e+a+t,1,r+ie+Zf+se+fI+No+zr+i+e+a+t,1,r+xC+co+fo+Jt+Fo+li+i+e+a+t,1,r+me+ke+xe+zp+Fn+qr+i+e+a+t,1,r+me+ke+xe+GC+No+qr+i+e+a+t,1,r+Mt+Yo+bt+xy+Lo+Zo+i+e+a+t,1,r+Mt+Yo+bt+pl+Oo+Zo+i+e+a+t,1,r+Mt+Yo+bt+jg+Ln+Zo+i+e+a+t,1,r+fr+rt+lt+xy+Fn+dn+i+e+a+t,1,r+fr+rt+lt+\\\" +lon_0=-104\\\"+No+dn+i+e+a+t,1,r+fr+rt+lt+Xc+vo+dn+i+e+a+t,1,r+IA+pA+_A+\\\" +lon_0=-131\\\"+vr+is+i+e+a+t,1,r+IA+pA+_A+zl+Qc+is+i+e+a+t,1,r+IA+pA+_A+\\\" +lon_0=-91\\\"+kc+is+i+e+a+t,1,r+IA+pA+_A+\\\" +lon_0=-71\\\"+Mc+is+i+e+a+t,1,r+ie+Zf+se+\\\" +lon_0=-132\\\"+vo+zr+i+e+a+t,1,r+ie+Zf+se+\\\" +lon_0=-113\\\"+oo+zr+i+e+a+t,1,r+ie+Zf+se+tf+ro+zr+i+e+a+t,1,r+ie+Zf+se+GC+ag+zr+i+e+a+t,1,r+xC+co+fo+gr+Oo+li+C+a+t,1,r+xC+co+fo+bo+Ln+li+C+a+t,1,r+xC+co+fo+su+In+li+C+a+t,1,r+xC+co+fo+Tf+Ro+li+C+a+t,1,r+me+ke+xe+\\\" +lon_0=133\\\"+Po+qr+C+a+t,1,r+me+ke+xe+MQ+ig+qr+C+a+t,1,r+me+ke+xe+wc+sg+qr+C+a+t,1,r+Mt+Yo+bt+\\\" +lon_0=176\\\"+Ro+Zo+C+a+t,1,r+Mt+Yo+bt+py+Fo+Zo+C+a+t,1,r+fr+rt+lt+\\\" +lon_0=-155\\\"+sg+dn+C+a+t,1,r+IA+pA+_A+\\\" +lon_0=-5\\\"+IQ+is+i+e+a+t,3,l+wr+R+gg+j+t,1,l+wr+R+bg+j+t,6,g+i+e+t,69,s+c+mn+E+d+u+m+KA+a+t,3,g+Kt+VA+\\\" +towgs84=293.17,726.18,245.36,0,0,0,0\\\"+t,3,l+Sg+i+e+a+t,1,l+mf+i+e+a+t,96,r+hn+gn+cn+Ta+N+Vo+i+a+t,4,g+F+hh+t,1,s+c+zo+he+N+\\\" +y_0=-3500000\\\"+F+hh+a+t,4,s+c+mn+E+Xo+u+m+KA+a+t,2,g+i+t,4,g+i+t,3,g+i+t,3,l+_f+i+a+t,1,l+Lu+i+a+t,1,l+Dp+i+a+t,1,l+O_+i+a+t,1,l+oy+i+a+t,1,l+H_+i+a+t,1,l+MI+i+a+t,1,l+rp+i+a+t,1,l+bI+i+a+t,1,l+P_+i+a+t,1,l+T_+i+a+t,1,l+Md+i+a+t,1,l+Bf+i+a+t,1,l+wf+i+a+t,1,l+Ef+i+a+t,1,l+Qf+i+a+t,1,l+qc+i+a+t,1,l+zc+i+a+t,1,l+wr+i+a+t,1,l+To+i+a+t,1,l+wo+i+a+t,2,ci+jp+Qo+oQ+$f+z+u+i+a+t,1,r+IA+pA+_A+\\\" +lon_0=-163\\\"+Ln+is+i+a+t,1,r+IA+pA+_A+fI+In+is+i+a+t,1,r+ie+Zf+se+Jp+Fn+zr+i+a+t,1,r+ie+Zf+se+fI+No+zr+i+a+t,1,s+lr+nr+Ad+N+u+i+a+t,1,s+kn+jf+it+x+u+i+a+t,6,r+\\\" +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102\\\"+be+u+i+e+a+t,3,g+i+e+t,1,l+Bf+i+e+a+t,1,l+wf+i+e+a+t,1,l+Ef+i+e+a+t,1,l+Qf+i+e+a+t,1,l+qc+i+e+a+t,1,l+zc+i+e+a+t,1,r+\\\" +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102\\\"+be+u+i+e+a+t,9,s+c+mn+\\\" +k=1\\\"+oA+u+f+Xt+a+t,1,s+c+Ko+\\\" +k=1\\\"+oA+u+f+Xt+a+t,1,s+c+Ao+\\\" +k=1\\\"+oA+u+f+Xt+a+t,1,s+c+gr+\\\" +k=1\\\"+oA+u+f+Xt+a+t,1,s+c+zo+\\\" +k=1\\\"+oA+u+f+Xt+a+t,1,s+c+Ou+\\\" +k=1\\\"+oA+u+f+Xt+a+t,1,s+c+jh+\\\" +k=1\\\"+oA+u+f+Xt+a+t,4,r+\\\" +lat_1=19.33333333333333 +lat_2=19.7 +lat_0=19.33333333333333 +lon_0=-80.56666666666666 +x_0=899160 +y_0=579120\\\"+i+e+j+t,2,ci+\\\" +lat_1=55\\\"+Yd+AQ+wc+z+u+i+a+t,1,de+\\\" +lat_0=57\\\"+xh+Mh+E+eg+as+Ol+fn+i+a+t,1,s+Na+wy+E+d+u+i+a+t,1,s+Na+Ey+E+d+u+i+a+t,1,s+Na+Tf+E+d+u+i+a+t,1,s+Na+wc+E+d+u+i+a+t,1,s+Na+Jl+E+d+u+i+a+t,1,s+Na+yy+E+d+u+i+a+t,1,s+Na+Qy+E+d+u+i+a+t,1,s+Na+Hp+E+d+u+i+a+t,1,r+bh+Dh+kC+my+Et+u+i+a+t,1,s+Nt+Re+E+us+u+i+a+t,1,s+Nt+Re+E+us+u+i+j+t,1,s+Nt+Ne+E+us+u+i+a+t,1,s+Nt+Ne+E+us+u+i+j+t,1,s+Nt+Sr+it+us+u+i+a+t,1,s+Nt+Sr+it+us+u+i+j+t,1,r+Hi+Ji+$A+qo+K+u+i+a+t,1,r+Hi+Ji+$A+qo+zA+u+i+h+t,1,r+qi+Cc+zi+qo+K+br+i+a+t,1,r+qi+Cc+zi+qo+zA+Gn+i+h+t,1,ci+sQ+qp+c+Ec+z+Vd+i+a+t,1,r+di+El+X+Pn+kt+bA+i+a+t,1,r+di+El+X+Pn+xA+eA+i+h+t,1,r+Ii+pi+$+Pn+kt+bA+i+a+t,1,r+Ii+pi+$+Pn+xA+eA+i+h+t,1,r+PA+_i+uc+rA+kt+bA+i+a+t,1,r+PA+_i+uc+rA+xA+eA+i+h+t,1,r+Kh+Hd+Ci+dc+kt+bA+i+a+t,1,r+Kh+Hd+Ci+dc+xA+eA+i+h+t,1,r+Bi+wi+Ic+Mr+kt+bA+i+a+t,1,r+Bi+wi+Ic+Mr+xA+eA+i+h+t,1,r+Ei+yi+Qi+Gr+kt+bA+i+a+t,1,r+Ei+yi+Qi+Gr+xA+eA+i+h+t,1,r+Yh+Vh+Ce+yt+La+Ua+i+a+t,1,r+Yh+Vh+Ce+yt+zt+ne+i+h+t,1,r+Qs+ms+X+yt+La+Ua+i+a+t,1,r+Qs+ms+X+yt+zt+ne+i+h+t,1,r+PA+mi+S+yt+La+Ua+i+a+t,1,r+PA+mi+S+yt+zt+ne+i+h+t,1,r+ki+pc+xi+ml+Dd+vd+i+a+t,1,r+ki+pc+xi+ml+Gg+Ng+i+h+t,1,s+Me+Fe+_c+N+u+i+a+t,1,s+Me+Fe+_c+iA+u+i+h+t,1,s+TA+ce+LA+N+u+i+a+t,1,s+TA+ce+LA+iA+u+i+h+t,1,ci+\\\" +lat_1=24\\\"+uy+\\\" +lat_0=24\\\"+Wc+K+u+i+a+t,1,r+Wh+Mi+Jd+Xh+x+u+i+a+t,1,r+Wh+Mi+Jd+Xh+x+u+i+h+t,1,s+TA+tu+LA+N+u+i+a+t,1,s+TA+tu+LA+iA+u+i+h+t,1,s+kn+Le+E+N+u+i+a+t,1,s+kn+Le+E+iA+u+i+h+t,1,s+kn+Ue+E+fs+u+i+a+t,1,s+kn+Ue+E+oe+u+i+h+t,1,s+H+hl+nt+d+u+i+a+t,1,s+H+hl+nt+sA+u+i+h+t,1,s+H+Oe+nt+N+u+i+a+t,1,s+H+Oe+nt+iA+u+i+h+t,1,s+H+Nr+it+_e+u+i+a+t,1,s+H+Nr+it+Rg+u+i+h+t,1,s+S+je+os+oA+u+i+a+t,1,s+S+je+os+oA+u+i+h+t,1,s+S+Ke+LA+fs+u+i+a+t,1,s+S+Ke+LA+zg+u+i+h+t,1,s+ai+Ye+fA+pt+ql+i+a+t,1,s+ai+Ye+fA+Jg+Va+i+h+t,1,s+ai+Ve+fA+ao+ql+i+a+t,1,s+ai+Ve+fA+ao+Va+i+h+t,1,r+ji+Ki+ba+Ka+BA+nA+i+a+t,1,r+ji+Ki+ba+Ka+BA+Wa+i+h+t,1,r+yA+Yi+Ga+Ka+d+u+i+a+t,1,r+yA+Yi+Ga+Ka+aA+u+i+h+t,1,r+Vi+Wi+dA+ka+K+u+i+a+t,1,r+Vi+Wi+dA+ka+zA+u+i+h+t,1,r+Xi+Zi+S+Ie+K+br+i+a+t,1,r+Xi+Zi+S+Ie+zA+Gn+i+h+t,1,r+WA+ui+ai+yl+d+u+i+a+t,1,r+WA+ui+ai+yl+sA+u+i+h+t,1,r+ya+Qa+AA+ds+BA+nA+i+a+t,1,r+ya+Qa+AA+ds+BA+re+i+h+t,1,r+ks+xs+AA+ds+d+bA+i+a+t,1,r+ks+xs+AA+ds+sA+eA+i+h+t,1,r+oa+ra+lr+Co+Et+u+i+a+t,1,r+oa+ra+lr+Co+_s+u+i+h+t,1,r+Rf+Ff+Lf+vt+Et+u+i+a+t,1,r+Rf+Ff+Lf+vt+_s+u+i+h+t,1,s+By+ip+Tr+d+u+i+a+t,1,s+hA+$I+Tr+fs+u+i+a+t,1,s+At+Ap+Tr+oA+u+i+a+t,1,s+lA+Vn+E+oA+u+i+a+t,1,s+lA+Vn+E+oA+u+i+h+t,1,s+At+We+fA+ao+u+i+a+t,1,s+At+We+fA+ao+u+i+h+t,1,r+Xg+xf+$+rg+K+u+i+a+t,1,r+Xg+xf+$+rg+Fg+u+i+h+t,1,r+bs+Ds+kr+Wo+d+u+i+a+t,1,r+bs+Ds+kr+Wo+sA+u+i+h+t,1,r+Ms+bi+kr+za+N+fc+i+a+t,1,r+Ms+bi+kr+za+iA+fc+i+h+t,1,r+Mf+Ns+Rs+tt+rd+u+i+a+t,1,r+Mf+Ns+Rs+tt+Ug+u+i+j+t,1,r+vs+Ss+Gs+Il+tC+u+i+a+t,1,r+vs+Ss+Gs+Il+Lg+u+i+j+t,1,de+Qh+\\\" +lonc=-86\\\"+Sd+uA+Gd+Wu+Ol+Nd+i+a+t,1,r+Ot+bf+ba+tt+$h+u+i+a+t,1,r+Ot+bf+ba+tt+Kf+u+i+j+t,1,r+ic+ga+Ar+xl+_e+ts+i+a+t,1,r+ic+ga+Ar+xl+UA+OA+i+h+t,1,r+la+ha+xr+Xe+_e+ts+i+a+t,1,r+la+ha+xr+Xe+UA+OA+i+h+t,1,r+ca+fa+gf+tf+_e+ts+i+a+t,1,r+ca+fa+gf+tf+UA+OA+i+h+t,1,s+Eo+Pe+he+oA+u+i+a+t,1,s+Eo+Pe+he+oA+u+i+h+t,1,s+fg+t_+iC+d+hd+i+a+t,1,s+Eo+jt+he+fs+u+i+a+t,1,s+Eo+jt+he+oe+u+i+h+t,1,s+Qe+Co+it+d+u+i+a+t,1,s+Qe+PI+it+qt+u+i+a+t,1,s+ur+TI+LA+hy+u+i+a+t,1,r+zh+SI+Zg+ir+x+u+i+a+t,1,r+zh+SI+Zg+ir+hi+u+i+j+t,1,r+el+El+ua+fe+d+u+i+a+t,2,s+ge+$e+E+d+Bo+i+a+t,1,s+ge+$e+E+aA+Bo+i+h+t,1,s+ge+Ze+E+N+eC+i+a+t,1,s+ge+Ze+E+Nn+qg+i+h+t,1,s+ge+Ai+E+_e+Ag+i+a+t,1,s+ge+Ai+E+UA+Gc+i+h+t,1,s+Da+ti+fA+oA+u+i+a+t,1,s+Da+ti+fA+oA+u+i+h+t,1,s+XA+bn+E+Ft+u+i+a+t,1,s+XA+bn+E+Ft+u+i+h+t,1,s+Nt+Rr+E+d+u+i+a+t,1,s+Nt+Rr+E+sA+u+i+h+t,1,s+Nt+Te+mo+Df+u+i+a+t,1,s+Nt+Te+mo+Df+u+i+h+t,1,s+Nt+He+Fr+gy+u+i+a+t,1,s+Nt+He+Fr+Og+u+i+h+t,1,s+Ga+Je+MA+qt+u+i+a+t,1,s+Ga+Je+MA+Pg+u+i+h+t,1,s+XA+bn+E+Ft+u+i+a+t,1,s+XA+bn+E+Ft+u+i+h+t,1,r+Di+vi+ZA+eu+oA+u+i+a+t,1,r+Di+vi+ZA+eu+oA+u+i+h+t,1,s+Ga+qe+MA+hI+u+i+a+t,1,s+Ga+qe+MA+Tg+u+i+h+t,1,r+Fs+Ls+Zh+Xc+tp+u+i+a+t,1,r+Fs+Ls+Zh+Xc+k+u+i+h+t,1,r+st+Us+cr+Is+x+u+i+a+t,1,r+st+Us+cr+Is+hi+u+i+j+t,1,r+Os+Ps+xt+Is+x+u+i+a+t,1,r+Os+Ps+xt+Is+hi+u+i+j+t,1,r+Uf+da+wt+hs+x+u+i+a+t,1,r+Uf+da+wt+hs+x+u+i+h+t,1,r+Ia+pa+Me+hs+x+u+i+a+t,1,r+Ia+pa+Me+hs+x+u+i+h+t,1,r+Si+Ts+qd+ka+x+u+i+a+t,1,r+Si+Ts+qd+ka+x+u+i+h+t,1,r+Hs+Js+Gi+ka+x+u+i+a+t,1,r+Hs+Js+Gi+ka+x+u+i+h+t,1,r+el+Qo+Ya+rA+K+u+i+a+t,1,r+el+Qo+Ya+rA+og+u+i+j+t,1,r+Tu+Be+lA+rA+be+u+i+a+t,1,r+Tu+Be+lA+rA+jl+u+i+j+t,1,r+Hu+we+H+rA+BA+u+i+a+t,1,r+Hu+we+H+rA+Kl+u+i+j+t,1,r+$g+qs+ZA+ps+x+u+i+a+t,1,r+$g+qs+ZA+ps+x+u+i+h+t,1,r+Ni+Ri+X+ps+x+u+i+a+t,1,r+Ni+Ri+X+ps+x+u+i+h+t,1,r+hn+gn+cn+Ta+N+Vo+i+a+t,1,s+$i+za+ng+pt+u+i+a+t,1,s+$i+za+ng+sl+u+i+h+t,1,r+zs+vf+Fi+ce+Sf+u+i+a+t,1,r+zs+vf+Fi+ce+Sf+u+i+j+t,1,r+_a+Ca+hA+fe+x+u+i+a+t,1,r+_a+Ca+hA+fe+x+u+i+h+t,1,r+Of+Ba+As+vA+x+u+i+a+t,1,r+Of+Ba+As+vA+x+u+i+h+t,1,r+js+Ac+$A+Kg+x+u+i+a+t,1,r+js+Ac+$A+Kg+x+u+i+h+t,1,r+Ws+Xs+Ee+vA+fs+va+i+a+t,1,r+Ws+Xs+Ee+vA+oe+va+i+h+t,1,ci+Pf+FI+Xf+fe+BA+Bo+i+a+t,1,r+Pf+FI+Xf+fe+BA+bl+i+a+t,1,r+Ks+tc+zd+kl+N+nA+i+a+t,1,r+Ks+tc+zd+kl+iA+re+i+h+t,1,r+Ys+Vs+Li+Ie+x+Se+i+a+t,1,r+Ys+Vs+Li+Ie+x+vn+i+h+t,1,r+Zt+$t+ye+Ie+oA+bl+i+a+t,1,r+Zt+$t+ye+Ie+oA+of+i+h+t,1,r+Zs+$s+Ui+pl+x+Ag+i+a+t,1,r+Zs+$s+Ui+pl+x+nf+i+h+t,1,s+Da+tg+Lr+d+u+i+a+t,1,s+Da+tg+Lr+aA+u+i+h+t,1,r+\\\" +lat_1=37\\\"+ky+$a+un+z+u+i+a+t,1,r+Gf+Aa+$+ja+Lt+Se+i+a+t,1,r+Gf+Aa+$+ja+Sn+vn+i+h+t,1,r+WA+Oi+AA+ja+Lt+nA+i+a+t,1,r+WA+Oi+AA+ja+Sn+re+i+h+t,1,r+st+Nf+cr+ze+d+u+i+a+t,1,r+st+Nf+cr+ze+sA+u+i+h+t,1,r+ta+ea+Pi+rA+d+u+i+a+t,1,r+ta+ea+Pi+rA+sA+u+i+h+t,1,r+sc+RI+Bc+un+x+u+i+a+t,1,r+sc+RI+Bc+un+x+u+i+h+t,1,r+wa+Ea+Kd+ce+x+u+i+a+t,1,r+wa+Ea+Kd+ce+x+u+i+h+t,2,r+gl+ec+hA+Jt+x+u+i+h+t,1,r+ia+sa+Ti+Jt+x+u+i+a+t,1,r+ia+sa+Ti+Jt+x+u+i+h+t,1,r+aa+na+Ju+Jt+x+u+i+a+t,1,r+aa+na+Ju+Jt+x+u+i+h+t,1,s+c+Jt+uA+fy+$p+i+a+t,1,s+Vt+ei+MA+N+u+i+a+t,1,s+Vt+ei+MA+Nn+u+i+h+t,1,s+Vt+ii+MA+K+ts+i+a+t,1,s+Vt+ii+MA+zA+OA+i+h+t,1,s+Vt+si+MA+_e+ts+i+a+t,1,s+Vt+si+MA+UA+OA+i+h+t,1,s+Vt+Ur+MA+x+u+i+a+t,1,s+Vt+Ur+MA+x+u+i+h+t,1,r+Hr+te+dA+at+d+Se+i+a+t,1,r+yA+Ae+Pt+at+d+nA+i+a+t,1,r+Jr+ee+S+at+d+va+i+a+t,1,r+wC+lf+hr+Vn+z+u+i+e+a+t,1,ci+wC+lf+hr+Vn+z+u+i+e+a+t,1,ci+wC+lf+hr+Vn+z+u+i+e+a+t,1,r+Hr+te+dA+at+aA+Nc+i+h+t,1,r+yA+Ae+Pt+at+aA+Wa+i+h+t,1,r+Jr+ee+S+at+aA+va+i+h+t,1,s+Bh+Xp+fA+d+u+i+a+t,1,s+wh+Vl+fA+d+u+i+a+t,1,s+ln+Jl+Bl+d+u+i+a+t,1,s+Eh+Zp+Bl+d+u+i+a+t,1,s+yh+Wl+\\\" +k=1\\\"+d+u+i+a+t,1,s+ln+Jl+Bl+aA+u+i+h+t,1,l+H_+i+a+t,1,l+MI+i+a+t,1,l+O_+T+i+a+t,1,s+\\\" +lat_0=13.5 +lon_0=144.75 +k=1\\\"+pt+Vo+i+a+t,9,s+ww+\\\" +lon_0=46.5 +k=0.9994\\\"+_e+u+mt+_n+gs+a+t,22,g+i+t,1,s+zu+im+E+z+u+i+a+t,1,s+zu+Zc+E+z+u+i+a+t,1,s+$a+yu+E+z+u+i+a+t,1,s+zu+AC+E+z+u+i+a+t,1,s+$a+Qu+E+z+u+i+a+t,1,s+$a+Ip+E+z+u+i+a+t,1,s+$a+mu+E+z+u+i+a+t,1,s+$a+sm+E+z+u+i+a+t,1,s+$a+ku+E+z+u+i+a+t,1,s+Ga+xu+E+z+u+i+a+t,1,s+hr+fQ+E+z+u+i+a+t,1,s+hr+uQ+E+z+u+i+a+t,1,s+hr+dQ+E+z+u+i+a+t,1,s+tr+\\\" +lon_0=142\\\"+E+z+u+i+a+t,1,s+tr+od+E+z+u+i+a+t,1,s+tr+\\\" +lon_0=124\\\"+E+z+u+i+a+t,1,s+tr+Zc+E+z+u+i+a+t,1,s+\\\" +lat_0=20\\\"+Ip+E+z+u+i+a+t,1,s+tr+yQ+E+z+u+i+a+t,1,l+lc+i+a+t,1,l+Yc+i+a+t,1,l+Cu+i+a+t,1,l+yf+i+a+t,1,l+Uu+i+a+t,11,s+c+NC+uA+d+RA+F+e+a+t,3,g+i+e+t,1,l+Wr+i+e+a+t,1,l+Ll+i+e+a+t,1,l+jc+i+e+a+t,11,s+c+\\\" +lon_0=105.625 +k=1.000024\\\"+wl+hd+F+e+a+t,1,s+c+\\\" +lon_0=105.625 +k=1.00002514\\\"+wl+hd+i+e+a+t,1,s+c+\\\" +lon_0=96.875 +k=1\\\"+wl+\\\" +y_0=1400000\\\"+F+e+a+t,1,s+c+\\\" +lon_0=96.875 +k=0.99999387\\\"+wl+li+i+e+a+t,13,l+bd+T+i+e+a+t,1,l+kf+T+i+e+a+t,1,l+_f+T+i+e+a+t,45,g+i+t,1,s+Hf+$l+wp+au+u+i+a+t,1,s+Hf+$l+wp+jr+u+i+j+t,1,s+Hf+$l+wp+au+u+i+a+t,1,s+Hf+$l+wp+jr+u+i+j+t,1,s+Ya+sp+\\\" +k=1.0002\\\"+Au+u+i+a+t,1,s+Ya+sp+\\\" +k=1.0002\\\"+Xn+u+i+j+t,1,s+Ya+sp+\\\" +k=1.0002\\\"+Au+u+i+a+t,1,s+Ya+sp+\\\" +k=1.0002\\\"+Xn+u+i+j+t,1,r+vh+Sh+ap+ac+Au+\\\" +y_0=130000\\\"+i+a+t,1,r+vh+Sh+ap+ac+Xn+jQ+i+j+t,1,r+vh+Sh+ap+ac+Au+\\\" +y_0=130000\\\"+i+a+t,1,r+vh+Sh+ap+ac+Xn+jQ+i+j+t,1,r+Ot+lA+np+My+\\\" +x_0=120000 +y_0=60000\\\"+i+a+t,1,r+Ot+lA+np+My+KQ+Im+i+j+t,1,r+Ot+lA+np+My+\\\" +x_0=120000 +y_0=60000\\\"+i+a+t,1,r+Ot+lA+np+My+KQ+Im+i+j+t,1,s+Da+St+FQ+au+u+i+a+t,1,s+Da+St+FQ+jr+u+i+j+t,1,s+Da+St+FQ+au+u+i+a+t,1,s+Da+St+FQ+jr+u+i+j+t,1,r+Gh+xt+rA+e_+Ft+\\\" +y_0=30000\\\"+i+a+t,1,r+Gh+xt+rA+e_+rf+pm+i+j+t,1,r+Gh+xt+rA+e_+Ft+\\\" +y_0=30000\\\"+i+a+t,1,r+Gh+xt+rA+e_+rf+pm+i+j+t,1,de+Nh+LQ+UQ+\\\" +k=1\\\"+aC+pQ+Ol+OQ+i+a+t,1,de+Nh+LQ+UQ+\\\" +k=1\\\"+CQ+YQ+Ol+OQ+i+j+t,1,de+Nh+LQ+UQ+\\\" +k=1\\\"+aC+pQ+Ol+OQ+i+a+t,1,de+Nh+LQ+UQ+\\\" +k=1\\\"+CQ+YQ+Ol+OQ+i+j+t,1,s+At+St+by+wl+u+i+a+t,1,s+At+St+by+Zn+u+i+j+t,1,s+At+St+by+wl+u+i+a+t,1,s+At+St+by+Zn+u+i+j+t,1,s+Hf+Dy+PQ+Au+u+i+a+t,1,s+Hf+Dy+PQ+Xn+u+i+j+t,1,s+Hf+Dy+PQ+Au+u+i+a+t,1,s+Hf+Dy+PQ+Xn+u+i+j+t,1,s+nC+Ah+dg+wl+u+i+a+t,1,s+nC+Ah+dg+Zn+u+i+j+t,1,s+nC+Ah+dg+wl+u+i+a+t,1,s+nC+Ah+dg+Zn+u+i+j+t,1,s+Ya+St+uI+wl+u+i+a+t,1,s+Ya+St+uI+Zn+u+i+j+t,1,s+Ya+St+uI+wl+u+i+a+t,1,s+Ya+St+uI+Zn+u+i+j+t,1,s+Ar+th+TQ+\\\" +x_0=10000\\\"+u+i+a+t,1,s+Ar+th+TQ+mm+u+i+j+t,1,s+Ar+th+TQ+\\\" +x_0=10000\\\"+u+i+a+t,1,s+Ar+th+TQ+mm+u+i+j+t,1,s+Ar+Mr+HQ+au+u+i+a+t,1,s+Ar+Mr+HQ+jr+u+i+j+t,1,s+Ar+Mr+HQ+au+u+i+a+t,1,s+Ar+Mr+HQ+jr+u+i+j+t,1,s+oC+ug+\\\" +k=1.0001\\\"+Au+u+i+a+t,1,s+oC+ug+\\\" +k=1.0001\\\"+Xn+u+i+j+t,1,s+oC+ug+\\\" +k=1.0001\\\"+Au+u+i+a+t,1,s+oC+ug+\\\" +k=1.0001\\\"+Xn+u+i+j+t,1,de+gd+i_+\\\" +alpha=5 +k=1 +x_0=-300000 +y_0=-4600000\\\"+Ol+\\\" +gamma=5\\\"+i+a+t,1,de+gd+i_+\\\" +alpha=5 +k=1\\\"+VQ+Vy+Ol+\\\" +gamma=5\\\"+i+j+t,1,de+gd+i_+\\\" +alpha=5 +k=1 +x_0=-300000 +y_0=-4600000\\\"+Ol+\\\" +gamma=5\\\"+i+a+t,1,de+gd+i_+\\\" +alpha=5 +k=1\\\"+VQ+Vy+Ol+\\\" +gamma=5\\\"+i+j+t,1,s+rC+eh+Kp+\\\" +x_0=60000\\\"+u+i+a+t,1,s+rC+eh+Kp+_m+u+i+j+t,1,s+rC+eh+Kp+\\\" +x_0=60000\\\"+u+i+a+t,1,s+rC+eh+Kp+_m+u+i+j+t,1,s+Rh+or+vy+JQ+u+i+a+t,1,s+Rh+or+vy+Cm+u+i+j+t,1,s+Rh+or+vy+JQ+u+i+a+t,1,s+Rh+or+vy+Cm+u+i+j+t,1,r+gl+Sy+op+s_+pt+Cp+i+a+t,1,r+gl+Sy+op+s_+al+YI+i+j+t,1,r+gl+Sy+op+s_+pt+Cp+i+a+t,1,r+gl+Sy+op+s_+al+YI+i+j+t,1,s+Fh+ih+qQ+wl+u+i+a+t,1,s+Fh+ih+qQ+Zn+u+i+j+t,1,s+Fh+ih+qQ+wl+u+i+a+t,1,s+Fh+ih+qQ+Zn+u+i+j+t,1,s+Lh+a_+Gy+z+u+i+a+t,1,s+Lh+a_+Gy+z+u+i+j+t,1,s+Lh+a_+Gy+z+u+i+a+t,1,s+Lh+a_+Gy+z+u+i+j+t,4,r+el+Qo+Ya+rA+K+u+i+a+t,1,r+el+Qo+Ya+rA+og+u+i+j+t,2,s+c+QC+\\\" +k=1\\\"+d+u+i+e+a+t,5,s+c+jo+\\\" +k=0.9985000000000001\\\"+aC+u+i+e+a+t,1,s+c+jo+\\\" +k=1\\\"+gm+u+i+e+a+t,3,r+gl+ec+hA+Jt+x+u+i+a+t,1,r+el+El+ua+fe+aA+u+i+h+t,1,g+mt+_n+\\\" +towgs84=-24,-203,268,0,0,0,0\\\"+t,1,g+mt+_n+\\\" +towgs84=-183,-15,273,0,0,0,0\\\"+t,1,g+_+\\\" +towgs84=-235,-110,393,0,0,0,0\\\"+t,1,r+Tu+Be+lA+rA+be+u+i+a+t,1,r+Tu+Be+lA+rA+jl+u+i+j+t,1,r+Hu+we+H+rA+BA+u+i+a+t,1,r+Hu+we+H+rA+Kl+u+i+j+t,5,g+mt+_n+Fu+t,2,g+mt+_n+\\\" +towgs84=-63,176,185,0,0,0,0\\\"+t,21,l+oc+mt+_n+Fu+a+t,7,r+Yp+Ny+$a+n_+K+u+i+e+a+t,1,r+Yp+Ny+$a+n_+zA+u+i+e+h+t,1,r+Yp+Ny+$a+n_+K+u+i+a+t,1,r+Yp+Ny+$a+n_+zA+u+i+h+t,6,po+Do+$n+z+u+F+e+a+t,1,po+O+$n+z+u+F+e+a+t,1,\\\"+proj=cea\\\"+$n+\\\" +lat_ts=30\\\"+z+u+F+e+a+t,29,r+\\\" +lat_1=39 +lat_2=43\\\"+kr+QC+z+u+i+e+a+t,21,g+i+t,1,s+Bu+wu+Am+LC+zy+i+a+t,6,g+i+t,1,s+Bu+wu+Am+LC+zy+i+a+t,14,l+Ul+mt+_n+oi+a+t,1,l+rl+mt+_n+oi+a+t,1,l+Vr+mt+_n+oi+a+t,28,g+i+t,2,g+i+t,2,g+i+t,2,g+i+t,16,r+\\\" +lat_1=43.2 +lat_0=43.2 +lon_0=-95.25 +k_0=1.000052 +x_0=3505207.010414021 +y_0=2926085.852171705\\\"+i+h+t,1,r+\\\" +lat_1=43.16666666666666 +lat_0=43.16666666666666 +lon_0=-92.75 +k_0=1.000043 +x_0=3810007.62001524 +y_0=2987045.974091948\\\"+i+h+t,1,s+nc+\\\" +lon_0=-91.2 +k=1.000035 +x_0=4114808.229616459 +y_0=2529845.05969012\\\"+i+h+t,1,r+\\\" +lat_1=42.53333333333333 +lat_0=42.53333333333333 +lon_0=-94.83333333333333 +k_0=1.000045 +x_0=4419608.839217679 +y_0=2621285.242570485\\\"+i+h+t,1,r+\\\" +lat_1=42.65 +lat_0=42.65 +lon_0=-92.25 +k_0=1.000032 +x_0=4724409.448818898 +y_0=2712725.425450851\\\"+i+h+t,1,s+nc+\\\" +lon_0=-95.73333333333333 +k=1.000039 +x_0=5029210.058420117 +y_0=2011684.023368047\\\"+i+h+t,1,s+nc+\\\" +lon_0=-94.63333333333334\\\"+Kp+\\\" +x_0=5334010.668021336 +y_0=2072644.145288291\\\"+i+h+t,1,s+nc+\\\" +lon_0=-93.71666666666667 +k=1.000033 +x_0=5638811.277622555 +y_0=2133604.267208535\\\"+i+h+t,1,s+nc+\\\" +lon_0=-92.81666666666666\\\"+Jf+\\\" +x_0=5943611.887223775 +y_0=2194564.389128779\\\"+i+h+t,1,r+\\\" +lat_1=41.83333333333334 +lat_0=41.83333333333334 +lon_0=-91.66666666666667 +k_0=1.00002 +x_0=6248412.496824994 +y_0=2438404.876809754\\\"+i+h+t,1,s+nc+\\\" +lon_0=-90.53333333333333\\\"+Jf+\\\" +x_0=6553213.106426213 +y_0=2316484.632969266\\\"+i+h+t,1,r+\\\" +lat_1=40.91666666666666 +lat_0=40.91666666666666 +lon_0=-93.75 +k_0=1.000037 +x_0=6858013.716027432\\\"+Wy+i+h+t,1,s+nc+uu+nu+\\\" +x_0=7162814.325628651 +y_0=1950723.901447803\\\"+i+h+t,1,s+nc+\\\" +lon_0=-91.25 +k=1.000018 +x_0=7467614.93522987\\\"+Wy+i+h+t,3,g+i+t,1,l+Ul+T+i+a+t,1,l+rl+T+i+a+t,1,l+Vr+T+i+a+t,1,l+oc+T+i+a+t,1,l+VI+T+i+a+t,1,l+WI+T+i+a+t,1,l+Np+T+i+a+t,1,l+K_+T+i+a+t,3,g+i+t,2,g+i+t,23,s+dI+o_+wp+Ft+u+i+a+t,1,s+\\\" +lat_0=48\\\"+o_+\\\" +k=1.00019\\\"+pt+u+i+a+t,1,r+Ry+dI+zl+\\\" +k_0=1.000145\\\"+Ft+Vo+i+a+t,1,r+Ry+dI+\\\" +lon_0=-108.5\\\"+ac+N+\\\" +y_0=150000\\\"+i+a+t,1,r+Uh+Oh+yt+ac+N+ts+i+a+t,1,r+Uh+Oh+yt+\\\" +k_0=1.00009\\\"+pt+Cp+i+a+t,1,s+gd+\\\" +lon_0=-107.75 +k=1.000148\\\"+N+u+i+a+t,1,r+cm+\\\" +lat_0=46.25 +lon_0=-111.25 +k_0=1.000185\\\"+pt+ts+i+a+t,1,r+Gw+Nw+JC+\\\" +k_0=1.0001515\\\"+N+Cp+i+a+t,1,s+Rw+qC+\\\" +k=1.00024\\\"+pt+u+i+a+t,1,s+dI+o_+wp+rf+u+i+j+t,1,s+\\\" +lat_0=48\\\"+o_+\\\" +k=1.00019\\\"+al+u+i+j+t,1,r+Ry+dI+zl+\\\" +k_0=1.000145\\\"+rf+\\\" +y_0=199999.9999992\\\"+i+j+t,1,r+Ry+dI+\\\" +lon_0=-108.5\\\"+ac+Yf+\\\" +y_0=150000.00001464\\\"+i+j+t,1,r+Uh+Oh+yt+ac+Yf+Xy+i+j+t,1,r+Uh+Oh+yt+\\\" +k_0=1.00009\\\"+al+\\\" +y_0=49999.99971024\\\"+i+j+t,1,s+gd+\\\" +lon_0=-107.75 +k=1.000148\\\"+Yf+u+i+j+t,1,r+cm+\\\" +lat_0=46.25 +lon_0=-111.25 +k_0=1.000185\\\"+al+Xy+i+j+t,1,r+Gw+Nw+JC+\\\" +k_0=1.0001515\\\"+Yf+YI+i+j+t,1,s+Rw+qC+\\\" +k=1.00024\\\"+sl+u+i+h+t,3,s+cd+\\\" +lon_0=-122.45 +k=1.000007 +x_0=48000 +y_0=24000\\\"+i+a+t,1,s+cd+\\\" +lon_0=-122.45 +k=1.000007 +x_0=48000 +y_0=24000\\\"+i+h+t,1,g+i+t,3,g+F+t,3,g+F+t,3,s+Ph+Th+\\\" +k=1\\\"+CI+\\\" +y_0=126867.909\\\"+sf+af+\\\" +towgs84=-275.7224,94.7824,340.8944,-8.001,-4.42,-11.821,1\\\"+a+t,115,s+fd+r_+Ig+U+J+i+a+t,1,s+fd+r_+Ig+U+J+i+h+t,1,s+II+lu+pg+U+J+i+a+t,1,s+II+lu+pg+U+J+i+h+t,1,s+\\\" +lat_0=39\\\"+sh+_g+U+J+i+a+t,1,s+\\\" +lat_0=39\\\"+sh+_g+U+J+i+h+t,1,s+\\\" +lat_0=40.45\\\"+ud+Fy+U+J+i+a+t,1,s+\\\" +lat_0=40.45\\\"+ud+Fy+U+J+i+h+t,1,s+\\\" +lat_0=40.05\\\"+zC+qf+U+J+i+a+t,1,s+\\\" +lat_0=40.05\\\"+zC+qf+U+J+i+h+t,1,s+Ly+dd+zf+U+J+i+a+t,1,s+Ly+dd+zf+U+J+i+h+t,1,s+\\\" +lat_0=39\\\"+lC+zQ+U+J+i+a+t,1,s+\\\" +lat_0=39\\\"+lC+zQ+U+J+i+h+t,1,s+\\\" +lat_0=40.4\\\"+jC+_g+U+J+i+a+t,1,s+\\\" +lat_0=40.4\\\"+jC+_g+U+J+i+h+t,1,s+fd+KC+pI+U+J+i+a+t,1,s+fd+KC+pI+U+J+i+h+t,1,s+hC+YC+\\\" +k=1.000021\\\"+U+J+i+a+t,1,s+hC+YC+\\\" +k=1.000021\\\"+U+J+i+h+t,1,s+gC+VC+\\\" +k=1.000024\\\"+U+J+i+a+t,1,s+gC+VC+\\\" +k=1.000024\\\"+U+J+i+h+t,1,s+\\\" +lat_0=40.15\\\"+WC+\\\" +k=1.000032\\\"+U+J+i+a+t,1,s+\\\" +lat_0=40.15\\\"+WC+\\\" +k=1.000032\\\"+U+J+i+h+t,1,s+\\\" +lat_0=38.1\\\"+dd+_I+U+J+i+a+t,1,s+\\\" +lat_0=38.1\\\"+dd+_I+U+J+i+h+t,1,s+\\\" +lat_0=38.45\\\"+ah+\\\" +k=1.000018\\\"+U+J+i+a+t,1,s+\\\" +lat_0=38.45\\\"+ah+\\\" +k=1.000018\\\"+U+J+i+h+t,1,s+\\\" +lat_0=38.65\\\"+XC+Fy+U+J+i+a+t,1,s+\\\" +lat_0=38.65\\\"+XC+Fy+U+J+i+h+t,1,s+\\\" +lat_0=39.1\\\"+ZC+zf+U+J+i+a+t,1,s+\\\" +lat_0=39.1\\\"+ZC+zf+U+J+i+h+t,1,s+cC+r_+zf+U+J+i+a+t,1,s+cC+r_+zf+U+J+i+h+t,1,s+\\\" +lat_0=38.2\\\"+l_+nu+U+J+i+a+t,1,s+\\\" +lat_0=38.2\\\"+l_+nu+U+J+i+h+t,1,s+fC+sh+\\\" +k=1.000033\\\"+U+J+i+a+t,1,s+fC+sh+\\\" +k=1.000033\\\"+U+J+i+h+t,1,s+uC+lu+qf+U+J+i+a+t,1,s+uC+lu+qf+U+J+i+h+t,1,s+\\\" +lat_0=39.95\\\"+ud+_I+U+J+i+a+t,1,s+\\\" +lat_0=39.95\\\"+ud+_I+U+J+i+h+t,1,s+II+lC+pg+U+J+i+a+t,1,s+II+lC+pg+U+J+i+h+t,1,s+hC+$C+Uy+U+J+i+a+t,1,s+hC+$C+Uy+U+J+i+h+t,1,s+dC+\\\" +lon_0=-85.7\\\"+Ig+U+J+i+a+t,1,s+dC+\\\" +lon_0=-85.7\\\"+Ig+U+J+i+h+t,1,s+\\\" +lat_0=39.9\\\"+Kg+Ig+U+J+i+a+t,1,s+\\\" +lat_0=39.9\\\"+Kg+Ig+U+J+i+h+t,1,s+\\\" +lat_0=39.65\\\"+IC+zf+U+J+i+a+t,1,s+\\\" +lat_0=39.65\\\"+IC+zf+U+J+i+h+t,1,s+\\\" +lat_0=37.95\\\"+Hn+Jf+U+J+i+a+t,1,s+\\\" +lat_0=37.95\\\"+Hn+Jf+U+J+i+h+t,1,s+\\\" +lat_0=39.75\\\"+h_+uI+U+J+i+a+t,1,s+\\\" +lat_0=39.75\\\"+h_+uI+U+J+i+h+t,1,s+dC+Hn+pg+U+J+i+a+t,1,s+dC+Hn+pg+U+J+i+h+t,1,s+fC+sC+Ig+U+J+i+a+t,1,s+fC+sC+Ig+U+J+i+h+t,1,s+\\\" +lat_0=38.7 +lon_0=-85.95\\\"+Oy+U+J+i+a+t,1,s+\\\" +lat_0=38.7 +lon_0=-85.95\\\"+Oy+U+J+i+h+t,1,s+Py+ah+Jf+U+J+i+a+t,1,s+Py+ah+Jf+U+J+i+h+t,1,s+\\\" +lat_0=40.3\\\"+Bp+qf+U+J+i+a+t,1,s+\\\" +lat_0=40.3\\\"+Bp+qf+U+J+i+h+t,1,s+\\\" +lat_0=38.55\\\"+AB+pI+U+J+i+a+t,1,s+\\\" +lat_0=38.55\\\"+AB+pI+U+J+i+h+t,1,s+\\\" +lat_0=38.8\\\"+IC+_I+U+J+i+a+t,1,s+\\\" +lat_0=38.8\\\"+IC+_I+U+J+i+h+t,1,s+Ty+Hn+pg+U+J+i+a+t,1,s+Ty+Hn+pg+U+J+i+h+t,1,s+\\\" +lat_0=38.4\\\"+g_+dg+U+J+i+a+t,1,s+\\\" +lat_0=38.4\\\"+g_+dg+U+J+i+h+t,1,s+cC+h_+\\\" +k=1.000037\\\"+U+J+i+a+t,1,s+cC+h_+\\\" +k=1.000037\\\"+U+J+i+h+t,1,s+Py+tB+_g+U+J+i+a+t,1,s+Py+tB+_g+U+J+i+h+t,1,s+II+\\\" +lon_0=-86.75\\\"+Jf+U+J+i+a+t,1,s+II+\\\" +lon_0=-86.75\\\"+Jf+U+J+i+h+t,1,s+\\\" +lat_0=38.95\\\"+dd+pI+U+J+i+a+t,1,s+\\\" +lat_0=38.95\\\"+dd+pI+U+J+i+h+t,1,s+\\\" +lat_0=39.45\\\"+l_+pg+U+J+i+a+t,1,s+\\\" +lat_0=39.45\\\"+l_+pg+U+J+i+h+t,1,s+gC+nh+_g+U+J+i+a+t,1,s+gC+nh+_g+U+J+i+h+t,1,s+Ly+eB+Oy+U+J+i+a+t,1,s+Ly+eB+Oy+U+J+i+h+t,1,s+Hy+\\\" +lon_0=-86.7\\\"+nu+U+J+i+a+t,1,s+Hy+\\\" +lon_0=-86.7\\\"+nu+U+J+i+h+t,1,s+\\\" +lat_0=37.85\\\"+ud+dg+U+J+i+a+t,1,s+\\\" +lat_0=37.85\\\"+ud+dg+U+J+i+h+t,1,s+cd+\\\" +lon_0=-87.95\\\"+Uy+U+J+i+a+t,1,s+cd+\\\" +lon_0=-87.95\\\"+Uy+U+J+i+h+t,1,s+\\\" +lat_0=39.7\\\"+lu+\\\" +k=1.000044\\\"+U+J+i+a+t,1,s+\\\" +lat_0=39.7\\\"+lu+\\\" +k=1.000044\\\"+U+J+i+h+t,1,s+Jy+\\\" +lon_0=-85.3\\\"+qf+U+J+i+a+t,1,s+Jy+\\\" +lon_0=-85.3\\\"+qf+U+J+i+h+t,1,s+Ty+iB+zQ+U+J+i+a+t,1,s+Ty+iB+zQ+U+J+i+h+t,1,s+cd+\\\" +lon_0=-87.05 +k=1.000014\\\"+U+J+i+a+t,1,s+cd+\\\" +lon_0=-87.05 +k=1.000014\\\"+U+J+i+h+t,1,s+ba+Bp+\\\" +k=1.000041\\\"+U+J+i+a+t,1,s+ba+Bp+\\\" +k=1.000041\\\"+U+J+i+h+t,1,s+Jy+jf+\\\" +k=1.000017\\\"+U+J+i+a+t,1,s+Jy+jf+\\\" +k=1.000017\\\"+U+J+i+h+t,1,s+\\\" +lat_0=40.2\\\"+nh+_g+U+J+i+a+t,1,s+\\\" +lat_0=40.2\\\"+nh+_g+U+J+i+h+t,1,s+Hy+c_+dg+U+J+i+a+t,1,s+Hy+c_+dg+U+J+i+h+t,1,s+uC+g_+nu+U+J+i+a+t,1,s+uC+g_+nu+U+J+i+h+t,1,s+fd+\\\" +lon_0=-85.25\\\"+Ig+U+J+i+a+t,1,s+fd+\\\" +lon_0=-85.25\\\"+Ig+U+J+i+h+t,3,g+i+e+t,1,l+Vr+i+e+a+t,1,l+oc+i+e+a+t,1,l+VI+i+e+a+t,152,s+Fw+Jt+\\\" +k=1.0000365285 +x_0=147218.6942 +y_0=0.0037\\\"+i+a+t,1,s+Lw+sB+\\\" +k=1.0000495683 +x_0=172821.9461 +y_0=0.0017\\\"+i+a+t,1,s+Uw+aB+\\\" +k=1.0000486665 +x_0=93150 +y_0=0.0029\\\"+i+a+t,1,r+Ow+Pw+nB+\\\" +k_0=1.0000331195 +x_0=228600.4575 +y_0=148551.4837\\\"+i+a+t,1,s+gf+\\\" +lon_0=-88\\\"+nu+\\\" +x_0=31600 +y_0=4600\\\"+i+a+t,1,s+Tw+oB+\\\" +k=1.0000382778 +x_0=175260.3502 +y_0=0.0048\\\"+i+a+t,1,r+Hw+Jw+rB+\\\" +k_0=1.0000383841 +x_0=64008.1276 +y_0=59445.9043\\\"+i+a+t,1,s+qw+\\\" +lon_0=-88.5 +k=1.0000286569 +x_0=244754.8893 +y_0=0.0049\\\"+i+a+t,1,r+zw+jw+lB+\\\" +k_0=1.0000391127 +x_0=60045.72 +y_0=44091.4346\\\"+i+a+t,1,s+\\\" +lat_0=43.6\\\"+hB+\\\" +k=1.0000463003 +x_0=199949.1989 +y_0=0.0086\\\"+i+a+t,1,r+Kw+Yw+gB+\\\" +k_0=1.00003498 +x_0=169164.3381 +y_0=111569.6134\\\"+i+a+t,1,r+Bm+wm+Vw+\\\" +k_0=1.0000349151 +x_0=113690.6274 +y_0=53703.1201\\\"+i+a+t,1,r+WQ+XQ+cB+\\\" +k_0=1.0000384786 +x_0=247193.2944 +y_0=146591.9896\\\"+i+a+t,1,s+Ww+fB+\\\" +k=1.0000346418 +x_0=263347.7263 +y_0=0.0076\\\"+i+a+t,1,s+\\\" +lat_0=44.4\\\"+uB+\\\" +k=1.0000187521 +x_0=158801.1176 +y_0=0.0023\\\"+i+a+t,1,s+Xw+uu+\\\" +k=1.0000385418 +x_0=59131.3183 +y_0=0.0041\\\"+i+a+t,1,s+Zw+dB+\\\" +k=1.0000410324 +x_0=51816.104 +y_0=0.003\\\"+i+a+t,1,r+$w+AE+IB+\\\" +k_0=1.000035079 +x_0=120091.4402 +y_0=91687.92389999999\\\"+i+a+t,1,s+tE+pB+\\\" +k=1.0000552095 +x_0=133502.6683 +y_0=0.0063\\\"+i+a+t,1,s+eE+_B+\\\" +k=1.0000673004 +x_0=275844.5533 +y_0=0.0157\\\"+i+a+t,1,s+iE+\\\" +lon_0=-90.8 +k=1.0000349452 +x_0=242316.4841 +y_0=0.01\\\"+i+a+t,1,r+sE+aE+CB+\\\" +k_0=1.0000390487 +x_0=170078.7403 +y_0=45830.2947\\\"+i+a+t,1,r+nE+oE+oh+\\\" +k_0=1.0000344057 +x_0=150876.3018 +y_0=79170.7795\\\"+i+a+t,1,s+rE+BB+\\\" +k=1.0000394961 +x_0=113081.0261 +y_0=0.0045\\\"+i+a+t,1,s+lE+wB+\\\" +k=1.0000677153 +x_0=220980.4419 +y_0=0.008500000000000001\\\"+i+a+t,1,s+hE+EB+\\\" +k=1.0000353 +x_0=27000 +y_0=25000\\\"+i+a+t,1,s+gE+yB+\\\" +k=1.0000260649 +x_0=185928.3728 +y_0=0.0009\\\"+i+a+t,1,s+cE+c_+\\\" +k=1.0000233704 +x_0=79857.7614 +y_0=0.0012\\\"+i+a+t,1,s+fE+QB+\\\" +k=1.0000319985 +x_0=130454.6598 +y_0=0.0033\\\"+i+a+t,1,r+uE+dE+mB+\\\" +k_0=1.0000627024 +x_0=198425.197 +y_0=105279.7829\\\"+i+a+t,1,s+IE+kB+\\\" +k=1.0000599003 +x_0=116129.0323 +y_0=0.0058\\\"+i+a+t,1,r+pE+_E+\\\" +lon_0=-89.77 +k_0=1.000053289 +x_0=74676.1493 +y_0=55049.2669\\\"+i+a+t,1,s+CE+xB+\\\" +k=1.0000234982 +x_0=238658.8794 +y_0=0.0032\\\"+i+a+t,1,s+BE+MB+\\\" +k=1.0000362499 +x_0=105461.0121 +y_0=0.0029\\\"+i+a+t,1,r+wE+EE+bB+\\\" +k_0=1.0000434122 +x_0=204521.209 +y_0=121923.9861\\\"+i+a+t,1,s+yE+DB+\\\" +k=1.0000236869 +x_0=182880.3676 +y_0=0.0033\\\"+i+a+t,1,r+QE+mE+vB+\\\" +k_0=1.0000686968 +x_0=70104.1401 +y_0=57588.0346\\\"+i+a+t,1,r+kE+xE+SB+\\\" +k_0=1.0000362977 +x_0=167640.3354 +y_0=86033.0876\\\"+i+a+t,1,s+ME+rh+\\\" +k=1.0000433849 +x_0=141732.2823 +y_0=0.0059\\\"+i+a+t,1,r+bE+DE+\\\" +lon_0=-89.5 +k_0=1.000039936 +x_0=56388.1128 +y_0=50022.1874\\\"+i+a+t,1,s+vE+GB+\\\" +k=1.0000649554 +x_0=227990.8546 +y_0=0.0109\\\"+i+a+t,1,r+ZQ+$Q+NB+\\\" +k_0=1.0000375653 +x_0=202387.6048 +y_0=134255.4253\\\"+i+a+t,1,s+SE+RB+\\\" +k=1.0000337311 +x_0=146304.2926 +y_0=0.0068\\\"+i+a+t,1,s+GE+FB+\\\" +k=1.0000495976 +x_0=250546.1013 +y_0=0.0234\\\"+i+a+t,1,s+NE+LB+\\\" +k=1.0000373868 +x_0=185623.5716 +y_0=0.0051\\\"+i+a+t,1,r+RE+FE+UB+\\\" +k_0=1.0000573461 +x_0=216713.2336 +y_0=120734.1631\\\"+i+a+t,1,s+Hh+OB+\\\" +k=1.000032144 +x_0=262433.3253 +y_0=0.009599999999999999\\\"+i+a+t,1,s+Hh+rh+\\\" +k=1.0000381803 +x_0=165506.7302 +y_0=0.0103\\\"+i+a+t,1,r+LE+UE+PB+\\\" +k_0=1.0000597566 +x_0=187147.5744 +y_0=107746.7522\\\"+i+a+t,1,s+OE+TB+\\\" +k=1.0000361538 +x_0=256946.9138 +y_0=0.0041\\\"+i+a+t,1,r+PE+TE+HB+\\\" +k_0=1.0000408158 +x_0=222504.4451 +y_0=47532.0602\\\"+i+a+t,1,r+HE+JE+JB+\\\" +k_0=1.0000730142 +x_0=134417.0689 +y_0=50337.1092\\\"+i+a+t,1,r+qE+zE+qB+\\\" +k_0=1.0000367192 +x_0=232562.8651 +y_0=111088.2224\\\"+i+a+t,1,r+jE+KE+zB+\\\" +k_0=1.0000475376 +x_0=234086.8682 +y_0=188358.6058\\\"+i+a+t,1,s+YE+jB+\\\" +k=1.00003738 +x_0=120091.4415 +y_0=0.003\\\"+i+a+t,1,s+VE+KB+\\\" +k=1.0000346179 +x_0=208788.418 +y_0=0.0034\\\"+i+a+t,1,s+WE+YB+\\\" +k=1.0000333645 +x_0=185013.9709 +y_0=0.007\\\"+i+a+t,1,r+XE+ZE+oh+\\\" +k_0=1.0000392096 +x_0=120091.4402 +y_0=45069.7587\\\"+i+a+t,1,r+$E+Ay+Jt+\\\" +k_0=1.0000421209 +x_0=208483.6173 +y_0=134589.754\\\"+i+a+t,1,s+Fw+Jt+\\\" +k=1.0000365285 +x_0=147218.6941325883 +y_0=0.00365760731521463\\\"+i+h+t,1,s+Lw+sB+\\\" +k=1.0000495683 +x_0=172821.945948692 +y_0=0.001828803657607315\\\"+i+h+t,1,s+Uw+aB+\\\" +k=1.0000486665 +x_0=93150\\\"+rr+i+h+t,1,r+Ow+Pw+nB+\\\" +k_0=1.0000331195 +x_0=228600.4575057151 +y_0=148551.4835661671\\\"+i+h+t,1,s+gf+\\\" +lon_0=-88\\\"+nu+\\\" +x_0=31599.99989839979 +y_0=4599.999898399797\\\"+i+h+t,1,s+Tw+oB+\\\" +k=1.0000382778 +x_0=175260.3502159004\\\"+VB+i+h+t,1,r+Hw+Jw+rB+\\\" +k_0=1.0000383841 +x_0=64008.12771145543 +y_0=59445.90419100838\\\"+i+h+t,1,s+qw+\\\" +lon_0=-88.5 +k=1.0000286569 +x_0=244754.8892049784\\\"+VB+i+h+t,1,r+zw+jw+lB+\\\" +k_0=1.0000391127 +x_0=60045.72009144018 +y_0=44091.43449326898\\\"+i+h+t,1,s+\\\" +lat_0=43.6\\\"+hB+\\\" +k=1.0000463003 +x_0=199949.198983998\\\"+WB+i+h+t,1,r+Kw+Yw+gB+\\\" +k_0=1.00003498 +x_0=169164.338023876 +y_0=111569.613512827\\\"+i+h+t,1,r+Bm+wm+Vw+\\\" +k_0=1.0000349151 +x_0=113690.6273812548 +y_0=53703.12024384048\\\"+i+h+t,1,r+WQ+XQ+cB+\\\" +k_0=1.0000384786 +x_0=247193.2943865888 +y_0=146591.9896367793\\\"+i+h+t,1,s+Ww+fB+\\\" +k=1.0000346418 +x_0=263347.7263906528 +y_0=0.00762001524003048\\\"+i+h+t,1,s+\\\" +lat_0=44.4\\\"+uB+\\\" +k=1.0000187521 +x_0=158801.1176022352 +y_0=0.002438404876809754\\\"+i+h+t,1,s+Xw+uu+\\\" +k=1.0000385418 +x_0=59131.31826263652\\\"+XB+i+h+t,1,s+Zw+dB+\\\" +k=1.0000410324 +x_0=51816.10393700787\\\"+rr+i+h+t,1,r+$w+AE+IB+\\\" +k_0=1.000035079\\\"+Zy+\\\" +y_0=91687.92390144781\\\"+i+h+t,1,s+tE+pB+\\\" +k=1.0000552095 +x_0=133502.6682245364 +y_0=0.006400812801625603\\\"+i+h+t,1,s+eE+_B+\\\" +k=1.0000673004 +x_0=275844.5532131065 +y_0=0.0158496316992634\\\"+i+h+t,1,s+iE+\\\" +lon_0=-90.8 +k=1.0000349452 +x_0=242316.484023368 +y_0=0.01005842011684023\\\"+i+h+t,1,r+sE+aE+CB+\\\" +k_0=1.0000390487 +x_0=170078.7401574803 +y_0=45830.29484378968\\\"+i+h+t,1,r+nE+oE+oh+\\\" +k_0=1.0000344057 +x_0=150876.3017526035 +y_0=79170.77937515875\\\"+i+h+t,1,s+rE+BB+\\\" +k=1.0000394961 +x_0=113081.0261620523 +y_0=0.004572009144018288\\\"+i+h+t,1,s+lE+wB+\\\" +k=1.0000677153 +x_0=220980.4419608839\\\"+WB+i+h+t,1,s+hE+EB+\\\" +k=1.0000353 +x_0=27000 +y_0=24999.99989839979\\\"+i+h+t,1,s+gE+yB+\\\" +k=1.0000260649 +x_0=185928.3727711455 +y_0=0.0009144018288036576\\\"+i+h+t,1,s+cE+c_+\\\" +k=1.0000233704 +x_0=79857.76154432308 +y_0=0.001219202438404877\\\"+i+h+t,1,s+fE+QB+\\\" +k=1.0000319985 +x_0=130454.6596901194\\\"+du+i+h+t,1,r+uE+dE+mB+\\\" +k_0=1.0000627024 +x_0=198425.1968503937 +y_0=105279.7828803657\\\"+i+h+t,1,s+IE+kB+\\\" +k=1.0000599003 +x_0=116129.0322580645\\\"+ZB+i+h+t,1,r+pE+_E+\\\" +lon_0=-89.77 +k_0=1.000053289 +x_0=74676.1493522987 +y_0=55049.26695453391\\\"+i+h+t,1,s+CE+xB+\\\" +k=1.0000234982 +x_0=238658.8794513589\\\"+rr+i+h+t,1,s+BE+MB+\\\" +k=1.0000362499 +x_0=105461.0121412243\\\"+rr+i+h+t,1,r+wE+EE+bB+\\\" +k_0=1.0000434122 +x_0=204521.2090424181 +y_0=121923.9861823724\\\"+i+h+t,1,s+yE+DB+\\\" +k=1.0000236869 +x_0=182880.3675895352\\\"+du+i+h+t,1,r+QE+mE+vB+\\\" +k_0=1.0000686968 +x_0=70104.14020828041 +y_0=57588.03474726949\\\"+i+h+t,1,r+kE+xE+SB+\\\" +k_0=1.0000362977 +x_0=167640.3352806706 +y_0=86033.08773177546\\\"+i+h+t,1,s+ME+rh+\\\" +k=1.0000433849 +x_0=141732.2822453645\\\"+ZB+i+h+t,1,r+bE+DE+\\\" +lon_0=-89.5 +k_0=1.000039936 +x_0=56388.11277622555 +y_0=50022.1874523749\\\"+i+h+t,1,s+vE+GB+\\\" +k=1.0000649554 +x_0=227990.8544577089 +y_0=0.01097282194564389\\\"+i+h+t,1,r+ZQ+$Q+NB+\\\" +k_0=1.0000375653 +x_0=202387.6047752095 +y_0=134255.4254508509\\\"+i+h+t,1,s+SE+RB+\\\" +k=1.0000337311 +x_0=146304.2926085852 +y_0=0.006705613411226822\\\"+i+h+t,1,s+GE+FB+\\\" +k=1.0000495976 +x_0=250546.1013970028 +y_0=0.02346964693929388\\\"+i+h+t,1,s+NE+LB+\\\" +k=1.0000373868 +x_0=185623.5715519431 +y_0=0.005181610363220727\\\"+i+h+t,1,r+RE+FE+UB+\\\" +k_0=1.0000573461 +x_0=216713.2337312675 +y_0=120734.1631699263\\\"+i+h+t,1,s+Hh+OB+\\\" +k=1.000032144 +x_0=262433.3251714504 +y_0=0.009448818897637795\\\"+i+h+t,1,s+Hh+rh+\\\" +k=1.0000381803 +x_0=165506.7300990602 +y_0=0.01036322072644145\\\"+i+h+t,1,r+LE+UE+PB+\\\" +k_0=1.0000597566 +x_0=187147.5742951486 +y_0=107746.7521463043\\\"+i+h+t,1,s+OE+TB+\\\" +k=1.0000361538 +x_0=256946.9138938278\\\"+XB+i+h+t,1,r+PE+TE+HB+\\\" +k_0=1.0000408158 +x_0=222504.44500889 +y_0=47532.0603505207\\\"+i+h+t,1,r+HE+JE+JB+\\\" +k_0=1.0000730142 +x_0=134417.0688341377 +y_0=50337.10927101854\\\"+i+h+t,1,r+qE+zE+qB+\\\" +k_0=1.0000367192 +x_0=232562.8651257302 +y_0=111088.2224028448\\\"+i+h+t,1,r+jE+KE+zB+\\\" +k_0=1.0000475376 +x_0=234086.8681737363 +y_0=188358.6059436119\\\"+i+h+t,1,s+YE+jB+\\\" +k=1.00003738 +x_0=120091.4414020828\\\"+rr+i+h+t,1,s+VE+KB+\\\" +k=1.0000346179 +x_0=208788.4178816358\\\"+du+i+h+t,1,s+WE+YB+\\\" +k=1.0000333645 +x_0=185013.9709423419 +y_0=0.007010414020828041\\\"+i+h+t,1,r+XE+ZE+oh+\\\" +k_0=1.0000392096\\\"+Zy+\\\" +y_0=45069.7588011176\\\"+i+h+t,1,r+$E+Ay+Jt+\\\" +k_0=1.0000421209 +x_0=208483.6172720346 +y_0=134589.7539243078\\\"+i+h+t,41,g+i+t,6,s+c+\\\" +lon_0=68.51666666666667 +k=1 +x_0=1300000\\\"+zI+i+a+t,1,s+c+\\\" +lon_0=71.51666666666667 +k=1\\\"+am+zI+i+a+t,1,s+c+\\\" +lon_0=74.51666666666667 +k=1\\\"+nm+zI+i+a+t,1,s+c+\\\" +lon_0=77.51666666666667 +k=1\\\"+om+zI+i+a+t,1,s+c+\\\" +lon_0=80.51666666666667 +k=1 +x_0=5300000\\\"+zI+i+a+t,12308,s+c+mn+\\\" +k=1\\\"+ri+u+f+o+a+t,1,s+c+Ao+\\\" +k=1\\\"+ys+u+f+o+a+t,1,s+c+zo+\\\" +k=1\\\"+Ml+u+f+o+a+t,1,s+c+jh+\\\" +k=1\\\"+Xo+u+f+o+a+t,1,s+c+tl+\\\" +k=1\\\"+Vg+u+f+o+a+t,1,s+c+qu+\\\" +k=1\\\"+Wg+u+f+o+a+t,1,s+c+GI+\\\" +k=1\\\"+ig+u+f+o+a+t,1,s+c+jd+\\\" +k=1\\\"+Ql+u+f+o+a+t,1,s+c+NI+\\\" +k=1\\\"+sg+u+f+o+a+t,1,s+c+to+\\\" +k=1\\\"+no+u+f+o+a+t,1,s+c+eo+\\\" +k=1\\\"+Fn+u+f+o+a+t,1,s+c+Io+\\\" +k=1\\\"+Go+u+f+o+a+t,1,s+c+io+\\\" +k=1\\\"+No+u+f+o+a+t,1,s+c+so+\\\" +k=1\\\"+Dr+u+f+o+a+t,1,s+c+ss+\\\" +k=1\\\"+vo+u+f+o+a+t,1,s+c+Oa+\\\" +k=1\\\"+So+u+f+o+a+t,1,s+c+xa+\\\" +k=1\\\"+oo+u+f+o+a+t,1,s+c+Sa+\\\" +k=1\\\"+Ro+u+f+o+a+t,1,s+c+Bs+\\\" +k=1\\\"+ro+u+f+o+a+t,1,s+c+Ma+\\\" +k=1\\\"+Fo+u+f+o+a+t,1,s+c+id+\\\" +k=1\\\"+ag+u+f+o+a+t,1,s+c+iu+\\\" +k=1\\\"+Lo+u+f+o+a+t,1,s+c+$c+\\\" +k=1\\\"+Uo+u+f+o+a+t,1,s+c+sd+\\\" +k=1\\\"+Oo+u+f+o+a+t,1,s+c+Af+\\\" +k=1\\\"+Po+u+f+o+a+t,1,s+c+hg+\\\" +k=1\\\"+Ln+u+f+o+a+t,1,s+c+Tl+\\\" +k=1\\\"+sr+u+f+o+a+t,1,s+c+Hl+\\\" +k=1\\\"+In+u+f+o+a+t,1,s+c+cg+\\\" +k=1\\\"+ar+u+f+o+a+t,103,l+dh+b+lo+a+t,1,l+rc+b+lo+a+t,1,l+Ul+b+lo+a+t,1,l+rl+b+lo+a+t,111,l+gc+T+W+q+a+t,1,l+Kc+T+W+q+a+t,1,l+lc+T+W+q+a+t,1,l+Yc+T+W+q+a+t,1,l+Cu+T+W+q+a+t,1,l+yf+T+W+q+a+t,1,l+Uu+T+W+q+a+t,1,l+ZI+T+W+q+a+t,1,l+Sp+T+W+q+a+t,1,l+vg+T+W+q+a+t,91,l+gc+T+W+Wt+a+t,1,l+Kc+T+W+Wt+a+t,1,l+lc+T+W+Wt+a+t,1,l+Yc+T+W+Wt+a+t,1,l+Cu+T+W+Wt+a+t,1,l+yf+T+W+Wt+a+t,1,l+Uu+T+W+Wt+a+t,1,l+ZI+T+W+Wt+a+t,80,l+rc+_+Ge+a+t,1,l+Ul+_+Ge+a+t,1,l+rl+_+Ge+a+t,1,l+Vr+_+Ge+a+t,1,l+oc+_+Ge+a+t,59,l+Vr+_+Ge+a+t,39,l+rl+f+Pc+a+t,1,l+Vr+f+Pc+a+t,251,s+wt+\\\" +lon_0=1 +k=1\\\"+N+yo+_+cs+GQ+a+t,1,s+wt+\\\" +lon_0=1 +k=1\\\"+z+u+_+cs+GQ+a+t,31,l+mr+T+_+Cs+a+t,1,l+Sg+T+_+Cs+a+t,1,l+mf+T+_+Cs+a+t,110,l+jc+T+mt+dt+Qr+a+t,1,l+dh+T+mt+dt+Qr+a+t,1,l+rc+T+mt+dt+Qr+a+t,99,l+dh+T+b+rs+a+t,1,l+rc+T+b+rs+a+t,1,l+Ul+T+b+rs+a+t,58,l+dh+b+rs+a+t,1,l+rc+b+rs+a+t,1,l+Ul+b+rs+a+t,51,l+hc+T+m+De+a+t,1,l+gc+T+m+De+a+t,1,l+Kc+T+m+De+a+t,141,s+c+Vc+ns+K+u+b+vl+a+t,1,s+\\\" +lat_0=13.17638888888889 +lon_0=-59.55972222222222 +k=0.9999986\\\"+JQ+\\\" +y_0=75000\\\"+b+vl+a+t,121,s+c+to+\\\" +k=1\\\"+no+u+f+w+a+t,1,s+c+eo+\\\" +k=1\\\"+Fn+u+f+w+a+t,1,s+c+Io+\\\" +k=1\\\"+Go+u+f+w+a+t,1,s+c+io+\\\" +k=1\\\"+No+u+f+w+a+t,1,s+c+so+\\\" +k=1\\\"+Dr+u+f+w+a+t,1,s+c+ss+\\\" +k=1\\\"+vo+u+f+w+a+t,1,s+c+Oa+\\\" +k=1\\\"+So+u+f+w+a+t,1,s+c+xa+\\\" +k=1\\\"+oo+u+f+w+a+t,1,s+c+Sa+\\\" +k=1\\\"+Ro+u+f+w+a+t,1,s+c+Bs+\\\" +k=1\\\"+ro+u+f+w+a+t,1,s+c+Ma+\\\" +k=1\\\"+Fo+u+f+w+a+t,30,s+c+to+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+eo+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Io+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+io+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+so+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+ss+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Oa+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+xa+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Sa+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Bs+\\\" +k=1\\\"+d+u+f+w+a+t,1,s+c+Ma+\\\" +k=1\\\"+d+u+f+w+a+t,37,r+mh+kh+Do+$n+Ft+\\\" +y_0=5400000\\\"+_+\\\" +pm=brussels\\\"+a+t,280,_d+Ih+$n+\\\" +k_0=1\\\"+z+u+m+Cn+\\\" +pm=bern\\\"+a+t,1,_d+Ih+Eu+\\\" +k_0=1\\\"+x+Vo+m+Cn+a+t,1,_d+Ih+Eu+\\\" +k_0=1\\\"+z+u+m+Cn+a+t,36,l+To+_+ls+a+t,78,s+Jh+\\\" +lon_0=-77.08091666666667 +k=1\\\"+Et+nA+_+ls+a+t,1,s+Jh+\\\" +lon_0=-74.08091666666667 +k=1\\\"+Et+nA+_+ls+a+t,1,s+Jh+\\\" +lon_0=-71.08091666666667 +k=1\\\"+Et+nA+_+ls+a+t,1,s+Jh+\\\" +lon_0=-68.08091666666667 +k=1\\\"+Et+nA+_+ls+a+t,133,l+Wr+T+b+tn+a+t,1,l+Ll+T+b+tn+a+t,58,s+c+\\\" +lon_0=11.5\\\"+uA+d+RA+b+tn+a+t,1,s+c+jo+uA+d+RA+b+tn+a+t,79,s+O+SC+\\\" +k=1\\\"+BA+u+i+e+a+t,1,s+O+jg+\\\" +k=1\\\"+be+u+i+e+a+t,1,s+O+ed+\\\" +k=1\\\"+Lt+u+i+e+a+t,1,s+O+nI+\\\" +k=1\\\"+ri+u+i+e+a+t,1,s+O+NC+\\\" +k=1\\\"+ys+u+i+e+a+t,1,s+O+NQ+\\\" +k=1\\\"+Ml+u+i+e+a+t,1,s+O+ef+\\\" +k=1\\\"+Xo+u+i+e+a+t,4,s+O+SC+\\\" +k=1\\\"+BA+u+F+e+a+t,1,s+O+jg+\\\" +k=1\\\"+be+u+F+e+a+t,1,s+O+ed+\\\" +k=1\\\"+Lt+u+F+e+a+t,1,s+O+nI+\\\" +k=1\\\"+ri+u+F+e+a+t,1,s+O+NC+\\\" +k=1\\\"+ys+u+F+e+a+t,1,s+O+NQ+\\\" +k=1\\\"+Ml+u+F+e+a+t,1,s+O+ef+\\\" +k=1\\\"+Xo+u+F+e+a+t,4,s+O+SC+\\\" +k=1\\\"+BA+u+_+Tt+a+t,1,s+O+jg+\\\" +k=1\\\"+be+u+_+Tt+a+t,1,s+O+ed+\\\" +k=1\\\"+Lt+u+_+Tt+a+t,1,s+O+nI+\\\" +k=1\\\"+ri+u+_+Tt+a+t,1,s+O+NC+\\\" +k=1\\\"+ys+u+_+Tt+a+t,1,s+O+NQ+\\\" +k=1\\\"+Ml+u+_+Tt+a+t,1,s+O+ef+\\\" +k=1\\\"+Xo+u+_+Tt+a+t,37,l+jc+T+mt+dt+YA+a+t,1,l+dh+T+mt+dt+YA+a+t,40,s+c+yn+\\\" +k=1\\\"+z+u+Qn+mt+dt+YA+a+t,2,s+c+BC+\\\" +k=1\\\"+z+u+Qn+mt+dt+YA+a+t,2,s+c+DI+\\\" +k=1\\\"+z+u+Qn+mt+dt+YA+a+t,2,s+c+mn+\\\" +k=1\\\"+z+u+Qn+mt+dt+YA+a+t,2,s+c+Rp+\\\" +k=1\\\"+z+u+Qn+mt+dt+YA+a+t,2,s+c+vI+\\\" +k=1\\\"+z+u+Qn+mt+dt+YA+a+t,2,s+c+Ao+\\\" +k=1\\\"+z+u+Qn+mt+dt+YA+a+t,2,s+c+\\\" +lon_0=29 +k=1\\\"+z+u+Qn+mt+dt+YA+a+t,2,s+c+Pd+\\\" +k=1\\\"+z+u+Qn+mt+dt+YA+a+t,2,s+c+zo+\\\" +k=1\\\"+z+u+Qn+mt+dt+YA+a+t,39,l+Wr+CA+ht+En+a+t,59,r+\\\" +lat_1=36\\\"+$a+\\\" +lon_0=9.9\\\"+Rd+d+yo+CA+ht+En+a+t,1,r+Vp+Wp+\\\" +lon_0=9.9\\\"+cf+d+yo+CA+ht+En+a+t,129,l+Ho+T+_+an+a+t,1,l+mr+T+_+an+a+t,1,l+Sg+T+_+an+a+t,1,l+mf+T+_+an+a+t,1,l+Cf+T+_+an+a+t,175,r+dm+\\\" +lat_0=34.65 +lon_0=37.35 +k_0=0.9996256\\\"+oA+yo+CA+ht+Yn+a+t,70,r+dm+\\\" +lat_0=34.65 +lon_0=37.35 +k_0=0.9996256\\\"+oA+yo+CA+ht+Yn+a+t,10,rn+\\\" +lat_0=34.2 +lon_0=39.15 +k=0.9995341\\\"+z+u+CA+ht+Yn+a+t,211,s+kn+\\\" +lon_0=35 +k=1\\\"+oA+\\\" +y_0=1100000\\\"+xn+ho+a+t,1,s+kn+Pd+\\\" +k=1 +x_0=615000 +y_0=810000\\\"+xn+ho+a+t,1,s+kn+Ao+\\\" +k=1\\\"+fs+Vo+xn+ho+a+t,1,s+kn+Ao+\\\" +k=1\\\"+fs+$_+xn+ho+a+t,34,l+ll+_+P+a+t,1,l+Rl+_+P+a+t,1,l+Iu+_+P+a+t,1,l+xd+_+P+a+t,1,l+Wr+_+P+a+t,1,l+Ll+_+P+a+t,1,l+jc+_+P+a+t,1,l+dh+_+P+a+t,1,l+rc+_+P+a+t,1,l+Ul+_+P+a+t,1,l+rl+_+P+a+t,52,s+c+$n+uA+d+u+_+P+a+t,5,s+c+\\\" +lon_0=5\\\"+uA+d+u+_+P+a+t,144,l+Vr+b+Tc+a+t,1,l+oc+b+Tc+a+t,460,_d+\\\" +lat_0=47.14439372222222 +lon_0=19.04857177777778 +k_0=0.99993 +x_0=650000\\\"+Vo+um+kI+a+t,130,s+c+\\\" +lon_0=94.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=97.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=100.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=103.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=106.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=109.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=112.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=115.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=118.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=121.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=124.5\\\"+E+N+li+F+e+a+t,1,s+c+od+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=130.5\\\"+E+N+li+F+e+a+t,1,s+c+AC+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=136.5\\\"+E+N+li+F+e+a+t,1,s+c+\\\" +lon_0=139.5\\\"+E+N+li+F+e+a+t,1,l+bd+er+Dt+jA+a+t,1,l+kf+er+Dt+jA+a+t,1,l+hc+er+Dt+jA+a+t,1,l+gc+er+Dt+jA+a+t,1,l+Kc+er+Dt+jA+a+t,1,l+lc+er+Dt+jA+a+t,1,l+Yc+er+Dt+jA+a+t,14,l+bd+F+e+a+t,1,l+kf+F+e+a+t,1,l+hc+F+e+a+t,1,l+gc+F+e+a+t,1,l+Kc+F+e+a+t,1,l+lc+F+e+a+t,1,l+Yc+F+e+a+t,5,l+kf+T+F+e+a+t,1,l+hc+T+F+e+a+t,1,l+gc+T+F+e+a+t,1,l+Kc+T+F+e+a+t,1,l+lc+T+F+e+a+t,1,l+Yc+T+F+e+a+t,1,l+Cu+T+F+e+a+t,1,l+yf+T+F+e+a+t,3,l+kf+T+er+Dt+jA+a+t,1,l+hc+T+er+Dt+jA+a+t,1,l+gc+T+er+Dt+jA+a+t,1,l+Kc+T+er+Dt+jA+a+t,1,l+lc+T+er+Dt+jA+a+t,1,l+Yc+T+er+Dt+jA+a+t,1,l+Cu+T+er+Dt+jA+a+t,1,l+yf+T+er+Dt+jA+a+t,52,l+bd+Kt+VA+Al+a+t,1,l+kf+Kt+VA+Al+a+t,1,l+hc+Kt+VA+Al+a+t,99,l+kf+Kt+VA+Hc+a+t,1,l+hc+Kt+VA+Hc+a+t,52,r+\\\" +lat_1=18\\\"+Xf+rg+\\\" +k_0=1 +x_0=167638.49597 +y_0=121918.90616\\\"+yI+QI+Hg+t,100,r+\\\" +lat_1=18\\\"+Xf+rg+\\\" +k_0=1\\\"+qt+\\\" +y_0=150000\\\"+R+Q_+a+t,105,l+Y_+Kt+VA+$r+a+t,1,l+bd+Kt+VA+$r+a+t,5,l+VI+Bg+Mo+sn+a+t,1,l+WI+Bg+Mo+sn+a+t,1,l+Np+Bg+Mo+sn+a+t,29,l+WI+Mn+ue+It+a+t,1,l+Np+Mn+ue+It+a+t,1,l+K_+Mn+ue+It+a+t,1,l+Y_+Mn+ue+It+a+t,1,l+bd+Mn+ue+It+a+t,1,l+kf+Mn+ue+It+a+t,23,r+Yp+\\\" +lat_0=39.5 +lon_0=68 +k_0=0.99846154 +x_0=2153865.73916853 +y_0=2368292.194628102\\\"+Wn+Rn+on+t,1,r+cI+fg+\\\" +lon_0=68\\\"+Pa+nl+ol+Wn+Rn+on+t,1,r+MC+tr+\\\" +lon_0=74\\\"+Pa+nl+ol+Wn+Rn+on+t,1,r+\\\" +lat_1=19 +lat_0=19 +lon_0=80\\\"+Pa+nl+ol+Wn+Rn+on+t,1,r+\\\" +lat_1=12 +lat_0=12 +lon_0=80\\\"+Pa+nl+ol+Wn+Rn+on+t,1,r+MC+tr+bo+Pa+\\\" +x_0=2743185.69 +y_0=914395.23\\\"+Kt+VA+$r+a+t,1,r+cI+fg+\\\" +lon_0=68\\\"+Pa+\\\" +x_0=2743196.4 +y_0=914398.8\\\"+Bg+Mo+sn+a+t,1,r+MC+tr+\\\" +lon_0=74\\\"+Pa+\\\" +x_0=2743196.4 +y_0=914398.8\\\"+Bg+Mo+sn+a+t,1,r+cI+fg+\\\" +lon_0=68\\\"+Pa+Vu+Wd+Mn+ue+It+a+t,1,r+MC+tr+\\\" +lon_0=74\\\"+Pa+Vu+Wd+Mn+ue+It+a+t,1,r+MC+tr+bo+Pa+Vu+Wd+Mn+ue+It+a+t,1,r+\\\" +lat_1=19 +lat_0=19 +lon_0=80\\\"+Pa+Vu+Wd+Mn+ue+It+a+t,1,r+MC+tr+bo+Pa+nl+ol+Wn+Rn+on+t,1,r+\\\" +lat_1=12 +lat_0=12 +lon_0=80\\\"+Pa+Vu+Wd+Mn+ue+It+a+t,117,ve+\\\" +lat_0=1.287646666666667 +lon_0=103.8530022222222\\\"+JQ+\\\" +y_0=30000\\\"+Za+Yt+_t+a+t,47,l+kf+Za+Yt+_t+a+t,1,l+hc+Za+Yt+_t+a+t,52,r+cI+fg+tl+Xu+BA+hm+b+iI+a+t,118,l+To+_+uo+a+t,1,l+wo+_+uo+a+t,1,l+On+_+uo+a+t,97,l+wr+_+EA+a+t,1,l+To+_+EA+a+t,1,l+wo+_+EA+a+t,1,l+On+_+EA+a+t,1,l+Ho+_+EA+a+t,56,l+wr+T+_+EA+a+t,1,l+To+T+_+EA+a+t,1,l+wo+T+_+EA+a+t,1,l+On+T+_+EA+a+t,1,l+Ho+T+_+EA+a+t,1,l+mr+T+_+EA+a+t,9,s+\\\" +lat_0=-6 +lon_0=-80.5 +k=0.99983008 +x_0=222000 +y_0=1426834.743\\\"+_+EA+a+t,1,s+\\\" +lat_0=-9.5 +lon_0=-76 +k=0.99932994 +x_0=720000 +y_0=1039979.159\\\"+_+EA+a+t,1,s+\\\" +lat_0=-9.5\\\"+Wo+\\\" +k=0.99952992 +x_0=1324000 +y_0=1040084.558\\\"+_+EA+a+t,107,s+tw+\\\" +lon_0=-1\\\"+dp+\\\" +x_0=274319.51\\\"+u+b+R_+a+t,231,l+xd+CA+ht+a+t,160,s+c+xa+he+d+u+R+Ja+a+t,1,s+c+kQ+he+d+u+R+Ja+a+t,1,s+c+xQ+he+d+u+R+Ja+a+t,1,s+c+Sa+he+d+u+R+Ja+a+t,1,s+c+up+he+d+u+R+Ja+a+t,433,l+ll+i+e+a+t,1,l+Rl+i+e+a+t,1,l+Iu+i+e+a+t,1,l+xd+i+e+a+t,1,l+Wr+i+e+a+t,1,l+Ll+i+e+a+t,1,l+jc+i+e+a+t,1,l+dh+i+e+a+t,1,l+rc+i+e+a+t,1,l+Ul+i+e+a+t,47,s+c+Ko+uA+d+u+i+e+a+t,48,l+Wr+T+_+$d+a+t,259,r+Vp+Wp+qy+cf+d+yo+CA+ht+$o+a+t,1,r+\\\" +lat_1=29.7 +lat_0=29.7\\\"+qy+\\\" +k_0=0.9996155960000001\\\"+d+yo+CA+ht+$o+a+t,2,r+\\\" +lat_1=26.1 +lat_0=26.1\\\"+qy+\\\" +k_0=0.999616304 +x_0=1200000\\\"+br+CA+ht+$o+a+t,1,r+\\\" +lat_1=22.5 +lat_0=22.5\\\"+qy+\\\" +k_0=0.999616437\\\"+BA+br+CA+ht+$o+a+t,42,l+Ul+m+j_+a+t,94,l+xd+b+nn+a+t,1,l+Wr+b+nn+a+t,59,s+sI+\\\" +lon_0=4.5\\\"+dp+\\\" +x_0=230738.26\\\"+u+b+nn+a+t,1,s+sI+\\\" +lon_0=8.5\\\"+dp+\\\" +x_0=670553.98\\\"+u+b+nn+a+t,1,s+sI+\\\" +lon_0=12.5\\\"+dp+\\\" +x_0=1110369.7\\\"+u+b+nn+a+t,239,l+Wr+CA+ht+Jc+a+t,60,l+Wr+T+CA+ht+Jc+a+t,9,l+Dp+Q+a+t,1,l+O_+Q+a+t,1,l+oy+Q+a+t,1,l+H_+Q+a+t,1,l+MI+Q+a+t,1,l+rp+Q+a+t,1,l+bI+Q+a+t,1,l+P_+Q+a+t,1,l+T_+Q+a+t,1,l+Md+Q+a+t,1,l+Bf+Q+a+t,1,l+wf+Q+a+t,1,l+Ef+Q+a+t,1,l+Qf+Q+a+t,1,l+qc+Q+a+t,1,l+zc+Q+a+t,1,l+wr+Q+a+t,1,l+To+Q+a+t,1,l+wo+Q+a+t,1,l+On+Q+a+t,1,l+Ho+Q+a+t,1,l+mr+Q+a+t,7,s+lr+nr+Ad+v+u+Q+h+t,1,s+kn+jf+it+v+u+Q+h+t,1,de+\\\" +lat_0=57\\\"+xh+Mh+E+\\\" +x_0=5000000.001016002 +y_0=-5000000.001016002\\\"+Ol+fn+Q+h+t,1,s+Na+wy+E+v+u+Q+h+t,1,s+Na+Ey+E+v+u+Q+h+t,1,s+Na+Tf+E+v+u+Q+h+t,1,s+Na+wc+E+v+u+Q+h+t,1,s+Na+Jl+E+v+u+Q+h+t,1,s+Na+yy+E+\\\" +x_0=213360.4267208534\\\"+u+Q+h+t,1,s+Na+Qy+E+v+u+Q+h+t,1,s+Na+Hp+E+wd+u+Q+h+t,1,r+bh+Dh+kC+my+zt+u+Q+h+t,1,r+di+El+X+Pn+k+u+Q+h+t,1,r+Ii+pi+$+Pn+k+u+Q+h+t,1,r+PA+_i+uc+rA+k+u+Q+h+t,1,r+Kh+Hd+Ci+dc+k+u+Q+h+t,1,r+Bi+wi+Ic+Mr+k+u+Q+h+t,1,r+Ei+yi+Qi+Gr+k+u+Q+h+t,2,s+Nt+Ne+E+v+u+Q+h+t,1,s+Nt+Re+E+v+u+Q+h+t,1,s+Nt+Sr+it+v+u+Q+h+t,1,r+Hi+Ji+$A+qo+k+u+Q+h+t,1,r+qi+Cc+zi+qo+k+u+Q+h+t,1,r+\\\" +lat_1=39.71666666666667 +lat_2=40.78333333333333\\\"+X+yt+k+u+Q+h+t,1,r+Yh+Vh+Ce+yt+k+u+Q+h+t,1,r+PA+mi+S+yt+k+u+Q+h+t,1,r+ki+pc+xi+ml+wd+u+Q+h+t,1,s+Me+Fe+_c+v+u+Q+h+t,1,s+TA+ce+LA+v+u+Q+h+t,1,s+TA+tu+LA+v+u+Q+h+t,1,r+Wh+Mi+Jd+Xh+k+u+Q+h+t,6,s+kn+Le+E+v+u+Q+h+t,1,s+kn+Ue+E+v+u+Q+h+t,1,s+H+Oe+nt+v+u+Q+h+t,1,s+H+hl+nt+v+u+Q+h+t,1,s+H+Nr+it+v+u+Q+h+t,1,s+S+je+os+v+u+Q+h+t,1,s+S+Ke+LA+v+u+Q+h+t,1,s+ai+Ye+fA+v+u+Q+h+t,1,s+ai+Ve+fA+v+u+Q+h+t,1,r+ji+Ki+ba+Ka+k+u+Q+h+t,1,r+yA+Yi+Ga+Ka+k+u+Q+h+t,1,r+Vi+Wi+dA+ka+k+u+Q+h+t,1,r+Xi+Zi+S+Ie+k+u+Q+h+t,1,r+WA+ui+ai+yl+k+u+Q+h+t,1,r+\\\" +lat_1=36.73333333333333 +lat_2=37.93333333333333\\\"+AA+ds+k+u+Q+h+t,1,r+\\\" +lat_1=31.16666666666667 +lat_2=32.66666666666666 +lat_0=30.66666666666667\\\"+Co+k+u+Q+h+t,1,r+\\\" +lat_1=29.3 +lat_2=30.7 +lat_0=28.66666666666667\\\"+vt+k+u+Q+h+t,1,s+hA+Vn+E+v+u+Q+h+t,1,s+At+We+fA+v+u+Q+h+t,1,r+\\\" +lat_1=38.3 +lat_2=39.45\\\"+Ce+rg+\\\" +x_0=243840.4876809754\\\"+u+Q+h+t,1,r+\\\" +lat_1=41.71666666666667 +lat_2=42.68333333333333\\\"+kr+za+wd+u+Q+h+t,1,r+\\\" +lat_1=41.28333333333333 +lat_2=41.48333333333333\\\"+kr+Wo+\\\" +x_0=60960.12192024384\\\"+u+Q+h+t,4,r+\\\" +lat_1=47.03333333333333 +lat_2=48.63333333333333\\\"+xr+Xe+k+u+Q+h+t,1,r+\\\" +lat_1=45.61666666666667 +lat_2=47.05\\\"+Ar+xl+k+u+Q+h+t,1,r+\\\" +lat_1=43.78333333333333 +lat_2=45.21666666666667\\\"+gf+tf+k+u+Q+h+t,1,s+Ee+Pe+Ad+v+u+Q+h+t,1,s+lr+jt+LA+v+u+Q+h+t,1,s+Qe+PI+it+v+u+Q+h+t,1,s+Qe+Co+it+v+u+Q+h+t,1,s+ur+TI+LA+v+u+Q+h+t,1,r+\\\" +lat_1=34.41666666666666 +lat_2=33.86666666666667 +lat_0=34.13333333333333\\\"+or+\\\" +x_0=1276106.450596901 +y_0=1268253.006858014\\\"+Q+h+t,48,s+lA+Vn+E+et+u+i+e+h+t,1,s+At+We+fA+ao+u+i+e+h+t,1,r+la+ha+xr+Xe+UA+OA+i+e+h+t,1,r+ic+ga+Ar+xl+UA+OA+i+e+h+t,1,r+ca+fa+gf+tf+UA+OA+i+e+h+t,1,r+el+El+ua+fe+aA+u+i+e+h+t,1,r+sc+RI+Bc+un+x+u+i+e+h+t,1,r+wa+Ea+Kd+ce+x+u+i+e+h+t,1,s+lA+Vn+E+et+u+i+e+h+t,1,s+At+We+fA+ao+u+i+e+h+t,1,r+la+ha+xr+Xe+UA+OA+i+e+h+t,1,r+ic+ga+Ar+xl+UA+OA+i+e+h+t,1,r+ca+fa+gf+tf+UA+OA+i+e+h+t,1,r+el+El+ua+fe+aA+u+i+e+h+t,1,r+sc+RI+Bc+un+x+u+i+e+h+t,1,r+wa+Ea+Kd+ce+x+u+i+e+h+t,1,s+lA+Vn+E+et+u+i+e+h+t,1,s+At+We+fA+ao+u+i+e+h+t,1,r+la+ha+xr+Xe+UA+OA+i+e+h+t,1,r+ic+ga+Ar+xl+UA+OA+i+e+h+t,1,r+ca+fa+gf+tf+UA+OA+i+e+h+t,1,r+el+El+ua+fe+aA+u+i+e+h+t,1,r+sc+RI+Bc+un+x+u+i+e+h+t,1,r+wa+Ea+Kd+ce+x+u+i+e+h+t,21,s+c+hs+E+kA+u+i+e+a+t,1,s+c+ce+E+kA+u+i+e+a+t,1,s+c+Wc+E+kA+u+i+e+a+t,1,s+c+Il+E+kA+u+i+e+a+t,1,s+c+Jt+E+kA+u+i+e+a+t,1,s+c+cp+E+kA+u+i+e+a+t,1,s+c+$f+E+kA+u+i+e+a+t,1,s+c+\\\" +lon_0=-53\\\"+E+kA+u+i+e+a+t,1,s+c+RQ+E+kA+u+i+e+a+t,2,l+Dp+i+e+a+t,1,l+O_+i+e+a+t,1,l+oy+i+e+a+t,1,l+H_+i+e+a+t,1,l+MI+i+e+a+t,1,l+rp+i+e+a+t,1,l+bI+i+e+a+t,1,l+P_+i+e+a+t,1,l+T_+i+e+a+t,1,l+Md+i+e+a+t,1,l+Bf+i+e+a+t,1,l+wf+i+e+a+t,1,l+Ef+i+e+a+t,1,l+Qf+i+e+a+t,1,l+qc+i+e+a+t,1,l+zc+i+e+a+t,1,l+wr+i+e+a+t,1,l+To+i+e+a+t,1,l+wo+i+e+a+t,1,l+On+i+e+a+t,1,l+Ho+i+e+a+t,1,l+mr+i+e+a+t,1,l+Sg+i+e+a+t,6,s+lr+nr+Ad+N+u+i+e+a+t,1,s+kn+jf+it+x+u+i+e+a+t,1,de+\\\" +lat_0=57\\\"+xh+Mh+E+eg+as+Ol+fn+i+e+a+t,1,s+Na+wy+E+d+u+i+e+a+t,1,s+Na+Ey+E+d+u+i+e+a+t,1,s+Na+Tf+E+d+u+i+e+a+t,1,s+Na+wc+E+d+u+i+e+a+t,1,s+Na+Jl+E+d+u+i+e+a+t,1,s+Na+yy+E+d+u+i+e+a+t,1,s+Na+Qy+E+d+u+i+e+a+t,1,s+Na+Hp+E+d+u+i+e+a+t,1,r+bh+Dh+kC+my+Et+u+i+e+a+t,1,r+di+El+X+Pn+kt+bA+i+e+a+t,1,r+Ii+pi+$+Pn+kt+bA+i+e+a+t,1,r+PA+_i+uc+rA+kt+bA+i+e+a+t,1,r+Kh+Hd+Ci+dc+kt+bA+i+e+a+t,1,r+Bi+wi+Ic+Mr+kt+bA+i+e+a+t,1,r+Ei+yi+Qi+Gr+kt+bA+i+e+a+t,2,s+Nt+Ne+E+us+u+i+e+a+t,1,s+Nt+Re+E+us+u+i+e+a+t,1,s+Nt+Sr+it+us+u+i+e+a+t,1,r+Hi+Ji+$A+qo+K+u+i+e+a+t,1,r+qi+Cc+zi+qo+K+br+i+e+a+t,1,r+Qs+ms+X+yt+La+Ua+i+e+a+t,1,r+Yh+Vh+Ce+yt+La+Ua+i+e+a+t,1,r+PA+mi+S+yt+La+Ua+i+e+a+t,1,r+ki+pc+xi+ml+Dd+vd+i+e+a+t,1,s+Me+Fe+_c+N+u+i+e+a+t,1,s+TA+ce+LA+N+u+i+e+a+t,1,s+TA+tu+LA+N+u+i+e+a+t,1,r+Wh+Mi+Jd+Xh+x+u+i+e+a+t,1,s+Bh+Xp+fA+d+u+i+e+a+t,1,s+wh+Vl+fA+d+u+i+e+a+t,1,s+ln+Jl+Bl+d+u+i+e+a+t,1,s+Eh+Zp+Bl+d+u+i+e+a+t,1,s+yh+Wl+\\\" +k=1\\\"+d+u+i+e+a+t,1,s+kn+Le+E+N+u+i+e+a+t,1,s+kn+Ue+E+fs+u+i+e+a+t,1,s+H+Oe+nt+N+u+i+e+a+t,1,s+H+hl+nt+d+u+i+e+a+t,1,s+H+Nr+it+_e+u+i+e+a+t,1,s+S+je+os+oA+u+i+e+a+t,1,s+S+Ke+LA+fs+u+i+e+a+t,1,s+ai+Ye+fA+pt+ql+i+e+a+t,1,s+ai+Ve+fA+ao+ql+i+e+a+t,1,r+ji+Ki+ba+Ka+BA+nA+i+e+a+t,1,r+yA+Yi+Ga+Ka+d+u+i+e+a+t,1,r+Vi+Wi+dA+ka+K+u+i+e+a+t,1,r+Xi+Zi+S+Ie+K+br+i+e+a+t,2,r+ks+xs+AA+ds+d+bA+i+e+a+t,1,r+oa+ra+lr+Co+Et+u+i+e+a+t,1,r+Rf+Ff+Lf+vt+Et+u+i+e+a+t,1,s+lA+Vn+E+oA+u+i+e+a+t,1,s+At+We+fA+ao+u+i+e+a+t,1,r+Xg+xf+$+rg+K+u+i+e+a+t,1,r+Ms+bi+kr+za+N+fc+i+e+a+t,1,r+bs+Ds+kr+Wo+d+u+i+e+a+t,1,r+vs+Ss+Gs+Il+tC+u+i+e+a+t,1,r+Mf+Ns+Rs+tt+rd+u+i+e+a+t,1,r+Ot+bf+ba+tt+$h+u+i+e+a+t,1,r+la+ha+xr+Xe+_e+ts+i+e+a+t,1,r+ic+ga+Ar+xl+_e+ts+i+e+a+t,1,r+ca+fa+gf+tf+_e+ts+i+e+a+t,1,s+Eo+Pe+he+oA+u+i+e+a+t,1,s+Eo+jt+he+fs+u+i+e+a+t,1,s+Qe+PI+it+qt+u+i+e+a+t,1,s+Qe+Co+it+d+u+i+e+a+t,1,s+ur+TI+LA+hy+u+i+e+a+t,41,l+Vr+b+oi+a+t,1,l+oc+b+oi+a+t,80,l+On+_+F_+a+t,80,\\\"+proj=nzmg +lat_0=-41 +lon_0=173 +x_0=2510000 +y_0=6023150\\\"+_+y+a+t,5,s+\\\" +lat_0=-36.87986527777778 +lon_0=174.7643393611111\\\"+E+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-37.76124980555556 +lon_0=176.46619725 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-38.62470277777778 +lon_0=177.8856362777778 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-39.65092930555556 +lon_0=176.6736805277778 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-39.13575830555556 +lon_0=174.22801175 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-39.51247038888889 +lon_0=175.6400368055556 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-40.24194713888889 +lon_0=175.4880996111111 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-40.92553263888889 +lon_0=175.6473496666667 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-41.30131963888888 +lon_0=174.7766231111111 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-40.71475905555556 +lon_0=172.6720465 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-41.27454472222222 +lon_0=173.2993168055555 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-41.28991152777778 +lon_0=172.1090281944444 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-41.81080286111111 +lon_0=171.5812600555556 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-42.33369427777778 +lon_0=171.5497713055556 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-42.68911658333333 +lon_0=173.0101333888889 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-41.54448666666666 +lon_0=173.8020741111111 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-42.88632236111111 +lon_0=170.9799935 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-43.11012813888889 +lon_0=170.2609258333333 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-43.97780288888889 +lon_0=168.606267 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-43.59063758333333 +lon_0=172.7271935833333 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-43.74871155555556 +lon_0=171.3607484722222 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-44.40222036111111 +lon_0=171.0572508333333 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-44.73526797222222 +lon_0=169.4677550833333 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-45.13290258333333 +lon_0=168.3986411944444 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-45.56372616666666 +lon_0=167.7388617777778 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-45.81619661111111 +lon_0=170.6285951666667 +k=1\\\"+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-45.86151336111111 +lon_0=170.2825891111111\\\"+Ad+oA+ni+_+y+a+t,1,s+\\\" +lat_0=-46.60000961111111 +lon_0=168.342872 +k=1 +x_0=300002.66 +y_0=699999.58\\\"+_+y+a+t,26,l+vg+T+_+y+a+t,1,l+_f+T+_+y+a+t,1,l+Lu+T+_+y+a+t,31,s+\\\" +lat_0=-39 +lon_0=175.5 +k=1 +x_0=274319.5243848086 +y_0=365759.3658464114\\\"+_+y+U_+t,1,s+SQ+\\\" +lon_0=171.5 +k=1 +x_0=457199.2073080143 +y_0=457199.2073080143\\\"+_+y+U_+t,99,s+ma+\\\" +lon_0=-4.666666666666667 +k=1\\\"+z+u+ko+es+mA+Gp+a+t,1,s+ma+\\\" +lon_0=-2.333333333333333 +k=1\\\"+z+u+ko+es+mA+Gp+a+t,1,s+ma+$n+\\\" +k=1\\\"+z+u+ko+es+mA+Gp+a+t,1,s+ma+\\\" +lon_0=2.5 +k=1\\\"+z+u+ko+es+mA+Gp+a+t,1,s+ma+iw+\\\" +k=1\\\"+z+u+ko+es+mA+Gp+a+t,1,s+ma+\\\" +lon_0=10.16666666666667 +k=1\\\"+z+u+ko+es+mA+Gp+a+t,1,s+ma+\\\" +lon_0=14.16666666666667 +k=1\\\"+z+u+ko+es+mA+Gp+a+t,1,s+ma+\\\" +lon_0=18.33333333333333 +k=1\\\"+z+u+ko+es+mA+Gp+a+t,31,l+Rl+_+Yr+a+t,64,s+wt+TC+\\\" +k=1 +x_0=180.598 +y_0=-86.98999999999999\\\"+_+Yr+a+t,7,r+bu+Du+\\\" +lon_0=5.399999999999999 +k_0=0.99950908\\\"+d+yo+\\\" +a=6376523\\\"+EI+_Q+a+t,61,r+bu+Du+$n+\\\" +k_0=0.999877341\\\"+x+Vo+CA+ht+Gt+kg+a+t,1,r+\\\" +lat_1=46.8 +lat_0=46.8\\\"+$n+\\\" +k_0=0.99987742\\\"+x+Vo+CA+ht+Gt+kg+a+t,1,r+ty+ey+$n+\\\" +k_0=0.999877499\\\"+x+Vo+CA+ht+Gt+kg+a+t,1,r+iy+sy+$n+\\\" +k_0=0.99994471 +x_0=234.358 +y_0=185861.369\\\"+CA+ht+Gt+kg+a+t,7,r+bu+Du+$n+\\\" +k_0=0.999877341\\\"+x+$_+CA+ht+Gt+kg+a+t,1,r+\\\" +lat_1=46.8 +lat_0=46.8\\\"+$n+\\\" +k_0=0.99987742\\\"+x+\\\" +y_0=2200000\\\"+CA+ht+Gt+kg+a+t,1,r+ty+ey+$n+\\\" +k_0=0.999877499\\\"+x+\\\" +y_0=3200000\\\"+CA+ht+Gt+kg+a+t,1,r+iy+sy+$n+\\\" +k_0=0.99994471 +x_0=234.358 +y_0=4185861.369\\\"+CA+ht+Gt+kg+a+t,126,s+\\\" +lat_0=49 +lon_0=-2 +k=0.9996012717\\\"+K+\\\" +y_0=-100000\\\"+Ku+Mg+a+t,491,ve+Ph+Th+CI+\\\" +y_0=126867.909\\\"+sf+af+gi+a+t,1,s+Ph+Th+\\\" +k=1\\\"+CI+\\\" +y_0=1126867.909\\\"+sf+af+gi+a+t,1,ve+Ph+Th+CI+\\\" +y_0=1126867.909\\\"+sf+af+gi+a+t,39,l+Wr+T+CA+ht+m_+a+t,116,l+hc+T+i+e+a+t,1,l+gc+T+i+e+a+t,1,l+Kc+T+i+e+a+t,1,l+lc+T+i+e+a+t,1,l+Yc+T+i+e+a+t,1,l+Cu+T+i+e+a+t,1,l+yf+T+i+e+a+t,1,l+Uu+T+i+e+a+t,1,l+ZI+T+i+e+a+t,1,l+Sp+T+i+e+a+t,1,l+vg+T+i+e+a+t,46,s+c+mn+\\\" +k=1\\\"+ri+u+f+n+a+t,1,s+c+Ao+\\\" +k=1\\\"+ys+u+f+n+a+t,1,s+c+zo+\\\" +k=1\\\"+Ml+u+f+n+a+t,1,s+c+jh+\\\" +k=1\\\"+Xo+u+f+n+a+t,1,s+c+tl+\\\" +k=1\\\"+Vg+u+f+n+a+t,1,s+c+qu+\\\" +k=1\\\"+Wg+u+f+n+a+t,1,s+c+GI+\\\" +k=1\\\"+ig+u+f+n+a+t,1,s+c+jd+\\\" +k=1\\\"+Ql+u+f+n+a+t,1,s+c+NI+\\\" +k=1\\\"+sg+u+f+n+a+t,1,s+c+to+\\\" +k=1\\\"+no+u+f+n+a+t,1,s+c+eo+\\\" +k=1\\\"+Fn+u+f+n+a+t,1,s+c+Io+\\\" +k=1\\\"+Go+u+f+n+a+t,1,s+c+io+\\\" +k=1\\\"+No+u+f+n+a+t,1,s+c+so+\\\" +k=1\\\"+Dr+u+f+n+a+t,1,s+c+ss+\\\" +k=1\\\"+vo+u+f+n+a+t,1,s+c+Oa+\\\" +k=1\\\"+So+u+f+n+a+t,1,s+c+xa+\\\" +k=1\\\"+oo+u+f+n+a+t,1,s+c+Sa+\\\" +k=1\\\"+Ro+u+f+n+a+t,1,s+c+Bs+\\\" +k=1\\\"+ro+u+f+n+a+t,1,s+c+Ma+\\\" +k=1\\\"+Fo+u+f+n+a+t,1,s+c+id+\\\" +k=1\\\"+ag+u+f+n+a+t,1,s+c+iu+\\\" +k=1\\\"+Lo+u+f+n+a+t,1,s+c+$c+\\\" +k=1\\\"+Uo+u+f+n+a+t,1,s+c+sd+\\\" +k=1\\\"+Oo+u+f+n+a+t,1,s+c+Af+\\\" +k=1\\\"+Po+u+f+n+a+t,1,s+c+hg+\\\" +k=1\\\"+Ln+u+f+n+a+t,1,s+c+Tl+\\\" +k=1\\\"+sr+u+f+n+a+t,1,s+c+Hl+\\\" +k=1\\\"+In+u+f+n+a+t,1,s+c+cg+\\\" +k=1\\\"+ar+u+f+n+a+t,168,s+\\\" +lat_0=24.45\\\"+ow+Bl+N+yo+_+Ud+a+t,391,rn+ay+Yy+\\\" +k=0.9999079\\\"+z+u+m+Fa+a+t,1,rn+ay+Yy+\\\" +k=0.9999079 +x_0=155000 +y_0=463000\\\"+m+Fa+a+t,109,FC+c+ef+eg+RA+W+FA+a+t,67,l+To+W+FA+a+t,1,l+wo+W+FA+a+t,1,l+On+W+FA+a+t,1,l+Ho+W+FA+a+t,1,l+mr+W+FA+a+t,15,l+wr+T+W+FA+a+t,1,l+To+T+W+FA+a+t,1,l+wo+T+W+FA+a+t,1,l+On+T+W+FA+a+t,1,l+Ho+T+W+FA+a+t,1,l+mr+T+W+FA+a+t,1,l+Sg+T+W+FA+a+t,1,l+mf+T+W+FA+a+t,1,l+Cf+T+W+FA+a+t,25,l+On+T+_+df+a+t,1,l+Ho+T+_+df+a+t,112,l+Ll+T+Tn+Ht+a+t,38,s+nd+\\\" +lon_0=11 +k=1\\\"+z+u+Qn+Tn+Ht+Xa+t,2,s+nd+\\\" +lon_0=13 +k=1\\\"+z+u+Qn+Tn+Ht+Xa+t,2,s+nd+yn+\\\" +k=1\\\"+z+u+Qn+Tn+Ht+Xa+t,2,s+nd+BC+\\\" +k=1\\\"+z+u+Qn+Tn+Ht+Xa+t,2,s+nd+DI+\\\" +k=1\\\"+z+u+Qn+Tn+Ht+Xa+t,2,s+nd+mn+\\\" +k=1\\\"+z+u+Qn+Tn+Ht+Xa+t,2,s+nd+Rp+\\\" +k=1\\\"+z+u+Qn+Tn+Ht+Xa+t,2,s+nd+vI+\\\" +k=1\\\"+z+u+Qn+Tn+Ht+Xa+t,317,de+\\\" +lat_0=-18.9 +lonc=44.10000000000001 +alpha=18.9\\\"+ns+K+le+\\\" +gamma=18.9\\\"+_+Jn+kg+a+t,36,l+rl+T+_+Jn+a+t,1,l+Vr+T+_+Jn+a+t,110,l+gc+Cg+qa+a+t,1,l+Kc+Cg+qa+a+t,21,de+sI+aQ+vu+ad+\\\" +x_0=590476.8714630401 +y_0=442857.653094361\\\"+Ir+Cg+qa+\\\" +to_meter=20.11676512155263\\\"+t,1,de+sI+aQ+vu+ad+\\\" +x_0=590476.8727431979 +y_0=442857.6545573985\\\"+Ir+Cg+qa+\\\" +to_meter=0.3047994715386762\\\"+t,1,de+sI+aQ+vu+ad+\\\" +x_0=590476.87 +y_0=442857.65\\\"+Ir+Cg+qa+a+t,28,s+ry+\\\" +lon_0=-8 +k=1\\\"+N+ql+Ku+Qt+a+t,1,s+ry+\\\" +lon_0=-8 +k=1.000035\\\"+N+ql+hu+Qt+a+t,1,s+ry+\\\" +lon_0=-8 +k=1.000035\\\"+N+ql+hu+Qt+a+t,258,s+zu+im+E+z+u+m+G+a+t,1,s+zu+Zc+E+z+u+m+G+a+t,1,s+$a+yu+E+z+u+m+G+a+t,1,s+zu+AC+E+z+u+m+G+a+t,1,s+$a+Qu+E+z+u+m+G+a+t,1,s+$a+Ip+E+z+u+m+G+a+t,1,s+$a+mu+E+z+u+m+G+a+t,1,s+$a+sm+E+z+u+m+G+a+t,1,s+$a+ku+E+z+u+m+G+a+t,1,s+Ga+xu+E+z+u+m+G+a+t,1,s+hr+fQ+E+z+u+m+G+a+t,1,s+hr+uQ+E+z+u+m+G+a+t,1,s+hr+dQ+E+z+u+m+G+a+t,1,s+tr+\\\" +lon_0=142\\\"+E+z+u+m+G+a+t,1,s+tr+od+E+z+u+m+G+a+t,1,s+tr+\\\" +lon_0=124\\\"+E+z+u+m+G+a+t,1,s+tr+Zc+E+z+u+m+G+a+t,1,s+\\\" +lat_0=20\\\"+Ip+E+z+u+m+G+a+t,1,s+tr+yQ+E+z+u+m+G+a+t,21,ve+sw+OC+\\\" +x_0=86501.46392051999\\\"+Em+ws+Es+Kr+Aw+t,139,l+Vr+xn+a+t,1,l+oc+xn+a+t,151,r+\\\" +lat_1=36\\\"+$a+Ep+Rd+d+yo+CA+ht+Or+a+t,1,r+Vp+Wp+Ep+cf+d+yo+CA+ht+Or+a+t,1,r+\\\" +lat_1=36\\\"+$a+Ep+Rd+d+yo+CA+ht+a+t,1,r+Vp+Wp+Ep+cf+d+yo+CA+ht+a+t,235,l+Rl+b+DA+a+t,1,l+Iu+b+DA+a+t,1,l+xd+b+DA+a+t,1,l+Wr+b+DA+a+t,59,r+\\\" +lat_1=36\\\"+$a+Ep+Rd+\\\" +x_0=500135 +y_0=300090\\\"+b+DA+a+t,1,r+Vp+Wp+Ep+cf+\\\" +x_0=500135 +y_0=300090\\\"+b+DA+a+t,236,l+ll+CA+ht+a+t,93,l+Ho+_+qn+a+t,33,s+c+ef+uA+d+u+_+qn+a+t,16,s+c+$B+uA+d+u+_+qn+a+t,1,s+c+$B+E+d+u+_+qn+a+t,80,s+c+LI+\\\" +k=1\\\"+z+as+m+KA+yg+a+t,1,s+c+Pd+\\\" +k=1\\\"+z+as+m+KA+yg+a+t,1,s+c+cQ+\\\" +k=1\\\"+z+as+m+KA+yg+a+t,1,s+c+Su+\\\" +k=1\\\"+z+as+m+Z+a+t,1,s+c+pr+\\\" +k=1\\\"+z+as+m+Z+a+t,1,s+c+Gu+\\\" +k=1\\\"+z+as+m+Z+a+t,1,s+c+Su+\\\" +k=1\\\"+Ft+as+m+Z+a+t,1,s+c+pr+\\\" +k=1 +x_0=450000\\\"+as+m+Z+a+t,1,s+c+Gu+\\\" +k=1\\\"+Cy+as+m+Z+a+t,22,s+c+LI+\\\" +k=1\\\"+z+u+m+KA+yg+a+t,1,s+c+Pd+\\\" +k=1\\\"+z+u+m+KA+yg+a+t,1,s+c+cQ+\\\" +k=1\\\"+z+u+m+KA+yg+a+t,1,s+c+Su+\\\" +k=1\\\"+Ft+u+m+Z+a+t,1,s+c+pr+\\\" +k=1 +x_0=450000\\\"+u+m+Z+a+t,1,s+c+Gu+\\\" +k=1\\\"+Cy+u+m+Z+a+t,1,r+zh+lf+\\\" +lat_0=47.5\\\"+pr+K+br+m+Z+a+t,1,s+c+LI+\\\" +k=1\\\"+Ft+u+m+KA+yg+a+t,1,s+c+Pd+\\\" +k=1 +x_0=450000\\\"+u+m+KA+yg+a+t,1,s+c+cQ+\\\" +k=1\\\"+Cy+u+m+KA+yg+a+t,10,r+mh+kh+Do+\\\" +lon_0=4.356939722222222 +x_0=150000.01256 +y_0=5400088.4378\\\"+_+en+a+t,70,r+\\\" +lat_1=51.16666723333333 +lat_2=49.8333339\\\"+Do+\\\" +lon_0=4.367486666666666 +x_0=150000.013 +y_0=5400088.438\\\"+_+en+a+t,96,s+c+BQ+\\\" +k=1\\\"+be+u+m+tA+a+t,1,s+c+Fl+\\\" +k=1\\\"+Lt+u+m+tA+a+t,1,s+c+jo+\\\" +k=1\\\"+ri+u+m+tA+a+t,1,s+c+yn+\\\" +k=1\\\"+ys+u+m+tA+a+t,59,l+ll+CA+ht+If+a+t,1,l+Rl+CA+ht+If+a+t,71,rn+\\\" +lat_0=45.9 +lon_0=25.39246588888889 +k=0.9996667\\\"+d+bA+_+Od+a+t,238,l+rl+F+Yg+a+t,1,l+Vr+F+Yg+a+t,62,s+c+Fp+\\\" +k=1\\\"+d+u+i+gp+a+t,64,l+Bf+i+e+a+t,1,l+wf+i+e+a+t,1,l+Ef+i+e+a+t,1,l+Qf+i+e+a+t,1,l+qc+i+e+a+t,1,l+zc+i+e+a+t,1,l+wr+i+e+a+t,1,l+To+i+e+a+t,1,l+wo+i+e+a+t,1,l+On+i+e+a+t,1,l+Ho+i+e+a+t,1,l+mr+i+e+a+t,1,l+wr+T+i+e+a+t,1,l+To+T+i+e+a+t,1,l+wo+T+i+e+a+t,1,l+On+T+i+e+a+t,1,l+Ho+T+i+e+a+t,1,l+mr+T+i+e+a+t,1,l+Sg+T+i+e+a+t,1,l+mf+T+i+e+a+t,1,l+Cf+T+i+e+a+t,1,l+wr+i+e+a+t,1,l+To+i+e+a+t,1,l+wo+i+e+a+t,1,l+On+i+e+a+t,1,l+Ho+i+e+a+t,1,l+mr+i+e+a+t,1,l+wr+T+i+e+a+t,1,l+To+T+i+e+a+t,1,l+wo+T+i+e+a+t,1,l+On+T+i+e+a+t,1,l+Ho+T+i+e+a+t,1,l+mr+T+i+e+a+t,1,l+Sg+T+i+e+a+t,1,l+mf+T+i+e+a+t,1,l+Cf+T+i+e+a+t,1,r+\\\" +lat_1=48.71666666666667 +lat_2=47.85\\\"+cr+ir+k+u+Q+h+t,1,r+\\\" +lat_1=47.88333333333333 +lat_2=46.45 +lat_0=45.83333333333334\\\"+ir+k+u+Q+h+t,1,r+\\\" +lat_1=46.4 +lat_2=44.86666666666667\\\"+hr+ir+k+u+Q+h+t,2,r+\\\" +lat_1=41.85 +lat_2=42.81666666666667 +lat_0=41.33333333333334\\\"+fe+k+u+Q+h+t,1,r+\\\" +lat_1=40.28333333333333\\\"+bi+wt+\\\" +lon_0=-99.5\\\"+k+u+Q+h+t,1,s+ge+Ze+E+v+u+Q+h+t,1,s+ge+$e+E+v+u+Q+h+t,1,s+ge+Ai+E+v+u+Q+h+t,1,s+Da+ti+fA+v+u+Q+h+t,1,s+XA+\\\" +lon_0=-74.66666666666667\\\"+os+k+u+Q+h+t,1,s+Nt+Te+mo+v+u+Q+h+t,1,s+Nt+Rr+E+v+u+Q+h+t,1,s+Nt+He+Fr+v+u+Q+h+t,1,s+Ga+\\\" +lon_0=-74.33333333333333\\\"+fA+v+u+Q+h+t,1,s+Ga+Je+MA+v+u+Q+h+t,1,s+Ga+qe+MA+v+u+Q+h+t,2,r+\\\" +lat_1=34.33333333333334 +lat_2=36.16666666666666\\\"+Zh+Xc+k+u+Q+h+t,1,r+\\\" +lat_1=47.43333333333333\\\"+ny+cr+Is+k+u+Q+h+t,1,r+\\\" +lat_1=46.18333333333333 +lat_2=47.48333333333333\\\"+xt+Is+k+u+Q+h+t,1,r+\\\" +lat_1=40.43333333333333 +lat_2=41.7\\\"+wt+hs+k+u+Q+h+t,1,r+\\\" +lat_1=38.73333333333333 +lat_2=40.03333333333333\\\"+Me+hs+k+u+Q+h+t,1,r+\\\" +lat_1=35.56666666666667\\\"+Oi+qd+ka+k+u+Q+h+t,1,r+\\\" +lat_1=33.93333333333333 +lat_2=35.23333333333333\\\"+Gi+ka+k+u+Q+h+t,1,r+\\\" +lat_1=44.33333333333334\\\"+lf+lA+rA+k+u+Q+h+t,1,r+\\\" +lat_1=42.33333333333334 +lat_2=44\\\"+H+rA+k+u+Q+h+t,1,r+\\\" +lat_1=40.88333333333333 +lat_2=41.95\\\"+ZA+ps+k+u+Q+h+t,2,s+$i+za+\\\" +k=0.9999938\\\"+v+u+Q+h+t,1,r+\\\" +lat_1=33.76666666666667 +lat_2=34.96666666666667\\\"+zu+ce+k+u+Q+h+t,2,r+\\\" +lat_1=32.33333333333334 +lat_2=33.66666666666666\\\"+Fi+ce+k+u+Q+h+t,1,r+\\\" +lat_1=44.41666666666666 +lat_2=45.68333333333333\\\"+hA+fe+k+u+Q+h+t,1,r+\\\" +lat_1=42.83333333333334 +lat_2=44.4\\\"+As+vA+k+u+Q+h+t,2,r+dm+\\\" +lat_2=36.18333333333333\\\"+zd+kl+k+u+Q+h+t,1,r+\\\" +lat_1=32.13333333333333 +lat_2=33.96666666666667\\\"+Li+\\\" +lon_0=-97.5\\\"+k+u+Q+h+t,1,r+\\\" +lat_1=30.11666666666667 +lat_2=31.88333333333333\\\"+Ee+vA+k+u+Q+h+t,1,r+\\\" +lat_1=28.38333333333333 +lat_2=30.28333333333333\\\"+Ui+pl+k+u+Q+h+t,1,r+\\\" +lat_1=26.16666666666667 +lat_2=27.83333333333333\\\"+ye+Ie+k+u+Q+h+t,1,r+\\\" +lat_1=40.71666666666667 +lat_2=41.78333333333333\\\"+Pt+at+k+u+Q+h+t,1,r+\\\" +lat_1=39.01666666666667 +lat_2=40.65\\\"+dA+at+k+u+Q+h+t,1,r+\\\" +lat_1=37.21666666666667 +lat_2=38.35\\\"+S+at+k+u+Q+h+t,1,s+Da+tg+Lr+v+u+Q+h+t,1,r+\\\" +lat_1=38.03333333333333 +lat_2=39.2\\\"+$+ja+k+u+Q+h+t,1,r+Si+\\\" +lat_2=37.96666666666667\\\"+AA+ja+k+u+Q+h+t,1,r+\\\" +lat_1=47.5\\\"+ny+cr+ze+k+u+Q+h+t,1,r+\\\" +lat_1=45.83333333333334 +lat_2=47.33333333333334\\\"+Pi+rA+k+u+Q+h+t,1,r+\\\" +lat_1=39 +lat_2=40.25\\\"+Bc+un+k+u+Q+h+t,1,r+\\\" +lat_1=37.48333333333333 +lat_2=38.88333333333333\\\"+Kd+ce+k+u+Q+h+t,1,r+\\\" +lat_1=45.56666666666667 +lat_2=46.76666666666667\\\"+Ti+Jt+k+u+Q+h+t,1,r+\\\" +lat_1=44.25\\\"+Qo+hA+Jt+k+u+Q+h+t,1,r+\\\" +lat_1=42.73333333333333 +lat_2=44.06666666666667\\\"+Ju+Jt+k+u+Q+h+t,1,s+qh+ei+LA+v+u+Q+h+t,1,s+qh+ii+LA+v+u+Q+h+t,1,s+qh+Ur+LA+v+u+Q+h+t,1,s+qh+si+LA+v+u+Q+h+t,6,s+c+pl+uA+L+u+Q+h+t,1,s+c+cp+uA+L+u+Q+h+t,1,s+c+Il+uA+L+u+Q+h+t,1,s+c+ce+uA+L+u+Q+h+t,14,s+c+\\\" +lon_0=-53\\\"+E+kA+u+Q+a+t,1,s+c+RQ+E+kA+u+Q+a+t,1,s+c+V_+E+kA+u+Q+a+t,1,s+c+UI+E+kA+u+Q+a+t,1,s+c+OI+E+kA+u+Q+a+t,1,s+c+W_+E+kA+u+Q+a+t,12,r+wC+lf+hr+Vn+z+u+Q+a+t,1,r+Zt+$t+ye+vt+k+u+Q+h+t,1,r+zh+SI+Zg+ir+x+u+i+e+a+t,4,r+el+El+ua+fe+d+u+i+e+a+t,3,s+ge+Ze+E+N+eC+i+e+a+t,1,s+ge+$e+E+d+Bo+i+e+a+t,1,s+ge+Ai+E+_e+Ag+i+e+a+t,1,s+Da+ti+fA+oA+u+i+e+a+t,1,s+XA+bn+E+Ft+u+i+e+a+t,1,s+Nt+Te+mo+Df+u+i+e+a+t,1,s+Nt+Rr+E+d+u+i+e+a+t,1,s+Nt+He+Fr+gy+u+i+e+a+t,1,s+XA+bn+E+Ft+u+i+e+a+t,1,s+Ga+Je+MA+qt+u+i+e+a+t,1,s+Ga+qe+MA+hI+u+i+e+a+t,1,r+Di+vi+ZA+eu+oA+u+i+e+a+t,1,r+Fs+Ls+Zh+Xc+tp+u+i+e+a+t,1,r+st+Us+cr+Is+x+u+i+e+a+t,1,r+Os+Ps+xt+Is+x+u+i+e+a+t,1,r+Uf+da+wt+hs+x+u+i+e+a+t,1,r+Ia+pa+Me+hs+x+u+i+e+a+t,1,r+Si+Ts+qd+ka+x+u+i+e+a+t,1,r+Hs+Js+Gi+ka+x+u+i+e+a+t,1,r+Tu+Be+lA+rA+be+u+i+e+a+t,1,r+Hu+we+H+rA+BA+u+i+e+a+t,1,r+$g+qs+ZA+ps+x+u+i+e+a+t,1,r+Ni+Ri+X+ps+x+u+i+e+a+t,1,s+$i+za+ng+pt+u+i+e+a+t,3,r+zs+vf+Fi+ce+Sf+u+i+e+a+t,1,r+_a+Ca+hA+fe+x+u+i+e+a+t,1,r+Of+Ba+As+vA+x+u+i+e+a+t,1,r+js+Ac+$A+Kg+x+u+i+e+a+t,1,r+Ks+tc+zd+kl+N+nA+i+e+a+t,1,r+Ys+Vs+Li+Ie+x+Se+i+e+a+t,1,r+Ws+Xs+Ee+vA+fs+va+i+e+a+t,1,r+Zs+$s+Ui+pl+x+Ag+i+e+a+t,1,r+Zt+$t+ye+Ie+oA+bl+i+e+a+t,1,r+yA+Ae+Pt+at+d+nA+i+e+a+t,1,r+Hr+te+dA+at+d+Se+i+e+a+t,1,r+Jr+ee+S+at+d+va+i+e+a+t,1,s+Da+tg+Lr+d+u+i+e+a+t,1,r+Gf+Aa+$+ja+Lt+Se+i+e+a+t,1,r+WA+Oi+AA+ja+Lt+nA+i+e+a+t,1,r+st+Nf+cr+ze+d+u+i+e+a+t,1,r+ta+ea+Pi+rA+d+u+i+e+a+t,1,r+sc+RI+Bc+un+x+u+i+e+a+t,1,r+wa+Ea+Kd+ce+x+u+i+e+a+t,1,r+ia+sa+Ti+Jt+x+u+i+e+a+t,1,r+gl+ec+hA+Jt+x+u+i+e+a+t,1,r+aa+na+Ju+Jt+x+u+i+e+a+t,1,s+Vt+ei+MA+N+u+i+e+a+t,1,s+Vt+ii+MA+K+ts+i+e+a+t,1,s+Vt+Ur+MA+x+u+i+e+a+t,1,s+Vt+si+MA+_e+ts+i+e+a+t,3,r+hn+gn+cn+Ta+N+Vo+i+e+a+t,3,s+c+pl+uA+L+u+i+e+h+t,1,s+c+cp+uA+L+u+i+e+h+t,1,s+c+Il+uA+L+u+i+e+h+t,1,s+c+ce+uA+L+u+i+e+h+t,14,s+c+\\\" +lon_0=-53\\\"+E+kA+u+i+e+a+t,1,s+c+RQ+E+kA+u+i+e+a+t,1,s+c+V_+E+kA+u+i+e+a+t,1,s+c+UI+E+kA+u+i+e+a+t,1,s+c+OI+E+kA+u+i+e+a+t,1,s+c+W_+E+kA+u+i+e+a+t,1,s+c+Wo+E+kA+u+i+e+a+t,1,s+c+X_+E+kA+u+i+e+a+t,1,s+c+Z_+E+kA+u+i+e+a+t,1,s+c+un+E+kA+u+i+e+a+t,1,s+c+hs+E+kA+u+i+e+a+t,1,s+c+ce+E+kA+u+i+e+a+t,1,s+c+Wc+E+kA+u+i+e+a+t,1,s+c+Il+E+kA+u+i+e+a+t,1,s+c+Jt+E+kA+u+i+e+a+t,1,s+c+cp+E+kA+u+i+e+a+t,1,s+c+$f+E+kA+u+i+e+a+t,1,r+wC+lf+hr+Vn+z+u+i+e+a+t,1,r+Zt+$t+\\\" +lat_0=25.5\\\"+vt+Et+u+i+e+a+t,2,l+Dp+B+I+a+t,1,l+O_+B+I+a+t,1,l+oy+B+I+a+t,1,l+H_+B+I+a+t,1,l+MI+B+I+a+t,1,l+rp+B+I+a+t,1,l+bI+B+I+a+t,1,l+P_+B+I+a+t,1,l+T_+B+I+a+t,1,l+Md+B+I+a+t,1,l+Bf+B+I+a+t,1,l+wf+B+I+a+t,1,l+Ef+B+I+a+t,1,l+Qf+B+I+a+t,1,l+qc+B+I+a+t,1,l+zc+B+I+a+t,1,l+wr+B+I+a+t,1,l+To+B+I+a+t,1,l+wo+B+I+a+t,1,l+On+B+I+a+t,1,l+Ho+B+I+a+t,1,l+mr+B+I+a+t,1,l+Sg+B+I+a+t,1,l+mf+B+I+a+t,1,l+Cf+B+I+a+t,1,l+_u+B+I+a+t,1,l+vp+B+I+a+t,1,l+ll+B+I+a+t,1,l+Rl+B+I+a+t,1,l+Iu+B+I+a+t,1,l+xd+B+I+a+t,1,l+Wr+B+I+a+t,1,l+Ll+B+I+a+t,1,l+jc+B+I+a+t,1,l+dh+B+I+a+t,1,l+rc+B+I+a+t,1,l+Ul+B+I+a+t,1,l+rl+B+I+a+t,1,l+Vr+B+I+a+t,1,l+oc+B+I+a+t,1,l+VI+B+I+a+t,1,l+WI+B+I+a+t,1,l+Np+B+I+a+t,1,l+K_+B+I+a+t,1,l+Y_+B+I+a+t,1,l+bd+B+I+a+t,1,l+kf+B+I+a+t,1,l+hc+B+I+a+t,1,l+gc+B+I+a+t,1,l+Kc+B+I+a+t,1,l+lc+B+I+a+t,1,l+Yc+B+I+a+t,1,l+Cu+B+I+a+t,1,l+yf+B+I+a+t,1,l+Uu+B+I+a+t,1,l+ZI+B+I+a+t,1,l+Sp+B+I+a+t,1,l+vg+B+I+a+t,1,l+_f+B+I+a+t,1,l+Lu+B+I+a+t,41,l+Dp+T+B+I+a+t,1,l+O_+T+B+I+a+t,1,l+oy+T+B+I+a+t,1,l+H_+T+B+I+a+t,1,l+MI+T+B+I+a+t,1,l+rp+T+B+I+a+t,1,l+bI+T+B+I+a+t,1,l+P_+T+B+I+a+t,1,l+T_+T+B+I+a+t,1,l+Md+T+B+I+a+t,1,l+Bf+T+B+I+a+t,1,l+wf+T+B+I+a+t,1,l+Ef+T+B+I+a+t,1,l+Qf+T+B+I+a+t,1,l+qc+T+B+I+a+t,1,l+zc+T+B+I+a+t,1,l+wr+T+B+I+a+t,1,l+To+T+B+I+a+t,1,l+wo+T+B+I+a+t,1,l+On+T+B+I+a+t,1,l+Ho+T+B+I+a+t,1,l+mr+T+B+I+a+t,1,l+Sg+T+B+I+a+t,1,l+mf+T+B+I+a+t,1,l+Cf+T+B+I+a+t,1,l+_u+T+B+I+a+t,1,l+vp+T+B+I+a+t,1,l+ll+T+B+I+a+t,1,l+Rl+T+B+I+a+t,1,l+Iu+T+B+I+a+t,1,l+xd+T+B+I+a+t,1,l+Wr+T+B+I+a+t,1,l+Ll+T+B+I+a+t,1,l+jc+T+B+I+a+t,1,l+dh+T+B+I+a+t,1,l+rc+T+B+I+a+t,1,l+Ul+T+B+I+a+t,1,l+rl+T+B+I+a+t,1,l+Vr+T+B+I+a+t,1,l+oc+T+B+I+a+t,1,l+VI+T+B+I+a+t,1,l+WI+T+B+I+a+t,1,l+Np+T+B+I+a+t,1,l+K_+T+B+I+a+t,1,l+Y_+T+B+I+a+t,1,l+bd+T+B+I+a+t,1,l+kf+T+B+I+a+t,1,l+hc+T+B+I+a+t,1,l+gc+T+B+I+a+t,1,l+Kc+T+B+I+a+t,1,l+lc+T+B+I+a+t,1,l+Yc+T+B+I+a+t,1,l+Cu+T+B+I+a+t,1,l+yf+T+B+I+a+t,1,l+Uu+T+B+I+a+t,1,l+ZI+T+B+I+a+t,1,l+Sp+T+B+I+a+t,1,l+vg+T+B+I+a+t,1,l+_f+T+B+I+a+t,1,l+Lu+T+B+I+a+t,41,l+Dp+B+p+a+t,1,l+O_+B+p+a+t,1,l+oy+B+p+a+t,1,l+H_+B+p+a+t,1,l+MI+B+p+a+t,1,l+rp+B+p+a+t,1,l+bI+B+p+a+t,1,l+P_+B+p+a+t,1,l+T_+B+p+a+t,1,l+Md+B+p+a+t,1,l+Bf+B+p+a+t,1,l+wf+B+p+a+t,1,l+Ef+B+p+a+t,1,l+Qf+B+p+a+t,1,l+qc+B+p+a+t,1,l+zc+B+p+a+t,1,l+wr+B+p+a+t,1,l+To+B+p+a+t,1,l+wo+B+p+a+t,1,l+On+B+p+a+t,1,l+Ho+B+p+a+t,1,l+mr+B+p+a+t,1,l+Sg+B+p+a+t,1,l+mf+B+p+a+t,1,l+Cf+B+p+a+t,1,l+_u+B+p+a+t,1,l+vp+B+p+a+t,1,l+ll+B+p+a+t,1,l+Rl+B+p+a+t,1,l+Iu+B+p+a+t,1,l+xd+B+p+a+t,1,l+Wr+B+p+a+t,1,l+Ll+B+p+a+t,1,l+jc+B+p+a+t,1,l+dh+B+p+a+t,1,l+rc+B+p+a+t,1,l+Ul+B+p+a+t,1,l+rl+B+p+a+t,1,l+Vr+B+p+a+t,1,l+oc+B+p+a+t,1,l+VI+B+p+a+t,1,l+WI+B+p+a+t,1,l+Np+B+p+a+t,1,l+K_+B+p+a+t,1,l+Y_+B+p+a+t,1,l+bd+B+p+a+t,1,l+kf+B+p+a+t,1,l+hc+B+p+a+t,1,l+gc+B+p+a+t,1,l+Kc+B+p+a+t,1,l+lc+B+p+a+t,1,l+Yc+B+p+a+t,1,l+Cu+B+p+a+t,1,l+yf+B+p+a+t,1,l+Uu+B+p+a+t,1,l+ZI+B+p+a+t,1,l+Sp+B+p+a+t,1,l+vg+B+p+a+t,1,l+_f+B+p+a+t,1,l+Lu+B+p+a+t,41,l+Dp+T+B+p+a+t,1,l+O_+T+B+p+a+t,1,l+oy+T+B+p+a+t,1,l+H_+T+B+p+a+t,1,l+MI+T+B+p+a+t,1,l+rp+T+B+p+a+t,1,l+bI+T+B+p+a+t,1,l+P_+T+B+p+a+t,1,l+T_+T+B+p+a+t,1,l+Md+T+B+p+a+t,1,l+Bf+T+B+p+a+t,1,l+wf+T+B+p+a+t,1,l+Ef+T+B+p+a+t,1,l+Qf+T+B+p+a+t,1,l+qc+T+B+p+a+t,1,l+zc+T+B+p+a+t,1,l+wr+T+B+p+a+t,1,l+To+T+B+p+a+t,1,l+wo+T+B+p+a+t,1,l+On+T+B+p+a+t,1,l+Ho+T+B+p+a+t,1,l+mr+T+B+p+a+t,1,l+Sg+T+B+p+a+t,1,l+mf+T+B+p+a+t,1,l+Cf+T+B+p+a+t,1,l+_u+T+B+p+a+t,1,l+vp+T+B+p+a+t,1,l+ll+T+B+p+a+t,1,l+Rl+T+B+p+a+t,1,l+Iu+T+B+p+a+t,1,l+xd+T+B+p+a+t,1,l+Wr+T+B+p+a+t,1,l+Ll+T+B+p+a+t,1,l+jc+T+B+p+a+t,1,l+dh+T+B+p+a+t,1,l+rc+T+B+p+a+t,1,l+Ul+T+B+p+a+t,1,l+rl+T+B+p+a+t,1,l+Vr+T+B+p+a+t,1,l+oc+T+B+p+a+t,1,l+VI+T+B+p+a+t,1,l+WI+T+B+p+a+t,1,l+Np+T+B+p+a+t,1,l+K_+T+B+p+a+t,1,l+Y_+T+B+p+a+t,1,l+bd+T+B+p+a+t,1,l+kf+T+B+p+a+t,1,l+hc+T+B+p+a+t,1,l+gc+T+B+p+a+t,1,l+Kc+T+B+p+a+t,1,l+lc+T+B+p+a+t,1,l+Yc+T+B+p+a+t,1,l+Cu+T+B+p+a+t,1,l+yf+T+B+p+a+t,1,l+Uu+T+B+p+a+t,1,l+ZI+T+B+p+a+t,1,l+Sp+T+B+p+a+t,1,l+vg+T+B+p+a+t,1,l+_f+T+B+p+a+t,1,l+Lu+T+B+p+a+t,41,l+Dp+C+a+t,1,l+O_+C+a+t,1,l+oy+C+a+t,1,l+H_+C+a+t,1,l+MI+C+a+t,1,l+rp+C+a+t,1,l+bI+C+a+t,1,l+P_+C+a+t,1,l+T_+C+a+t,1,l+Md+C+a+t,1,l+Bf+C+a+t,1,l+wf+C+a+t,1,l+Ef+C+a+t,1,l+Qf+C+a+t,1,l+qc+C+a+t,1,l+zc+C+a+t,1,l+wr+C+a+t,1,l+To+C+a+t,1,l+wo+C+a+t,1,l+On+C+a+t,1,l+Ho+C+a+t,1,l+mr+C+a+t,1,l+Sg+C+a+t,1,l+mf+C+a+t,1,l+Cf+C+a+t,1,l+_u+C+a+t,1,l+vp+C+a+t,1,l+ll+C+a+t,1,l+Rl+C+a+t,1,l+Iu+C+a+t,1,l+xd+C+a+t,1,l+Wr+C+a+t,1,l+Ll+C+a+t,1,l+jc+C+a+t,1,l+dh+C+a+t,1,l+rc+C+a+t,1,l+Ul+C+a+t,1,l+rl+C+a+t,1,l+Vr+C+a+t,1,l+oc+C+a+t,1,l+VI+C+a+t,1,l+WI+C+a+t,1,l+Np+C+a+t,1,l+K_+C+a+t,1,l+Y_+C+a+t,1,l+bd+C+a+t,1,l+kf+C+a+t,1,l+hc+C+a+t,1,l+gc+C+a+t,1,l+Kc+C+a+t,1,l+lc+C+a+t,1,l+Yc+C+a+t,1,l+Cu+C+a+t,1,l+yf+C+a+t,1,l+Uu+C+a+t,1,l+ZI+C+a+t,1,l+Sp+C+a+t,1,l+vg+C+a+t,1,l+_f+C+a+t,1,l+Lu+C+a+t,1,ct+Do+rI+$n+XI+kt+Se+C+a+t,3,s+c+pl+uA+L+u+C+h+t,1,s+c+cp+uA+L+u+C+h+t,1,s+c+Il+uA+L+u+C+h+t,1,s+c+ce+uA+L+u+C+h+t,34,l+Dp+T+C+a+t,1,l+O_+T+C+a+t,1,l+oy+T+C+a+t,1,l+H_+T+C+a+t,1,l+MI+T+C+a+t,1,l+rp+T+C+a+t,1,l+bI+T+C+a+t,1,l+P_+T+C+a+t,1,l+T_+T+C+a+t,1,l+Md+T+C+a+t,1,l+Bf+T+C+a+t,1,l+wf+T+C+a+t,1,l+Ef+T+C+a+t,1,l+Qf+T+C+a+t,1,l+qc+T+C+a+t,1,l+zc+T+C+a+t,1,l+wr+T+C+a+t,1,l+To+T+C+a+t,1,l+wo+T+C+a+t,1,l+On+T+C+a+t,1,l+Ho+T+C+a+t,1,l+mr+T+C+a+t,1,l+Sg+T+C+a+t,1,l+mf+T+C+a+t,1,l+Cf+T+C+a+t,1,l+_u+T+C+a+t,1,l+vp+T+C+a+t,1,l+ll+T+C+a+t,1,l+Rl+T+C+a+t,1,l+Iu+T+C+a+t,1,l+xd+T+C+a+t,1,l+Wr+T+C+a+t,1,l+Ll+T+C+a+t,1,l+jc+T+C+a+t,1,l+dh+T+C+a+t,1,l+rc+T+C+a+t,1,l+Ul+T+C+a+t,1,l+rl+T+C+a+t,1,l+Vr+T+C+a+t,1,l+oc+T+C+a+t,1,l+VI+T+C+a+t,1,l+WI+T+C+a+t,1,l+Np+T+C+a+t,1,l+K_+T+C+a+t,1,l+Y_+T+C+a+t,1,l+bd+T+C+a+t,1,l+kf+T+C+a+t,1,l+hc+T+C+a+t,1,l+gc+T+C+a+t,1,l+Kc+T+C+a+t,1,l+lc+T+C+a+t,1,l+Yc+T+C+a+t,1,l+Cu+T+C+a+t,1,l+yf+T+C+a+t,1,l+Uu+T+C+a+t,1,l+ZI+T+C+a+t,1,l+Sp+T+C+a+t,1,l+vg+T+C+a+t,1,l+_f+T+C+a+t,1,l+Lu+T+C+a+t,1,ct+O+\\\" +lat_ts=-90\\\"+$n+XI+kt+Se+C+a+t,5,s+c+Ou+uA+d+RA+C+a+t].reduce(((A,t,e)=>{if(e%2==0){const e=A.prev+t,i=\\\"EPSG:\\\"+e;A.defs.push([i]),A.prev=e}else A.defs[A.defs.length-1].push(t);return A}),{defs:[],prev:0}).defs},546:A=>{A.exports=function(A){return\\\"object\\\"==typeof A&&\\\"function\\\"==typeof A.then?A:{then:t=>t(A)}}},8164:A=>{\\\"use strict\\\";function t(A,{nan_strategy:t=\\\"throw\\\"}={nan_strategy:\\\"throw\\\"}){const e=A.length;let i=null,s=null,a=null,n=null;for(let o=0;o<e;o++){const[e,r]=A[o];if(isNaN(e)){if(\\\"throw\\\"===t)throw new Error(\\\"[bbox-fns/bbox-array] encountered point with a NaN value: [\\\"+e+\\\", \\\"+r+\\\"]\\\")}else null===i?(i=e,s=e):e<i?i=e:e>s&&(s=e);if(isNaN(r)){if(\\\"throw\\\"===t)throw new Error(\\\"[bbox-fns/bbox-array] encountered point with a NaN value: [\\\"+e+\\\", \\\"+r+\\\"]\\\")}else null===a?(a=r,n=r):r<a?a=r:r>n&&(n=r)}return[i,a,s,n]}A.exports=t,A.exports.default=t},239:A=>{function t([A,t,e,i],{density:s=0}={density:0}){\\\"number\\\"==typeof s&&(s=[s,s]);const[a,n]=s,o=[],r=(e-A)/(a+1),l=(i-t)/(n+1);o.push([A,i]);for(let t=1;t<=n;t++)o.push([A,i-t*l]);o.push([A,t]);for(let e=1;e<=a;e++)o.push([A+e*r,t]);o.push([e,t]);for(let A=1;A<=n;A++)o.push([e,t+A*l]);o.push([e,i]);for(let A=1;A<=a;A++)o.push([e-A*r,i]);return o.push([A,i]),[o]}A.exports=t,A.exports.default=t},474:A=>{\\\"use strict\\\";function t(A){if(0===A.length)return;if(1===A.length)return A[0];let[t,e,i,s]=A[0];for(let a=1;a<A.length;a++){const n=A[a];n[0]<t&&(t=n[0]),n[1]<e&&(e=n[1]),n[2]>i&&(i=n[2]),n[3]>s&&(s=n[3])}return[t,e,i,s]}A.exports=t,A.exports.default=t},5753:(A,t,e)=>{const i=e(8164),s=e(239);function a(A,t,{async:e=!1,density:a,nan_strategy:n=\\\"throw\\\"}={}){const o=s(A,{density:a})[0].map((A=>t(A)));return e?Promise.all(o).then((A=>i(A,{nan_strategy:n}))):i(o,{nan_strategy:n})}A.exports=a,A.exports.default=a},9774:A=>{\\\"use strict\\\";function t(A,t){const[e,i,s,a]=A;if(!t)throw new Error(\\\"[bbox-fns/split.js] missing breakpoints\\\");const n=t.x||[],o=t.y||[],r=[e].concat(n.filter((A=>A>e&&A<s))).concat([s]),l=[i].concat(o.filter((A=>A>i&&A<a))).concat([a]),h=[];for(let A=1;A<r.length;A++){const t=r[A-1],e=r[A];for(let A=1;A<l.length;A++){const i=l[A-1],s=l[A];h.push([t,i,e,s])}}return h}A.exports=t,A.exports.default=t},1654:(A,t,e)=>{var i;const s=e(2994),a=e(2438),n=e(474),o=e(9774),r=e(5753);\\\"function\\\"!=typeof s&&console.warn(\\\"[reproject-bbox] failed to import proj4-merge\\\");const l=\\\"[reproject-bbox] You passed in a value of 32767 for {{%s}}, which means a custom non-standard projection.  Please pass in a Well-Known Text or PROJ4JS String instead.\\\";function h({bbox:A,debug_level:t=0,density:e,from:i,nan_strategy:h=\\\"throw\\\",proj4:g,split:c=!0,to:f}){if(32767===i)throw new Error(l.replace(\\\"{{%s}}\\\",\\\"from\\\"));if(32767===f)throw new Error(l.replace(\\\"{{%s}}\\\",\\\"to\\\"));\\\"number\\\"==typeof i&&(i=\\\"EPSG:\\\"+i),\\\"number\\\"==typeof f&&(f=\\\"EPSG:\\\"+f);const u=[g,a];\\\"object\\\"==typeof window&&window.proj4&&u.push(window.proj4),\\\"object\\\"==typeof self&&self.proj4&&u.push(self.proj4);const d=s(u)(i,f).forward,I=c?o(A,{x:[0],y:[0]}):[A];t>=2&&console.log(\\\"[reproject-bbox] bboxes:\\\",I);const p=I.map((A=>r(A,d,{density:e,nan_strategy:h})));t>=2&&console.log(\\\"[reproject-bbox] bboxes_reprojected:\\\",p);return n(p)}void 0===(i=function(){return h}.call(t,e,t,A))||(A.exports=i),A.exports=h,A.exports.default=h,\\\"object\\\"==typeof window&&(window.reprojectBoundingBox=h),\\\"object\\\"==typeof self&&(self.reprojectBoundingBox=h)},4254:(A,t,e)=>{var i;const s=e(3642),a=e(277);function n(A,{densify:t,reproject:e}){if(\\\"function\\\"!=typeof e)throw new Error(\\\"[reproject-geojson] you must specify a reproject function\\\");if(\\\"FeatureCollection\\\"===A.type)return{...A,features:A.features.map((A=>n(A,{densify:t,reproject:e})))};if(\\\"Feature\\\"===A.type)return{...A,geometry:n(A.geometry,{densify:t,reproject:e})};if(\\\"LineString\\\"===A.type)return{...A,coordinates:a(A.coordinates,e,{densify:t})};if(\\\"MultiLineString\\\"===A.type)return{...A,coordinates:A.coordinates.map((A=>a(A,e,{densify:t})))};if(\\\"MultiPoint\\\"===A.type)return{...A,coordinates:A.coordinates.map((A=>e(A)))};if(\\\"MultiPolygon\\\"===A.type)return{...A,coordinates:A.coordinates.map((A=>A.map((A=>a(A,e,{densify:t})))))};if(\\\"Point\\\"===A.type)return{...A,coordinates:e(A.coordinates)};if(\\\"Polygon\\\"===A.type)return{...A,coordinates:A.coordinates.map((A=>a(A,e,{densify:t})))};if(Array.isArray(A)){const i=s(A);if(1===i)return e(A);if(2===i)return A.map((A=>e(A)));if(3===i)return A.map((A=>a(A,e,{densify:t})));if(4===i)return A.map((A=>A.map((A=>a(A,e,{densify:t})))))}return A}void 0===(i=function(){return n}.call(t,e,t,A))||(A.exports=i),A.exports=n,\\\"object\\\"==typeof window&&(window.reprojectGeoJSONPluggable=n),\\\"object\\\"==typeof self&&(self.reprojectGeoJSONPluggable=n)},277:(A,t,e)=>{var i;function s(A,t,e){const i=\\\"object\\\"==typeof e&&\\\"number\\\"==typeof e.debug_level?e.debug_level:0;let s=\\\"object\\\"==typeof e&&\\\"number\\\"==typeof e.densify?e.densify:0;const a=\\\"object\\\"==typeof e&&\\\"string\\\"==typeof e.strategy?e.strategy:\\\"auto\\\";s=Math.round(s),i>=1&&(console.log(\\\"[reproject-line] debug_level:\\\",i),console.log(\\\"[reproject-line] densify:\\\",s),console.log(\\\"[reproject-line] strategy:\\\",a));const n=[];let[o,r]=t(A[0]),l=null,h=null;for(let e=1;e<A.length;e++){const[i,g]=A[e-1],[c,f]=A[e],u=(c-i)/(s+1),d=(f-g)/(s+1);for(let A=1;A<=s;A++){const[e,s]=t([i+A*u,g+A*d]);h=(s-r)/(e-o),\\\"always\\\"!==a&&h===l||(n.push([o,r]),l=h),o=e,r=s}const[I,p]=t([c,f]);h=(p-r)/(I-o),\\\"always\\\"!==a&&h===l||(n.push([o,r]),l=h),o=I,r=p}return n.push([o,r]),i>=3&&console.log(\\\"[reproject-line] returning\\\",n),n}void 0===(i=function(){return s}.call(t,e,t,A))||(A.exports=i),A.exports=s,A.exports.default=s},1185:(A,t,e)=>{var i;function s({segments:A,min:t=-1/0,max:e=1/0,debug:i=!1}){if(i&&console.log(\\\"[segflip] segs:\\\",A),null==A||Array.isArray(A)&&0===A.length)return i&&console.log(\\\"[segflip] segments are empty so return the whole row flipped\\\"),[[t,e]];const s=A.map((([A,t])=>[A-1,t+1])).flat();s.unshift(t),s.push(e),i&&console.log(\\\"flattened nums:\\\",s);const a=[];for(let A=1;A<s.length;A+=2){const t=s[A-1],e=s[A];t>e||a.push([t,e])}return a}void 0===(i=function(){return s}.call(t,e,t,A))||(A.exports=i),A.exports=s,\\\"object\\\"==typeof window&&(window.segflip=s),\\\"object\\\"==typeof self&&(self.segflip=s)},1003:A=>{const t={Int8Array:127,Uint8Array:255,Uint8ClampedArray:255,Int16Array:32767,Uint16Array:65535,Int32Array:2147483647,Uint32Array:4294967295,Float32Array:34e37,Float64Array:1.8*Math.pow(10,308)==1/0?void 0:1.8*Math.pow(10,308),BigInt64Array:0x8000000000000000,BigUint64Array:0x10000000000000000};A.exports=A=>(\\\"string\\\"!=typeof A&&A.constructor&&(A=A.constructor.name),t[A])},7033:A=>{const t={Int8Array:-128,Uint8Array:0,Uint8ClampedArray:0,Int16Array:-32768,Uint16Array:0,Int32Array:-2147483648,Uint32Array:0,BigInt64Array:-0x8000000000000000,BigUint64Array:0};A.exports=A=>(\\\"string\\\"!=typeof A&&A.constructor&&(A=A.constructor.name),t[A])},7890:A=>{A.exports={1:function({point:A}){const t=this.data,e=A[this.d0v0];return{parent:t,index:e,value:t[e]}},2:function({point:A}){const t=this.data,e=this.m0v0*A[this.d0v0]+this.m0v1*A[this.d0v1];return{parent:t,index:e,value:t[e]}},3:function({point:A}){const t=this.data,e=this.m0v0*A[this.d0v0]+this.m0v1*A[this.d0v1]+this.m0v2*A[this.d0v2];return{parent:t,index:e,value:t[e]}},4:function({point:A}){const t=this.data,e=this.m0v0*A[this.d0v0]+this.m0v1*A[this.d0v1]+this.m0v2*A[this.d0v2]+this.m0v3*A[this.d0v3];return{parent:t,index:e,value:t[e]}},5:function({point:A}){const t=this.data,e=this.m0v0*A[this.d0v0]+this.m0v1*A[this.d0v1]+this.m0v2*A[this.d0v2]+this.m0v3*A[this.d0v3]+this.m0v4*A[this.d0v4];return{parent:t,index:e,value:t[e]}},\\\"1,1\\\":function({point:A}){const t=this.data[A[this.d0v0]],e=A[this.d1v0];return{parent:t,index:e,value:t[e]}},\\\"1,2\\\":function({point:A}){const t=this.data[A[this.d0v0]],e=this.m1v0*A[this.d1v0]+this.m1v1*A[this.d1v1];return{parent:t,index:e,value:t[e]}},\\\"1,3\\\":function({point:A}){const t=this.data[A[this.d0v0]],e=this.m1v0*A[this.d1v0]+this.m1v1*A[this.d1v1]+this.m1v2*A[this.d1v2];return{parent:t,index:e,value:t[e]}},\\\"1,4\\\":function({point:A}){const t=this.data[A[this.d0v0]],e=this.m1v0*A[this.d1v0]+this.m1v1*A[this.d1v1]+this.m1v2*A[this.d1v2]+this.m1v3*A[this.d1v3];return{parent:t,index:e,value:t[e]}},\\\"1,5\\\":function({point:A}){const t=this.data[A[this.d0v0]],e=this.m1v0*A[this.d1v0]+this.m1v1*A[this.d1v1]+this.m1v2*A[this.d1v2]+this.m1v3*A[this.d1v3]+this.m1v4*A[this.d1v4];return{parent:t,index:e,value:t[e]}},\\\"1,1,1\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]],e=A[this.d2v0];return{parent:t,index:e,value:t[e]}},\\\"1,1,2\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]],e=this.m2v0*A[this.d2v0]+this.m2v1*A[this.d2v1];return{parent:t,index:e,value:t[e]}},\\\"1,1,3\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]],e=this.m2v0*A[this.d2v0]+this.m2v1*A[this.d2v1]+this.m2v2*A[this.d2v2];return{parent:t,index:e,value:t[e]}},\\\"1,1,4\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]],e=this.m2v0*A[this.d2v0]+this.m2v1*A[this.d2v1]+this.m2v2*A[this.d2v2]+this.m2v3*A[this.d2v3];return{parent:t,index:e,value:t[e]}},\\\"1,1,5\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]],e=this.m2v0*A[this.d2v0]+this.m2v1*A[this.d2v1]+this.m2v2*A[this.d2v2]+this.m2v3*A[this.d2v3]+this.m2v4*A[this.d2v4];return{parent:t,index:e,value:t[e]}},\\\"1,1,1,1\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]],e=A[this.d3v0];return{parent:t,index:e,value:t[e]}},\\\"1,1,1,2\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]],e=this.m3v0*A[this.d3v0]+this.m3v1*A[this.d3v1];return{parent:t,index:e,value:t[e]}},\\\"1,1,1,3\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]],e=this.m3v0*A[this.d3v0]+this.m3v1*A[this.d3v1]+this.m3v2*A[this.d3v2];return{parent:t,index:e,value:t[e]}},\\\"1,1,1,4\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]],e=this.m3v0*A[this.d3v0]+this.m3v1*A[this.d3v1]+this.m3v2*A[this.d3v2]+this.m3v3*A[this.d3v3];return{parent:t,index:e,value:t[e]}},\\\"1,1,1,5\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]],e=this.m3v0*A[this.d3v0]+this.m3v1*A[this.d3v1]+this.m3v2*A[this.d3v2]+this.m3v3*A[this.d3v3]+this.m3v4*A[this.d3v4];return{parent:t,index:e,value:t[e]}},\\\"1,1,1,1,1\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]],e=A[this.d4v0];return{parent:t,index:e,value:t[e]}},\\\"1,1,1,1,2\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]],e=this.m4v0*A[this.d4v0]+this.m4v1*A[this.d4v1];return{parent:t,index:e,value:t[e]}},\\\"1,1,1,1,3\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]],e=this.m4v0*A[this.d4v0]+this.m4v1*A[this.d4v1]+this.m4v2*A[this.d4v2];return{parent:t,index:e,value:t[e]}},\\\"1,1,1,1,4\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]],e=this.m4v0*A[this.d4v0]+this.m4v1*A[this.d4v1]+this.m4v2*A[this.d4v2]+this.m4v3*A[this.d4v3];return{parent:t,index:e,value:t[e]}},\\\"1,1,1,1,5\\\":function({point:A}){const t=this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]],e=this.m4v0*A[this.d4v0]+this.m4v1*A[this.d4v1]+this.m4v2*A[this.d4v2]+this.m4v3*A[this.d4v3]+this.m4v4*A[this.d4v4];return{parent:t,index:e,value:t[e]}}}},5588:A=>{A.exports={1:function({point:A,value:t}){this.data[A[this.d0v0]]=t},2:function({point:A,value:t}){this.data[this.m0v0*A[this.d0v0]+this.m0v1*A[this.d0v1]]=t},3:function({point:A,value:t}){this.data[this.m0v0*A[this.d0v0]+this.m0v1*A[this.d0v1]+this.m0v2*A[this.d0v2]]=t},4:function({point:A,value:t}){this.data[this.m0v0*A[this.d0v0]+this.m0v1*A[this.d0v1]+this.m0v2*A[this.d0v2]+this.m0v3*A[this.d0v3]]=t},5:function({point:A,value:t}){this.data[this.m0v0*A[this.d0v0]+this.m0v1*A[this.d0v1]+this.m0v2*A[this.d0v2]+this.m0v3*A[this.d0v3]+this.m0v4*A[this.d0v4]]=t},\\\"1,1\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]]=t},\\\"1,2\\\":function({point:A,value:t}){this.data[A[this.d0v0]][this.m1v0*A[this.d1v0]+this.m1v1*A[this.d1v1]]=t},\\\"1,3\\\":function({point:A,value:t}){this.data[A[this.d0v0]][this.m1v0*A[this.d1v0]+this.m1v1*A[this.d1v1]+this.m1v2*A[this.d1v2]]=t},\\\"1,4\\\":function({point:A,value:t}){this.data[A[this.d0v0]][this.m1v0*A[this.d1v0]+this.m1v1*A[this.d1v1]+this.m1v2*A[this.d1v2]+this.m1v3*A[this.d1v3]]=t},\\\"1,5\\\":function({point:A,value:t}){this.data[A[this.d0v0]][this.m1v0*A[this.d1v0]+this.m1v1*A[this.d1v1]+this.m1v2*A[this.d1v2]+this.m1v3*A[this.d1v3]+this.m1v4*A[this.d1v4]]=t},\\\"1,1,1\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]]=t},\\\"1,1,2\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][this.m2v0*A[this.d2v0]+this.m2v1*A[this.d2v1]]=t},\\\"1,1,3\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][this.m2v0*A[this.d2v0]+this.m2v1*A[this.d2v1]+this.m2v2*A[this.d2v2]]=t},\\\"1,1,4\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][this.m2v0*A[this.d2v0]+this.m2v1*A[this.d2v1]+this.m2v2*A[this.d2v2]+this.m2v3*A[this.d2v3]]=t},\\\"1,1,5\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][this.m2v0*A[this.d2v0]+this.m2v1*A[this.d2v1]+this.m2v2*A[this.d2v2]+this.m2v3*A[this.d2v3]+this.m2v4*A[this.d2v4]]=t},\\\"1,1,1,1\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]]=t},\\\"1,1,1,2\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][this.m3v0*A[this.d3v0]+this.m3v1*A[this.d3v1]]=t},\\\"1,1,1,3\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][this.m3v0*A[this.d3v0]+this.m3v1*A[this.d3v1]+this.m3v2*A[this.d3v2]]=t},\\\"1,1,1,4\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][this.m3v0*A[this.d3v0]+this.m3v1*A[this.d3v1]+this.m3v2*A[this.d3v2]+this.m3v3*A[this.d3v3]]=t},\\\"1,1,1,5\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][this.m3v0*A[this.d3v0]+this.m3v1*A[this.d3v1]+this.m3v2*A[this.d3v2]+this.m3v3*A[this.d3v3]+this.m3v4*A[this.d3v4]]=t},\\\"1,1,1,1,1\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]][A[this.d4v0]]=t},\\\"1,1,1,1,2\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]][this.m4v0*A[this.d4v0]+this.m4v1*A[this.d4v1]]=t},\\\"1,1,1,1,3\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]][this.m4v0*A[this.d4v0]+this.m4v1*A[this.d4v1]+this.m4v2*A[this.d4v2]]=t},\\\"1,1,1,1,4\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]][this.m4v0*A[this.d4v0]+this.m4v1*A[this.d4v1]+this.m4v2*A[this.d4v2]+this.m4v3*A[this.d4v3]]=t},\\\"1,1,1,1,5\\\":function({point:A,value:t}){this.data[A[this.d0v0]][A[this.d1v0]][A[this.d2v0]][A[this.d3v0]][this.m4v0*A[this.d4v0]+this.m4v1*A[this.d4v1]+this.m4v2*A[this.d4v2]+this.m4v3*A[this.d4v3]+this.m4v4*A[this.d4v4]]=t}}},883:(A,t,e)=>{const i={},{wrapNextFunction:s}=e(5876),a=e(7890),n=e(5588),o={Array,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Float32Array,Float64Array};try{o.BigInt64Array=BigInt64Array,o.BigUint64Array=BigUint64Array}catch(A){}const r=A=>A.match(/\\\\[[^\\\\]]+\\\\]/g),l=A=>A.startsWith(\\\"[\\\")&&A.endsWith(\\\"]\\\")?A.substring(1,A.length-1):A,h=A=>A.startsWith(\\\"(\\\")&&A.endsWith(\\\")\\\")?A.substring(1,A.length-1):A,g=A=>A.match(/(\\\\(.*?\\\\)|[^\\\\(,\\\\s]+)(?=\\\\s*,|\\\\s*$)/g),c=A=>{A=l(A),A=h(A);const t=g(A);return 1===t.length?{type:\\\"Vector\\\",dim:t[0]}:{type:\\\"Matrix\\\",parts:t.map(c)}};function f(A){const t=A.match(/[^ A-Za-z,\\\\[\\\\]]/g);if(t)throw new Error(\\\"The following invalid characters were used: \\\"+t.map((A=>`\\\"${A}\\\"`)).join(\\\", \\\"));return!0}function u(A,{useLayoutCache:t=!0}={useLayoutCache:!0}){if(t&&A in i)return i[A];f(A);const e=r(A).map(c),s={type:\\\"Layout\\\",summary:e.map((A=>\\\"Matrix\\\"===A.type?A.parts.length:1)),dims:e};return t&&(i[A]=s),s}function d({useLayoutCache:A=!0,data:t,layout:e,sizes:i={}}){\\\"string\\\"==typeof e&&(e=u(e,{useLayoutCache:A}));const{dims:s}=e,a=s.length,o=p({useLayoutCache:A,layout:e,sizes:i}),r=a-1,l=e.summary.toString();if(l in n){const A={data:t};return e.dims.map(((t,e)=>{\\\"Vector\\\"===t.type?A[`d${e}v0`]=t.dim:\\\"Matrix\\\"===t.type&&t.parts.forEach(((t,i)=>{A[`d${e}v${i}`]=t.dim,A[`m${e}v${i}`]=o[t.dim]}))})),n[l].bind(A)}return({point:A,value:e})=>{let i=t;for(let t=0;t<a;t++){const a=t===r,n=s[t];let l;l=\\\"Vector\\\"===n.type?A[n.dim]:n.parts.reduce(((t,{dim:e})=>t+o[e]*A[e]),0),a?i[l]=e:i=i[l]}}}function I({rect:A={}}){if(A)for(let t in A){const e=A[t];if(2!==e.length)throw new Error(\\\"[xdim] uh oh. invalid hyper-rectangle\\\");const[i,s]=e;if(i>s)throw new Error(`[xdim] uh oh. invalid range for \\\"${t}\\\".  Start of ${i} can't be greater than end of ${s}.`);if(i<0)throw new Error(`[xdim] uh oh. invalid hyper-rectangle with start ${i}`)}}function p({useLayoutCache:A=!0,layout:t,sizes:e}){\\\"string\\\"==typeof t&&(t=u(t,{useLayoutCache:A}));const{dims:i}=t,s=i.length;let a={};for(let A=0;A<s;A++){const t=i[A];if(\\\"Vector\\\"===t.type)a[t.dim]=1;else{const{parts:A}=t;let i=1;for(let t=A.length-1;t>=0;t--){const{dim:s}=A[t];a[s]=i,i*=e[A[t].dim]}}}return a}function _({useLayoutCache:A=!0,data:t,layout:e,point:i,sizes:s={}}){let a,n;\\\"string\\\"==typeof e&&(e=u(e,{useLayoutCache:A}));let o=t;const{dims:r}=e,l=r.length;for(let A=0;A<l;A++){const t=r[A];if(\\\"Vector\\\"===t.type){const A=i[t.dim];a=o,n=A,o=o[A]}else{const{parts:A}=t;let e=0,r=1;for(let t=A.length-1;t>=0;t--){const a=A[t];if(\\\"Vector\\\"===a.type){const{dim:A}=a;if(e+=r*i[A],t>0){if(!(A in s))throw new Error(`you cannot calculate the location without knowing the size of the \\\"${A}\\\" dimension.`);r*=s[A]}}}a=o,n=e,o=o[e]}}return{index:n,value:o,parent:a}}function C({arr:A,fill:t,lens:e,arrayTypes:i}){if(0===e.length)return A;const s=e[0];if(1===e.length){const e=i?i[i.length-1]:\\\"Array\\\";for(let i=0;i<A.length;i++)A[i]=new o[e](s).fill(t)}else for(let a=0;a<A.length;a++){const n=new Array(s).fill(t);A[a]=n,C({arr:n,fill:t,lens:e.slice(1),arrayTypes:i})}return A}function B({fill:A,shape:t,arrayTypes:e}){const i=t[0];if(1===t.length){if(Array.isArray(e)&&1!==e.length)throw new Error(\\\"[xdim] shape and arrayTypes have different lengths\\\");const t=Array.isArray(e)?e[0]:\\\"Array\\\";return new o[t](i).fill(A)}return C({arr:new Array(i).fill(A),fill:A,lens:t.slice(1),arrayTypes:e})}function w({fill:A,layout:t,useLayoutCache:e=!0,sizes:i,arrayTypes:s}){\\\"string\\\"==typeof t&&(t=u(t,{useLayoutCache:e}));const a=t.dims.map((A=>\\\"Vector\\\"===A.type?i[A.dim]:\\\"Matrix\\\"===A.type?A.parts.reduce(((A,t)=>{if(!(t.dim in i))throw new Error(`[xdim] could not find \\\"${t.dim}\\\" in sizes: { ${Object.keys(i).join(\\\", \\\")} }`);return A*i[t.dim]}),1):void 0));return{data:B({fill:A,shape:a,arrayTypes:s}),shape:a,arrayTypes:s}}function E({start:A=0,end:t=100}){let e=A-1;return t+=1,s((function(){return e++,e===t?{done:!0}:{done:!1,value:e}}))}function y({order:A,sizes:t,rect:e={}}){const i=Array.isArray(A)?A:Object.keys(t).sort(((A,e)=>t[A]-t[e])),a=new Array(i.length),n={};for(let A=0;A<i.length-1;A++){const s=i[A],[o,r]=e[s]||[0,t[s]-1];a[A]=E({start:o+1,end:r}),n[s]=o}const o=i[i.length-1],[r,l]=e[o]||[0,t[o]-1];return a[a.length-1]=E({start:r,end:l}),n[o]=r-1,s((function(){for(let A=a.length-1;A>=0;A--){const{value:s,done:o}=a[A].next();if(!o){for(let s=A+1;s<a.length;s++){const A=i[s],[o,r]=e[A]||[0,t[A]-1];a[s]=E({start:o+1,end:r}),n[A]=o}return n[i[A]]=s,{value:n,done:!1}}if(0===A)return{done:!0}}}))}A.exports={addDims:C,checkValidity:f,createMatrix:B,iterClip:function({data:A,layout:t,order:e,rect:i={},sizes:a={},useLayoutCache:n=!0}){if(!A)throw new Error(\\\"[xdim] must specify data\\\");if(!t)throw new Error(\\\"[xdim] must specify layout\\\");const o=y({order:e,sizes:a,rect:i});return s((function(){const{value:e,done:i}=o.next();if(i)return{done:!0};{const{value:i}=_({data:A,layout:t,point:e,sizes:a,useLayoutCache:n});return{done:!1,value:i}}}))},iterRange:E,iterPoints:y,matchSequences:g,parse:u,parseDimensions:function(A){const t={},e=/[A-Za-z]+/g;let i;for(;null!==(i=e.exec(A));){const[A]=i;t[A]={name:A}}return t},parseSequences:c,parseVectors:r,prepareData:w,prepareSelect:function({useLayoutCache:A=!0,data:t,layout:e,sizes:i={}}){\\\"string\\\"==typeof e&&(e=u(e,{useLayoutCache:A}));const{dims:s}=e,n=s.length,o=p({useLayoutCache:A,layout:e,sizes:i}),r=n-1,l=e.summary.toString();if(l in a){const A={data:t};return e.dims.map(((t,e)=>{\\\"Vector\\\"===t.type?A[`d${e}v0`]=t.dim:\\\"Matrix\\\"===t.type&&t.parts.forEach(((t,i)=>{A[`d${e}v${i}`]=t.dim,A[`m${e}v${i}`]=o[t.dim]}))})),a[l].bind(A)}return({point:A})=>{let e=t;for(let t=0;t<n;t++){const i=t===r,a=s[t];let n;if(n=\\\"Vector\\\"===a.type?A[a.dim]:a.parts.reduce(((t,{dim:e})=>t+o[e]*A[e]),0),i)return{index:n,parent:e,value:e[n]};e=e[n]}}},prepareUpdate:d,removeBraces:l,removeParentheses:h,select:_,transform:function({data:A,fill:t,from:e,to:i,sizes:s,useLayoutCache:a=!0}){\\\"string\\\"==typeof e&&(e=u(e,{useLayoutCache:a})),\\\"string\\\"==typeof i&&(i=u(i,{useLayoutCache:a}));const{data:n}=w({fill:t,layout:i,sizes:s}),o=d({useLayoutCache:a,data:n,layout:i,sizes:s}),r=y({sizes:s});for(point of r){const{value:t}=_({data:A,layout:e,point,sizes:s});o({point,value:t})}return{data:n}},update:function({useLayoutCache:A=!0,data:t,layout:e,point:i,sizes:s={},value:a}){\\\"string\\\"==typeof e&&(e=u(e,{useLayoutCache:A}));const{dims:n}=e;for(let A=0;A<n.length;A++){const e=A===n.length-1,o=n[A];let r;if(\\\"Vector\\\"===o.type)r=i[o.dim];else{const{parts:A}=o;r=0;let t=1;for(let e=A.length-1;e>=0;e--){const a=A[e],{dim:n}=a;if(r+=t*i[n],e>0){if(!(n in s))throw new Error(`you cannot calculate the location without knowing the size of the \\\"${n}\\\" dimension.`);t*=s[n]}}}e?t[r]=a:t=t[r]}},clip:function({useLayoutCache:A=!0,data:t,layout:e,rect:i,sizes:s={},flat:a=!1,validate:n=!0}){n&&I({rect:i}),\\\"string\\\"==typeof e&&(e=u(e,{useLayoutCache:A}));let o=[t];if(e.dims.forEach((A=>{let t=[];o.forEach((e=>{if(\\\"Vector\\\"===A.type){const[s,a]=i[A.dim];t=t.concat(e.slice(s,a+1))}else{const{parts:a}=A;let n=[0],o=1;for(let A=a.length-1;A>=0;A--){const t=a[A],{dim:e}=t,[r,l]=i[e],h=[];for(let A=r;A<=l;A++)n.forEach((t=>{h.push(t+o*A)}));n=h,o*=s[e]}n.forEach((A=>{t.push(e[A])}))}})),o=t})),a)return{data:o};const r=Object.fromEntries(Object.entries(i).map((([A,[t,e]])=>[A,e-t+1]))),{data:l}=w({layout:e,sizes:r}),h=e.dims.length,g=(A,t)=>{if(t===h)for(let t=0;t<A.length;t++)A[t]=o.shift();else A.forEach((A=>g(A,t+1)))};return g(l,1),{data:l}},validateRect:I}},7840:A=>{function t(A,t){const e=new RegExp(t,\\\"g\\\"),i=A.match(e);return i?i.length:0}A.exports=t,A.exports.default=t},4635:(A,t,e)=>{const i=e(9622),s=e(2566),a=e(7840);function n(A,t,e){const n=e&&e.debug||!1,o=!(e&&!1===typeof e.nested),r=e&&e.startIndex||0;n&&console.log(\\\"[xml-utils] starting findTagByName with\\\",t,\\\" and \\\",e);const l=i(A,`<${t}[ \\\\n>/]`,r);if(n&&console.log(\\\"[xml-utils] start:\\\",l),-1===l)return;const h=A.slice(l+t.length);let g=s(h,\\\"^[^<]*[ /]>\\\",0);const c=-1!==g&&\\\"/\\\"===h[g-1];if(n&&console.log(\\\"[xml-utils] selfClosing:\\\",c),!1===c)if(o){let A=0,e=1,i=0;for(;-1!==(g=s(h,\\\"[ /]\\\"+t+\\\">\\\",A));){const s=h.substring(A,g+1);if(e+=a(s,\\\"<\\\"+t+\\\"[ \\\\n\\\\t>]\\\"),i+=a(s,\\\"</\\\"+t+\\\">\\\"),i>=e)break;A=g}}else g=s(h,\\\"[ /]\\\"+t+\\\">\\\",0);const f=l+t.length+g+1;if(n&&console.log(\\\"[xml-utils] end:\\\",f),-1===f)return;const u=A.slice(l,f);let d;return d=c?null:u.slice(u.indexOf(\\\">\\\")+1,u.lastIndexOf(\\\"<\\\")),{inner:d,outer:u,start:l,end:f}}A.exports=n,A.exports.default=n},8602:(A,t,e)=>{const i=e(4635);function s(A,t,e){const s=[],a=e&&e.debug||!1,n=!e||\\\"boolean\\\"!=typeof e.nested||e.nested;let o,r=e&&e.startIndex||0;for(;o=i(A,t,{debug:a,startIndex:r});)r=n?o.start+1+t.length:o.end,s.push(o);return a&&console.log(\\\"findTagsByName found\\\",s.length,\\\"tags\\\"),s}A.exports=s,A.exports.default=s},8330:A=>{function t(A,t,e){const i=e&&e.debug||!1;i&&console.log(\\\"[xml-utils] getting \\\"+t+\\\" in \\\"+A);const s=\\\"object\\\"==typeof A?A.outer:A,a=s.slice(0,s.indexOf(\\\">\\\")+1),n=['\\\"',\\\"'\\\"];for(let A=0;A<n.length;A++){const e=n[A],s=t+\\\"\\\\\\\\=\\\"+e+\\\"([^\\\"+e+\\\"]*)\\\"+e;i&&console.log(\\\"[xml-utils] pattern:\\\",s);const o=new RegExp(s).exec(a);if(i&&console.log(\\\"[xml-utils] match:\\\",o),o)return o[1]}}A.exports=t,A.exports.default=t},2566:A=>{function t(A,t,e){const i=new RegExp(t).exec(A.slice(e));return i?e+i.index+i[0].length-1:-1}A.exports=t,A.exports.default=t},9622:A=>{function t(A,t,e){const i=new RegExp(t).exec(A.slice(e));return i?e+i.index:-1}A.exports=t,A.exports.default=t},3752:()=>{},3640:()=>{},2630:()=>{},7061:(A,t,e)=>{var i=e(8698).default;function s(){\\\"use strict\\\";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */A.exports=s=function(){return e},A.exports.__esModule=!0,A.exports.default=A.exports;var t,e={},a=Object.prototype,n=a.hasOwnProperty,o=Object.defineProperty||function(A,t,e){A[t]=e.value},r=\\\"function\\\"==typeof Symbol?Symbol:{},l=r.iterator||\\\"@@iterator\\\",h=r.asyncIterator||\\\"@@asyncIterator\\\",g=r.toStringTag||\\\"@@toStringTag\\\";function c(A,t,e){return Object.defineProperty(A,t,{value:e,enumerable:!0,configurable:!0,writable:!0}),A[t]}try{c({},\\\"\\\")}catch(t){c=function(A,t,e){return A[t]=e}}function f(A,t,e,i){var s=t&&t.prototype instanceof B?t:B,a=Object.create(s.prototype),n=new G(i||[]);return o(a,\\\"_invoke\\\",{value:b(A,e,n)}),a}function u(A,t,e){try{return{type:\\\"normal\\\",arg:A.call(t,e)}}catch(A){return{type:\\\"throw\\\",arg:A}}}e.wrap=f;var d=\\\"suspendedStart\\\",I=\\\"suspendedYield\\\",p=\\\"executing\\\",_=\\\"completed\\\",C={};function B(){}function w(){}function E(){}var y={};c(y,l,(function(){return this}));var Q=Object.getPrototypeOf,m=Q&&Q(Q(N([])));m&&m!==a&&n.call(m,l)&&(y=m);var k=E.prototype=B.prototype=Object.create(y);function x(A){[\\\"next\\\",\\\"throw\\\",\\\"return\\\"].forEach((function(t){c(A,t,(function(A){return this._invoke(t,A)}))}))}function M(A,t){function e(s,a,o,r){var l=u(A[s],A,a);if(\\\"throw\\\"!==l.type){var h=l.arg,g=h.value;return g&&\\\"object\\\"==i(g)&&n.call(g,\\\"__await\\\")?t.resolve(g.__await).then((function(A){e(\\\"next\\\",A,o,r)}),(function(A){e(\\\"throw\\\",A,o,r)})):t.resolve(g).then((function(A){h.value=A,o(h)}),(function(A){return e(\\\"throw\\\",A,o,r)}))}r(l.arg)}var s;o(this,\\\"_invoke\\\",{value:function(A,i){function a(){return new t((function(t,s){e(A,i,t,s)}))}return s=s?s.then(a,a):a()}})}function b(A,e,i){var s=d;return function(a,n){if(s===p)throw new Error(\\\"Generator is already running\\\");if(s===_){if(\\\"throw\\\"===a)throw n;return{value:t,done:!0}}for(i.method=a,i.arg=n;;){var o=i.delegate;if(o){var r=D(o,i);if(r){if(r===C)continue;return r}}if(\\\"next\\\"===i.method)i.sent=i._sent=i.arg;else if(\\\"throw\\\"===i.method){if(s===d)throw s=_,i.arg;i.dispatchException(i.arg)}else\\\"return\\\"===i.method&&i.abrupt(\\\"return\\\",i.arg);s=p;var l=u(A,e,i);if(\\\"normal\\\"===l.type){if(s=i.done?_:I,l.arg===C)continue;return{value:l.arg,done:i.done}}\\\"throw\\\"===l.type&&(s=_,i.method=\\\"throw\\\",i.arg=l.arg)}}}function D(A,e){var i=e.method,s=A.iterator[i];if(s===t)return e.delegate=null,\\\"throw\\\"===i&&A.iterator.return&&(e.method=\\\"return\\\",e.arg=t,D(A,e),\\\"throw\\\"===e.method)||\\\"return\\\"!==i&&(e.method=\\\"throw\\\",e.arg=new TypeError(\\\"The iterator does not provide a '\\\"+i+\\\"' method\\\")),C;var a=u(s,A.iterator,e.arg);if(\\\"throw\\\"===a.type)return e.method=\\\"throw\\\",e.arg=a.arg,e.delegate=null,C;var n=a.arg;return n?n.done?(e[A.resultName]=n.value,e.next=A.nextLoc,\\\"return\\\"!==e.method&&(e.method=\\\"next\\\",e.arg=t),e.delegate=null,C):n:(e.method=\\\"throw\\\",e.arg=new TypeError(\\\"iterator result is not an object\\\"),e.delegate=null,C)}function v(A){var t={tryLoc:A[0]};1 in A&&(t.catchLoc=A[1]),2 in A&&(t.finallyLoc=A[2],t.afterLoc=A[3]),this.tryEntries.push(t)}function S(A){var t=A.completion||{};t.type=\\\"normal\\\",delete t.arg,A.completion=t}function G(A){this.tryEntries=[{tryLoc:\\\"root\\\"}],A.forEach(v,this),this.reset(!0)}function N(A){if(A||\\\"\\\"===A){var e=A[l];if(e)return e.call(A);if(\\\"function\\\"==typeof A.next)return A;if(!isNaN(A.length)){var s=-1,a=function e(){for(;++s<A.length;)if(n.call(A,s))return e.value=A[s],e.done=!1,e;return e.value=t,e.done=!0,e};return a.next=a}}throw new TypeError(i(A)+\\\" is not iterable\\\")}return w.prototype=E,o(k,\\\"constructor\\\",{value:E,configurable:!0}),o(E,\\\"constructor\\\",{value:w,configurable:!0}),w.displayName=c(E,g,\\\"GeneratorFunction\\\"),e.isGeneratorFunction=function(A){var t=\\\"function\\\"==typeof A&&A.constructor;return!!t&&(t===w||\\\"GeneratorFunction\\\"===(t.displayName||t.name))},e.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,E):(A.__proto__=E,c(A,g,\\\"GeneratorFunction\\\")),A.prototype=Object.create(k),A},e.awrap=function(A){return{__await:A}},x(M.prototype),c(M.prototype,h,(function(){return this})),e.AsyncIterator=M,e.async=function(A,t,i,s,a){void 0===a&&(a=Promise);var n=new M(f(A,t,i,s),a);return e.isGeneratorFunction(t)?n:n.next().then((function(A){return A.done?A.value:n.next()}))},x(k),c(k,g,\\\"Generator\\\"),c(k,l,(function(){return this})),c(k,\\\"toString\\\",(function(){return\\\"[object Generator]\\\"})),e.keys=function(A){var t=Object(A),e=[];for(var i in t)e.push(i);return e.reverse(),function A(){for(;e.length;){var i=e.pop();if(i in t)return A.value=i,A.done=!1,A}return A.done=!0,A}},e.values=N,G.prototype={constructor:G,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method=\\\"next\\\",this.arg=t,this.tryEntries.forEach(S),!A)for(var e in this)\\\"t\\\"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=t)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if(\\\"throw\\\"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var e=this;function i(i,s){return o.type=\\\"throw\\\",o.arg=A,e.next=i,s&&(e.method=\\\"next\\\",e.arg=t),!!s}for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s],o=a.completion;if(\\\"root\\\"===a.tryLoc)return i(\\\"end\\\");if(a.tryLoc<=this.prev){var r=n.call(a,\\\"catchLoc\\\"),l=n.call(a,\\\"finallyLoc\\\");if(r&&l){if(this.prev<a.catchLoc)return i(a.catchLoc,!0);if(this.prev<a.finallyLoc)return i(a.finallyLoc)}else if(r){if(this.prev<a.catchLoc)return i(a.catchLoc,!0)}else{if(!l)throw new Error(\\\"try statement without catch or finally\\\");if(this.prev<a.finallyLoc)return i(a.finallyLoc)}}}},abrupt:function(A,t){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.tryLoc<=this.prev&&n.call(i,\\\"finallyLoc\\\")&&this.prev<i.finallyLoc){var s=i;break}}s&&(\\\"break\\\"===A||\\\"continue\\\"===A)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var a=s?s.completion:{};return a.type=A,a.arg=t,s?(this.method=\\\"next\\\",this.next=s.finallyLoc,C):this.complete(a)},complete:function(A,t){if(\\\"throw\\\"===A.type)throw A.arg;return\\\"break\\\"===A.type||\\\"continue\\\"===A.type?this.next=A.arg:\\\"return\\\"===A.type?(this.rval=this.arg=A.arg,this.method=\\\"return\\\",this.next=\\\"end\\\"):\\\"normal\\\"===A.type&&t&&(this.next=t),C},finish:function(A){for(var t=this.tryEntries.length-1;t>=0;--t){var e=this.tryEntries[t];if(e.finallyLoc===A)return this.complete(e.completion,e.afterLoc),S(e),C}},catch:function(A){for(var t=this.tryEntries.length-1;t>=0;--t){var e=this.tryEntries[t];if(e.tryLoc===A){var i=e.completion;if(\\\"throw\\\"===i.type){var s=i.arg;S(e)}return s}}throw new Error(\\\"illegal catch attempt\\\")},delegateYield:function(A,e,i){return this.delegate={iterator:N(A),resultName:e,nextLoc:i},\\\"next\\\"===this.method&&(this.arg=t),C}},e}A.exports=s,A.exports.__esModule=!0,A.exports.default=A.exports},8698:A=>{function t(e){return A.exports=t=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&\\\"function\\\"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?\\\"symbol\\\":typeof A},A.exports.__esModule=!0,A.exports.default=A.exports,t(e)}A.exports=t,A.exports.__esModule=!0,A.exports.default=A.exports},4687:(A,t,e)=>{var i=e(7061)();A.exports=i;try{regeneratorRuntime=i}catch(A){\\\"object\\\"==typeof globalThis?globalThis.regeneratorRuntime=i:Function(\\\"r\\\",\\\"regeneratorRuntime = r\\\")(i)}},7737:(A,t,e)=>{\\\"use strict\\\";function i(A,t){let e=A.length-t,i=0;do{for(let e=t;e>0;e--)A[i+t]+=A[i],i++;e-=t}while(e>0)}function s(A,t,e){let i=0,s=A.length;const a=s/e;for(;s>t;){for(let e=t;e>0;--e)A[i+t]+=A[i],++i;s-=t}const n=A.slice();for(let t=0;t<a;++t)for(let i=0;i<e;++i)A[e*t+i]=n[(e-i-1)*a+t]}e.d(t,{Z:()=>a});class a{async decode(A,t){const e=await this.decodeBlock(t),a=A.Predictor||1;if(1!==a){const t=!A.StripOffsets;return function(A,t,e,a,n,o){if(!t||1===t)return A;for(let A=0;A<n.length;++A){if(n[A]%8!=0)throw new Error(\\\"When decoding with predictor, only multiple of 8 bits are supported.\\\");if(n[A]!==n[0])throw new Error(\\\"When decoding with predictor, all samples must have the same size.\\\")}const r=n[0]/8,l=2===o?1:n.length;for(let o=0;o<a&&!(o*l*e*r>=A.byteLength);++o){let a;if(2===t){switch(n[0]){case 8:a=new Uint8Array(A,o*l*e*r,l*e*r);break;case 16:a=new Uint16Array(A,o*l*e*r,l*e*r/2);break;case 32:a=new Uint32Array(A,o*l*e*r,l*e*r/4);break;default:throw new Error(`Predictor 2 not allowed with ${n[0]} bits per sample.`)}i(a,l)}else 3===t&&(a=new Uint8Array(A,o*l*e*r,l*e*r),s(a,l,r))}return A}(e,a,t?A.TileWidth:A.ImageWidth,t?A.TileLength:A.RowsPerStrip||A.ImageLength,A.BitsPerSample,A.PlanarConfiguration)}return e}}},5522:(A,t,e)=>{\\\"use strict\\\";e.r(t),e.d(t,{default:()=>a});var i=e(7885),s=e(7737);class a extends s.Z{decodeBlock(A){return(0,i.rr)(new Uint8Array(A)).buffer}}},9347:(A,t,e)=>{\\\"use strict\\\";e.r(t),e.d(t,{default:()=>p});var i=e(7737);const s=new Int32Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),a=4017,n=799,o=3406,r=2276,l=1567,h=3784,g=5793,c=2896;function f(A,t){let e=0;const i=[];let s=16;for(;s>0&&!A[s-1];)--s;i.push({children:[],index:0});let a,n=i[0];for(let o=0;o<s;o++){for(let s=0;s<A[o];s++){for(n=i.pop(),n.children[n.index]=t[e];n.index>0;)n=i.pop();for(n.index++,i.push(n);i.length<=o;)i.push(a={children:[],index:0}),n.children[n.index]=a.children,n=a;e++}o+1<s&&(i.push(a={children:[],index:0}),n.children[n.index]=a.children,n=a)}return i[0].children}function u(A,t,e,i,a,n,o,r,l){const{mcusPerLine:h,progressive:g}=e,c=t;let f=t,u=0,d=0;function I(){if(d>0)return d--,u>>d&1;if(u=A[f++],255===u){const t=A[f++];if(t)throw new Error(`unexpected marker: ${(u<<8|t).toString(16)}`)}return d=7,u>>>7}function p(A){let t,e=A;for(;null!==(t=I());){if(e=e[t],\\\"number\\\"==typeof e)return e;if(\\\"object\\\"!=typeof e)throw new Error(\\\"invalid huffman sequence\\\")}return null}function _(A){let t=A,e=0;for(;t>0;){const A=I();if(null===A)return;e=e<<1|A,--t}return e}function C(A){const t=_(A);return t>=1<<A-1?t:t+(-1<<A)+1}let B=0;let w,E=0;function y(A,t,e,i,s){const a=e%h,n=(e/h|0)*A.v+i,o=a*A.h+s;t(A,A.blocks[n][o])}function Q(A,t,e){const i=e/A.blocksPerLine|0,s=e%A.blocksPerLine;t(A,A.blocks[i][s])}const m=i.length;let k,x,M,b,D,v;v=g?0===n?0===r?function(A,t){const e=p(A.huffmanTableDC),i=0===e?0:C(e)<<l;A.pred+=i,t[0]=A.pred}:function(A,t){t[0]|=I()<<l}:0===r?function(A,t){if(B>0)return void B--;let e=n;const i=o;for(;e<=i;){const i=p(A.huffmanTableAC),a=15&i,n=i>>4;if(0===a){if(n<15){B=_(n)+(1<<n)-1;break}e+=16}else e+=n,t[s[e]]=C(a)*(1<<l),e++}}:function(A,t){let e=n;const i=o;let a=0;for(;e<=i;){const i=s[e],n=t[i]<0?-1:1;switch(E){case 0:{const t=p(A.huffmanTableAC),e=15&t;if(a=t>>4,0===e)a<15?(B=_(a)+(1<<a),E=4):(a=16,E=1);else{if(1!==e)throw new Error(\\\"invalid ACn encoding\\\");w=C(e),E=a?2:3}continue}case 1:case 2:t[i]?t[i]+=(I()<<l)*n:(a--,0===a&&(E=2===E?3:0));break;case 3:t[i]?t[i]+=(I()<<l)*n:(t[i]=w<<l,E=0);break;case 4:t[i]&&(t[i]+=(I()<<l)*n)}e++}4===E&&(B--,0===B&&(E=0))}:function(A,t){const e=p(A.huffmanTableDC),i=0===e?0:C(e);A.pred+=i,t[0]=A.pred;let a=1;for(;a<64;){const e=p(A.huffmanTableAC),i=15&e,n=e>>4;if(0===i){if(n<15)break;a+=16}else a+=n,t[s[a]]=C(i),a++}};let S,G,N=0;G=1===m?i[0].blocksPerLine*i[0].blocksPerColumn:h*e.mcusPerColumn;const R=a||G;for(;N<G;){for(x=0;x<m;x++)i[x].pred=0;if(B=0,1===m)for(k=i[0],D=0;D<R;D++)Q(k,v,N),N++;else for(D=0;D<R;D++){for(x=0;x<m;x++){k=i[x];const{h:A,v:t}=k;for(M=0;M<t;M++)for(b=0;b<A;b++)y(k,v,N,M,b)}if(N++,N===G)break}if(d=0,S=A[f]<<8|A[f+1],S<65280)throw new Error(\\\"marker was not found\\\");if(!(S>=65488&&S<=65495))break;f+=2}return f-c}function d(A,t){const e=[],{blocksPerLine:i,blocksPerColumn:s}=t,f=i<<3,u=new Int32Array(64),d=new Uint8Array(64);function I(A,e,i){const s=t.quantizationTable;let f,u,d,I,p,_,C,B,w;const E=i;let y;for(y=0;y<64;y++)E[y]=A[y]*s[y];for(y=0;y<8;++y){const A=8*y;0!==E[1+A]||0!==E[2+A]||0!==E[3+A]||0!==E[4+A]||0!==E[5+A]||0!==E[6+A]||0!==E[7+A]?(f=g*E[0+A]+128>>8,u=g*E[4+A]+128>>8,d=E[2+A],I=E[6+A],p=c*(E[1+A]-E[7+A])+128>>8,B=c*(E[1+A]+E[7+A])+128>>8,_=E[3+A]<<4,C=E[5+A]<<4,w=f-u+1>>1,f=f+u+1>>1,u=w,w=d*h+I*l+128>>8,d=d*l-I*h+128>>8,I=w,w=p-C+1>>1,p=p+C+1>>1,C=w,w=B+_+1>>1,_=B-_+1>>1,B=w,w=f-I+1>>1,f=f+I+1>>1,I=w,w=u-d+1>>1,u=u+d+1>>1,d=w,w=p*r+B*o+2048>>12,p=p*o-B*r+2048>>12,B=w,w=_*n+C*a+2048>>12,_=_*a-C*n+2048>>12,C=w,E[0+A]=f+B,E[7+A]=f-B,E[1+A]=u+C,E[6+A]=u-C,E[2+A]=d+_,E[5+A]=d-_,E[3+A]=I+p,E[4+A]=I-p):(w=g*E[0+A]+512>>10,E[0+A]=w,E[1+A]=w,E[2+A]=w,E[3+A]=w,E[4+A]=w,E[5+A]=w,E[6+A]=w,E[7+A]=w)}for(y=0;y<8;++y){const A=y;0!==E[8+A]||0!==E[16+A]||0!==E[24+A]||0!==E[32+A]||0!==E[40+A]||0!==E[48+A]||0!==E[56+A]?(f=g*E[0+A]+2048>>12,u=g*E[32+A]+2048>>12,d=E[16+A],I=E[48+A],p=c*(E[8+A]-E[56+A])+2048>>12,B=c*(E[8+A]+E[56+A])+2048>>12,_=E[24+A],C=E[40+A],w=f-u+1>>1,f=f+u+1>>1,u=w,w=d*h+I*l+2048>>12,d=d*l-I*h+2048>>12,I=w,w=p-C+1>>1,p=p+C+1>>1,C=w,w=B+_+1>>1,_=B-_+1>>1,B=w,w=f-I+1>>1,f=f+I+1>>1,I=w,w=u-d+1>>1,u=u+d+1>>1,d=w,w=p*r+B*o+2048>>12,p=p*o-B*r+2048>>12,B=w,w=_*n+C*a+2048>>12,_=_*a-C*n+2048>>12,C=w,E[0+A]=f+B,E[56+A]=f-B,E[8+A]=u+C,E[48+A]=u-C,E[16+A]=d+_,E[40+A]=d-_,E[24+A]=I+p,E[32+A]=I-p):(w=g*i[y+0]+8192>>14,E[0+A]=w,E[8+A]=w,E[16+A]=w,E[24+A]=w,E[32+A]=w,E[40+A]=w,E[48+A]=w,E[56+A]=w)}for(y=0;y<64;++y){const A=128+(E[y]+8>>4);e[y]=A<0?0:A>255?255:A}}for(let A=0;A<s;A++){const s=A<<3;for(let A=0;A<8;A++)e.push(new Uint8Array(f));for(let a=0;a<i;a++){I(t.blocks[A][a],d,u);let i=0;const n=a<<3;for(let A=0;A<8;A++){const t=e[s+A];for(let A=0;A<8;A++)t[n+A]=d[i++]}}}return e}class I{constructor(){this.jfif=null,this.adobe=null,this.quantizationTables=[],this.huffmanTablesAC=[],this.huffmanTablesDC=[],this.resetFrames()}resetFrames(){this.frames=[]}parse(A){let t=0;function e(){const e=A[t]<<8|A[t+1];return t+=2,e}function i(){const i=e(),s=A.subarray(t,t+i-2);return t+=s.length,s}function a(A){let t,e,i=0,s=0;for(e in A.components)A.components.hasOwnProperty(e)&&(t=A.components[e],i<t.h&&(i=t.h),s<t.v&&(s=t.v));const a=Math.ceil(A.samplesPerLine/8/i),n=Math.ceil(A.scanLines/8/s);for(e in A.components)if(A.components.hasOwnProperty(e)){t=A.components[e];const o=Math.ceil(Math.ceil(A.samplesPerLine/8)*t.h/i),r=Math.ceil(Math.ceil(A.scanLines/8)*t.v/s),l=a*t.h,h=n*t.v,g=[];for(let A=0;A<h;A++){const A=[];for(let t=0;t<l;t++)A.push(new Int32Array(64));g.push(A)}t.blocksPerLine=o,t.blocksPerColumn=r,t.blocks=g}A.maxH=i,A.maxV=s,A.mcusPerLine=a,A.mcusPerColumn=n}let n=e();if(65496!==n)throw new Error(\\\"SOI not found\\\");for(n=e();65497!==n;){switch(n){case 65280:break;case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:{const A=i();65504===n&&74===A[0]&&70===A[1]&&73===A[2]&&70===A[3]&&0===A[4]&&(this.jfif={version:{major:A[5],minor:A[6]},densityUnits:A[7],xDensity:A[8]<<8|A[9],yDensity:A[10]<<8|A[11],thumbWidth:A[12],thumbHeight:A[13],thumbData:A.subarray(14,14+3*A[12]*A[13])}),65518===n&&65===A[0]&&100===A[1]&&111===A[2]&&98===A[3]&&101===A[4]&&0===A[5]&&(this.adobe={version:A[6],flags0:A[7]<<8|A[8],flags1:A[9]<<8|A[10],transformCode:A[11]});break}case 65499:{const i=e()+t-2;for(;t<i;){const i=A[t++],a=new Int32Array(64);if(i>>4==0)for(let e=0;e<64;e++){a[s[e]]=A[t++]}else{if(i>>4!=1)throw new Error(\\\"DQT: invalid table spec\\\");for(let A=0;A<64;A++){a[s[A]]=e()}}this.quantizationTables[15&i]=a}break}case 65472:case 65473:case 65474:{e();const i={extended:65473===n,progressive:65474===n,precision:A[t++],scanLines:e(),samplesPerLine:e(),components:{},componentsOrder:[]},s=A[t++];let o;for(let e=0;e<s;e++){o=A[t];const e=A[t+1]>>4,s=15&A[t+1],a=A[t+2];i.componentsOrder.push(o),i.components[o]={h:e,v:s,quantizationIdx:a},t+=3}a(i),this.frames.push(i);break}case 65476:{const i=e();for(let e=2;e<i;){const i=A[t++],s=new Uint8Array(16);let a=0;for(let e=0;e<16;e++,t++)s[e]=A[t],a+=s[e];const n=new Uint8Array(a);for(let e=0;e<a;e++,t++)n[e]=A[t];e+=17+a,i>>4==0?this.huffmanTablesDC[15&i]=f(s,n):this.huffmanTablesAC[15&i]=f(s,n)}break}case 65501:e(),this.resetInterval=e();break;case 65498:{e();const i=A[t++],s=[],a=this.frames[0];for(let e=0;e<i;e++){const e=a.components[A[t++]],i=A[t++];e.huffmanTableDC=this.huffmanTablesDC[i>>4],e.huffmanTableAC=this.huffmanTablesAC[15&i],s.push(e)}const n=A[t++],o=A[t++],r=A[t++],l=u(A,t,a,s,this.resetInterval,n,o,r>>4,15&r);t+=l;break}case 65535:255!==A[t]&&t--;break;default:if(255===A[t-3]&&A[t-2]>=192&&A[t-2]<=254){t-=3;break}throw new Error(`unknown JPEG marker ${n.toString(16)}`)}n=e()}}getResult(){const{frames:A}=this;if(0===this.frames.length)throw new Error(\\\"no frames were decoded\\\");this.frames.length>1&&console.warn(\\\"more than one frame is not supported\\\");for(let A=0;A<this.frames.length;A++){const t=this.frames[A].components;for(const A of Object.keys(t))t[A].quantizationTable=this.quantizationTables[t[A].quantizationIdx],delete t[A].quantizationIdx}const t=A[0],{components:e,componentsOrder:i}=t,s=[],a=t.samplesPerLine,n=t.scanLines;for(let A=0;A<i.length;A++){const a=e[i[A]];s.push({lines:d(0,a),scaleX:a.h/t.maxH,scaleY:a.v/t.maxV})}const o=new Uint8Array(a*n*s.length);let r=0;for(let A=0;A<n;++A)for(let t=0;t<a;++t)for(let e=0;e<s.length;++e){const i=s[e];o[r]=i.lines[0|A*i.scaleY][0|t*i.scaleX],++r}return o}}class p extends i.Z{constructor(A){super(),this.reader=new I,A.JPEGTables&&this.reader.parse(A.JPEGTables)}decodeBlock(A){return this.reader.resetFrames(),this.reader.parse(new Uint8Array(A)),this.reader.getResult().buffer}}},1293:(A,t,e)=>{\\\"use strict\\\";e.r(t),e.d(t,{default:()=>f,zstd:()=>c});var i=e(7885),s=e(7197);let a,n,o;const r={env:{emscripten_notify_memory_growth:function(A){o=new Uint8Array(n.exports.memory.buffer)}}};const l=\\\"\\\";var h=e(7737),g=e(2499);const c=new class{init(){return a||(a=\\\"undefined\\\"!=typeof fetch?fetch(\\\"data:application/wasm;base64,\\\"+l).then((A=>A.arrayBuffer())).then((A=>WebAssembly.instantiate(A,r))).then(this._init):WebAssembly.instantiate(Buffer.from(l,\\\"base64\\\"),r).then(this._init),a)}_init(A){n=A.instance,r.env.emscripten_notify_memory_growth(0)}decode(A,t=0){if(!n)throw new Error(\\\"ZSTDDecoder: Await .init() before decoding.\\\");const e=A.byteLength,i=n.exports.malloc(e);o.set(A,i),t=t||Number(n.exports.ZSTD_findDecompressedSize(i,e));const s=n.exports.malloc(t),a=n.exports.ZSTD_decompress(s,t,i,e),r=o.slice(s,s+a);return n.exports.free(i),n.exports.free(s),r}};class f extends h.Z{constructor(A){super(),this.planarConfiguration=void 0!==A.PlanarConfiguration?A.PlanarConfiguration:1,this.samplesPerPixel=void 0!==A.SamplesPerPixel?A.SamplesPerPixel:1,this.addCompression=A.LercParameters[g.L5.AddCompression]}decodeBlock(A){switch(this.addCompression){case g.Qb.None:break;case g.Qb.Deflate:A=(0,i.rr)(new Uint8Array(A)).buffer;break;case g.Qb.Zstandard:A=c.decode(new Uint8Array(A)).buffer;break;default:throw new Error(`Unsupported LERC additional compression method identifier: ${this.addCompression}`)}return s.decode(A,{returnPixelInterleavedDims:1===this.planarConfiguration}).pixels[0].buffer}}},8672:(A,t,e)=>{\\\"use strict\\\";e.r(t),e.d(t,{default:()=>o});var i=e(7737);const s=257;function a(A,t){for(let e=t.length-1;e>=0;e--)A.push(t[e]);return A}function n(A){const t=new Uint16Array(4093),e=new Uint8Array(4093);for(let A=0;A<=257;A++)t[A]=4096,e[A]=A;let i=258,n=9,o=0;function r(){i=258,n=9}function l(A){const t=function(A,t,e){const i=t%8,a=Math.floor(t/8),n=8-i,o=t+e-8*(a+1);let r=8*(a+2)-(t+e);const l=8*(a+2)-t;if(r=Math.max(0,r),a>=A.length)return console.warn(\\\"ran off the end of the buffer before finding EOI_CODE (end on input code)\\\"),s;let h=A[a]&2**(8-i)-1;h<<=e-n;let g=h;if(a+1<A.length){let t=A[a+1]>>>r;t<<=Math.max(0,e-l),g+=t}if(o>8&&a+2<A.length){const i=8*(a+3)-(t+e);g+=A[a+2]>>>i}return g}(A,o,n);return o+=n,t}function h(A,s){return e[i]=s,t[i]=A,i++,i-1}function g(A){const i=[];for(let s=A;4096!==s;s=t[s])i.push(e[s]);return i}const c=[];r();const f=new Uint8Array(A);let u,d=l(f);for(;d!==s;){if(256===d){for(r(),d=l(f);256===d;)d=l(f);if(d===s)break;if(d>256)throw new Error(`corrupted code at scanline ${d}`);a(c,g(d)),u=d}else if(d<i){const A=g(d);a(c,A),h(u,A[A.length-1]),u=d}else{const A=g(u);if(!A)throw new Error(`Bogus entry. Not in dictionary, ${u} / ${i}, position: ${o}`);a(c,A),c.push(A[A.length-1]),h(u,A[A.length-1]),u=d}i+1>=2**n&&(12===n?u=void 0:n++),d=l(f)}return new Uint8Array(c)}class o extends i.Z{decodeBlock(A){return n(A).buffer}}},7411:(A,t,e)=>{\\\"use strict\\\";e.r(t),e.d(t,{default:()=>s});var i=e(7737);class s extends i.Z{decodeBlock(A){const t=new DataView(A),e=[];for(let i=0;i<A.byteLength;++i){let A=t.getInt8(i);if(A<0){const s=t.getUint8(i+1);A=-A;for(let t=0;t<=A;++t)e.push(s);i+=1}else{for(let s=0;s<=A;++s)e.push(t.getUint8(i+s+1));i+=A+1}}return new Uint8Array(e).buffer}}},3321:(A,t,e)=>{\\\"use strict\\\";e.r(t),e.d(t,{default:()=>s});var i=e(7737);class s extends i.Z{decodeBlock(A){return A}}},1588:(A,t,e)=>{\\\"use strict\\\";e.r(t),e.d(t,{default:()=>s});var i=e(7737);class s extends i.Z{constructor(){if(super(),\\\"undefined\\\"==typeof createImageBitmap)throw new Error(\\\"Cannot decode WebImage as `createImageBitmap` is not available\\\");if(\\\"undefined\\\"==typeof document&&\\\"undefined\\\"==typeof OffscreenCanvas)throw new Error(\\\"Cannot decode WebImage as neither `document` nor `OffscreenCanvas` is not available\\\")}async decode(A,t){const e=new Blob([t]),i=await createImageBitmap(e);let s;\\\"undefined\\\"!=typeof document?(s=document.createElement(\\\"canvas\\\"),s.width=i.width,s.height=i.height):s=new OffscreenCanvas(i.width,i.height);const a=s.getContext(\\\"2d\\\");return a.drawImage(i,0,0),a.getImageData(0,0,i.width,i.height).data.buffer}}},2499:(A,t,e)=>{\\\"use strict\\\";e.d(t,{Ie:()=>r,It:()=>a,L:()=>i,L5:()=>h,P1:()=>c,Qb:()=>g,pd:()=>l,sf:()=>o});const i={315:\\\"Artist\\\",258:\\\"BitsPerSample\\\",265:\\\"CellLength\\\",264:\\\"CellWidth\\\",320:\\\"ColorMap\\\",259:\\\"Compression\\\",33432:\\\"Copyright\\\",306:\\\"DateTime\\\",338:\\\"ExtraSamples\\\",266:\\\"FillOrder\\\",289:\\\"FreeByteCounts\\\",288:\\\"FreeOffsets\\\",291:\\\"GrayResponseCurve\\\",290:\\\"GrayResponseUnit\\\",316:\\\"HostComputer\\\",270:\\\"ImageDescription\\\",257:\\\"ImageLength\\\",256:\\\"ImageWidth\\\",271:\\\"Make\\\",281:\\\"MaxSampleValue\\\",280:\\\"MinSampleValue\\\",272:\\\"Model\\\",254:\\\"NewSubfileType\\\",274:\\\"Orientation\\\",262:\\\"PhotometricInterpretation\\\",284:\\\"PlanarConfiguration\\\",296:\\\"ResolutionUnit\\\",278:\\\"RowsPerStrip\\\",277:\\\"SamplesPerPixel\\\",305:\\\"Software\\\",279:\\\"StripByteCounts\\\",273:\\\"StripOffsets\\\",255:\\\"SubfileType\\\",263:\\\"Threshholding\\\",282:\\\"XResolution\\\",283:\\\"YResolution\\\",326:\\\"BadFaxLines\\\",327:\\\"CleanFaxData\\\",343:\\\"ClipPath\\\",328:\\\"ConsecutiveBadFaxLines\\\",433:\\\"Decode\\\",434:\\\"DefaultImageColor\\\",269:\\\"DocumentName\\\",336:\\\"DotRange\\\",321:\\\"HalftoneHints\\\",346:\\\"Indexed\\\",347:\\\"JPEGTables\\\",285:\\\"PageName\\\",297:\\\"PageNumber\\\",317:\\\"Predictor\\\",319:\\\"PrimaryChromaticities\\\",532:\\\"ReferenceBlackWhite\\\",339:\\\"SampleFormat\\\",340:\\\"SMinSampleValue\\\",341:\\\"SMaxSampleValue\\\",559:\\\"StripRowCounts\\\",330:\\\"SubIFDs\\\",292:\\\"T4Options\\\",293:\\\"T6Options\\\",325:\\\"TileByteCounts\\\",323:\\\"TileLength\\\",324:\\\"TileOffsets\\\",322:\\\"TileWidth\\\",301:\\\"TransferFunction\\\",318:\\\"WhitePoint\\\",344:\\\"XClipPathUnits\\\",286:\\\"XPosition\\\",529:\\\"YCbCrCoefficients\\\",531:\\\"YCbCrPositioning\\\",530:\\\"YCbCrSubSampling\\\",345:\\\"YClipPathUnits\\\",287:\\\"YPosition\\\",37378:\\\"ApertureValue\\\",40961:\\\"ColorSpace\\\",36868:\\\"DateTimeDigitized\\\",36867:\\\"DateTimeOriginal\\\",34665:\\\"Exif IFD\\\",36864:\\\"ExifVersion\\\",33434:\\\"ExposureTime\\\",41728:\\\"FileSource\\\",37385:\\\"Flash\\\",40960:\\\"FlashpixVersion\\\",33437:\\\"FNumber\\\",42016:\\\"ImageUniqueID\\\",37384:\\\"LightSource\\\",37500:\\\"MakerNote\\\",37377:\\\"ShutterSpeedValue\\\",37510:\\\"UserComment\\\",33723:\\\"IPTC\\\",34675:\\\"ICC Profile\\\",700:\\\"XMP\\\",42112:\\\"GDAL_METADATA\\\",42113:\\\"GDAL_NODATA\\\",34377:\\\"Photoshop\\\",33550:\\\"ModelPixelScale\\\",33922:\\\"ModelTiepoint\\\",34264:\\\"ModelTransformation\\\",34735:\\\"GeoKeyDirectory\\\",34736:\\\"GeoDoubleParams\\\",34737:\\\"GeoAsciiParams\\\",50674:\\\"LercParameters\\\"},s={};for(const A in i)i.hasOwnProperty(A)&&(s[i[A]]=parseInt(A,10));const a=[s.BitsPerSample,s.ExtraSamples,s.SampleFormat,s.StripByteCounts,s.StripOffsets,s.StripRowCounts,s.TileByteCounts,s.TileOffsets,s.SubIFDs],n={1:\\\"BYTE\\\",2:\\\"ASCII\\\",3:\\\"SHORT\\\",4:\\\"LONG\\\",5:\\\"RATIONAL\\\",6:\\\"SBYTE\\\",7:\\\"UNDEFINED\\\",8:\\\"SSHORT\\\",9:\\\"SLONG\\\",10:\\\"SRATIONAL\\\",11:\\\"FLOAT\\\",12:\\\"DOUBLE\\\",13:\\\"IFD\\\",16:\\\"LONG8\\\",17:\\\"SLONG8\\\",18:\\\"IFD8\\\"},o={};for(const A in n)n.hasOwnProperty(A)&&(o[n[A]]=parseInt(A,10));const r={WhiteIsZero:0,BlackIsZero:1,RGB:2,Palette:3,TransparencyMask:4,CMYK:5,YCbCr:6,CIELab:8,ICCLab:9},l={Unspecified:0,Assocalpha:1,Unassalpha:2},h={Version:0,AddCompression:1},g={None:0,Deflate:1,Zstandard:2},c={1024:\\\"GTModelTypeGeoKey\\\",1025:\\\"GTRasterTypeGeoKey\\\",1026:\\\"GTCitationGeoKey\\\",2048:\\\"GeographicTypeGeoKey\\\",2049:\\\"GeogCitationGeoKey\\\",2050:\\\"GeogGeodeticDatumGeoKey\\\",2051:\\\"GeogPrimeMeridianGeoKey\\\",2052:\\\"GeogLinearUnitsGeoKey\\\",2053:\\\"GeogLinearUnitSizeGeoKey\\\",2054:\\\"GeogAngularUnitsGeoKey\\\",2055:\\\"GeogAngularUnitSizeGeoKey\\\",2056:\\\"GeogEllipsoidGeoKey\\\",2057:\\\"GeogSemiMajorAxisGeoKey\\\",2058:\\\"GeogSemiMinorAxisGeoKey\\\",2059:\\\"GeogInvFlatteningGeoKey\\\",2060:\\\"GeogAzimuthUnitsGeoKey\\\",2061:\\\"GeogPrimeMeridianLongGeoKey\\\",2062:\\\"GeogTOWGS84GeoKey\\\",3072:\\\"ProjectedCSTypeGeoKey\\\",3073:\\\"PCSCitationGeoKey\\\",3074:\\\"ProjectionGeoKey\\\",3075:\\\"ProjCoordTransGeoKey\\\",3076:\\\"ProjLinearUnitsGeoKey\\\",3077:\\\"ProjLinearUnitSizeGeoKey\\\",3078:\\\"ProjStdParallel1GeoKey\\\",3079:\\\"ProjStdParallel2GeoKey\\\",3080:\\\"ProjNatOriginLongGeoKey\\\",3081:\\\"ProjNatOriginLatGeoKey\\\",3082:\\\"ProjFalseEastingGeoKey\\\",3083:\\\"ProjFalseNorthingGeoKey\\\",3084:\\\"ProjFalseOriginLongGeoKey\\\",3085:\\\"ProjFalseOriginLatGeoKey\\\",3086:\\\"ProjFalseOriginEastingGeoKey\\\",3087:\\\"ProjFalseOriginNorthingGeoKey\\\",3088:\\\"ProjCenterLongGeoKey\\\",3089:\\\"ProjCenterLatGeoKey\\\",3090:\\\"ProjCenterEastingGeoKey\\\",3091:\\\"ProjCenterNorthingGeoKey\\\",3092:\\\"ProjScaleAtNatOriginGeoKey\\\",3093:\\\"ProjScaleAtCenterGeoKey\\\",3094:\\\"ProjAzimuthAngleGeoKey\\\",3095:\\\"ProjStraightVertPoleLongGeoKey\\\",3096:\\\"ProjRectifiedGridAngleGeoKey\\\",4096:\\\"VerticalCSTypeGeoKey\\\",4097:\\\"VerticalCitationGeoKey\\\",4098:\\\"VerticalDatumGeoKey\\\",4099:\\\"VerticalUnitsGeoKey\\\"},f={};for(const A in c)c.hasOwnProperty(A)&&(f[c[A]]=parseInt(A,10))},7885:(A,t,e)=>{\\\"use strict\\\";e.d(t,{rr:()=>Ie});function i(A){let t=A.length;for(;--t>=0;)A[t]=0}const s=256,a=286,n=30,o=15,r=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),l=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),h=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),g=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),c=new Array(576);i(c);const f=new Array(60);i(f);const u=new Array(512);i(u);const d=new Array(256);i(d);const I=new Array(29);i(I);const p=new Array(n);function _(A,t,e,i,s){this.static_tree=A,this.extra_bits=t,this.extra_base=e,this.elems=i,this.max_length=s,this.has_stree=A&&A.length}let C,B,w;function E(A,t){this.dyn_tree=A,this.max_code=0,this.stat_desc=t}i(p);const y=A=>A<256?u[A]:u[256+(A>>>7)],Q=(A,t)=>{A.pending_buf[A.pending++]=255&t,A.pending_buf[A.pending++]=t>>>8&255},m=(A,t,e)=>{A.bi_valid>16-e?(A.bi_buf|=t<<A.bi_valid&65535,Q(A,A.bi_buf),A.bi_buf=t>>16-A.bi_valid,A.bi_valid+=e-16):(A.bi_buf|=t<<A.bi_valid&65535,A.bi_valid+=e)},k=(A,t,e)=>{m(A,e[2*t],e[2*t+1])},x=(A,t)=>{let e=0;do{e|=1&A,A>>>=1,e<<=1}while(--t>0);return e>>>1},M=(A,t,e)=>{const i=new Array(16);let s,a,n=0;for(s=1;s<=o;s++)n=n+e[s-1]<<1,i[s]=n;for(a=0;a<=t;a++){let t=A[2*a+1];0!==t&&(A[2*a]=x(i[t]++,t))}},b=A=>{let t;for(t=0;t<a;t++)A.dyn_ltree[2*t]=0;for(t=0;t<n;t++)A.dyn_dtree[2*t]=0;for(t=0;t<19;t++)A.bl_tree[2*t]=0;A.dyn_ltree[512]=1,A.opt_len=A.static_len=0,A.sym_next=A.matches=0},D=A=>{A.bi_valid>8?Q(A,A.bi_buf):A.bi_valid>0&&(A.pending_buf[A.pending++]=A.bi_buf),A.bi_buf=0,A.bi_valid=0},v=(A,t,e,i)=>{const s=2*t,a=2*e;return A[s]<A[a]||A[s]===A[a]&&i[t]<=i[e]},S=(A,t,e)=>{const i=A.heap[e];let s=e<<1;for(;s<=A.heap_len&&(s<A.heap_len&&v(t,A.heap[s+1],A.heap[s],A.depth)&&s++,!v(t,i,A.heap[s],A.depth));)A.heap[e]=A.heap[s],e=s,s<<=1;A.heap[e]=i},G=(A,t,e)=>{let i,a,n,o,h=0;if(0!==A.sym_next)do{i=255&A.pending_buf[A.sym_buf+h++],i+=(255&A.pending_buf[A.sym_buf+h++])<<8,a=A.pending_buf[A.sym_buf+h++],0===i?k(A,a,t):(n=d[a],k(A,n+s+1,t),o=r[n],0!==o&&(a-=I[n],m(A,a,o)),i--,n=y(i),k(A,n,e),o=l[n],0!==o&&(i-=p[n],m(A,i,o)))}while(h<A.sym_next);k(A,256,t)},N=(A,t)=>{const e=t.dyn_tree,i=t.stat_desc.static_tree,s=t.stat_desc.has_stree,a=t.stat_desc.elems;let n,r,l,h=-1;for(A.heap_len=0,A.heap_max=573,n=0;n<a;n++)0!==e[2*n]?(A.heap[++A.heap_len]=h=n,A.depth[n]=0):e[2*n+1]=0;for(;A.heap_len<2;)l=A.heap[++A.heap_len]=h<2?++h:0,e[2*l]=1,A.depth[l]=0,A.opt_len--,s&&(A.static_len-=i[2*l+1]);for(t.max_code=h,n=A.heap_len>>1;n>=1;n--)S(A,e,n);l=a;do{n=A.heap[1],A.heap[1]=A.heap[A.heap_len--],S(A,e,1),r=A.heap[1],A.heap[--A.heap_max]=n,A.heap[--A.heap_max]=r,e[2*l]=e[2*n]+e[2*r],A.depth[l]=(A.depth[n]>=A.depth[r]?A.depth[n]:A.depth[r])+1,e[2*n+1]=e[2*r+1]=l,A.heap[1]=l++,S(A,e,1)}while(A.heap_len>=2);A.heap[--A.heap_max]=A.heap[1],((A,t)=>{const e=t.dyn_tree,i=t.max_code,s=t.stat_desc.static_tree,a=t.stat_desc.has_stree,n=t.stat_desc.extra_bits,r=t.stat_desc.extra_base,l=t.stat_desc.max_length;let h,g,c,f,u,d,I=0;for(f=0;f<=o;f++)A.bl_count[f]=0;for(e[2*A.heap[A.heap_max]+1]=0,h=A.heap_max+1;h<573;h++)g=A.heap[h],f=e[2*e[2*g+1]+1]+1,f>l&&(f=l,I++),e[2*g+1]=f,g>i||(A.bl_count[f]++,u=0,g>=r&&(u=n[g-r]),d=e[2*g],A.opt_len+=d*(f+u),a&&(A.static_len+=d*(s[2*g+1]+u)));if(0!==I){do{for(f=l-1;0===A.bl_count[f];)f--;A.bl_count[f]--,A.bl_count[f+1]+=2,A.bl_count[l]--,I-=2}while(I>0);for(f=l;0!==f;f--)for(g=A.bl_count[f];0!==g;)c=A.heap[--h],c>i||(e[2*c+1]!==f&&(A.opt_len+=(f-e[2*c+1])*e[2*c],e[2*c+1]=f),g--)}})(A,t),M(e,h,A.bl_count)},R=(A,t,e)=>{let i,s,a=-1,n=t[1],o=0,r=7,l=4;for(0===n&&(r=138,l=3),t[2*(e+1)+1]=65535,i=0;i<=e;i++)s=n,n=t[2*(i+1)+1],++o<r&&s===n||(o<l?A.bl_tree[2*s]+=o:0!==s?(s!==a&&A.bl_tree[2*s]++,A.bl_tree[32]++):o<=10?A.bl_tree[34]++:A.bl_tree[36]++,o=0,a=s,0===n?(r=138,l=3):s===n?(r=6,l=3):(r=7,l=4))},F=(A,t,e)=>{let i,s,a=-1,n=t[1],o=0,r=7,l=4;for(0===n&&(r=138,l=3),i=0;i<=e;i++)if(s=n,n=t[2*(i+1)+1],!(++o<r&&s===n)){if(o<l)do{k(A,s,A.bl_tree)}while(0!=--o);else 0!==s?(s!==a&&(k(A,s,A.bl_tree),o--),k(A,16,A.bl_tree),m(A,o-3,2)):o<=10?(k(A,17,A.bl_tree),m(A,o-3,3)):(k(A,18,A.bl_tree),m(A,o-11,7));o=0,a=s,0===n?(r=138,l=3):s===n?(r=6,l=3):(r=7,l=4)}};let L=!1;const U=(A,t,e,i)=>{m(A,0+(i?1:0),3),D(A),Q(A,e),Q(A,~e),e&&A.pending_buf.set(A.window.subarray(t,t+e),A.pending),A.pending+=e};var O=(A,t,e,i)=>{let a,n,o=0;A.level>0?(2===A.strm.data_type&&(A.strm.data_type=(A=>{let t,e=4093624447;for(t=0;t<=31;t++,e>>>=1)if(1&e&&0!==A.dyn_ltree[2*t])return 0;if(0!==A.dyn_ltree[18]||0!==A.dyn_ltree[20]||0!==A.dyn_ltree[26])return 1;for(t=32;t<s;t++)if(0!==A.dyn_ltree[2*t])return 1;return 0})(A)),N(A,A.l_desc),N(A,A.d_desc),o=(A=>{let t;for(R(A,A.dyn_ltree,A.l_desc.max_code),R(A,A.dyn_dtree,A.d_desc.max_code),N(A,A.bl_desc),t=18;t>=3&&0===A.bl_tree[2*g[t]+1];t--);return A.opt_len+=3*(t+1)+5+5+4,t})(A),a=A.opt_len+3+7>>>3,n=A.static_len+3+7>>>3,n<=a&&(a=n)):a=n=e+5,e+4<=a&&-1!==t?U(A,t,e,i):4===A.strategy||n===a?(m(A,2+(i?1:0),3),G(A,c,f)):(m(A,4+(i?1:0),3),((A,t,e,i)=>{let s;for(m(A,t-257,5),m(A,e-1,5),m(A,i-4,4),s=0;s<i;s++)m(A,A.bl_tree[2*g[s]+1],3);F(A,A.dyn_ltree,t-1),F(A,A.dyn_dtree,e-1)})(A,A.l_desc.max_code+1,A.d_desc.max_code+1,o+1),G(A,A.dyn_ltree,A.dyn_dtree)),b(A),i&&D(A)},P={_tr_init:A=>{L||((()=>{let A,t,e,i,s;const g=new Array(16);for(e=0,i=0;i<28;i++)for(I[i]=e,A=0;A<1<<r[i];A++)d[e++]=i;for(d[e-1]=i,s=0,i=0;i<16;i++)for(p[i]=s,A=0;A<1<<l[i];A++)u[s++]=i;for(s>>=7;i<n;i++)for(p[i]=s<<7,A=0;A<1<<l[i]-7;A++)u[256+s++]=i;for(t=0;t<=o;t++)g[t]=0;for(A=0;A<=143;)c[2*A+1]=8,A++,g[8]++;for(;A<=255;)c[2*A+1]=9,A++,g[9]++;for(;A<=279;)c[2*A+1]=7,A++,g[7]++;for(;A<=287;)c[2*A+1]=8,A++,g[8]++;for(M(c,287,g),A=0;A<n;A++)f[2*A+1]=5,f[2*A]=x(A,5);C=new _(c,r,257,a,o),B=new _(f,l,0,n,o),w=new _(new Array(0),h,0,19,7)})(),L=!0),A.l_desc=new E(A.dyn_ltree,C),A.d_desc=new E(A.dyn_dtree,B),A.bl_desc=new E(A.bl_tree,w),A.bi_buf=0,A.bi_valid=0,b(A)},_tr_stored_block:U,_tr_flush_block:O,_tr_tally:(A,t,e)=>(A.pending_buf[A.sym_buf+A.sym_next++]=t,A.pending_buf[A.sym_buf+A.sym_next++]=t>>8,A.pending_buf[A.sym_buf+A.sym_next++]=e,0===t?A.dyn_ltree[2*e]++:(A.matches++,t--,A.dyn_ltree[2*(d[e]+s+1)]++,A.dyn_dtree[2*y(t)]++),A.sym_next===A.sym_end),_tr_align:A=>{m(A,2,3),k(A,256,c),(A=>{16===A.bi_valid?(Q(A,A.bi_buf),A.bi_buf=0,A.bi_valid=0):A.bi_valid>=8&&(A.pending_buf[A.pending++]=255&A.bi_buf,A.bi_buf>>=8,A.bi_valid-=8)})(A)}};var T=(A,t,e,i)=>{let s=65535&A|0,a=A>>>16&65535|0,n=0;for(;0!==e;){n=e>2e3?2e3:e,e-=n;do{s=s+t[i++]|0,a=a+s|0}while(--n);s%=65521,a%=65521}return s|a<<16|0};const H=new Uint32Array((()=>{let A,t=[];for(var e=0;e<256;e++){A=e;for(var i=0;i<8;i++)A=1&A?3988292384^A>>>1:A>>>1;t[e]=A}return t})());var J=(A,t,e,i)=>{const s=H,a=i+e;A^=-1;for(let e=i;e<a;e++)A=A>>>8^s[255&(A^t[e])];return-1^A},q={2:\\\"need dictionary\\\",1:\\\"stream end\\\",0:\\\"\\\",\\\"-1\\\":\\\"file error\\\",\\\"-2\\\":\\\"stream error\\\",\\\"-3\\\":\\\"data error\\\",\\\"-4\\\":\\\"insufficient memory\\\",\\\"-5\\\":\\\"buffer error\\\",\\\"-6\\\":\\\"incompatible version\\\"},z={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:j,_tr_stored_block:K,_tr_flush_block:Y,_tr_tally:V,_tr_align:W}=P,{Z_NO_FLUSH:X,Z_PARTIAL_FLUSH:Z,Z_FULL_FLUSH:$,Z_FINISH:AA,Z_BLOCK:tA,Z_OK:eA,Z_STREAM_END:iA,Z_STREAM_ERROR:sA,Z_DATA_ERROR:aA,Z_BUF_ERROR:nA,Z_DEFAULT_COMPRESSION:oA,Z_FILTERED:rA,Z_HUFFMAN_ONLY:lA,Z_RLE:hA,Z_FIXED:gA,Z_DEFAULT_STRATEGY:cA,Z_UNKNOWN:fA,Z_DEFLATED:uA}=z,dA=258,IA=262,pA=42,_A=113,CA=666,BA=(A,t)=>(A.msg=q[t],t),wA=A=>2*A-(A>4?9:0),EA=A=>{let t=A.length;for(;--t>=0;)A[t]=0},yA=A=>{let t,e,i,s=A.w_size;t=A.hash_size,i=t;do{e=A.head[--i],A.head[i]=e>=s?e-s:0}while(--t);t=s,i=t;do{e=A.prev[--i],A.prev[i]=e>=s?e-s:0}while(--t)};let QA=(A,t,e)=>(t<<A.hash_shift^e)&A.hash_mask;const mA=A=>{const t=A.state;let e=t.pending;e>A.avail_out&&(e=A.avail_out),0!==e&&(A.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+e),A.next_out),A.next_out+=e,t.pending_out+=e,A.total_out+=e,A.avail_out-=e,t.pending-=e,0===t.pending&&(t.pending_out=0))},kA=(A,t)=>{Y(A,A.block_start>=0?A.block_start:-1,A.strstart-A.block_start,t),A.block_start=A.strstart,mA(A.strm)},xA=(A,t)=>{A.pending_buf[A.pending++]=t},MA=(A,t)=>{A.pending_buf[A.pending++]=t>>>8&255,A.pending_buf[A.pending++]=255&t},bA=(A,t,e,i)=>{let s=A.avail_in;return s>i&&(s=i),0===s?0:(A.avail_in-=s,t.set(A.input.subarray(A.next_in,A.next_in+s),e),1===A.state.wrap?A.adler=T(A.adler,t,s,e):2===A.state.wrap&&(A.adler=J(A.adler,t,s,e)),A.next_in+=s,A.total_in+=s,s)},DA=(A,t)=>{let e,i,s=A.max_chain_length,a=A.strstart,n=A.prev_length,o=A.nice_match;const r=A.strstart>A.w_size-IA?A.strstart-(A.w_size-IA):0,l=A.window,h=A.w_mask,g=A.prev,c=A.strstart+dA;let f=l[a+n-1],u=l[a+n];A.prev_length>=A.good_match&&(s>>=2),o>A.lookahead&&(o=A.lookahead);do{if(e=t,l[e+n]===u&&l[e+n-1]===f&&l[e]===l[a]&&l[++e]===l[a+1]){a+=2,e++;do{}while(l[++a]===l[++e]&&l[++a]===l[++e]&&l[++a]===l[++e]&&l[++a]===l[++e]&&l[++a]===l[++e]&&l[++a]===l[++e]&&l[++a]===l[++e]&&l[++a]===l[++e]&&a<c);if(i=dA-(c-a),a=c-dA,i>n){if(A.match_start=t,n=i,i>=o)break;f=l[a+n-1],u=l[a+n]}}}while((t=g[t&h])>r&&0!=--s);return n<=A.lookahead?n:A.lookahead},vA=A=>{const t=A.w_size;let e,i,s;do{if(i=A.window_size-A.lookahead-A.strstart,A.strstart>=t+(t-IA)&&(A.window.set(A.window.subarray(t,t+t-i),0),A.match_start-=t,A.strstart-=t,A.block_start-=t,A.insert>A.strstart&&(A.insert=A.strstart),yA(A),i+=t),0===A.strm.avail_in)break;if(e=bA(A.strm,A.window,A.strstart+A.lookahead,i),A.lookahead+=e,A.lookahead+A.insert>=3)for(s=A.strstart-A.insert,A.ins_h=A.window[s],A.ins_h=QA(A,A.ins_h,A.window[s+1]);A.insert&&(A.ins_h=QA(A,A.ins_h,A.window[s+3-1]),A.prev[s&A.w_mask]=A.head[A.ins_h],A.head[A.ins_h]=s,s++,A.insert--,!(A.lookahead+A.insert<3)););}while(A.lookahead<IA&&0!==A.strm.avail_in)},SA=(A,t)=>{let e,i,s,a=A.pending_buf_size-5>A.w_size?A.w_size:A.pending_buf_size-5,n=0,o=A.strm.avail_in;do{if(e=65535,s=A.bi_valid+42>>3,A.strm.avail_out<s)break;if(s=A.strm.avail_out-s,i=A.strstart-A.block_start,e>i+A.strm.avail_in&&(e=i+A.strm.avail_in),e>s&&(e=s),e<a&&(0===e&&t!==AA||t===X||e!==i+A.strm.avail_in))break;n=t===AA&&e===i+A.strm.avail_in?1:0,K(A,0,0,n),A.pending_buf[A.pending-4]=e,A.pending_buf[A.pending-3]=e>>8,A.pending_buf[A.pending-2]=~e,A.pending_buf[A.pending-1]=~e>>8,mA(A.strm),i&&(i>e&&(i=e),A.strm.output.set(A.window.subarray(A.block_start,A.block_start+i),A.strm.next_out),A.strm.next_out+=i,A.strm.avail_out-=i,A.strm.total_out+=i,A.block_start+=i,e-=i),e&&(bA(A.strm,A.strm.output,A.strm.next_out,e),A.strm.next_out+=e,A.strm.avail_out-=e,A.strm.total_out+=e)}while(0===n);return o-=A.strm.avail_in,o&&(o>=A.w_size?(A.matches=2,A.window.set(A.strm.input.subarray(A.strm.next_in-A.w_size,A.strm.next_in),0),A.strstart=A.w_size,A.insert=A.strstart):(A.window_size-A.strstart<=o&&(A.strstart-=A.w_size,A.window.set(A.window.subarray(A.w_size,A.w_size+A.strstart),0),A.matches<2&&A.matches++,A.insert>A.strstart&&(A.insert=A.strstart)),A.window.set(A.strm.input.subarray(A.strm.next_in-o,A.strm.next_in),A.strstart),A.strstart+=o,A.insert+=o>A.w_size-A.insert?A.w_size-A.insert:o),A.block_start=A.strstart),A.high_water<A.strstart&&(A.high_water=A.strstart),n?4:t!==X&&t!==AA&&0===A.strm.avail_in&&A.strstart===A.block_start?2:(s=A.window_size-A.strstart,A.strm.avail_in>s&&A.block_start>=A.w_size&&(A.block_start-=A.w_size,A.strstart-=A.w_size,A.window.set(A.window.subarray(A.w_size,A.w_size+A.strstart),0),A.matches<2&&A.matches++,s+=A.w_size,A.insert>A.strstart&&(A.insert=A.strstart)),s>A.strm.avail_in&&(s=A.strm.avail_in),s&&(bA(A.strm,A.window,A.strstart,s),A.strstart+=s,A.insert+=s>A.w_size-A.insert?A.w_size-A.insert:s),A.high_water<A.strstart&&(A.high_water=A.strstart),s=A.bi_valid+42>>3,s=A.pending_buf_size-s>65535?65535:A.pending_buf_size-s,a=s>A.w_size?A.w_size:s,i=A.strstart-A.block_start,(i>=a||(i||t===AA)&&t!==X&&0===A.strm.avail_in&&i<=s)&&(e=i>s?s:i,n=t===AA&&0===A.strm.avail_in&&e===i?1:0,K(A,A.block_start,e,n),A.block_start+=e,mA(A.strm)),n?3:1)},GA=(A,t)=>{let e,i;for(;;){if(A.lookahead<IA){if(vA(A),A.lookahead<IA&&t===X)return 1;if(0===A.lookahead)break}if(e=0,A.lookahead>=3&&(A.ins_h=QA(A,A.ins_h,A.window[A.strstart+3-1]),e=A.prev[A.strstart&A.w_mask]=A.head[A.ins_h],A.head[A.ins_h]=A.strstart),0!==e&&A.strstart-e<=A.w_size-IA&&(A.match_length=DA(A,e)),A.match_length>=3)if(i=V(A,A.strstart-A.match_start,A.match_length-3),A.lookahead-=A.match_length,A.match_length<=A.max_lazy_match&&A.lookahead>=3){A.match_length--;do{A.strstart++,A.ins_h=QA(A,A.ins_h,A.window[A.strstart+3-1]),e=A.prev[A.strstart&A.w_mask]=A.head[A.ins_h],A.head[A.ins_h]=A.strstart}while(0!=--A.match_length);A.strstart++}else A.strstart+=A.match_length,A.match_length=0,A.ins_h=A.window[A.strstart],A.ins_h=QA(A,A.ins_h,A.window[A.strstart+1]);else i=V(A,0,A.window[A.strstart]),A.lookahead--,A.strstart++;if(i&&(kA(A,!1),0===A.strm.avail_out))return 1}return A.insert=A.strstart<2?A.strstart:2,t===AA?(kA(A,!0),0===A.strm.avail_out?3:4):A.sym_next&&(kA(A,!1),0===A.strm.avail_out)?1:2},NA=(A,t)=>{let e,i,s;for(;;){if(A.lookahead<IA){if(vA(A),A.lookahead<IA&&t===X)return 1;if(0===A.lookahead)break}if(e=0,A.lookahead>=3&&(A.ins_h=QA(A,A.ins_h,A.window[A.strstart+3-1]),e=A.prev[A.strstart&A.w_mask]=A.head[A.ins_h],A.head[A.ins_h]=A.strstart),A.prev_length=A.match_length,A.prev_match=A.match_start,A.match_length=2,0!==e&&A.prev_length<A.max_lazy_match&&A.strstart-e<=A.w_size-IA&&(A.match_length=DA(A,e),A.match_length<=5&&(A.strategy===rA||3===A.match_length&&A.strstart-A.match_start>4096)&&(A.match_length=2)),A.prev_length>=3&&A.match_length<=A.prev_length){s=A.strstart+A.lookahead-3,i=V(A,A.strstart-1-A.prev_match,A.prev_length-3),A.lookahead-=A.prev_length-1,A.prev_length-=2;do{++A.strstart<=s&&(A.ins_h=QA(A,A.ins_h,A.window[A.strstart+3-1]),e=A.prev[A.strstart&A.w_mask]=A.head[A.ins_h],A.head[A.ins_h]=A.strstart)}while(0!=--A.prev_length);if(A.match_available=0,A.match_length=2,A.strstart++,i&&(kA(A,!1),0===A.strm.avail_out))return 1}else if(A.match_available){if(i=V(A,0,A.window[A.strstart-1]),i&&kA(A,!1),A.strstart++,A.lookahead--,0===A.strm.avail_out)return 1}else A.match_available=1,A.strstart++,A.lookahead--}return A.match_available&&(i=V(A,0,A.window[A.strstart-1]),A.match_available=0),A.insert=A.strstart<2?A.strstart:2,t===AA?(kA(A,!0),0===A.strm.avail_out?3:4):A.sym_next&&(kA(A,!1),0===A.strm.avail_out)?1:2};function RA(A,t,e,i,s){this.good_length=A,this.max_lazy=t,this.nice_length=e,this.max_chain=i,this.func=s}const FA=[new RA(0,0,0,0,SA),new RA(4,4,8,4,GA),new RA(4,5,16,8,GA),new RA(4,6,32,32,GA),new RA(4,4,16,16,NA),new RA(8,16,32,32,NA),new RA(8,16,128,128,NA),new RA(8,32,128,256,NA),new RA(32,128,258,1024,NA),new RA(32,258,258,4096,NA)];function LA(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=uA,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),EA(this.dyn_ltree),EA(this.dyn_dtree),EA(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),EA(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),EA(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const UA=A=>{if(!A)return 1;const t=A.state;return!t||t.strm!==A||t.status!==pA&&57!==t.status&&69!==t.status&&73!==t.status&&91!==t.status&&103!==t.status&&t.status!==_A&&t.status!==CA?1:0},OA=A=>{if(UA(A))return BA(A,sA);A.total_in=A.total_out=0,A.data_type=fA;const t=A.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=2===t.wrap?57:t.wrap?pA:_A,A.adler=2===t.wrap?0:1,t.last_flush=-2,j(t),eA},PA=A=>{const t=OA(A);var e;return t===eA&&((e=A.state).window_size=2*e.w_size,EA(e.head),e.max_lazy_match=FA[e.level].max_lazy,e.good_match=FA[e.level].good_length,e.nice_match=FA[e.level].nice_length,e.max_chain_length=FA[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=2,e.match_available=0,e.ins_h=0),t},TA=(A,t,e,i,s,a)=>{if(!A)return sA;let n=1;if(t===oA&&(t=6),i<0?(n=0,i=-i):i>15&&(n=2,i-=16),s<1||s>9||e!==uA||i<8||i>15||t<0||t>9||a<0||a>gA||8===i&&1!==n)return BA(A,sA);8===i&&(i=9);const o=new LA;return A.state=o,o.strm=A,o.status=pA,o.wrap=n,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=s+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<s+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=3*(o.lit_bufsize-1),o.level=t,o.strategy=a,o.method=e,PA(A)};var HA={deflateInit:(A,t)=>TA(A,t,uA,15,8,cA),deflateInit2:TA,deflateReset:PA,deflateResetKeep:OA,deflateSetHeader:(A,t)=>UA(A)||2!==A.state.wrap?sA:(A.state.gzhead=t,eA),deflate:(A,t)=>{if(UA(A)||t>tA||t<0)return A?BA(A,sA):sA;const e=A.state;if(!A.output||0!==A.avail_in&&!A.input||e.status===CA&&t!==AA)return BA(A,0===A.avail_out?nA:sA);const i=e.last_flush;if(e.last_flush=t,0!==e.pending){if(mA(A),0===A.avail_out)return e.last_flush=-1,eA}else if(0===A.avail_in&&wA(t)<=wA(i)&&t!==AA)return BA(A,nA);if(e.status===CA&&0!==A.avail_in)return BA(A,nA);if(e.status===pA&&0===e.wrap&&(e.status=_A),e.status===pA){let t=uA+(e.w_bits-8<<4)<<8,i=-1;if(i=e.strategy>=lA||e.level<2?0:e.level<6?1:6===e.level?2:3,t|=i<<6,0!==e.strstart&&(t|=32),t+=31-t%31,MA(e,t),0!==e.strstart&&(MA(e,A.adler>>>16),MA(e,65535&A.adler)),A.adler=1,e.status=_A,mA(A),0!==e.pending)return e.last_flush=-1,eA}if(57===e.status)if(A.adler=0,xA(e,31),xA(e,139),xA(e,8),e.gzhead)xA(e,(e.gzhead.text?1:0)+(e.gzhead.hcrc?2:0)+(e.gzhead.extra?4:0)+(e.gzhead.name?8:0)+(e.gzhead.comment?16:0)),xA(e,255&e.gzhead.time),xA(e,e.gzhead.time>>8&255),xA(e,e.gzhead.time>>16&255),xA(e,e.gzhead.time>>24&255),xA(e,9===e.level?2:e.strategy>=lA||e.level<2?4:0),xA(e,255&e.gzhead.os),e.gzhead.extra&&e.gzhead.extra.length&&(xA(e,255&e.gzhead.extra.length),xA(e,e.gzhead.extra.length>>8&255)),e.gzhead.hcrc&&(A.adler=J(A.adler,e.pending_buf,e.pending,0)),e.gzindex=0,e.status=69;else if(xA(e,0),xA(e,0),xA(e,0),xA(e,0),xA(e,0),xA(e,9===e.level?2:e.strategy>=lA||e.level<2?4:0),xA(e,3),e.status=_A,mA(A),0!==e.pending)return e.last_flush=-1,eA;if(69===e.status){if(e.gzhead.extra){let t=e.pending,i=(65535&e.gzhead.extra.length)-e.gzindex;for(;e.pending+i>e.pending_buf_size;){let s=e.pending_buf_size-e.pending;if(e.pending_buf.set(e.gzhead.extra.subarray(e.gzindex,e.gzindex+s),e.pending),e.pending=e.pending_buf_size,e.gzhead.hcrc&&e.pending>t&&(A.adler=J(A.adler,e.pending_buf,e.pending-t,t)),e.gzindex+=s,mA(A),0!==e.pending)return e.last_flush=-1,eA;t=0,i-=s}let s=new Uint8Array(e.gzhead.extra);e.pending_buf.set(s.subarray(e.gzindex,e.gzindex+i),e.pending),e.pending+=i,e.gzhead.hcrc&&e.pending>t&&(A.adler=J(A.adler,e.pending_buf,e.pending-t,t)),e.gzindex=0}e.status=73}if(73===e.status){if(e.gzhead.name){let t,i=e.pending;do{if(e.pending===e.pending_buf_size){if(e.gzhead.hcrc&&e.pending>i&&(A.adler=J(A.adler,e.pending_buf,e.pending-i,i)),mA(A),0!==e.pending)return e.last_flush=-1,eA;i=0}t=e.gzindex<e.gzhead.name.length?255&e.gzhead.name.charCodeAt(e.gzindex++):0,xA(e,t)}while(0!==t);e.gzhead.hcrc&&e.pending>i&&(A.adler=J(A.adler,e.pending_buf,e.pending-i,i)),e.gzindex=0}e.status=91}if(91===e.status){if(e.gzhead.comment){let t,i=e.pending;do{if(e.pending===e.pending_buf_size){if(e.gzhead.hcrc&&e.pending>i&&(A.adler=J(A.adler,e.pending_buf,e.pending-i,i)),mA(A),0!==e.pending)return e.last_flush=-1,eA;i=0}t=e.gzindex<e.gzhead.comment.length?255&e.gzhead.comment.charCodeAt(e.gzindex++):0,xA(e,t)}while(0!==t);e.gzhead.hcrc&&e.pending>i&&(A.adler=J(A.adler,e.pending_buf,e.pending-i,i))}e.status=103}if(103===e.status){if(e.gzhead.hcrc){if(e.pending+2>e.pending_buf_size&&(mA(A),0!==e.pending))return e.last_flush=-1,eA;xA(e,255&A.adler),xA(e,A.adler>>8&255),A.adler=0}if(e.status=_A,mA(A),0!==e.pending)return e.last_flush=-1,eA}if(0!==A.avail_in||0!==e.lookahead||t!==X&&e.status!==CA){let i=0===e.level?SA(e,t):e.strategy===lA?((A,t)=>{let e;for(;;){if(0===A.lookahead&&(vA(A),0===A.lookahead)){if(t===X)return 1;break}if(A.match_length=0,e=V(A,0,A.window[A.strstart]),A.lookahead--,A.strstart++,e&&(kA(A,!1),0===A.strm.avail_out))return 1}return A.insert=0,t===AA?(kA(A,!0),0===A.strm.avail_out?3:4):A.sym_next&&(kA(A,!1),0===A.strm.avail_out)?1:2})(e,t):e.strategy===hA?((A,t)=>{let e,i,s,a;const n=A.window;for(;;){if(A.lookahead<=dA){if(vA(A),A.lookahead<=dA&&t===X)return 1;if(0===A.lookahead)break}if(A.match_length=0,A.lookahead>=3&&A.strstart>0&&(s=A.strstart-1,i=n[s],i===n[++s]&&i===n[++s]&&i===n[++s])){a=A.strstart+dA;do{}while(i===n[++s]&&i===n[++s]&&i===n[++s]&&i===n[++s]&&i===n[++s]&&i===n[++s]&&i===n[++s]&&i===n[++s]&&s<a);A.match_length=dA-(a-s),A.match_length>A.lookahead&&(A.match_length=A.lookahead)}if(A.match_length>=3?(e=V(A,1,A.match_length-3),A.lookahead-=A.match_length,A.strstart+=A.match_length,A.match_length=0):(e=V(A,0,A.window[A.strstart]),A.lookahead--,A.strstart++),e&&(kA(A,!1),0===A.strm.avail_out))return 1}return A.insert=0,t===AA?(kA(A,!0),0===A.strm.avail_out?3:4):A.sym_next&&(kA(A,!1),0===A.strm.avail_out)?1:2})(e,t):FA[e.level].func(e,t);if(3!==i&&4!==i||(e.status=CA),1===i||3===i)return 0===A.avail_out&&(e.last_flush=-1),eA;if(2===i&&(t===Z?W(e):t!==tA&&(K(e,0,0,!1),t===$&&(EA(e.head),0===e.lookahead&&(e.strstart=0,e.block_start=0,e.insert=0))),mA(A),0===A.avail_out))return e.last_flush=-1,eA}return t!==AA?eA:e.wrap<=0?iA:(2===e.wrap?(xA(e,255&A.adler),xA(e,A.adler>>8&255),xA(e,A.adler>>16&255),xA(e,A.adler>>24&255),xA(e,255&A.total_in),xA(e,A.total_in>>8&255),xA(e,A.total_in>>16&255),xA(e,A.total_in>>24&255)):(MA(e,A.adler>>>16),MA(e,65535&A.adler)),mA(A),e.wrap>0&&(e.wrap=-e.wrap),0!==e.pending?eA:iA)},deflateEnd:A=>{if(UA(A))return sA;const t=A.state.status;return A.state=null,t===_A?BA(A,aA):eA},deflateSetDictionary:(A,t)=>{let e=t.length;if(UA(A))return sA;const i=A.state,s=i.wrap;if(2===s||1===s&&i.status!==pA||i.lookahead)return sA;if(1===s&&(A.adler=T(A.adler,t,e,0)),i.wrap=0,e>=i.w_size){0===s&&(EA(i.head),i.strstart=0,i.block_start=0,i.insert=0);let A=new Uint8Array(i.w_size);A.set(t.subarray(e-i.w_size,e),0),t=A,e=i.w_size}const a=A.avail_in,n=A.next_in,o=A.input;for(A.avail_in=e,A.next_in=0,A.input=t,vA(i);i.lookahead>=3;){let A=i.strstart,t=i.lookahead-2;do{i.ins_h=QA(i,i.ins_h,i.window[A+3-1]),i.prev[A&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=A,A++}while(--t);i.strstart=A,i.lookahead=2,vA(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,A.next_in=n,A.input=o,A.avail_in=a,i.wrap=s,eA},deflateInfo:\\\"pako deflate (from Nodeca project)\\\"};const JA=(A,t)=>Object.prototype.hasOwnProperty.call(A,t);var qA={assign:function(A){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const e=t.shift();if(e){if(\\\"object\\\"!=typeof e)throw new TypeError(e+\\\"must be non-object\\\");for(const t in e)JA(e,t)&&(A[t]=e[t])}}return A},flattenChunks:A=>{let t=0;for(let e=0,i=A.length;e<i;e++)t+=A[e].length;const e=new Uint8Array(t);for(let t=0,i=0,s=A.length;t<s;t++){let s=A[t];e.set(s,i),i+=s.length}return e}};let zA=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(A){zA=!1}const jA=new Uint8Array(256);for(let A=0;A<256;A++)jA[A]=A>=252?6:A>=248?5:A>=240?4:A>=224?3:A>=192?2:1;jA[254]=jA[254]=1;var KA={string2buf:A=>{if(\\\"function\\\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(A);let t,e,i,s,a,n=A.length,o=0;for(s=0;s<n;s++)e=A.charCodeAt(s),55296==(64512&e)&&s+1<n&&(i=A.charCodeAt(s+1),56320==(64512&i)&&(e=65536+(e-55296<<10)+(i-56320),s++)),o+=e<128?1:e<2048?2:e<65536?3:4;for(t=new Uint8Array(o),a=0,s=0;a<o;s++)e=A.charCodeAt(s),55296==(64512&e)&&s+1<n&&(i=A.charCodeAt(s+1),56320==(64512&i)&&(e=65536+(e-55296<<10)+(i-56320),s++)),e<128?t[a++]=e:e<2048?(t[a++]=192|e>>>6,t[a++]=128|63&e):e<65536?(t[a++]=224|e>>>12,t[a++]=128|e>>>6&63,t[a++]=128|63&e):(t[a++]=240|e>>>18,t[a++]=128|e>>>12&63,t[a++]=128|e>>>6&63,t[a++]=128|63&e);return t},buf2string:(A,t)=>{const e=t||A.length;if(\\\"function\\\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(A.subarray(0,t));let i,s;const a=new Array(2*e);for(s=0,i=0;i<e;){let t=A[i++];if(t<128){a[s++]=t;continue}let n=jA[t];if(n>4)a[s++]=65533,i+=n-1;else{for(t&=2===n?31:3===n?15:7;n>1&&i<e;)t=t<<6|63&A[i++],n--;n>1?a[s++]=65533:t<65536?a[s++]=t:(t-=65536,a[s++]=55296|t>>10&1023,a[s++]=56320|1023&t)}}return((A,t)=>{if(t<65534&&A.subarray&&zA)return String.fromCharCode.apply(null,A.length===t?A:A.subarray(0,t));let e=\\\"\\\";for(let i=0;i<t;i++)e+=String.fromCharCode(A[i]);return e})(a,s)},utf8border:(A,t)=>{(t=t||A.length)>A.length&&(t=A.length);let e=t-1;for(;e>=0&&128==(192&A[e]);)e--;return e<0||0===e?t:e+jA[A[e]]>t?e:t}};var YA=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\\\"\\\",this.state=null,this.data_type=2,this.adler=0};const VA=Object.prototype.toString,{Z_NO_FLUSH:WA,Z_SYNC_FLUSH:XA,Z_FULL_FLUSH:ZA,Z_FINISH:$A,Z_OK:At,Z_STREAM_END:tt,Z_DEFAULT_COMPRESSION:et,Z_DEFAULT_STRATEGY:it,Z_DEFLATED:st}=z;function at(A){this.options=qA.assign({level:et,method:st,chunkSize:16384,windowBits:15,memLevel:8,strategy:it},A||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\\\"\\\",this.ended=!1,this.chunks=[],this.strm=new YA,this.strm.avail_out=0;let e=HA.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(e!==At)throw new Error(q[e]);if(t.header&&HA.deflateSetHeader(this.strm,t.header),t.dictionary){let A;if(A=\\\"string\\\"==typeof t.dictionary?KA.string2buf(t.dictionary):\\\"[object ArrayBuffer]\\\"===VA.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,e=HA.deflateSetDictionary(this.strm,A),e!==At)throw new Error(q[e]);this._dict_set=!0}}function nt(A,t){const e=new at(t);if(e.push(A,!0),e.err)throw e.msg||q[e.err];return e.result}at.prototype.push=function(A,t){const e=this.strm,i=this.options.chunkSize;let s,a;if(this.ended)return!1;for(a=t===~~t?t:!0===t?$A:WA,\\\"string\\\"==typeof A?e.input=KA.string2buf(A):\\\"[object ArrayBuffer]\\\"===VA.call(A)?e.input=new Uint8Array(A):e.input=A,e.next_in=0,e.avail_in=e.input.length;;)if(0===e.avail_out&&(e.output=new Uint8Array(i),e.next_out=0,e.avail_out=i),(a===XA||a===ZA)&&e.avail_out<=6)this.onData(e.output.subarray(0,e.next_out)),e.avail_out=0;else{if(s=HA.deflate(e,a),s===tt)return e.next_out>0&&this.onData(e.output.subarray(0,e.next_out)),s=HA.deflateEnd(this.strm),this.onEnd(s),this.ended=!0,s===At;if(0!==e.avail_out){if(a>0&&e.next_out>0)this.onData(e.output.subarray(0,e.next_out)),e.avail_out=0;else if(0===e.avail_in)break}else this.onData(e.output)}return!0},at.prototype.onData=function(A){this.chunks.push(A)},at.prototype.onEnd=function(A){A===At&&(this.result=qA.flattenChunks(this.chunks)),this.chunks=[],this.err=A,this.msg=this.strm.msg};var ot={Deflate:at,deflate:nt,deflateRaw:function(A,t){return(t=t||{}).raw=!0,nt(A,t)},gzip:function(A,t){return(t=t||{}).gzip=!0,nt(A,t)},constants:z};const rt=16209;var lt=function(A,t){let e,i,s,a,n,o,r,l,h,g,c,f,u,d,I,p,_,C,B,w,E,y,Q,m;const k=A.state;e=A.next_in,Q=A.input,i=e+(A.avail_in-5),s=A.next_out,m=A.output,a=s-(t-A.avail_out),n=s+(A.avail_out-257),o=k.dmax,r=k.wsize,l=k.whave,h=k.wnext,g=k.window,c=k.hold,f=k.bits,u=k.lencode,d=k.distcode,I=(1<<k.lenbits)-1,p=(1<<k.distbits)-1;A:do{f<15&&(c+=Q[e++]<<f,f+=8,c+=Q[e++]<<f,f+=8),_=u[c&I];t:for(;;){if(C=_>>>24,c>>>=C,f-=C,C=_>>>16&255,0===C)m[s++]=65535&_;else{if(!(16&C)){if(0==(64&C)){_=u[(65535&_)+(c&(1<<C)-1)];continue t}if(32&C){k.mode=16191;break A}A.msg=\\\"invalid literal/length code\\\",k.mode=rt;break A}B=65535&_,C&=15,C&&(f<C&&(c+=Q[e++]<<f,f+=8),B+=c&(1<<C)-1,c>>>=C,f-=C),f<15&&(c+=Q[e++]<<f,f+=8,c+=Q[e++]<<f,f+=8),_=d[c&p];e:for(;;){if(C=_>>>24,c>>>=C,f-=C,C=_>>>16&255,!(16&C)){if(0==(64&C)){_=d[(65535&_)+(c&(1<<C)-1)];continue e}A.msg=\\\"invalid distance code\\\",k.mode=rt;break A}if(w=65535&_,C&=15,f<C&&(c+=Q[e++]<<f,f+=8,f<C&&(c+=Q[e++]<<f,f+=8)),w+=c&(1<<C)-1,w>o){A.msg=\\\"invalid distance too far back\\\",k.mode=rt;break A}if(c>>>=C,f-=C,C=s-a,w>C){if(C=w-C,C>l&&k.sane){A.msg=\\\"invalid distance too far back\\\",k.mode=rt;break A}if(E=0,y=g,0===h){if(E+=r-C,C<B){B-=C;do{m[s++]=g[E++]}while(--C);E=s-w,y=m}}else if(h<C){if(E+=r+h-C,C-=h,C<B){B-=C;do{m[s++]=g[E++]}while(--C);if(E=0,h<B){C=h,B-=C;do{m[s++]=g[E++]}while(--C);E=s-w,y=m}}}else if(E+=h-C,C<B){B-=C;do{m[s++]=g[E++]}while(--C);E=s-w,y=m}for(;B>2;)m[s++]=y[E++],m[s++]=y[E++],m[s++]=y[E++],B-=3;B&&(m[s++]=y[E++],B>1&&(m[s++]=y[E++]))}else{E=s-w;do{m[s++]=m[E++],m[s++]=m[E++],m[s++]=m[E++],B-=3}while(B>2);B&&(m[s++]=m[E++],B>1&&(m[s++]=m[E++]))}break}}break}}while(e<i&&s<n);B=f>>3,e-=B,f-=B<<3,c&=(1<<f)-1,A.next_in=e,A.next_out=s,A.avail_in=e<i?i-e+5:5-(e-i),A.avail_out=s<n?n-s+257:257-(s-n),k.hold=c,k.bits=f};const ht=15,gt=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ct=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),ft=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),ut=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var dt=(A,t,e,i,s,a,n,o)=>{const r=o.bits;let l,h,g,c,f,u,d=0,I=0,p=0,_=0,C=0,B=0,w=0,E=0,y=0,Q=0,m=null;const k=new Uint16Array(16),x=new Uint16Array(16);let M,b,D,v=null;for(d=0;d<=ht;d++)k[d]=0;for(I=0;I<i;I++)k[t[e+I]]++;for(C=r,_=ht;_>=1&&0===k[_];_--);if(C>_&&(C=_),0===_)return s[a++]=20971520,s[a++]=20971520,o.bits=1,0;for(p=1;p<_&&0===k[p];p++);for(C<p&&(C=p),E=1,d=1;d<=ht;d++)if(E<<=1,E-=k[d],E<0)return-1;if(E>0&&(0===A||1!==_))return-1;for(x[1]=0,d=1;d<ht;d++)x[d+1]=x[d]+k[d];for(I=0;I<i;I++)0!==t[e+I]&&(n[x[t[e+I]]++]=I);if(0===A?(m=v=n,u=20):1===A?(m=gt,v=ct,u=257):(m=ft,v=ut,u=0),Q=0,I=0,d=p,f=a,B=C,w=0,g=-1,y=1<<C,c=y-1,1===A&&y>852||2===A&&y>592)return 1;for(;;){M=d-w,n[I]+1<u?(b=0,D=n[I]):n[I]>=u?(b=v[n[I]-u],D=m[n[I]-u]):(b=96,D=0),l=1<<d-w,h=1<<B,p=h;do{h-=l,s[f+(Q>>w)+h]=M<<24|b<<16|D|0}while(0!==h);for(l=1<<d-1;Q&l;)l>>=1;if(0!==l?(Q&=l-1,Q+=l):Q=0,I++,0==--k[d]){if(d===_)break;d=t[e+n[I]]}if(d>C&&(Q&c)!==g){for(0===w&&(w=C),f+=p,B=d-w,E=1<<B;B+w<_&&(E-=k[B+w],!(E<=0));)B++,E<<=1;if(y+=1<<B,1===A&&y>852||2===A&&y>592)return 1;g=Q&c,s[g]=C<<24|B<<16|f-a|0}}return 0!==Q&&(s[f+Q]=d-w<<24|64<<16|0),o.bits=C,0};const{Z_FINISH:It,Z_BLOCK:pt,Z_TREES:_t,Z_OK:Ct,Z_STREAM_END:Bt,Z_NEED_DICT:wt,Z_STREAM_ERROR:Et,Z_DATA_ERROR:yt,Z_MEM_ERROR:Qt,Z_BUF_ERROR:mt,Z_DEFLATED:kt}=z,xt=16180,Mt=16190,bt=16191,Dt=16192,vt=16194,St=16199,Gt=16200,Nt=16206,Rt=16209,Ft=A=>(A>>>24&255)+(A>>>8&65280)+((65280&A)<<8)+((255&A)<<24);function Lt(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const Ut=A=>{if(!A)return 1;const t=A.state;return!t||t.strm!==A||t.mode<xt||t.mode>16211?1:0},Ot=A=>{if(Ut(A))return Et;const t=A.state;return A.total_in=A.total_out=t.total=0,A.msg=\\\"\\\",t.wrap&&(A.adler=1&t.wrap),t.mode=xt,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,Ct},Pt=A=>{if(Ut(A))return Et;const t=A.state;return t.wsize=0,t.whave=0,t.wnext=0,Ot(A)},Tt=(A,t)=>{let e;if(Ut(A))return Et;const i=A.state;return t<0?(e=0,t=-t):(e=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?Et:(null!==i.window&&i.wbits!==t&&(i.window=null),i.wrap=e,i.wbits=t,Pt(A))},Ht=(A,t)=>{if(!A)return Et;const e=new Lt;A.state=e,e.strm=A,e.window=null,e.mode=xt;const i=Tt(A,t);return i!==Ct&&(A.state=null),i};let Jt,qt,zt=!0;const jt=A=>{if(zt){Jt=new Int32Array(512),qt=new Int32Array(32);let t=0;for(;t<144;)A.lens[t++]=8;for(;t<256;)A.lens[t++]=9;for(;t<280;)A.lens[t++]=7;for(;t<288;)A.lens[t++]=8;for(dt(1,A.lens,0,288,Jt,0,A.work,{bits:9}),t=0;t<32;)A.lens[t++]=5;dt(2,A.lens,0,32,qt,0,A.work,{bits:5}),zt=!1}A.lencode=Jt,A.lenbits=9,A.distcode=qt,A.distbits=5},Kt=(A,t,e,i)=>{let s;const a=A.state;return null===a.window&&(a.wsize=1<<a.wbits,a.wnext=0,a.whave=0,a.window=new Uint8Array(a.wsize)),i>=a.wsize?(a.window.set(t.subarray(e-a.wsize,e),0),a.wnext=0,a.whave=a.wsize):(s=a.wsize-a.wnext,s>i&&(s=i),a.window.set(t.subarray(e-i,e-i+s),a.wnext),(i-=s)?(a.window.set(t.subarray(e-i,e),0),a.wnext=i,a.whave=a.wsize):(a.wnext+=s,a.wnext===a.wsize&&(a.wnext=0),a.whave<a.wsize&&(a.whave+=s))),0};var Yt={inflateReset:Pt,inflateReset2:Tt,inflateResetKeep:Ot,inflateInit:A=>Ht(A,15),inflateInit2:Ht,inflate:(A,t)=>{let e,i,s,a,n,o,r,l,h,g,c,f,u,d,I,p,_,C,B,w,E,y,Q=0;const m=new Uint8Array(4);let k,x;const M=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(Ut(A)||!A.output||!A.input&&0!==A.avail_in)return Et;e=A.state,e.mode===bt&&(e.mode=Dt),n=A.next_out,s=A.output,r=A.avail_out,a=A.next_in,i=A.input,o=A.avail_in,l=e.hold,h=e.bits,g=o,c=r,y=Ct;A:for(;;)switch(e.mode){case xt:if(0===e.wrap){e.mode=Dt;break}for(;h<16;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}if(2&e.wrap&&35615===l){0===e.wbits&&(e.wbits=15),e.check=0,m[0]=255&l,m[1]=l>>>8&255,e.check=J(e.check,m,2,0),l=0,h=0,e.mode=16181;break}if(e.head&&(e.head.done=!1),!(1&e.wrap)||(((255&l)<<8)+(l>>8))%31){A.msg=\\\"incorrect header check\\\",e.mode=Rt;break}if((15&l)!==kt){A.msg=\\\"unknown compression method\\\",e.mode=Rt;break}if(l>>>=4,h-=4,E=8+(15&l),0===e.wbits&&(e.wbits=E),E>15||E>e.wbits){A.msg=\\\"invalid window size\\\",e.mode=Rt;break}e.dmax=1<<e.wbits,e.flags=0,A.adler=e.check=1,e.mode=512&l?16189:bt,l=0,h=0;break;case 16181:for(;h<16;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}if(e.flags=l,(255&e.flags)!==kt){A.msg=\\\"unknown compression method\\\",e.mode=Rt;break}if(57344&e.flags){A.msg=\\\"unknown header flags set\\\",e.mode=Rt;break}e.head&&(e.head.text=l>>8&1),512&e.flags&&4&e.wrap&&(m[0]=255&l,m[1]=l>>>8&255,e.check=J(e.check,m,2,0)),l=0,h=0,e.mode=16182;case 16182:for(;h<32;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}e.head&&(e.head.time=l),512&e.flags&&4&e.wrap&&(m[0]=255&l,m[1]=l>>>8&255,m[2]=l>>>16&255,m[3]=l>>>24&255,e.check=J(e.check,m,4,0)),l=0,h=0,e.mode=16183;case 16183:for(;h<16;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}e.head&&(e.head.xflags=255&l,e.head.os=l>>8),512&e.flags&&4&e.wrap&&(m[0]=255&l,m[1]=l>>>8&255,e.check=J(e.check,m,2,0)),l=0,h=0,e.mode=16184;case 16184:if(1024&e.flags){for(;h<16;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}e.length=l,e.head&&(e.head.extra_len=l),512&e.flags&&4&e.wrap&&(m[0]=255&l,m[1]=l>>>8&255,e.check=J(e.check,m,2,0)),l=0,h=0}else e.head&&(e.head.extra=null);e.mode=16185;case 16185:if(1024&e.flags&&(f=e.length,f>o&&(f=o),f&&(e.head&&(E=e.head.extra_len-e.length,e.head.extra||(e.head.extra=new Uint8Array(e.head.extra_len)),e.head.extra.set(i.subarray(a,a+f),E)),512&e.flags&&4&e.wrap&&(e.check=J(e.check,i,f,a)),o-=f,a+=f,e.length-=f),e.length))break A;e.length=0,e.mode=16186;case 16186:if(2048&e.flags){if(0===o)break A;f=0;do{E=i[a+f++],e.head&&E&&e.length<65536&&(e.head.name+=String.fromCharCode(E))}while(E&&f<o);if(512&e.flags&&4&e.wrap&&(e.check=J(e.check,i,f,a)),o-=f,a+=f,E)break A}else e.head&&(e.head.name=null);e.length=0,e.mode=16187;case 16187:if(4096&e.flags){if(0===o)break A;f=0;do{E=i[a+f++],e.head&&E&&e.length<65536&&(e.head.comment+=String.fromCharCode(E))}while(E&&f<o);if(512&e.flags&&4&e.wrap&&(e.check=J(e.check,i,f,a)),o-=f,a+=f,E)break A}else e.head&&(e.head.comment=null);e.mode=16188;case 16188:if(512&e.flags){for(;h<16;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}if(4&e.wrap&&l!==(65535&e.check)){A.msg=\\\"header crc mismatch\\\",e.mode=Rt;break}l=0,h=0}e.head&&(e.head.hcrc=e.flags>>9&1,e.head.done=!0),A.adler=e.check=0,e.mode=bt;break;case 16189:for(;h<32;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}A.adler=e.check=Ft(l),l=0,h=0,e.mode=Mt;case Mt:if(0===e.havedict)return A.next_out=n,A.avail_out=r,A.next_in=a,A.avail_in=o,e.hold=l,e.bits=h,wt;A.adler=e.check=1,e.mode=bt;case bt:if(t===pt||t===_t)break A;case Dt:if(e.last){l>>>=7&h,h-=7&h,e.mode=Nt;break}for(;h<3;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}switch(e.last=1&l,l>>>=1,h-=1,3&l){case 0:e.mode=16193;break;case 1:if(jt(e),e.mode=St,t===_t){l>>>=2,h-=2;break A}break;case 2:e.mode=16196;break;case 3:A.msg=\\\"invalid block type\\\",e.mode=Rt}l>>>=2,h-=2;break;case 16193:for(l>>>=7&h,h-=7&h;h<32;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}if((65535&l)!=(l>>>16^65535)){A.msg=\\\"invalid stored block lengths\\\",e.mode=Rt;break}if(e.length=65535&l,l=0,h=0,e.mode=vt,t===_t)break A;case vt:e.mode=16195;case 16195:if(f=e.length,f){if(f>o&&(f=o),f>r&&(f=r),0===f)break A;s.set(i.subarray(a,a+f),n),o-=f,a+=f,r-=f,n+=f,e.length-=f;break}e.mode=bt;break;case 16196:for(;h<14;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}if(e.nlen=257+(31&l),l>>>=5,h-=5,e.ndist=1+(31&l),l>>>=5,h-=5,e.ncode=4+(15&l),l>>>=4,h-=4,e.nlen>286||e.ndist>30){A.msg=\\\"too many length or distance symbols\\\",e.mode=Rt;break}e.have=0,e.mode=16197;case 16197:for(;e.have<e.ncode;){for(;h<3;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}e.lens[M[e.have++]]=7&l,l>>>=3,h-=3}for(;e.have<19;)e.lens[M[e.have++]]=0;if(e.lencode=e.lendyn,e.lenbits=7,k={bits:e.lenbits},y=dt(0,e.lens,0,19,e.lencode,0,e.work,k),e.lenbits=k.bits,y){A.msg=\\\"invalid code lengths set\\\",e.mode=Rt;break}e.have=0,e.mode=16198;case 16198:for(;e.have<e.nlen+e.ndist;){for(;Q=e.lencode[l&(1<<e.lenbits)-1],I=Q>>>24,p=Q>>>16&255,_=65535&Q,!(I<=h);){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}if(_<16)l>>>=I,h-=I,e.lens[e.have++]=_;else{if(16===_){for(x=I+2;h<x;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}if(l>>>=I,h-=I,0===e.have){A.msg=\\\"invalid bit length repeat\\\",e.mode=Rt;break}E=e.lens[e.have-1],f=3+(3&l),l>>>=2,h-=2}else if(17===_){for(x=I+3;h<x;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}l>>>=I,h-=I,E=0,f=3+(7&l),l>>>=3,h-=3}else{for(x=I+7;h<x;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}l>>>=I,h-=I,E=0,f=11+(127&l),l>>>=7,h-=7}if(e.have+f>e.nlen+e.ndist){A.msg=\\\"invalid bit length repeat\\\",e.mode=Rt;break}for(;f--;)e.lens[e.have++]=E}}if(e.mode===Rt)break;if(0===e.lens[256]){A.msg=\\\"invalid code -- missing end-of-block\\\",e.mode=Rt;break}if(e.lenbits=9,k={bits:e.lenbits},y=dt(1,e.lens,0,e.nlen,e.lencode,0,e.work,k),e.lenbits=k.bits,y){A.msg=\\\"invalid literal/lengths set\\\",e.mode=Rt;break}if(e.distbits=6,e.distcode=e.distdyn,k={bits:e.distbits},y=dt(2,e.lens,e.nlen,e.ndist,e.distcode,0,e.work,k),e.distbits=k.bits,y){A.msg=\\\"invalid distances set\\\",e.mode=Rt;break}if(e.mode=St,t===_t)break A;case St:e.mode=Gt;case Gt:if(o>=6&&r>=258){A.next_out=n,A.avail_out=r,A.next_in=a,A.avail_in=o,e.hold=l,e.bits=h,lt(A,c),n=A.next_out,s=A.output,r=A.avail_out,a=A.next_in,i=A.input,o=A.avail_in,l=e.hold,h=e.bits,e.mode===bt&&(e.back=-1);break}for(e.back=0;Q=e.lencode[l&(1<<e.lenbits)-1],I=Q>>>24,p=Q>>>16&255,_=65535&Q,!(I<=h);){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}if(p&&0==(240&p)){for(C=I,B=p,w=_;Q=e.lencode[w+((l&(1<<C+B)-1)>>C)],I=Q>>>24,p=Q>>>16&255,_=65535&Q,!(C+I<=h);){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}l>>>=C,h-=C,e.back+=C}if(l>>>=I,h-=I,e.back+=I,e.length=_,0===p){e.mode=16205;break}if(32&p){e.back=-1,e.mode=bt;break}if(64&p){A.msg=\\\"invalid literal/length code\\\",e.mode=Rt;break}e.extra=15&p,e.mode=16201;case 16201:if(e.extra){for(x=e.extra;h<x;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}e.length+=l&(1<<e.extra)-1,l>>>=e.extra,h-=e.extra,e.back+=e.extra}e.was=e.length,e.mode=16202;case 16202:for(;Q=e.distcode[l&(1<<e.distbits)-1],I=Q>>>24,p=Q>>>16&255,_=65535&Q,!(I<=h);){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}if(0==(240&p)){for(C=I,B=p,w=_;Q=e.distcode[w+((l&(1<<C+B)-1)>>C)],I=Q>>>24,p=Q>>>16&255,_=65535&Q,!(C+I<=h);){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}l>>>=C,h-=C,e.back+=C}if(l>>>=I,h-=I,e.back+=I,64&p){A.msg=\\\"invalid distance code\\\",e.mode=Rt;break}e.offset=_,e.extra=15&p,e.mode=16203;case 16203:if(e.extra){for(x=e.extra;h<x;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}e.offset+=l&(1<<e.extra)-1,l>>>=e.extra,h-=e.extra,e.back+=e.extra}if(e.offset>e.dmax){A.msg=\\\"invalid distance too far back\\\",e.mode=Rt;break}e.mode=16204;case 16204:if(0===r)break A;if(f=c-r,e.offset>f){if(f=e.offset-f,f>e.whave&&e.sane){A.msg=\\\"invalid distance too far back\\\",e.mode=Rt;break}f>e.wnext?(f-=e.wnext,u=e.wsize-f):u=e.wnext-f,f>e.length&&(f=e.length),d=e.window}else d=s,u=n-e.offset,f=e.length;f>r&&(f=r),r-=f,e.length-=f;do{s[n++]=d[u++]}while(--f);0===e.length&&(e.mode=Gt);break;case 16205:if(0===r)break A;s[n++]=e.length,r--,e.mode=Gt;break;case Nt:if(e.wrap){for(;h<32;){if(0===o)break A;o--,l|=i[a++]<<h,h+=8}if(c-=r,A.total_out+=c,e.total+=c,4&e.wrap&&c&&(A.adler=e.check=e.flags?J(e.check,s,c,n-c):T(e.check,s,c,n-c)),c=r,4&e.wrap&&(e.flags?l:Ft(l))!==e.check){A.msg=\\\"incorrect data check\\\",e.mode=Rt;break}l=0,h=0}e.mode=16207;case 16207:if(e.wrap&&e.flags){for(;h<32;){if(0===o)break A;o--,l+=i[a++]<<h,h+=8}if(4&e.wrap&&l!==(4294967295&e.total)){A.msg=\\\"incorrect length check\\\",e.mode=Rt;break}l=0,h=0}e.mode=16208;case 16208:y=Bt;break A;case Rt:y=yt;break A;case 16210:return Qt;default:return Et}return A.next_out=n,A.avail_out=r,A.next_in=a,A.avail_in=o,e.hold=l,e.bits=h,(e.wsize||c!==A.avail_out&&e.mode<Rt&&(e.mode<Nt||t!==It))&&Kt(A,A.output,A.next_out,c-A.avail_out),g-=A.avail_in,c-=A.avail_out,A.total_in+=g,A.total_out+=c,e.total+=c,4&e.wrap&&c&&(A.adler=e.check=e.flags?J(e.check,s,c,A.next_out-c):T(e.check,s,c,A.next_out-c)),A.data_type=e.bits+(e.last?64:0)+(e.mode===bt?128:0)+(e.mode===St||e.mode===vt?256:0),(0===g&&0===c||t===It)&&y===Ct&&(y=mt),y},inflateEnd:A=>{if(Ut(A))return Et;let t=A.state;return t.window&&(t.window=null),A.state=null,Ct},inflateGetHeader:(A,t)=>{if(Ut(A))return Et;const e=A.state;return 0==(2&e.wrap)?Et:(e.head=t,t.done=!1,Ct)},inflateSetDictionary:(A,t)=>{const e=t.length;let i,s,a;return Ut(A)?Et:(i=A.state,0!==i.wrap&&i.mode!==Mt?Et:i.mode===Mt&&(s=1,s=T(s,t,e,0),s!==i.check)?yt:(a=Kt(A,t,e,e),a?(i.mode=16210,Qt):(i.havedict=1,Ct)))},inflateInfo:\\\"pako inflate (from Nodeca project)\\\"};var Vt=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\\\"\\\",this.comment=\\\"\\\",this.hcrc=0,this.done=!1};const Wt=Object.prototype.toString,{Z_NO_FLUSH:Xt,Z_FINISH:Zt,Z_OK:$t,Z_STREAM_END:Ae,Z_NEED_DICT:te,Z_STREAM_ERROR:ee,Z_DATA_ERROR:ie,Z_MEM_ERROR:se}=z;function ae(A){this.options=qA.assign({chunkSize:65536,windowBits:15,to:\\\"\\\"},A||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||A&&A.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\\\"\\\",this.ended=!1,this.chunks=[],this.strm=new YA,this.strm.avail_out=0;let e=Yt.inflateInit2(this.strm,t.windowBits);if(e!==$t)throw new Error(q[e]);if(this.header=new Vt,Yt.inflateGetHeader(this.strm,this.header),t.dictionary&&(\\\"string\\\"==typeof t.dictionary?t.dictionary=KA.string2buf(t.dictionary):\\\"[object ArrayBuffer]\\\"===Wt.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(e=Yt.inflateSetDictionary(this.strm,t.dictionary),e!==$t)))throw new Error(q[e])}function ne(A,t){const e=new ae(t);if(e.push(A),e.err)throw e.msg||q[e.err];return e.result}ae.prototype.push=function(A,t){const e=this.strm,i=this.options.chunkSize,s=this.options.dictionary;let a,n,o;if(this.ended)return!1;for(n=t===~~t?t:!0===t?Zt:Xt,\\\"[object ArrayBuffer]\\\"===Wt.call(A)?e.input=new Uint8Array(A):e.input=A,e.next_in=0,e.avail_in=e.input.length;;){for(0===e.avail_out&&(e.output=new Uint8Array(i),e.next_out=0,e.avail_out=i),a=Yt.inflate(e,n),a===te&&s&&(a=Yt.inflateSetDictionary(e,s),a===$t?a=Yt.inflate(e,n):a===ie&&(a=te));e.avail_in>0&&a===Ae&&e.state.wrap>0&&0!==A[e.next_in];)Yt.inflateReset(e),a=Yt.inflate(e,n);switch(a){case ee:case ie:case te:case se:return this.onEnd(a),this.ended=!0,!1}if(o=e.avail_out,e.next_out&&(0===e.avail_out||a===Ae))if(\\\"string\\\"===this.options.to){let A=KA.utf8border(e.output,e.next_out),t=e.next_out-A,s=KA.buf2string(e.output,A);e.next_out=t,e.avail_out=i-t,t&&e.output.set(e.output.subarray(A,A+t),0),this.onData(s)}else this.onData(e.output.length===e.next_out?e.output:e.output.subarray(0,e.next_out));if(a!==$t||0!==o){if(a===Ae)return a=Yt.inflateEnd(this.strm),this.onEnd(a),this.ended=!0,!0;if(0===e.avail_in)break}}return!0},ae.prototype.onData=function(A){this.chunks.push(A)},ae.prototype.onEnd=function(A){A===$t&&(\\\"string\\\"===this.options.to?this.result=this.chunks.join(\\\"\\\"):this.result=qA.flattenChunks(this.chunks)),this.chunks=[],this.err=A,this.msg=this.strm.msg};var oe={Inflate:ae,inflate:ne,inflateRaw:function(A,t){return(t=t||{}).raw=!0,ne(A,t)},ungzip:ne,constants:z};const{Deflate:re,deflate:le,deflateRaw:he,gzip:ge}=ot,{Inflate:ce,inflate:fe,inflateRaw:ue,ungzip:de}=oe;var Ie=fe}},t={};function e(i){var s=t[i];if(void 0!==s)return s.exports;var a=t[i]={exports:{}};return A[i](a,a.exports,e),a.exports}e.n=A=>{var t=A&&A.__esModule?()=>A.default:()=>A;return e.d(t,{a:t}),t},e.d=(A,t)=>{for(var i in t)e.o(t,i)&&!e.o(A,i)&&Object.defineProperty(A,i,{enumerable:!0,get:t[i]})},e.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(A){if(\\\"object\\\"==typeof window)return window}}(),e.o=(A,t)=>Object.prototype.hasOwnProperty.call(A,t),e.r=A=>{\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(A,\\\"__esModule\\\",{value:!0})};var i={};return(()=>{\\\"use strict\\\";function A(A,t){(null==t||t>A.length)&&(t=A.length);for(var e=0,i=new Array(t);e<t;e++)i[e]=A[e];return i}function t(t,e){if(t){if(\\\"string\\\"==typeof t)return A(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);return\\\"Object\\\"===i&&t.constructor&&(i=t.constructor.name),\\\"Map\\\"===i||\\\"Set\\\"===i?Array.from(t):\\\"Arguments\\\"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?A(t,e):void 0}}function s(A,e){return function(A){if(Array.isArray(A))return A}(A)||function(A,t){var e=null==A?null:\\\"undefined\\\"!=typeof Symbol&&A[Symbol.iterator]||A[\\\"@@iterator\\\"];if(null!=e){var i,s,a,n,o=[],r=!0,l=!1;try{if(a=(e=e.call(A)).next,0===t){if(Object(e)!==e)return;r=!1}else for(;!(r=(i=a.call(e)).done)&&(o.push(i.value),o.length!==t);r=!0);}catch(A){l=!0,s=A}finally{try{if(!r&&null!=e.return&&(n=e.return(),Object(n)!==n))return}finally{if(l)throw s}}return o}}(A,e)||t(A,e)||function(){throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\")}()}function a(A){return a=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&\\\"function\\\"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?\\\"symbol\\\":typeof A},a(A)}function n(e){return function(t){if(Array.isArray(t))return A(t)}(e)||function(A){if(\\\"undefined\\\"!=typeof Symbol&&null!=A[Symbol.iterator]||null!=A[\\\"@@iterator\\\"])return Array.from(A)}(e)||t(e)||function(){throw new TypeError(\\\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\")}()}function o(A,t,e,i,s,a,n){try{var o=A[a](n),r=o.value}catch(A){return void e(A)}o.done?t(r):Promise.resolve(r).then(i,s)}function r(A){return function(){var t=this,e=arguments;return new Promise((function(i,s){var a=A.apply(t,e);function n(A){o(a,i,s,n,r,\\\"next\\\",A)}function r(A){o(a,i,s,n,r,\\\"throw\\\",A)}n(void 0)}))}}e.r(i);var l=e(4687),h=e.n(l);function g(A,t){var e=t.size,i=void 0===e?1:e,s=t.wait,a=void 0===s?1/0:s,n=null,o=[];return function(t){var e=o,s=function(){var t=r(h().mark((function t(){return h().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:Promise.resolve(A(e.map((function(A){return A.params})))).then((function(A){A.forEach((function(A,t){e[t].resolve(A)}))}));case 1:case\\\"end\\\":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}();return new Promise((function(A,r){e.push({resolve:A,params:t,reject:r}),e.length===i?(n&&(clearTimeout(n),n=null),s(),o=[]):n||a===1/0||(n=setTimeout((function(){o===e&&(o=[],clearTimeout(n),n=null,s())}),a))}))}}var c=\\\"microlink.function:\\\",f=\\\"microlink.promise:\\\";function u(A){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=t.function_prefix,i=void 0===e?c:e,n=t.promise_prefix,o=void 0===n?f:n,r=arguments.length>2?arguments[2]:void 0,l={},h={};return r||(r=function(){return Math.random()}),A=function A(t){if(Array.isArray(t))return t.map((function(t){return A(t)}));if(\\\"function\\\"==typeof t){var e=r(t);return l[e]=t,i+e}if(\\\"object\\\"===a(t)&&null!==t&&\\\"function\\\"==typeof t.then){var n=r(t);return h[n]=t,l[n]=function(){return t},o+n}return\\\"object\\\"===a(t)&&null!==t&&-1===t.constructor.name.indexOf(\\\"Array\\\")?Object.fromEntries(Object.entries(t).map((function(t){var e=s(t,2);return[e[0],A(e[1])]}))):t}(A),[A,l,h]}function d(A,t){var e=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).debug_level,i=void 0===e?0:e,o={},l=t.map((function(A){var t=A.id,e=A.method,i=A.params;\\\"number\\\"!=typeof t&&(t=Math.random());var a=s(u(i||[],\\\"microlink.call:\\\"),2),n=a[0],r=a[1];return Object.assign(o,r),{jsonrpc:\\\"2.0\\\",id:t,method:e,params:n}}));i>=2&&console.log(\\\"[microlink.batchcall] requests serialized to \\\",l);var g=l.map((function(A){return A.id}));return new Promise((function(t){var e=function(){var e=r(h().mark((function e(r){var l,c,f,u,d;return h().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i>=2&&console.log(\\\"[microlink.batchcall] response listener received message event with data\\\",r.data),\\\"object\\\"===a(l=r.data)&&null!==l){e.next=4;break}return e.abrupt(\\\"return\\\");case 4:if(\\\"2.0\\\"!==l.jsonrpc||!l.method||!(l.method in o)){e.next=13;break}if(Array.isArray(l.params)){e.next=7;break}throw Error(\\\"[microlink.batchcall] params should be an array\\\");case 7:return e.next=9,(c=o)[l.method].apply(c,n(l.params));case 9:return f=e.sent,u={jsonrpc:\\\"2.0\\\",result:f,id:l.id},i>=2&&console.log(\\\"[microlink.batchcall] posting message down to worker:\\\",u),e.abrupt(\\\"return\\\",A.postMessage(u));case 13:Array.isArray(l)&&l.every((function(A){return\\\"object\\\"===a(A)&&g.includes(A.id)}))&&(i>=2&&console.log(\\\"[microlink.batchcall] removing exhausted listener\\\"),A.removeEventListener(\\\"message\\\",s),o=null,l.sort((function(A,t){return Math.sign(g.indexOf(A.id)-g.indexOf(t.id))})),d=l.map((function(A){return A.result})),i>=2&&console.log(\\\"[microlink.batchcall] resolving batch call:\\\",d),t(d));case 14:case\\\"end\\\":return e.stop()}}),e)})));function s(A){return e.apply(this,arguments)}return s}();return A.addEventListener(\\\"message\\\",e),i>=2&&console.log(\\\"[microlink.batchcall] posting message down to worker:\\\",l),A.postMessage(l)}))}function I(A,t){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=i.batch_size,n=void 0===s?1:s,o=i.batch_wait,r=void 0===o?10:o,l=i.debug_level,h=void 0===l?0:l;if(Array.isArray(t))return e>=0?t.map((function(t){return I(A,t,e-1,{batch_size:n,batch_wait:r})})):t;if(\\\"object\\\"===a(t)&&null!==t&&-1===t.constructor.name.indexOf(\\\"Array\\\")){var u={};for(var p in t)u[p]=I(A,t[p],e-1,{batch_size:n,batch_wait:r});return u}if(\\\"string\\\"==typeof t&&t.startsWith(c)){var _=t.replace(c,\\\"\\\"),C=g((function(t){return d(A,t,{debug_level:h})}),{size:n,wait:r});return function(){var A=Array.from(arguments);return C({method:_,params:A})}}if(\\\"string\\\"==typeof t&&t.startsWith(f)){var B=t.replace(f,\\\"\\\");return g((function(t){return d(A,t,{debug_level:h})}),{size:n,wait:r})({method:B,params:[]})}return t}function p(A){var t=A.error,e=A.id;return{jsonrpc:\\\"2.0\\\",error:{code:-32603,message:\\\"Internal error\\\",data:{error:t.message}},id:e}}function _(A){var t=A.id;return{jsonrpc:\\\"2.0\\\",error:{code:-32601,message:\\\"Method not found\\\",data:{method:A.method}},id:t}}function C(A){return(t,...e)=>w(A,t,e)}function B(A,t){return C(m(A,t).get)}const{apply:w,construct:E,defineProperty:y,get:Q,getOwnPropertyDescriptor:m,getPrototypeOf:k,has:x,ownKeys:M,set:b,setPrototypeOf:D}=Reflect,{EPSILON:v,MAX_SAFE_INTEGER:S,isFinite:G,isNaN:N}=Number,{iterator:R,species:F,toStringTag:L,for:U}=Symbol,O=Object,{create:P,defineProperty:T,freeze:H,is:J}=O,q=O.prototype,z=(q.__lookupGetter__&&C(q.__lookupGetter__),O.hasOwn||C(q.hasOwnProperty)),j=Array,K=(j.isArray,j.prototype),Y=(C(K.join),C(K.push),C(K.toLocaleString),K[R]),V=C(Y),{abs:W,trunc:X}=Math,Z=ArrayBuffer,$=(Z.isView,Z.prototype),AA=(C($.slice),B($,\\\"byteLength\\\"),\\\"undefined\\\"!=typeof SharedArrayBuffer?SharedArrayBuffer:null),tA=(AA&&B(AA.prototype,\\\"byteLength\\\"),k(Uint8Array)),eA=(tA.from,tA.prototype),iA=(eA[R],C(eA.keys),C(eA.values),C(eA.entries),C(eA.set),C(eA.reverse),C(eA.fill),C(eA.copyWithin),C(eA.sort),C(eA.slice),C(eA.subarray),B(eA,\\\"buffer\\\"),B(eA,\\\"byteOffset\\\"),B(eA,\\\"length\\\"),B(eA,L),Uint8Array),sA=Uint16Array,aA=Uint32Array,nA=Float32Array,oA=k([][R]()),rA=C(oA.next),lA=C(function*(){}().next),hA=k(oA),gA=DataView.prototype,cA=C(gA.getUint16),fA=(C(gA.setUint16),TypeError),uA=WeakSet.prototype,dA=(C(uA.add),C(uA.has),WeakMap),IA=dA.prototype,pA=C(IA.get),_A=(C(IA.has),C(IA.set)),CA=new dA,BA=P(null,{next:{value:function(){const A=pA(CA,this);return rA(A)}},[R]:{value:function(){return this}}});const wA=new dA,EA=P(hA,{next:{value:function(){const A=pA(wA,this);return lA(A)},writable:!0,configurable:!0}});for(const A of M(oA))\\\"next\\\"!==A&&T(EA,A,m(oA,A));const yA=new Z(4),QA=new nA(yA),mA=new aA(yA),kA=new sA(512),xA=new iA(512);for(let A=0;A<256;++A){const t=A-127;t<-27?(kA[A]=0,kA[256|A]=32768,xA[A]=24,xA[256|A]=24):t<-14?(kA[A]=1024>>-t-14,kA[256|A]=1024>>-t-14|32768,xA[A]=-t-1,xA[256|A]=-t-1):t<=15?(kA[A]=t+15<<10,kA[256|A]=t+15<<10|32768,xA[A]=13,xA[256|A]=13):t<128?(kA[A]=31744,kA[256|A]=64512,xA[A]=24,xA[256|A]=24):(kA[A]=31744,kA[256|A]=64512,xA[A]=13,xA[256|A]=13)}const MA=new aA(2048);for(let A=1;A<1024;++A){let t=A<<13,e=0;for(;0==(8388608&t);)t<<=1,e-=8388608;t&=-8388609,e+=947912704,MA[A]=t|e}for(let A=1024;A<2048;++A)MA[A]=939524096+(A-1024<<13);const bA=new aA(64);for(let A=1;A<31;++A)bA[A]=A<<23;bA[31]=1199570944,bA[32]=2147483648;for(let A=33;A<63;++A)bA[A]=2147483648+(A-32<<23);bA[63]=3347054592;const DA=new sA(64);for(let A=1;A<64;++A)32!==A&&(DA[A]=1024);function vA(A,t,...e){return function(A){const t=A>>10;return mA[0]=MA[DA[t]+(1023&A)]+bA[t],QA[0]}(cA(A,t,...function(A){if(A[R]===Y&&oA.next===rA)return A;const t=P(BA);return _A(CA,t,V(A)),t}(e)))}var SA=e(8330),GA=e(8602),NA=e(2499);const RA=new Map;function FA(A,t){Array.isArray(A)||(A=[A]),A.forEach((A=>RA.set(A,t)))}function LA(A,t,e,i=1){return new(Object.getPrototypeOf(A).constructor)(t*e*i)}function UA(A,t,e){return(1-e)*A+e*t}function OA(A,t,e,i,s,a=\\\"nearest\\\"){switch(a.toLowerCase()){case\\\"nearest\\\":return function(A,t,e,i,s){const a=t/i,n=e/s;return A.map((A=>{const o=LA(A,i,s);for(let r=0;r<s;++r){const s=Math.min(Math.round(n*r),e-1);for(let e=0;e<i;++e){const n=Math.min(Math.round(a*e),t-1),l=A[s*t+n];o[r*i+e]=l}}return o}))}(A,t,e,i,s);case\\\"bilinear\\\":case\\\"linear\\\":return function(A,t,e,i,s){const a=t/i,n=e/s;return A.map((A=>{const o=LA(A,i,s);for(let r=0;r<s;++r){const s=n*r,l=Math.floor(s),h=Math.min(Math.ceil(s),e-1);for(let e=0;e<i;++e){const n=a*e,g=n%1,c=Math.floor(n),f=Math.min(Math.ceil(n),t-1),u=A[l*t+c],d=A[l*t+f],I=A[h*t+c],p=A[h*t+f],_=UA(UA(u,d,g),UA(I,p,g),s%1);o[r*i+e]=_}}return o}))}(A,t,e,i,s);default:throw new Error(`Unsupported resampling method: '${a}'`)}}function PA(A,t,e,i,s,a,n=\\\"nearest\\\"){switch(n.toLowerCase()){case\\\"nearest\\\":return function(A,t,e,i,s,a){const n=t/i,o=e/s,r=LA(A,i,s,a);for(let l=0;l<s;++l){const s=Math.min(Math.round(o*l),e-1);for(let e=0;e<i;++e){const o=Math.min(Math.round(n*e),t-1);for(let n=0;n<a;++n){const h=A[s*t*a+o*a+n];r[l*i*a+e*a+n]=h}}}return r}(A,t,e,i,s,a);case\\\"bilinear\\\":case\\\"linear\\\":return function(A,t,e,i,s,a){const n=t/i,o=e/s,r=LA(A,i,s,a);for(let l=0;l<s;++l){const s=o*l,h=Math.floor(s),g=Math.min(Math.ceil(s),e-1);for(let e=0;e<i;++e){const o=n*e,c=o%1,f=Math.floor(o),u=Math.min(Math.ceil(o),t-1);for(let n=0;n<a;++n){const o=A[h*t*a+f*a+n],d=A[h*t*a+u*a+n],I=A[g*t*a+f*a+n],p=A[g*t*a+u*a+n],_=UA(UA(o,d,c),UA(I,p,c),s%1);r[l*i*a+e*a+n]=_}}}return r}(A,t,e,i,s,a);default:throw new Error(`Unsupported resampling method: '${n}'`)}}function TA(A,t,e){let i=0;for(let s=t;s<e;++s)i+=A[s];return i}function HA(A,t,e){switch(A){case 1:if(t<=8)return new Uint8Array(e);if(t<=16)return new Uint16Array(e);if(t<=32)return new Uint32Array(e);break;case 2:if(8===t)return new Int8Array(e);if(16===t)return new Int16Array(e);if(32===t)return new Int32Array(e);break;case 3:switch(t){case 16:case 32:return new Float32Array(e);case 64:return new Float64Array(e)}}throw Error(\\\"Unsupported data format/bitsPerSample\\\")}FA([void 0,1],(()=>Promise.resolve().then(e.bind(e,3321)).then((A=>A.default)))),FA(5,(()=>Promise.resolve().then(e.bind(e,8672)).then((A=>A.default)))),FA(6,(()=>{throw new Error(\\\"old style JPEG compression is not supported.\\\")})),FA(7,(()=>Promise.resolve().then(e.bind(e,9347)).then((A=>A.default)))),FA([8,32946],(()=>Promise.resolve().then(e.bind(e,5522)).then((A=>A.default)))),FA(32773,(()=>Promise.resolve().then(e.bind(e,7411)).then((A=>A.default)))),FA(34887,(()=>Promise.resolve().then(e.bind(e,1293)).then((async A=>(await A.zstd.init(),A))).then((A=>A.default)))),FA(50001,(()=>Promise.resolve().then(e.bind(e,1588)).then((A=>A.default))));const JA=class{constructor(A,t,e,i,s,a){this.fileDirectory=A,this.geoKeys=t,this.dataView=e,this.littleEndian=i,this.tiles=s?{}:null,this.isTiled=!A.StripOffsets;const n=A.PlanarConfiguration;if(this.planarConfiguration=void 0===n?1:n,1!==this.planarConfiguration&&2!==this.planarConfiguration)throw new Error(\\\"Invalid planar configuration.\\\");this.source=a}getFileDirectory(){return this.fileDirectory}getGeoKeys(){return this.geoKeys}getWidth(){return this.fileDirectory.ImageWidth}getHeight(){return this.fileDirectory.ImageLength}getSamplesPerPixel(){return void 0!==this.fileDirectory.SamplesPerPixel?this.fileDirectory.SamplesPerPixel:1}getTileWidth(){return this.isTiled?this.fileDirectory.TileWidth:this.getWidth()}getTileHeight(){return this.isTiled?this.fileDirectory.TileLength:void 0!==this.fileDirectory.RowsPerStrip?Math.min(this.fileDirectory.RowsPerStrip,this.getHeight()):this.getHeight()}getBlockWidth(){return this.getTileWidth()}getBlockHeight(A){return this.isTiled||(A+1)*this.getTileHeight()<=this.getHeight()?this.getTileHeight():this.getHeight()-A*this.getTileHeight()}getBytesPerPixel(){let A=0;for(let t=0;t<this.fileDirectory.BitsPerSample.length;++t)A+=this.getSampleByteSize(t);return A}getSampleByteSize(A){if(A>=this.fileDirectory.BitsPerSample.length)throw new RangeError(`Sample index ${A} is out of range.`);return Math.ceil(this.fileDirectory.BitsPerSample[A]/8)}getReaderForSample(A){const t=this.fileDirectory.SampleFormat?this.fileDirectory.SampleFormat[A]:1,e=this.fileDirectory.BitsPerSample[A];switch(t){case 1:if(e<=8)return DataView.prototype.getUint8;if(e<=16)return DataView.prototype.getUint16;if(e<=32)return DataView.prototype.getUint32;break;case 2:if(e<=8)return DataView.prototype.getInt8;if(e<=16)return DataView.prototype.getInt16;if(e<=32)return DataView.prototype.getInt32;break;case 3:switch(e){case 16:return function(A,t){return vA(this,A,t)};case 32:return DataView.prototype.getFloat32;case 64:return DataView.prototype.getFloat64}}throw Error(\\\"Unsupported data format/bitsPerSample\\\")}getSampleFormat(A=0){return this.fileDirectory.SampleFormat?this.fileDirectory.SampleFormat[A]:1}getBitsPerSample(A=0){return this.fileDirectory.BitsPerSample[A]}getArrayForSample(A,t){return HA(this.getSampleFormat(A),this.getBitsPerSample(A),t)}async getTileOrStrip(A,t,e,i,s){const a=Math.ceil(this.getWidth()/this.getTileWidth()),n=Math.ceil(this.getHeight()/this.getTileHeight());let o;const{tiles:r}=this;let l,h;1===this.planarConfiguration?o=t*a+A:2===this.planarConfiguration&&(o=e*a*n+t*a+A),this.isTiled?(l=this.fileDirectory.TileOffsets[o],h=this.fileDirectory.TileByteCounts[o]):(l=this.fileDirectory.StripOffsets[o],h=this.fileDirectory.StripByteCounts[o]);const g=(await this.source.fetch([{offset:l,length:h}],s))[0];let c;return null!==r&&r[o]?c=r[o]:(c=(async()=>{let A=await i.decode(this.fileDirectory,g);const e=this.getSampleFormat(),s=this.getBitsPerSample();return function(A,t){return(1!==A&&2!==A||!(t<=32)||t%8!=0)&&(3!==A||16!==t&&32!==t&&64!==t)}(e,s)&&(A=function(A,t,e,i,s,a,n){const o=new DataView(A),r=2===e?1:i,l=HA(t,s,2===e?n*a:n*a*i),h=parseInt(\\\"1\\\".repeat(s),2);if(1===t){let A;A=1===e?i*s:s;let t=a*A;0!=(7&t)&&(t=t+7&-8);for(let A=0;A<n;++A){const e=A*t;for(let t=0;t<a;++t){const i=e+t*r*s;for(let e=0;e<r;++e){const n=i+e*s,g=(A*a+t)*r+e,c=Math.floor(n/8),f=n%8;if(f+s<=8)l[g]=o.getUint8(c)>>8-s-f&h;else if(f+s<=16)l[g]=o.getUint16(c)>>16-s-f&h;else if(f+s<=24){const A=o.getUint16(c)<<8|o.getUint8(c+2);l[g]=A>>24-s-f&h}else l[g]=o.getUint32(c)>>32-s-f&h}}}}return l.buffer}(A,e,this.planarConfiguration,this.getSamplesPerPixel(),s,this.getTileWidth(),this.getBlockHeight(t))),A})(),null!==r&&(r[o]=c)),{x:A,y:t,sample:e,data:await c}}async _readRaster(A,t,e,i,s,a,n,o,r){const l=this.getTileWidth(),h=this.getTileHeight(),g=this.getWidth(),c=this.getHeight(),f=Math.max(Math.floor(A[0]/l),0),u=Math.min(Math.ceil(A[2]/l),Math.ceil(g/l)),d=Math.max(Math.floor(A[1]/h),0),I=Math.min(Math.ceil(A[3]/h),Math.ceil(c/h)),p=A[2]-A[0];let _=this.getBytesPerPixel();const C=[],B=[];for(let A=0;A<t.length;++A)1===this.planarConfiguration?C.push(TA(this.fileDirectory.BitsPerSample,0,t[A])/8):C.push(0),B.push(this.getReaderForSample(t[A]));const w=[],{littleEndian:E}=this;for(let a=d;a<I;++a)for(let n=f;n<u;++n){let o;1===this.planarConfiguration&&(o=this.getTileOrStrip(n,a,0,s,r));for(let f=0;f<t.length;++f){const u=f,d=t[f];2===this.planarConfiguration&&(_=this.getSampleByteSize(d),o=this.getTileOrStrip(n,a,d,s,r));const I=o.then((s=>{const a=s.data,n=new DataView(a),o=this.getBlockHeight(s.y),r=s.y*h,f=s.x*l,d=r+o,I=(s.x+1)*l,w=B[u],y=Math.min(o,o-(d-A[3]),c-r),Q=Math.min(l,l-(I-A[2]),g-f);for(let s=Math.max(0,A[1]-r);s<y;++s)for(let a=Math.max(0,A[0]-f);a<Q;++a){const o=(s*l+a)*_,h=w.call(n,o+C[u],E);let g;i?(g=(s+r-A[1])*p*t.length+(a+f-A[0])*t.length+u,e[g]=h):(g=(s+r-A[1])*p+a+f-A[0],e[u][g]=h)}}));w.push(I)}}if(await Promise.all(w),a&&A[2]-A[0]!==a||n&&A[3]-A[1]!==n){let s;return s=i?PA(e,A[2]-A[0],A[3]-A[1],a,n,t.length,o):OA(e,A[2]-A[0],A[3]-A[1],a,n,o),s.width=a,s.height=n,s}return e.width=a||A[2]-A[0],e.height=n||A[3]-A[1],e}async readRasters({window:A,samples:t=[],interleave:e,pool:i=null,width:s,height:a,resampleMethod:n,fillValue:o,signal:r}={}){const l=A||[0,0,this.getWidth(),this.getHeight()];if(l[0]>l[2]||l[1]>l[3])throw new Error(\\\"Invalid subsets\\\");const h=(l[2]-l[0])*(l[3]-l[1]),g=this.getSamplesPerPixel();if(t&&t.length){for(let A=0;A<t.length;++A)if(t[A]>=g)return Promise.reject(new RangeError(`Invalid sample index '${t[A]}'.`))}else for(let A=0;A<g;++A)t.push(A);let c;if(e){c=HA(this.fileDirectory.SampleFormat?Math.max.apply(null,this.fileDirectory.SampleFormat):1,Math.max.apply(null,this.fileDirectory.BitsPerSample),h*t.length),o&&c.fill(o)}else{c=[];for(let A=0;A<t.length;++A){const e=this.getArrayForSample(t[A],h);Array.isArray(o)&&A<o.length?e.fill(o[A]):o&&!Array.isArray(o)&&e.fill(o),c.push(e)}}const f=i||await async function(A){const t=RA.get(A.Compression);if(!t)throw new Error(`Unknown compression method identifier: ${A.Compression}`);return new(await t())(A)}(this.fileDirectory);return await this._readRaster(l,t,c,e,f,s,a,n,r)}async readRGB({window:A,interleave:t=!0,pool:e=null,width:i,height:s,resampleMethod:a,enableAlpha:n=!1,signal:o}={}){const r=A||[0,0,this.getWidth(),this.getHeight()];if(r[0]>r[2]||r[1]>r[3])throw new Error(\\\"Invalid subsets\\\");const l=this.fileDirectory.PhotometricInterpretation;if(l===NA.Ie.RGB){let r=[0,1,2];if(this.fileDirectory.ExtraSamples!==NA.pd.Unspecified&&n){r=[];for(let A=0;A<this.fileDirectory.BitsPerSample.length;A+=1)r.push(A)}return this.readRasters({window:A,interleave:t,samples:r,pool:e,width:i,height:s,resampleMethod:a,signal:o})}let h;switch(l){case NA.Ie.WhiteIsZero:case NA.Ie.BlackIsZero:case NA.Ie.Palette:h=[0];break;case NA.Ie.CMYK:h=[0,1,2,3];break;case NA.Ie.YCbCr:case NA.Ie.CIELab:h=[0,1,2];break;default:throw new Error(\\\"Invalid or unsupported photometric interpretation.\\\")}const g={window:r,interleave:!0,samples:h,pool:e,width:i,height:s,resampleMethod:a,signal:o},{fileDirectory:c}=this,f=await this.readRasters(g),u=2**this.fileDirectory.BitsPerSample[0];let d;switch(l){case NA.Ie.WhiteIsZero:d=function(A,t){const{width:e,height:i}=A,s=new Uint8Array(e*i*3);let a;for(let e=0,i=0;e<A.length;++e,i+=3)a=256-A[e]/t*256,s[i]=a,s[i+1]=a,s[i+2]=a;return s}(f,u);break;case NA.Ie.BlackIsZero:d=function(A,t){const{width:e,height:i}=A,s=new Uint8Array(e*i*3);let a;for(let e=0,i=0;e<A.length;++e,i+=3)a=A[e]/t*256,s[i]=a,s[i+1]=a,s[i+2]=a;return s}(f,u);break;case NA.Ie.Palette:d=function(A,t){const{width:e,height:i}=A,s=new Uint8Array(e*i*3),a=t.length/3,n=t.length/3*2;for(let e=0,i=0;e<A.length;++e,i+=3){const o=A[e];s[i]=t[o]/65536*256,s[i+1]=t[o+a]/65536*256,s[i+2]=t[o+n]/65536*256}return s}(f,c.ColorMap);break;case NA.Ie.CMYK:d=function(A){const{width:t,height:e}=A,i=new Uint8Array(t*e*3);for(let t=0,e=0;t<A.length;t+=4,e+=3){const s=A[t],a=A[t+1],n=A[t+2],o=A[t+3];i[e]=(255-s)/256*255*((255-o)/256),i[e+1]=(255-a)/256*255*((255-o)/256),i[e+2]=(255-n)/256*255*((255-o)/256)}return i}(f);break;case NA.Ie.YCbCr:d=function(A){const{width:t,height:e}=A,i=new Uint8ClampedArray(t*e*3);for(let t=0,e=0;t<A.length;t+=3,e+=3){const s=A[t],a=A[t+1],n=A[t+2];i[e]=s+1.402*(n-128),i[e+1]=s-.34414*(a-128)-.71414*(n-128),i[e+2]=s+1.772*(a-128)}return i}(f);break;case NA.Ie.CIELab:d=function(A){const{width:t,height:e}=A,i=new Uint8Array(t*e*3);for(let t=0,e=0;t<A.length;t+=3,e+=3){let s,a,n,o=(A[t+0]+16)/116,r=(A[t+1]<<24>>24)/500+o,l=o-(A[t+2]<<24>>24)/200;r=.95047*(r*r*r>.008856?r*r*r:(r-16/116)/7.787),o=1*(o*o*o>.008856?o*o*o:(o-16/116)/7.787),l=1.08883*(l*l*l>.008856?l*l*l:(l-16/116)/7.787),s=3.2406*r+-1.5372*o+-.4986*l,a=-.9689*r+1.8758*o+.0415*l,n=.0557*r+-.204*o+1.057*l,s=s>.0031308?1.055*s**(1/2.4)-.055:12.92*s,a=a>.0031308?1.055*a**(1/2.4)-.055:12.92*a,n=n>.0031308?1.055*n**(1/2.4)-.055:12.92*n,i[e]=255*Math.max(0,Math.min(1,s)),i[e+1]=255*Math.max(0,Math.min(1,a)),i[e+2]=255*Math.max(0,Math.min(1,n))}return i}(f);break;default:throw new Error(\\\"Unsupported photometric interpretation.\\\")}if(!t){const A=new Uint8Array(d.length/3),t=new Uint8Array(d.length/3),e=new Uint8Array(d.length/3);for(let i=0,s=0;i<d.length;i+=3,++s)A[s]=d[i],t[s]=d[i+1],e[s]=d[i+2];d=[A,t,e]}return d.width=f.width,d.height=f.height,d}getTiePoints(){if(!this.fileDirectory.ModelTiepoint)return[];const A=[];for(let t=0;t<this.fileDirectory.ModelTiepoint.length;t+=6)A.push({i:this.fileDirectory.ModelTiepoint[t],j:this.fileDirectory.ModelTiepoint[t+1],k:this.fileDirectory.ModelTiepoint[t+2],x:this.fileDirectory.ModelTiepoint[t+3],y:this.fileDirectory.ModelTiepoint[t+4],z:this.fileDirectory.ModelTiepoint[t+5]});return A}getGDALMetadata(A=null){const t={};if(!this.fileDirectory.GDAL_METADATA)return null;const e=this.fileDirectory.GDAL_METADATA;let i=GA(e,\\\"Item\\\");i=null===A?i.filter((A=>void 0===SA(A,\\\"sample\\\"))):i.filter((t=>Number(SA(t,\\\"sample\\\"))===A));for(let A=0;A<i.length;++A){const e=i[A];t[SA(e,\\\"name\\\")]=e.inner}return t}getGDALNoData(){if(!this.fileDirectory.GDAL_NODATA)return null;const A=this.fileDirectory.GDAL_NODATA;return Number(A.substring(0,A.length-1))}getOrigin(){const A=this.fileDirectory.ModelTiepoint,t=this.fileDirectory.ModelTransformation;if(A&&6===A.length)return[A[3],A[4],A[5]];if(t)return[t[3],t[7],t[11]];throw new Error(\\\"The image does not have an affine transformation.\\\")}getResolution(A=null){const t=this.fileDirectory.ModelPixelScale,e=this.fileDirectory.ModelTransformation;if(t)return[t[0],-t[1],t[2]];if(e)return[e[0],-e[5],e[10]];if(A){const[t,e,i]=A.getResolution();return[t*A.getWidth()/this.getWidth(),e*A.getHeight()/this.getHeight(),i*A.getWidth()/this.getWidth()]}throw new Error(\\\"The image does not have an affine transformation.\\\")}pixelIsArea(){return 1===this.geoKeys.GTRasterTypeGeoKey}getBoundingBox(){const A=this.getHeight(),t=this.getWidth();if(this.fileDirectory.ModelTransformation){const[e,i,s,a,n,o,r,l]=this.fileDirectory.ModelTransformation,h=[[0,0],[0,A],[t,0],[t,A]].map((([A,t])=>[a+e*A+i*t,l+n*A+o*t])),g=h.map((A=>A[0])),c=h.map((A=>A[1]));return[Math.min(...g),Math.min(...c),Math.max(...g),Math.max(...c)]}{const A=this.getOrigin(),t=this.getResolution(),e=A[0],i=A[1],s=e+t[0]*this.getWidth(),a=i+t[1]*this.getHeight();return[Math.min(e,s),Math.min(i,a),Math.max(e,s),Math.max(i,a)]}}};class qA{constructor(A){this._dataView=new DataView(A)}get buffer(){return this._dataView.buffer}getUint64(A,t){const e=this.getUint32(A,t),i=this.getUint32(A+4,t);let s;if(t){if(s=e+2**32*i,!Number.isSafeInteger(s))throw new Error(`${s} exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues`);return s}if(s=2**32*e+i,!Number.isSafeInteger(s))throw new Error(`${s} exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues`);return s}getInt64(A,t){let e=0;const i=(128&this._dataView.getUint8(A+(t?7:0)))>0;let s=!0;for(let a=0;a<8;a++){let n=this._dataView.getUint8(A+(t?a:7-a));i&&(s?0!==n&&(n=255&~(n-1),s=!1):n=255&~n),e+=n*256**a}return i&&(e=-e),e}getUint8(A,t){return this._dataView.getUint8(A,t)}getInt8(A,t){return this._dataView.getInt8(A,t)}getUint16(A,t){return this._dataView.getUint16(A,t)}getInt16(A,t){return this._dataView.getInt16(A,t)}getUint32(A,t){return this._dataView.getUint32(A,t)}getInt32(A,t){return this._dataView.getInt32(A,t)}getFloat16(A,t){return vA(this._dataView,A,t)}getFloat32(A,t){return this._dataView.getFloat32(A,t)}getFloat64(A,t){return this._dataView.getFloat64(A,t)}}class zA{constructor(A,t,e,i){this._dataView=new DataView(A),this._sliceOffset=t,this._littleEndian=e,this._bigTiff=i}get sliceOffset(){return this._sliceOffset}get sliceTop(){return this._sliceOffset+this.buffer.byteLength}get littleEndian(){return this._littleEndian}get bigTiff(){return this._bigTiff}get buffer(){return this._dataView.buffer}covers(A,t){return this.sliceOffset<=A&&this.sliceTop>=A+t}readUint8(A){return this._dataView.getUint8(A-this._sliceOffset,this._littleEndian)}readInt8(A){return this._dataView.getInt8(A-this._sliceOffset,this._littleEndian)}readUint16(A){return this._dataView.getUint16(A-this._sliceOffset,this._littleEndian)}readInt16(A){return this._dataView.getInt16(A-this._sliceOffset,this._littleEndian)}readUint32(A){return this._dataView.getUint32(A-this._sliceOffset,this._littleEndian)}readInt32(A){return this._dataView.getInt32(A-this._sliceOffset,this._littleEndian)}readFloat32(A){return this._dataView.getFloat32(A-this._sliceOffset,this._littleEndian)}readFloat64(A){return this._dataView.getFloat64(A-this._sliceOffset,this._littleEndian)}readUint64(A){const t=this.readUint32(A),e=this.readUint32(A+4);let i;if(this._littleEndian){if(i=t+2**32*e,!Number.isSafeInteger(i))throw new Error(`${i} exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues`);return i}if(i=2**32*t+e,!Number.isSafeInteger(i))throw new Error(`${i} exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues`);return i}readInt64(A){let t=0;const e=(128&this._dataView.getUint8(A+(this._littleEndian?7:0)))>0;let i=!0;for(let s=0;s<8;s++){let a=this._dataView.getUint8(A+(this._littleEndian?s:7-s));e&&(i?0!==a&&(a=255&~(a-1),i=!1):a=255&~a),t+=a*256**s}return e&&(t=-t),t}readOffset(A){return this._bigTiff?this.readUint64(A):this.readUint32(A)}}const jA=\\\"\\\\r\\\\n\\\\r\\\\n\\\";function KA(A){if(void 0!==Object.fromEntries)return Object.fromEntries(A);const t={};for(const[e,i]of A)t[e.toLowerCase()]=i;return t}function YA(A){return KA(A.split(\\\"\\\\r\\\\n\\\").map((A=>{const t=A.split(\\\":\\\").map((A=>A.trim()));return t[0]=t[0].toLowerCase(),t})))}function VA(A){let t,e,i;return A&&([,t,e,i]=A.match(/bytes (\\\\d+)-(\\\\d+)\\\\/(\\\\d+)/),t=parseInt(t,10),e=parseInt(e,10),i=parseInt(i,10)),{start:t,end:e,total:i}}class WA{async fetch(A,t=void 0){return Promise.all(A.map((A=>this.fetchSlice(A,t))))}async fetchSlice(A){throw new Error(`fetching of slice ${A} not possible, not implemented`)}get fileSize(){return null}async close(){}}class XA extends Map{constructor(A={}){if(super(),!(A.maxSize&&A.maxSize>0))throw new TypeError(\\\"`maxSize` must be a number greater than 0\\\");if(\\\"number\\\"==typeof A.maxAge&&0===A.maxAge)throw new TypeError(\\\"`maxAge` must be a number greater than 0\\\");this.maxSize=A.maxSize,this.maxAge=A.maxAge||Number.POSITIVE_INFINITY,this.onEviction=A.onEviction,this.cache=new Map,this.oldCache=new Map,this._size=0}_emitEvictions(A){if(\\\"function\\\"==typeof this.onEviction)for(const[t,e]of A)this.onEviction(t,e.value)}_deleteIfExpired(A,t){return\\\"number\\\"==typeof t.expiry&&t.expiry<=Date.now()&&(\\\"function\\\"==typeof this.onEviction&&this.onEviction(A,t.value),this.delete(A))}_getOrDeleteIfExpired(A,t){if(!1===this._deleteIfExpired(A,t))return t.value}_getItemValue(A,t){return t.expiry?this._getOrDeleteIfExpired(A,t):t.value}_peek(A,t){const e=t.get(A);return this._getItemValue(A,e)}_set(A,t){this.cache.set(A,t),this._size++,this._size>=this.maxSize&&(this._size=0,this._emitEvictions(this.oldCache),this.oldCache=this.cache,this.cache=new Map)}_moveToRecent(A,t){this.oldCache.delete(A),this._set(A,t)}*_entriesAscending(){for(const A of this.oldCache){const[t,e]=A;if(!this.cache.has(t)){!1===this._deleteIfExpired(t,e)&&(yield A)}}for(const A of this.cache){const[t,e]=A;!1===this._deleteIfExpired(t,e)&&(yield A)}}get(A){if(this.cache.has(A)){const t=this.cache.get(A);return this._getItemValue(A,t)}if(this.oldCache.has(A)){const t=this.oldCache.get(A);if(!1===this._deleteIfExpired(A,t))return this._moveToRecent(A,t),t.value}}set(A,t,{maxAge:e=this.maxAge}={}){const i=\\\"number\\\"==typeof e&&e!==Number.POSITIVE_INFINITY?Date.now()+e:void 0;return this.cache.has(A)?this.cache.set(A,{value:t,expiry:i}):this._set(A,{value:t,expiry:i}),this}has(A){return this.cache.has(A)?!this._deleteIfExpired(A,this.cache.get(A)):!!this.oldCache.has(A)&&!this._deleteIfExpired(A,this.oldCache.get(A))}peek(A){return this.cache.has(A)?this._peek(A,this.cache):this.oldCache.has(A)?this._peek(A,this.oldCache):void 0}delete(A){const t=this.cache.delete(A);return t&&this._size--,this.oldCache.delete(A)||t}clear(){this.cache.clear(),this.oldCache.clear(),this._size=0}resize(A){if(!(A&&A>0))throw new TypeError(\\\"`maxSize` must be a number greater than 0\\\");const t=[...this._entriesAscending()],e=t.length-A;e<0?(this.cache=new Map(t),this.oldCache=new Map,this._size=t.length):(e>0&&this._emitEvictions(t.slice(0,e)),this.oldCache=new Map(t.slice(e)),this.cache=new Map,this._size=0),this.maxSize=A}*keys(){for(const[A]of this)yield A}*values(){for(const[,A]of this)yield A}*[Symbol.iterator](){for(const A of this.cache){const[t,e]=A;!1===this._deleteIfExpired(t,e)&&(yield[t,e.value])}for(const A of this.oldCache){const[t,e]=A;if(!this.cache.has(t)){!1===this._deleteIfExpired(t,e)&&(yield[t,e.value])}}}*entriesDescending(){let A=[...this.cache];for(let t=A.length-1;t>=0;--t){const e=A[t],[i,s]=e;!1===this._deleteIfExpired(i,s)&&(yield[i,s.value])}A=[...this.oldCache];for(let t=A.length-1;t>=0;--t){const e=A[t],[i,s]=e;if(!this.cache.has(i)){!1===this._deleteIfExpired(i,s)&&(yield[i,s.value])}}}*entriesAscending(){for(const[A,t]of this._entriesAscending())yield[A,t.value]}get size(){if(!this._size)return this.oldCache.size;let A=0;for(const t of this.oldCache.keys())this.cache.has(t)||A++;return Math.min(this._size+A,this.maxSize)}entries(){return this.entriesAscending()}forEach(A,t=this){for(const[e,i]of this.entriesAscending())A.call(t,i,e,this)}get[Symbol.toStringTag](){return JSON.stringify([...this.entriesAscending()])}}class ZA extends Error{constructor(A){super(A),Error.captureStackTrace&&Error.captureStackTrace(this,ZA),this.name=\\\"AbortError\\\"}}class $A extends Error{constructor(A,t){super(t),this.errors=A,this.message=t,this.name=\\\"AggregateError\\\"}}const At=$A;class tt{constructor(A,t,e=null){this.offset=A,this.length=t,this.data=e}get top(){return this.offset+this.length}}class et{constructor(A,t,e){this.offset=A,this.length=t,this.blockIds=e}}class it extends WA{constructor(A,{blockSize:t=65536,cacheSize:e=100}={}){super(),this.source=A,this.blockSize=t,this.blockCache=new XA({maxSize:e,onEviction:(A,t)=>{this.evictedBlocks.set(A,t)}}),this.evictedBlocks=new Map,this.blockRequests=new Map,this.blockIdsToFetch=new Set,this.abortedBlockIds=new Set}get fileSize(){return this.source.fileSize}async fetch(A,t){const e=[],i=[],s=[];this.evictedBlocks.clear();for(const{offset:t,length:a}of A){let A=t+a;const{fileSize:n}=this;null!==n&&(A=Math.min(A,n));for(let a=Math.floor(t/this.blockSize)*this.blockSize;a<A;a+=this.blockSize){const A=Math.floor(a/this.blockSize);this.blockCache.has(A)||this.blockRequests.has(A)||(this.blockIdsToFetch.add(A),i.push(A)),this.blockRequests.has(A)&&e.push(this.blockRequests.get(A)),s.push(A)}}await async function(A){return new Promise((t=>setTimeout(t,A)))}(),this.fetchBlocks(t);const a=[];for(const A of i)this.blockRequests.has(A)&&a.push(this.blockRequests.get(A));await Promise.allSettled(e),await Promise.allSettled(a);const n=[],o=s.filter((A=>this.abortedBlockIds.has(A)||!this.blockCache.has(A)));if(o.forEach((A=>this.blockIdsToFetch.add(A))),o.length>0&&t&&!t.aborted){this.fetchBlocks(null);for(const A of o){const t=this.blockRequests.get(A);if(!t)throw new Error(`Block ${A} is not in the block requests`);n.push(t)}await Promise.allSettled(n)}if(t&&t.aborted)throw new ZA(\\\"Request was aborted\\\");const r=s.map((A=>this.blockCache.get(A)||this.evictedBlocks.get(A))),l=r.filter((A=>!A));if(l.length)throw new At(l,\\\"Request failed\\\");const h=new Map(function(A,t){const e=Array.isArray(A)?A:Array.from(A),i=Array.isArray(t)?t:Array.from(t);return e.map(((A,t)=>[A,i[t]]))}(s,r));return this.readSliceData(A,h)}fetchBlocks(A){if(this.blockIdsToFetch.size>0){const t=this.groupBlocks(this.blockIdsToFetch),e=this.source.fetch(t,A);for(let i=0;i<t.length;++i){const s=t[i];for(const t of s.blockIds)this.blockRequests.set(t,(async()=>{try{const A=(await e)[i],s=t*this.blockSize,a=s-A.offset,n=Math.min(a+this.blockSize,A.data.byteLength),o=A.data.slice(a,n),r=new tt(s,o.byteLength,o,t);this.blockCache.set(t,r),this.abortedBlockIds.delete(t)}catch(e){if(\\\"AbortError\\\"!==e.name)throw e;e.signal=A,this.blockCache.delete(t),this.abortedBlockIds.add(t)}finally{this.blockRequests.delete(t)}})())}this.blockIdsToFetch.clear()}}groupBlocks(A){const t=Array.from(A).sort(((A,t)=>A-t));if(0===t.length)return[];let e=[],i=null;const s=[];for(const A of t)null===i||i+1===A?(e.push(A),i=A):(s.push(new et(e[0]*this.blockSize,e.length*this.blockSize,e)),e=[A],i=A);return s.push(new et(e[0]*this.blockSize,e.length*this.blockSize,e)),s}readSliceData(A,t){return A.map((A=>{let e=A.offset+A.length;null!==this.fileSize&&(e=Math.min(this.fileSize,e));const i=Math.floor(A.offset/this.blockSize),s=Math.floor(e/this.blockSize),a=new ArrayBuffer(A.length),n=new Uint8Array(a);for(let a=i;a<=s;++a){const i=t.get(a),s=i.offset-A.offset;let o,r=0,l=0;s<0?r=-s:s>0&&(l=s),o=i.top-e<0?i.length-r:e-i.offset-r;const h=new Uint8Array(i.data,r,o);n.set(h,l)}return a}))}}class st{get ok(){return this.status>=200&&this.status<=299}get status(){throw new Error(\\\"not implemented\\\")}getHeader(A){throw new Error(\\\"not implemented\\\")}async getData(){throw new Error(\\\"not implemented\\\")}}class at{constructor(A){this.url=A}async request({headers:A,credentials:t,signal:e}={}){throw new Error(\\\"request is not implemented\\\")}}class nt extends st{constructor(A){super(),this.response=A}get status(){return this.response.status}getHeader(A){return this.response.headers.get(A)}async getData(){return this.response.arrayBuffer?await this.response.arrayBuffer():(await this.response.buffer()).buffer}}class ot extends at{constructor(A,t){super(A),this.credentials=t}async request({headers:A,credentials:t,signal:e}={}){const i=await fetch(this.url,{headers:A,credentials:t,signal:e});return new nt(i)}}class rt extends st{constructor(A,t){super(),this.xhr=A,this.data=t}get status(){return this.xhr.status}getHeader(A){return this.xhr.getResponseHeader(A)}async getData(){return this.data}}class lt extends at{constructRequest(A,t){return new Promise(((e,i)=>{const s=new XMLHttpRequest;s.open(\\\"GET\\\",this.url),s.responseType=\\\"arraybuffer\\\";for(const[t,e]of Object.entries(A))s.setRequestHeader(t,e);s.onload=()=>{const A=s.response;e(new rt(s,A))},s.onerror=i,s.onabort=()=>i(new ZA(\\\"Request aborted\\\")),s.send(),t&&(t.aborted&&s.abort(),t.addEventListener(\\\"abort\\\",(()=>s.abort())))}))}async request({headers:A,signal:t}={}){return await this.constructRequest(A,t)}}var ht=e(3752),gt=e(3640),ct=e(2630);class ft extends st{constructor(A,t){super(),this.response=A,this.dataPromise=t}get status(){return this.response.statusCode}getHeader(A){return this.response.headers[A]}async getData(){return await this.dataPromise}}class ut extends at{constructor(A){super(A),this.parsedUrl=ct.parse(this.url),this.httpApi=\\\"http:\\\"===this.parsedUrl.protocol?ht:gt}constructRequest(A,t){return new Promise(((e,i)=>{const s=this.httpApi.get({...this.parsedUrl,headers:A},(A=>{const t=new Promise((t=>{const e=[];A.on(\\\"data\\\",(A=>{e.push(A)})),A.on(\\\"end\\\",(()=>{const A=Buffer.concat(e).buffer;t(A)})),A.on(\\\"error\\\",i)}));e(new ft(A,t))}));s.on(\\\"error\\\",i),t&&(t.aborted&&s.destroy(new ZA(\\\"Request aborted\\\")),t.addEventListener(\\\"abort\\\",(()=>s.destroy(new ZA(\\\"Request aborted\\\")))))}))}async request({headers:A,signal:t}={}){return await this.constructRequest(A,t)}}class dt extends WA{constructor(A,t,e,i){super(),this.client=A,this.headers=t,this.maxRanges=e,this.allowFullFile=i,this._fileSize=null}async fetch(A,t){return this.maxRanges>=A.length?this.fetchSlices(A,t):(this.maxRanges>0&&A.length,Promise.all(A.map((A=>this.fetchSlice(A,t)))))}async fetchSlices(A,t){const e=await this.client.request({headers:{...this.headers,Range:`bytes=${A.map((({offset:A,length:t})=>`${A}-${A+t}`)).join(\\\",\\\")}`},signal:t});if(e.ok){if(206===e.status){const{type:i,params:s}=function(A){const[t,...e]=A.split(\\\";\\\").map((A=>A.trim()));return{type:t,params:KA(e.map((A=>A.split(\\\"=\\\"))))}}(e.getHeader(\\\"content-type\\\"));if(\\\"multipart/byteranges\\\"===i){const A=function(A,t){let e=null;const i=new TextDecoder(\\\"ascii\\\"),s=[],a=`--${t}`,n=`${a}--`;for(let t=0;t<10;++t)i.decode(new Uint8Array(A,t,a.length))===a&&(e=t);if(null===e)throw new Error(\\\"Could not find initial boundary\\\");for(;e<A.byteLength;){const t=i.decode(new Uint8Array(A,e,Math.min(a.length+1024,A.byteLength-e)));if(0===t.length||t.startsWith(n))break;if(!t.startsWith(a))throw new Error(\\\"Part does not start with boundary\\\");const o=t.substr(a.length+2);if(0===o.length)break;const r=o.indexOf(jA),l=YA(o.substr(0,r)),{start:h,end:g,total:c}=VA(l[\\\"content-range\\\"]),f=e+a.length+r+4,u=parseInt(g,10)+1-parseInt(h,10);s.push({headers:l,data:A.slice(f,f+u),offset:h,length:u,fileSize:c}),e=f+u+4}return s}(await e.getData(),s.boundary);return this._fileSize=A[0].fileSize||null,A}const a=await e.getData(),{start:n,end:o,total:r}=VA(e.getHeader(\\\"content-range\\\"));this._fileSize=r||null;const l=[{data:a,offset:n,length:o-n}];if(A.length>1){const e=await Promise.all(A.slice(1).map((A=>this.fetchSlice(A,t))));return l.concat(e)}return l}{if(!this.allowFullFile)throw new Error(\\\"Server responded with full file\\\");const A=await e.getData();return this._fileSize=A.byteLength,[{data:A,offset:0,length:A.byteLength}]}}throw new Error(\\\"Error fetching data.\\\")}async fetchSlice(A,t){const{offset:e,length:i}=A,s=await this.client.request({headers:{...this.headers,Range:`bytes=${e}-${e+i}`},signal:t});if(s.ok){if(206===s.status){const A=await s.getData(),{total:t}=VA(s.getHeader(\\\"content-range\\\"));return this._fileSize=t||null,{data:A,offset:e,length:i}}{if(!this.allowFullFile)throw new Error(\\\"Server responded with full file\\\");const A=await s.getData();return this._fileSize=A.byteLength,{data:A,offset:0,length:A.byteLength}}}throw new Error(\\\"Error fetching data.\\\")}get fileSize(){return this._fileSize}}function It(A,{blockSize:t,cacheSize:e}){return null===t?A:new it(A,{blockSize:t,cacheSize:e})}function pt(A,{forceXHR:t=!1,...e}={}){return\\\"function\\\"!=typeof fetch||t?\\\"undefined\\\"!=typeof XMLHttpRequest?function(A,{headers:t={},maxRanges:e=0,allowFullFile:i=!1,...s}={}){const a=new lt(A);return It(new dt(a,t,e,i),s)}(A,e):function(A,{headers:t={},maxRanges:e=0,allowFullFile:i=!1,...s}={}){const a=new ut(A);return It(new dt(a,t,e,i),s)}(A,e):function(A,{headers:t={},credentials:e,maxRanges:i=0,allowFullFile:s=!1,...a}={}){const n=new ot(A,e);return It(new dt(n,t,i,s),a)}(A,e)}function _t(A){switch(A){case NA.sf.BYTE:case NA.sf.ASCII:case NA.sf.SBYTE:case NA.sf.UNDEFINED:return 1;case NA.sf.SHORT:case NA.sf.SSHORT:return 2;case NA.sf.LONG:case NA.sf.SLONG:case NA.sf.FLOAT:case NA.sf.IFD:return 4;case NA.sf.RATIONAL:case NA.sf.SRATIONAL:case NA.sf.DOUBLE:case NA.sf.LONG8:case NA.sf.SLONG8:case NA.sf.IFD8:return 8;default:throw new RangeError(`Invalid field type: ${A}`)}}function Ct(A,t,e,i){let s=null,a=null;const n=_t(t);switch(t){case NA.sf.BYTE:case NA.sf.ASCII:case NA.sf.UNDEFINED:s=new Uint8Array(e),a=A.readUint8;break;case NA.sf.SBYTE:s=new Int8Array(e),a=A.readInt8;break;case NA.sf.SHORT:s=new Uint16Array(e),a=A.readUint16;break;case NA.sf.SSHORT:s=new Int16Array(e),a=A.readInt16;break;case NA.sf.LONG:case NA.sf.IFD:s=new Uint32Array(e),a=A.readUint32;break;case NA.sf.SLONG:s=new Int32Array(e),a=A.readInt32;break;case NA.sf.LONG8:case NA.sf.IFD8:s=new Array(e),a=A.readUint64;break;case NA.sf.SLONG8:s=new Array(e),a=A.readInt64;break;case NA.sf.RATIONAL:s=new Uint32Array(2*e),a=A.readUint32;break;case NA.sf.SRATIONAL:s=new Int32Array(2*e),a=A.readInt32;break;case NA.sf.FLOAT:s=new Float32Array(e),a=A.readFloat32;break;case NA.sf.DOUBLE:s=new Float64Array(e),a=A.readFloat64;break;default:throw new RangeError(`Invalid field type: ${t}`)}if(t!==NA.sf.RATIONAL&&t!==NA.sf.SRATIONAL)for(let t=0;t<e;++t)s[t]=a.call(A,i+t*n);else for(let t=0;t<e;t+=2)s[t]=a.call(A,i+t*n),s[t+1]=a.call(A,i+(t*n+4));return t===NA.sf.ASCII?new TextDecoder(\\\"utf-8\\\").decode(s):s}class Bt{constructor(A,t,e){this.fileDirectory=A,this.geoKeyDirectory=t,this.nextIFDByteOffset=e}}class wt extends Error{constructor(A){super(`No image at index ${A}`),this.index=A}}class Et{async readRasters(A={}){const{window:t,width:e,height:i}=A;let{resX:s,resY:a,bbox:n}=A;const o=await this.getImage();let r=o;const l=await this.getImageCount(),h=o.getBoundingBox();if(t&&n)throw new Error('Both \\\"bbox\\\" and \\\"window\\\" passed.');if(e||i){if(t){const[A,e]=o.getOrigin(),[i,s]=o.getResolution();n=[A+t[0]*i,e+t[1]*s,A+t[2]*i,e+t[3]*s]}const A=n||h;if(e){if(s)throw new Error(\\\"Both width and resX passed\\\");s=(A[2]-A[0])/e}if(i){if(a)throw new Error(\\\"Both width and resY passed\\\");a=(A[3]-A[1])/i}}if(s||a){const A=[];for(let t=0;t<l;++t){const e=await this.getImage(t),{SubfileType:i,NewSubfileType:s}=e.fileDirectory;(0===t||2===i||1&s)&&A.push(e)}A.sort(((A,t)=>A.getWidth()-t.getWidth()));for(let t=0;t<A.length;++t){const e=A[t],i=(h[2]-h[0])/e.getWidth(),n=(h[3]-h[1])/e.getHeight();if(r=e,s&&s>i||a&&a>n)break}}let g=t;if(n){const[A,t]=o.getOrigin(),[e,i]=r.getResolution(o);g=[Math.round((n[0]-A)/e),Math.round((n[1]-t)/i),Math.round((n[2]-A)/e),Math.round((n[3]-t)/i)],g=[Math.min(g[0],g[2]),Math.min(g[1],g[3]),Math.max(g[0],g[2]),Math.max(g[1],g[3])]}return r.readRasters({...A,window:g})}}class yt extends Et{constructor(A,t,e,i,s={}){super(),this.source=A,this.littleEndian=t,this.bigTiff=e,this.firstIFDOffset=i,this.cache=s.cache||!1,this.ifdRequests=[],this.ghostValues=null}async getSlice(A,t){const e=this.bigTiff?4048:1024;return new zA((await this.source.fetch([{offset:A,length:void 0!==t?t:e}]))[0],A,this.littleEndian,this.bigTiff)}async parseFileDirectoryAt(A){const t=this.bigTiff?20:12,e=this.bigTiff?8:2;let i=await this.getSlice(A);const s=this.bigTiff?i.readUint64(A):i.readUint16(A),a=s*t+(this.bigTiff?16:6);i.covers(A,a)||(i=await this.getSlice(A,a));const n={};let o=A+(this.bigTiff?8:2);for(let A=0;A<s;o+=t,++A){const A=i.readUint16(o),t=i.readUint16(o+2),e=this.bigTiff?i.readUint64(o+4):i.readUint32(o+4);let s,a;const r=_t(t),l=o+(this.bigTiff?12:8);if(r*e<=(this.bigTiff?8:4))s=Ct(i,t,e,l);else{const A=i.readOffset(l),a=_t(t)*e;if(i.covers(A,a))s=Ct(i,t,e,A);else{s=Ct(await this.getSlice(A,a),t,e,A)}}a=1===e&&-1===NA.It.indexOf(A)&&t!==NA.sf.RATIONAL&&t!==NA.sf.SRATIONAL?s[0]:s,n[NA.L[A]]=a}const r=function(A){const t=A.GeoKeyDirectory;if(!t)return null;const e={};for(let i=4;i<=4*t[3];i+=4){const s=NA.P1[t[i]],a=t[i+1]?NA.L[t[i+1]]:null,n=t[i+2],o=t[i+3];let r=null;if(a){if(r=A[a],null==r)throw new Error(`Could not get value of geoKey '${s}'.`);\\\"string\\\"==typeof r?r=r.substring(o,o+n-1):r.subarray&&(r=r.subarray(o,o+n),1===n&&(r=r[0]))}else r=o;e[s]=r}return e}(n),l=i.readOffset(A+e+t*s);return new Bt(n,r,l)}async requestIFD(A){if(this.ifdRequests[A])return this.ifdRequests[A];if(0===A)return this.ifdRequests[A]=this.parseFileDirectoryAt(this.firstIFDOffset),this.ifdRequests[A];if(!this.ifdRequests[A-1])try{this.ifdRequests[A-1]=this.requestIFD(A-1)}catch(t){if(t instanceof wt)throw new wt(A);throw t}return this.ifdRequests[A]=(async()=>{const t=await this.ifdRequests[A-1];if(0===t.nextIFDByteOffset)throw new wt(A);return this.parseFileDirectoryAt(t.nextIFDByteOffset)})(),this.ifdRequests[A]}async getImage(A=0){const t=await this.requestIFD(A);return new JA(t.fileDirectory,t.geoKeyDirectory,this.dataView,this.littleEndian,this.cache,this.source)}async getImageCount(){let A=0,t=!0;for(;t;)try{await this.requestIFD(A),++A}catch(A){if(!(A instanceof wt))throw A;t=!1}return A}async getGhostValues(){const A=this.bigTiff?16:8;if(this.ghostValues)return this.ghostValues;const t=\\\"GDAL_STRUCTURAL_METADATA_SIZE=\\\";let e=await this.getSlice(A,130);if(t===Ct(e,NA.sf.ASCII,30,A)){const t=Ct(e,NA.sf.ASCII,130,A).split(\\\"\\\\n\\\")[0],i=Number(t.split(\\\"=\\\")[1].split(\\\" \\\")[0])+t.length;i>130&&(e=await this.getSlice(A,i));const s=Ct(e,NA.sf.ASCII,i,A);this.ghostValues={},s.split(\\\"\\\\n\\\").filter((A=>A.length>0)).map((A=>A.split(\\\"=\\\"))).forEach((([A,t])=>{this.ghostValues[A]=t}))}return this.ghostValues}static async fromSource(A,t,e){const i=(await A.fetch([{offset:0,length:1024}],e))[0],s=new qA(i),a=s.getUint16(0,0);let n;if(18761===a)n=!0;else{if(19789!==a)throw new TypeError(\\\"Invalid byte order value.\\\");n=!1}const o=s.getUint16(2,n);let r;if(42===o)r=!1;else{if(43!==o)throw new TypeError(\\\"Invalid magic number.\\\");r=!0;if(8!==s.getUint16(4,n))throw new Error(\\\"Unsupported offset byte-size.\\\")}const l=r?s.getUint64(8,n):s.getUint32(4,n);return new yt(A,n,r,l,t)}close(){return\\\"function\\\"==typeof this.source.close&&this.source.close()}}class Qt extends Map{#A=0;#t=new Map;#e=new Map;#i;#s;#a;constructor(A={}){if(super(),!(A.maxSize&&A.maxSize>0))throw new TypeError(\\\"`maxSize` must be a number greater than 0\\\");if(\\\"number\\\"==typeof A.maxAge&&0===A.maxAge)throw new TypeError(\\\"`maxAge` must be a number greater than 0\\\");this.#i=A.maxSize,this.#s=A.maxAge||Number.POSITIVE_INFINITY,this.#a=A.onEviction}get __oldCache(){return this.#e}#n(A){if(\\\"function\\\"==typeof this.#a)for(const[t,e]of A)this.#a(t,e.value)}#o(A,t){return\\\"number\\\"==typeof t.expiry&&t.expiry<=Date.now()&&(\\\"function\\\"==typeof this.#a&&this.#a(A,t.value),this.delete(A))}#r(A,t){if(!1===this.#o(A,t))return t.value}#l(A,t){return t.expiry?this.#r(A,t):t.value}#h(A,t){const e=t.get(A);return this.#l(A,e)}#g(A,t){this.#t.set(A,t),this.#A++,this.#A>=this.#i&&(this.#A=0,this.#n(this.#e),this.#e=this.#t,this.#t=new Map)}#c(A,t){this.#e.delete(A),this.#g(A,t)}*#f(){for(const A of this.#e){const[t,e]=A;if(!this.#t.has(t)){!1===this.#o(t,e)&&(yield A)}}for(const A of this.#t){const[t,e]=A;!1===this.#o(t,e)&&(yield A)}}get(A){if(this.#t.has(A)){const t=this.#t.get(A);return this.#l(A,t)}if(this.#e.has(A)){const t=this.#e.get(A);if(!1===this.#o(A,t))return this.#c(A,t),t.value}}set(A,t,{maxAge:e=this.#s}={}){const i=\\\"number\\\"==typeof e&&e!==Number.POSITIVE_INFINITY?Date.now()+e:void 0;return this.#t.has(A)?this.#t.set(A,{value:t,expiry:i}):this.#g(A,{value:t,expiry:i}),this}has(A){return this.#t.has(A)?!this.#o(A,this.#t.get(A)):!!this.#e.has(A)&&!this.#o(A,this.#e.get(A))}peek(A){return this.#t.has(A)?this.#h(A,this.#t):this.#e.has(A)?this.#h(A,this.#e):void 0}delete(A){const t=this.#t.delete(A);return t&&this.#A--,this.#e.delete(A)||t}clear(){this.#t.clear(),this.#e.clear(),this.#A=0}resize(A){if(!(A&&A>0))throw new TypeError(\\\"`maxSize` must be a number greater than 0\\\");const t=[...this.#f()],e=t.length-A;e<0?(this.#t=new Map(t),this.#e=new Map,this.#A=t.length):(e>0&&this.#n(t.slice(0,e)),this.#e=new Map(t.slice(e)),this.#t=new Map,this.#A=0),this.#i=A}*keys(){for(const[A]of this)yield A}*values(){for(const[,A]of this)yield A}*[Symbol.iterator](){for(const A of this.#t){const[t,e]=A;!1===this.#o(t,e)&&(yield[t,e.value])}for(const A of this.#e){const[t,e]=A;if(!this.#t.has(t)){!1===this.#o(t,e)&&(yield[t,e.value])}}}*entriesDescending(){let A=[...this.#t];for(let t=A.length-1;t>=0;--t){const e=A[t],[i,s]=e;!1===this.#o(i,s)&&(yield[i,s.value])}A=[...this.#e];for(let t=A.length-1;t>=0;--t){const e=A[t],[i,s]=e;if(!this.#t.has(i)){!1===this.#o(i,s)&&(yield[i,s.value])}}}*entriesAscending(){for(const[A,t]of this.#f())yield[A,t.value]}get size(){if(!this.#A)return this.#e.size;let A=0;for(const t of this.#e.keys())this.#t.has(t)||A++;return Math.min(this.#A+A,this.#i)}get maxSize(){return this.#i}entries(){return this.entriesAscending()}forEach(A,t=this){for(const[e,i]of this.entriesAscending())A.call(t,i,e,this)}get[Symbol.toStringTag](){return JSON.stringify([...this.entriesAscending()])}}var mt=e(7298),kt=e(4091);async function xt(A){const t=await A.getImage(),e=await t.getGeoKeys(),{ProjectedCSTypeGeoKey:i}=e;if(\\\"number\\\"==typeof i&&32767!==i&&i<=32760)return i;const{GeographicTypeGeoKey:s}=e;if(\\\"number\\\"==typeof s&&\\\"number\\\"!=typeof i)return s;const{PCSCitationGeoKey:a}=e;if(a&&a.includes(\\\"ESRI PE String\\\")){const A=a.split(\\\"\\\\0\\\").find((A=>A.startsWith(\\\"ESRI PE String\\\"))).replace(\\\"ESRI PE String = \\\",\\\"\\\"),t=await kt(A);if(t)return t}}var Mt=e(8726),bt=e(954),Dt=e(2944),vt=e(7437),St=e(7455),Gt=e(4899);function Nt([A,t,e,i],s){const[a,n]=s||[0,0];return[Math.floor(A)-a,Math.floor(t)-n,Math.ceil(e)+a,Math.ceil(i)+n]}var Rt=e(6316),Ft=e(2438),Lt=e(1654);async function Ut({bbox:A,bbox_srs:t=4326,cutline:e,cutline_srs:i=4326,debug_level:s=0,density:a=100,geotiff:n,geotiff_srs:o,expr:r,method:l,pixel_depth:h,round:g,tile_array_types:c,tile_height:f=256,tile_srs:u=3857,tile_array_types_strategy:d=\\\"auto\\\",tile_layout:I=\\\"[band][row,column]\\\",tile_resolution:p=[1,1],tile_width:_=256,timed:C=!1,use_overview:B=!0,turbo:w=!1}){let E;try{const y=C?performance.now():0;if(!A)throw new Error(\\\"[geotiff-tile] you must provide bbox\\\");if(isNaN(f))throw new Error(\\\"[geotiff-tile] tile_height is NaN\\\");if(isNaN(_))throw new Error(\\\"[geotiff-tile] tile_width is NaN\\\");const Q=await n.getImage(0),m=Q.getHeight(),k=[Number(A[0]),Number(A[1]),Number(A[2]),Number(A[3])];if(s>=1&&console.log(\\\"bbox_nums:\\\",k),!o){const A=C?performance.now():0;o=await xt(n),C&&console.log(\\\"[geotiff-tile] parsing epsg code took \\\"+Math.round(performance.now()-A)+\\\"ms\\\")}if(s>=1&&console.log(\\\"[geotiff-tile] geotiff_srs:\\\",o),!o)throw new Error(\\\"[geotiff-tile] unfortunately we weren't able to parse an EPSG code from the GeoTIFF metadata. Unfortunately, this library does not currently support reading tiles from GeoTIFF files with custom projections. We hope to add this support in the future, per time and funding.\\\");const x=C?performance.now():0;E=(()=>{if(u===t)return A;if(\\\"simple\\\"===t){const A=Mt(Q),t=Gt(A),[e,i,n,r]=k,l=bt([e,m-r,n,m-i],t.forward,{async:!1,density:0});return s>=1&&console.log(\\\"bbox_in_geotiff_srs:\\\",l),o===u?l:Lt({bbox:l,density:a,from:o,to:u})}return s>=1&&console.log(`reprojecting bbox from \\\"${t}\\\" to \\\"${u}\\\"`),Lt({bbox:k,density:a,from:t,to:u})})(),s>=1&&console.log(\\\"bbox_in_tile_srs:\\\",E),C&&console.log(\\\"[geotiff-tile] getting bbox_in_tile_srs took \\\"+Math.round(performance.now()-x)+\\\"ms\\\");const M=\\\"simple\\\"===t&&u===o?{bbox:k,debugLevel:s,srs:\\\"simple\\\",geotiff:n,use_overview:B,target_height:f,target_width:_}:{bbox:E,debugLevel:s,srs:u,geotiff:n,use_overview:B,target_height:f,target_width:_};s>=2&&console.log(\\\"[geotiff-tile] calling readBoundingBox with:\\\\n\\\",M);const b=C?performance.now():0,D=await async function({bbox:A,debug_level:t=0,density:e=100,geotiff:i,geotiff_srs:s,padding:a,proj4:n,srs:o,use_overview:r=!1,target_height:l,target_width:h}){if(t>=1&&console.log(\\\"[geotiff-read-bbox] starting\\\"),null===i)throw new Error(\\\"[geotiff-read-bbox] geotiff is null\\\");if(void 0===i)throw new Error(\\\"[geotiff-read-bbox] geotiff is undefined\\\");const g=performance.now(),c=await i.getImage(),f=performance.now()-g;t>=2&&console.log(`[geotiff-read-bbox] getting first image took ${Math.round(f)} ms`);const u=c.getHeight(),d=c.getWidth();if(t>=2&&console.log(\\\"[geotiff-read-bbox] image_height:\\\",u),t>=2&&console.log(\\\"[geotiff-read-bbox] image_width:\\\",d),s||(s=await xt(i)),t>=2&&console.log(\\\"[geotiff-read-bbox] geotiff_srs:\\\",s),[void 0,null,32767].includes(s)&&\\\"simple\\\"!==o)throw new Error(\\\"[geotiff-read-bbox] unable to parse SRS of geotiff\\\");\\\"number\\\"==typeof s&&(s=\\\"EPSG:\\\"+s),\\\"number\\\"==typeof o&&(o=\\\"EPSG:\\\"+o);const I=c.fileDirectory;if(!(I.ModelTransformation||I.ModelTiepoint&&I.ModelPixelScale))throw new Error(\\\"GeoTIFF doesn't have ModelTransformation nor ModelTiepoint+ModelPixelScale\\\");const p=Mt(c);t>=1&&console.log(\\\"[geotiff-read-bbox] geotransform:\\\",p);const _=Gt(p);t>=1&&console.log(\\\"[geotiff-read-bbox] affine:\\\",_);const C=St([n]);let B;if(t>=1&&console.log(\\\"[geotiff-read-bbox] proj4:\\\",typeof C),\\\"simple\\\"===o){const[t,e,i,s]=A;B=[t,c.getHeight()-s,i,c.getHeight()-e]}else{let i,a,n,r;if(s===o)t>=2&&console.log(\\\"[geotiff-read-bbox] srs of geotiff and bbox are the same!\\\"),n=A=>A,r=A=>A,i=A=>_.inverse(A),a=A=>_.forward(A);else{if(!s.includes(\\\"[\\\")&&!s.includes(\\\"+\\\")&&!C.defs[s])throw new Error(\\\"[geotiff-read-bbox] unrecognized srs: \\\"+s);if(!o.includes(\\\"[\\\")&&!o.includes(\\\"+\\\")&&!C.defs[o])throw new Error(\\\"[geotiff-read-bbox] unrecognized srs: \\\"+o);({forward:n,inverse:r}=C(s,o)),i=A=>_.inverse(r(A)),a=A=>n(_.forward(A))}B=bt(A,i,{density:e})}t>=2&&console.log(\\\"[geotiff-read-bbox] bbox_in_base_image_coords:\\\",B);let w=Nt(B,a);t>=2&&console.log(\\\"[geotiff-read-bbox] read_window:\\\",w);let[E,y]=vt(w);t>=2&&console.log(\\\"[geotiff-read-bbox] base read size:\\\",[E,y]);const Q={image:c,index:0,ratio:[1,1],read_window:w,read_height:y,read_width:E};if(r&&l&&h){t>=2&&console.log(\\\"[geotiff-read-bbox] getting image count\\\");const A=performance.now(),e=await i.getImageCount();t>=2&&console.log(\\\"[geotiff-read-bbox] image_count: \\\"+e);const s=performance.now()-A;t>=2&&console.log(`[geotiff-read-bbox] getting image count (${e}) took ${s} ms`);for(let A=1;A<e;A++){const e=await i.getImage(A);if(t>=3&&console.log(\\\"[geotiff-read-bbox] subimage:\\\",typeof e),4===e.fileDirectory.PhotometricInterpretation){t>=3&&console.log(`[geotiff-read-bbox] ignoring image ${A} because it is a transparency mask`);continue}const s=e.getHeight()/u;t>=3&&console.log(\\\"[geotiff-read-bbox] ratioX:\\\",s);const n=e.getWidth()/d;t>=3&&console.log(\\\"[geotiff-read-bbox] ratioY:\\\",n);const o=Dt(B,[s,n]);t>=3&&console.log(\\\"[geotiff-read-bbox] bbox_in_subimage_coords:\\\",o);const r=Nt(o,a);if(t>=2&&console.log(\\\"[geotiff-read-bbox] subimage_read_window:\\\",r),[E,y]=vt(r),t>=3&&console.log(\\\"[geotiff-read-bbox] read_width:\\\",E),t>=3&&console.log(\\\"[geotiff-read-bbox] read_height:\\\",y),!(y>=l&&E>=h))break;Q.image=e,Q.index=A,Q.ratio=[s,n],Q.read_height=y,Q.read_width=E,Q.read_window=r,t>=2&&console.log(\\\"[geotiff-read-bbox] selected:\\\",Q)}}const m=performance.now(),k=await Q.image.readRasters({window:Q.read_window}),x=performance.now()-m;t>=2&&console.log(\\\"[geotiff-read-bbox] reading rasters took \\\"+x.toFixed()+\\\"ms\\\"),t>=3&&console.log(\\\"[geotiff-read-bbox] data:\\\",k);const M=Dt(Q.read_window,Q.ratio.map((A=>1/A))),b=bt(M,_.forward,{density:e}),[D,v,S,G]=M,N=[D,v];t>=3&&console.log(\\\"[geotiff-read-bbox] upper_left:\\\",N);const[R,F]=_.forward(N),L=[R,p[1]/Q.ratio[0],p[2]/Q.ratio[1],F,p[4]/Q.ratio[0],p[5]/Q.ratio[1]],U=[M[0],u-M[3],M[2],u-M[1]],O={base_window:M,bbox:b,data:k,geotransform:L,height:Q.read_height,index:Q.index,image:Q.image,simple_bbox:U,srs:s,width:Q.read_width,window:Q.read_window};return[[\\\"read_bbox\\\",\\\"bbox\\\"],[\\\"selected_image_index\\\",\\\"index\\\"],[\\\"selected_image\\\",\\\"image\\\"]].forEach((([A,e])=>{Object.defineProperty(O,A,{get:()=>(t>=1&&console.log(`[geotiff-read-bbox] ${A} is deprected, please use ${e} instead`),O[e])})})),Object.defineProperty(O,\\\"read_window\\\",{get(){return t>=1&&console.log(\\\"[geotiff-read-bbox] read_window [left, bottom, top, right] is deprected, please use window [left, top, right, bottom] instead\\\"),[this.window[0],this.window[3],this.window[2],this.window[1]]}}),Object.defineProperty(O,\\\"srs_of_geotiff\\\",{get(){return t>=1&&console.log(\\\"[geotiff-read-bbox] srs_of_geotiff is deprected, please use srs instead\\\"),this.srs.startsWith(\\\"EPSG:\\\")?Number(this.srs.replace(\\\"EPSG:\\\",\\\"\\\")):this.srs}}),O}(M);s>=2&&console.log(\\\"[geotiff-tile] geotiff-read-bbox result is:\\\\n\\\",D),C&&console.log(\\\"[geotiff-tile] reading bounding box took \\\"+Math.round(performance.now()-b)+\\\"ms\\\");const v=D.data[0].constructor.name;s>=2&&console.log(\\\"[geotiff-tile] sourceArrayType:\\\\n\\\",v);const[S,G]=(()=>{switch(v){case\\\"Uint8Array\\\":return[0,255];case\\\"Int8Array\\\":return[-128,127];case\\\"Uint16Array\\\":return[0,65535];case\\\"Int16Array\\\":return[-32768,32767];case\\\"Uint32Array\\\":return[0,4294967295];case\\\"Int32Array\\\":return[-2147483648,2147483647];case\\\"Float32Array\\\":return[-34e37,34e37];case\\\"Float64Array\\\":return[-1*Number.MAX_VALUE,Number.MAX_VALUE];case\\\"BigInt64Array\\\":return[Math.pow(-2,63),Math.pow(2,63)-1];case\\\"BigUint64Array\\\":return[0,Math.pow(2,64)-1];default:return[void 0,void 0]}})();let N,R;e&&!i&&(i=4326),o!==u&&({forward:N,inverse:R}=Ft(\\\"number\\\"==typeof o?\\\"EPSG:\\\"+o:o,\\\"number\\\"==typeof u?\\\"EPSG:\\\"+u:u)),C&&console.log(\\\"[geotiff-tile] time elapsed before warping \\\"+Math.round(performance.now()-y)+\\\"ms\\\");const F=C?performance.now():0,L=I.match(/\\\\[/g).length;c=c||(\\\"auto\\\"===d?r?new Array(L).fill(\\\"Array\\\"):new Array(L-1).fill(\\\"Array\\\").concat([v]):\\\"geotiff\\\"===d?new Array(L-1).fill(\\\"Array\\\").concat([v]):new Array(L-1).fill(\\\"Array\\\")),s>=2&&console.log(\\\"[geotiff-tile] tile_array_types:\\\\n\\\",c);const U=E.map((A=>Number(A))),O=u,P={cutline:e,cutline_srs:i,cutline_forward:e?Ft(\\\"EPSG:\\\"+i,\\\"EPSG:\\\"+u).forward:void 0,debug_level:s>1?s-1:0,forward:N,inverse:R,in_data:D.data,in_bbox:\\\"simple\\\"===O?D.simple_bbox:D.bbox,in_geotransform:\\\"simple\\\"===O?null:D.geotransform,in_layout:\\\"[band][row,column]\\\",in_no_data:Rt(Q),in_srs:o,in_width:D.width,in_height:D.height,method:l,out_array_types:c,out_bbox:U,out_height:f,out_layout:I,out_pixel_depth:h,out_resolution:\\\"number\\\"==typeof p?[p,p]:p,out_srs:O,out_width:_,round:g,theoretical_max:G,theoretical_min:S,expr:r,turbo:w};s>=2&&console.log(\\\"[geotiff-tile] geowarp_options:\\\\n\\\",P);const{data:T,...H}=await mt(P);return C&&console.log(\\\"[geotiff-tile] geowarp took \\\"+Math.round(performance.now()-F)+\\\"ms\\\"),C&&console.log(\\\"[geotiff-tile] took \\\"+Math.round(performance.now()-y)+\\\"ms\\\"),s>=1&&(H.readResult=D),{height:f,tile:T,width:_,extra:H}}catch(A){throw console.log(\\\"[geotiff-tile] failed to create tile\\\"),console.log(\\\"[geotiff-tile] bbox_in_tile_srs: \\\",E),console.log(\\\"[geotiff-tile] tile_height:\\\",f),console.log(\\\"[geotiff-tile] tile_width;\\\",_),console.log(\\\"[geotiff-tile] tile_srs:\\\",u),console.log(\\\"[geotiff-tile] use_overview:\\\",B),console.error(\\\"[geotiff-tile] error:\\\",A),A}}\\\"object\\\"==typeof window&&(window.geotiff_tile={createTile:Ut}),\\\"object\\\"==typeof self&&(self.geotiff_tile={createTile:Ut});const Ot=new Qt({maxSize:10});try{const A={clear_cache:async function({debug_level:A=0}={}){A>=1&&console.log(\\\"[geotiff-tile-web-worker/worker.mjs:_clear_cache] clearing cache\\\"),Ot.clear()},create_tile:async function(A){const{debug_level:t}=A;try{const{url:e}=A;t>=1&&console.log(\\\"[geotiff-tile-web-worker/worker.mjs:_create_tile] creating tile from \\\"+e),Ot.has(e)?t>=1&&console.log(\\\"[geotiff-tile-web-worker/worker.mjs:_create_tile] url in cache\\\"):(t>=1&&console.log(\\\"[geotiff-tile-web-worker/worker.mjs:_create_tile] url not in cache so fetching geotiff metadata\\\"),Ot.set(e,async function(A,t={},e){return yt.fromSource(pt(A,t),e)}(e)));const i=await Ot.get(e);t>=3&&console.log(\\\"[geotiff-tile-web-worker/worker.mjs:_create_tile] geotiff:\\\",i);const s=((A,t)=>{const e={};return[\\\"bbox\\\",\\\"bbox_srs\\\",\\\"cutline\\\",\\\"cutline_srs\\\",\\\"debug_level\\\",\\\"expr\\\",\\\"geotiff_srs\\\",\\\"method\\\",\\\"pixel_depth\\\",\\\"round\\\",\\\"tile_array_types\\\",\\\"tile_height\\\",\\\"tile_srs\\\",\\\"tile_array_types_strategy\\\",\\\"tile_layout\\\",\\\"timed\\\",\\\"tile_width\\\",\\\"use_overview\\\",\\\"turbo\\\"].forEach((t=>{e[t]=A[t]})),e})(A);s.debug_level&&s.debug_level--,s.geotiff=i,t>=3&&console.log(\\\"[geotiff-tile-web-worker:onmessage] cleaned_params:\\\",s);const a=await Ut(s);return t>=3&&console.log(\\\"[geotiff-tile-web-worker:onmessage] create_geotiff_tile returned:\\\",a),a}catch(A){throw console.error(A),A}},set_max_cache_size:async function({debug_level:A=0}={}){A>=1&&console.log(\\\"[geotiff-tile-web-worker/worker.mjs:_set_max_cache_size] resizing cache to\\\",data),Ot.resize(data)}};Pt=A,Ht=(Tt={batch_size:1/0,batch_wait:100})&&\\\"number\\\"==typeof Tt.batch_size?Tt.batch_size:1,Jt=Tt&&\\\"number\\\"==typeof Tt.batch_wait?Tt.batch_wait:1/0,qt=Tt&&Tt.debug_level,zt={},jt=function(){var A=r(h().mark((function A(t){var e,i,o,l,g,d,C,B,w,E,y,Q;return h().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(e=t.data,qt>=2&&console.log(\\\"[microlink.expose] received message data\\\",e),!(Array.isArray(e)&&e.length>=1&&\\\"2.0\\\"===e[0].jsonrpc&&e[0].method)){A.next=11;break}if(qt>=2&&console.log(\\\"[microlink.call] top thread received batch request\\\"),zt){A.next=6;break}throw new Error(\\\"[microlink.call] no callable functions\\\");case 6:return A.next=8,Promise.all(e.map(function(){var A=r(h().mark((function A(t){var e;return h().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(\\\"function\\\"==typeof zt[t.method]){A.next=2;break}return A.abrupt(\\\"return\\\",_({id:t.id,method:t.method}));case 2:return A.prev=2,A.next=5,zt[t.method].apply(zt,n(t.params));case 5:return e=A.sent,A.abrupt(\\\"return\\\",{jsonrpc:\\\"2.0\\\",result:e,id:t.id});case 9:return A.prev=9,A.t0=A.catch(2),A.abrupt(\\\"return\\\",p({id:l,error:A.t0}));case 12:case\\\"end\\\":return A.stop()}}),A,null,[[2,9]])})));return function(t){return A.apply(this,arguments)}}()));case 8:return i=A.sent,qt>=2&&console.log(\\\"[microlink.call] exposed thread posting results to main thread:\\\",i),A.abrupt(\\\"return\\\",postMessage(i));case 11:if(\\\"object\\\"===a(e)){A.next=13;break}return A.abrupt(\\\"return\\\");case 13:if(\\\"2.0\\\"===e.jsonrpc){A.next=15;break}return A.abrupt(\\\"return\\\");case 15:if(e.method){A.next=17;break}return A.abrupt(\\\"return\\\");case 17:if(o=t.data,l=o.id,g=o.method,d=o.params,\\\"microlink.list\\\"!==g){A.next=21;break}return qt>=2&&console.log(\\\"[microlink.expose] posting method names\\\",e),A.abrupt(\\\"return\\\",postMessage({jsonrpc:\\\"2.0\\\",result:Object.keys(Pt),id:l}));case 21:if(\\\"function\\\"==typeof Pt[g]){A.next=24;break}return qt>=2&&console.error(\\\"[microlink.expose] method not found: \\\"+g),A.abrupt(\\\"return\\\",postMessage(_({id:l,method:g})));case 24:return A.prev=24,C=I(self,d,2,{batch_size:Ht,batch_wait:Jt}),A.next=28,Pt[g].apply(Pt,n(C));case 28:return B=A.sent,w=u(B,{function_prefix:c,promise_prefix:f}),E=s(w,2),y=E[0],Q=E[1],qt>=2&&console.log(\\\"[microlink.expose]\\\",g,\\\"result\\\",B,\\\"serialized to\\\",[y,Q]),Object.assign(zt,Q),qt>=2&&console.log(\\\"[microlink.expose] posting serialized result for \\\"+g+\\\": \\\"+JSON.stringify(y)),A.abrupt(\\\"return\\\",postMessage({jsonrpc:\\\"2.0\\\",result:y,id:l}));case 36:return A.prev=36,A.t0=A.catch(24),console.error(\\\"[microlink.expose] error:\\\",A.t0),A.abrupt(\\\"return\\\",postMessage(p({error:A.t0,id:l})));case 40:case\\\"end\\\":return A.stop()}}),A,null,[[24,36]])})));return function(t){return A.apply(this,arguments)}}(),addEventListener(\\\"message\\\",(function(A){setTimeout((function(){return jt(A)}),0)}))}catch(A){console.error(A)}var Pt,Tt,Ht,Jt,qt,zt,jt})(),i})()));\" };", "const wrap = require(\"microlink/esm/wrap.js\").default;\nconst FrameWorker = require(\"frame-worker\");\nconst { prepareData, prepareUpdate } = require(\"xdim\");\nconst { workerString } = require(\"./worker-string.prod.js\");\n\nconst DEFAULT_TILE_LAYOUT = \"[band][row,column]\";\n\nconst absolutify = url => {\n  if (url.startsWith(\"/\")) {\n    return location.origin + url;\n  } else if (url.startsWith(\"./\")) {\n    return location.href.split(\"/\").slice(0, -1).join(\"/\") + \"/\" + url.replace(/^\\.\\//, \"\");\n  } else {\n    return url;\n  }\n};\n\nasync function createWorker(options) {\n  const debug_level = typeof options === \"object\" && typeof options.debug_level === \"number\" ? options.debug_level : 0;\n  const useFrameWorker = typeof options === \"object\" && options.iframe === true;\n  if (debug_level >= 1) console.log(\"[geotiff-tile-web-worker:createWorker] useFrameWorker is \" + useFrameWorker);\n  const WebWorker = useFrameWorker === false && typeof Worker === \"function\" ? Worker : FrameWorker;\n  if (debug_level >= 1) console.log(\"[geotiff-tile-web-worker:createWorker] WebWorker:\", WebWorker);\n  const maxTiles = typeof options === \"object\" && typeof options.maxTiles === \"number\" ? options.maxTiles : Infinity;\n  if (debug_level >= 1) console.log(\"[geotiff-tile-web-worker:createWorker] debug level is \" + debug_level);\n\n  const blob = new Blob([workerString], { type: \"text/javascript\" });\n  if (debug_level >= 2) console.log(\"[geotiff-tile-web-worker/index.js:createWorker] created blob from worker string:\", blob);\n\n  const blobURL = URL.createObjectURL(blob);\n  const worker = new WebWorker(blobURL);\n  if (debug_level >= 2) console.log(\"[geotiff-tile-web-worker/index.js:createWorker] worker:\", worker);\n\n  const wrapfn = wrap.default || wrap;\n  if (debug_level >= 2) console.log(\"[geotiff-tile-web-worker/index.js:createWorker] wrapfn:\", wrapfn);\n  const obj = await wrapfn(worker, { debug_level: debug_level - 1 });\n  if (debug_level >= 2) console.log(\"[geotiff-tile-web-worker/index.js:createWorker] obj:\", obj);\n\n  worker.clearCache = obj.clear_cache;\n  worker.setMaxCacheSize = obj.set_max_cache_size;\n\n  worker.createTile = async function ({ url, ...rest }) {\n    // intercept expr and apply in current thread\n    if (typeof rest.expr === \"function\") {\n      const { debug_level, tile_layout = DEFAULT_TILE_LAYOUT, expr, tile_array_types } = rest;\n\n      const time_before_create_tile = performance.now();\n      let {\n        tile: temp_tile,\n        height,\n        width,\n        extra\n      } = await obj.create_tile({\n        url: absolutify(url),\n        ...rest,\n        expr: undefined,\n        tile_layout: \"[row][column][band]\",\n        tile_array_types: undefined\n      });\n      const time_after_create_time = performance.now();\n      if (debug_level >= 2) {\n        console.log(\n          \"[geotiff-tile-web-worker] creating initial tile (before applying expr) took \" + Math.round(time_after_create_time - time_before_create_tile) + \" ms\"\n        );\n      }\n\n      const time_expr_start = performance.now();\n\n      const sizes = {\n        band: extra.out_bands.length,\n        row: height,\n        column: width\n      };\n\n      const { data: tile } = prepareData({\n        layout: tile_layout,\n        sizes,\n        arrayTypes: tile_array_types\n      });\n\n      const update = prepareUpdate({\n        data: tile,\n        layout: tile_layout,\n        sizes\n      });\n\n      const num_bands = sizes.band;\n      for (let row = 0; row < height; row++) {\n        for (let column = 0; column < width; column++) {\n          const pixel = temp_tile[row][column];\n          const values = expr({ pixel });\n          for (let band = 0; band < num_bands; band++) {\n            update({\n              point: {\n                band,\n                row,\n                column\n              },\n              value: values[band]\n            });\n          }\n        }\n      }\n      const time_expr_end = performance.now();\n      if (debug_level >= 2) console.log(\"[geotiff-tile-web-worker] applying expr took \" + Math.round(time_expr_end - time_expr_start) + \" ms\");\n\n      return { tile, height, layout: tile_layout, width };\n    } else {\n      const result = obj.create_tile({ url: absolutify(url), ...rest });\n      if (result === undefined) throw new Error(\"[geotiff-tile-web-worker] create_tile returned undefined\");\n      return result;\n    }\n  };\n\n  if (debug_level >= 2) console.log(\"[geotiff-tile-web-worker/index.js:createWorker] wrapped worker:\", worker);\n\n  return worker;\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return { createWorker };\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = { createWorker };\n}\n\nif (typeof self === \"object\") {\n  self.geotiff_tile_web_worker = { createWorker };\n}\n\nif (typeof window === \"object\") {\n  window.geotiff_tile_web_worker = { createWorker };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parse;\nvar _getEpsgCode = _interopRequireDefault(require(\"get-epsg-code\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nasync function parse(geotiff) {\n  const image = await geotiff.getImage();\n  const geoKeys = await image.getGeoKeys();\n  const {\n    ProjectedCSTypeGeoKey\n  } = geoKeys;\n  // check if projected\n  if (typeof ProjectedCSTypeGeoKey === \"number\" && ProjectedCSTypeGeoKey !== 32767 && ProjectedCSTypeGeoKey <= 32760) {\n    return ProjectedCSTypeGeoKey;\n  }\n  const {\n    GeographicTypeGeoKey\n  } = geoKeys;\n  // check if geographic\n  if (typeof GeographicTypeGeoKey === \"number\" && typeof ProjectedCSTypeGeoKey !== \"number\") {\n    return GeographicTypeGeoKey;\n  }\n  const {\n    PCSCitationGeoKey\n  } = geoKeys;\n  if (PCSCitationGeoKey && PCSCitationGeoKey.includes(\"ESRI PE String\")) {\n    const citation = PCSCitationGeoKey.split(\"\\x00\").find(it => it.startsWith(\"ESRI PE String\"));\n    const esri_wkt = citation.replace(\"ESRI PE String = \", \"\");\n    const code = await (0, _getEpsgCode.default)(esri_wkt);\n    if (code) {\n      return code;\n    }\n  }\n}\n\nmodule.exports = exports.default; module.exports.default = exports.default;\n", "function geotransform(image, { debug = false } = { debug: false }) {\n  const fd = image.fileDirectory;\n  if (fd.ModelTransformation) {\n    const [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p] = fd.ModelTransformation;\n    return [d, a, b, h, e, f];\n  } else if (fd.ModelTiepoint && !fd.ModelPixelScale) {\n    if (debug) console.log(\"[geotiff-geotransform] missing ModelPixelScaleTag\");\n  } else if (fd.ModelPixelScale && !fd.ModelTiepoint) {\n    if (debug) console.log(\"[geotiff-geotransform] missing ModelTiepointTag\");\n  } else if (fd.ModelTiepoint && fd.ModelPixelScale) {\n    const [i, j, k, x, y, z] = fd.ModelTiepoint;\n    if (debug) {\n      if (i !== 0) console.log(\"[geotiff-geotransform] unexpected i value in ModelTiepoint: \" + i);\n      if (j !== 0) console.log(\"[geotiff-geotransform] unexpected j value in ModelTiepoint: \" + j);\n      if (k !== 0) console.log(\"[geotiff-geotransform] unexpected k value in ModelTiepoint: \" + k);\n    }\n    const [scaleX, scaleY, scaleZ] = fd.ModelPixelScale;\n    return [x, scaleX, 0, y, 0, -1 * scaleY];\n  }\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function () {\n    return geotransform;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = geotransform;\n  module.exports.default = geotransform;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = geotiff_read_bbox;\nexports.snap_to_read_window = snap_to_read_window;\nvar _geotiffEpsgCode = _interopRequireDefault(require(\"geotiff-epsg-code\"));\nvar _geotiffGeotransform = _interopRequireDefault(require(\"geotiff-geotransform\"));\nvar _reproject = _interopRequireDefault(require(\"bbox-fns/reproject.js\"));\nvar _scale = _interopRequireDefault(require(\"bbox-fns/scale.js\"));\nvar _intersect = _interopRequireDefault(require(\"bbox-fns/intersect.js\"));\nvar _bboxSize = _interopRequireDefault(require(\"bbox-fns/bbox-size.js\"));\nvar _proj4Collect = _interopRequireDefault(require(\"proj4-collect\"));\nvar _Geotransform = _interopRequireDefault(require(\"geoaffine/Geotransform.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n// convert ij bbox to read window used by geotiff.js\nfunction snap_to_read_window([xmin, ymin, xmax, ymax], padding) {\n  const [padX, padY] = padding || [0, 0];\n  return [Math.floor(xmin) - padX, Math.floor(ymin) - padY, Math.ceil(xmax) + padX, Math.ceil(ymax) + padY];\n}\nasync function geotiff_read_bbox({\n  bbox,\n  clamp = false,\n  debug_level = 0,\n  density = 100,\n  fill_value,\n  geotiff,\n  geotiff_srs,\n  padding,\n  proj4: custom_proj4,\n  srs: srs_of_bbox,\n  use_overview = false,\n  target_height,\n  target_width,\n  signal\n}) {\n  if (debug_level >= 1) console.log(\"[geotiff-read-bbox] starting\");\n  if (signal && signal.aborted) throw new Error(\"[geotiff-read-bbox] operation aborted\");\n  if (geotiff === null) throw new Error(\"[geotiff-read-bbox] geotiff is null\");\n  if (geotiff === undefined) throw new Error(\"[geotiff-read-bbox] geotiff is undefined\");\n  const start_get_image = performance.now();\n  const image = await geotiff.getImage();\n  const duration_get_image = performance.now() - start_get_image;\n  if (debug_level >= 2) {\n    console.log(`[geotiff-read-bbox] getting first image took ${Math.round(duration_get_image)} ms`);\n  }\n  const image_height = image.getHeight();\n  const image_width = image.getWidth();\n  if (debug_level >= 2) console.log(\"[geotiff-read-bbox] image_height:\", image_height);\n  if (debug_level >= 2) console.log(\"[geotiff-read-bbox] image_width:\", image_width);\n  if (!geotiff_srs) geotiff_srs = await (0, _geotiffEpsgCode.default)(geotiff);\n  if (debug_level >= 2) console.log(\"[geotiff-read-bbox] geotiff_srs:\", geotiff_srs);\n  if ([undefined, null, 32767].includes(geotiff_srs) && srs_of_bbox !== \"simple\") {\n    throw new Error(\"[geotiff-read-bbox] unable to parse SRS of geotiff\");\n  }\n  // normalize srs information\n  if (typeof geotiff_srs === \"number\") geotiff_srs = \"EPSG:\" + geotiff_srs;\n  if (typeof srs_of_bbox === \"number\") srs_of_bbox = \"EPSG:\" + srs_of_bbox;\n  const fd = image.fileDirectory;\n  if (!(fd.ModelTransformation || fd.ModelTiepoint && fd.ModelPixelScale)) {\n    throw new Error(\"GeoTIFF doesn't have ModelTransformation nor ModelTiepoint+ModelPixelScale\");\n  }\n  const geotransform = (0, _geotiffGeotransform.default)(image);\n  if (debug_level >= 1) console.log(\"[geotiff-read-bbox] geotransform:\", geotransform);\n  const affine = (0, _Geotransform.default)(geotransform);\n  if (debug_level >= 1) console.log(\"[geotiff-read-bbox] affine:\", affine);\n  const proj4 = (0, _proj4Collect.default)([custom_proj4]);\n  if (debug_level >= 1) console.log(\"[geotiff-read-bbox] proj4:\", typeof proj4);\n  let bbox_in_base_image_coords;\n  if (srs_of_bbox === \"simple\") {\n    const [xmin, ymin, xmax, ymax] = bbox;\n    bbox_in_base_image_coords = [xmin, image.getHeight() - ymax,\n    // how many pixels from top of geotiff,\n    xmax, image.getHeight() - ymin // how many pixels from top of geotiff\n    ];\n  } else {\n    let convert_from_srs_of_bbox_to_px_of_geotiff;\n    let convert_from_px_of_geotiff_to_srs_of_bbox;\n    let convert_from_srs_of_geotiff_to_srs_of_bbox;\n    let convert_from_srs_of_bbox_to_srs_of_geotiff;\n    if (geotiff_srs === srs_of_bbox) {\n      if (debug_level >= 2) console.log(\"[geotiff-read-bbox] srs of geotiff and bbox are the same!\");\n      convert_from_srs_of_geotiff_to_srs_of_bbox = pt => pt;\n      convert_from_srs_of_bbox_to_srs_of_geotiff = pt => pt;\n      convert_from_srs_of_bbox_to_px_of_geotiff = xy => affine.inverse(xy);\n      convert_from_px_of_geotiff_to_srs_of_bbox = ij => affine.forward(ij);\n    } else {\n      // check if srs is in proj4 defs if not wkt nor proj4 string\n      if (!geotiff_srs.includes(\"[\") && !geotiff_srs.includes(\"+\") && !proj4.defs[geotiff_srs]) throw new Error(\"[geotiff-read-bbox] unrecognized srs: \" + geotiff_srs);\n      if (!srs_of_bbox.includes(\"[\") && !srs_of_bbox.includes(\"+\") && !proj4.defs[srs_of_bbox]) throw new Error(\"[geotiff-read-bbox] unrecognized srs: \" + srs_of_bbox);\n      ({\n        forward: convert_from_srs_of_geotiff_to_srs_of_bbox,\n        inverse: convert_from_srs_of_bbox_to_srs_of_geotiff\n      } = proj4(geotiff_srs, srs_of_bbox));\n      convert_from_srs_of_bbox_to_px_of_geotiff = xy => affine.inverse(convert_from_srs_of_bbox_to_srs_of_geotiff(xy));\n      convert_from_px_of_geotiff_to_srs_of_bbox = ij => convert_from_srs_of_geotiff_to_srs_of_bbox(affine.forward(ij));\n    }\n\n    // convert bounding box in arbitrary spatial reference system to image coordinates in geotiff\n    bbox_in_base_image_coords = (0, _reproject.default)(bbox, convert_from_srs_of_bbox_to_px_of_geotiff, {\n      density,\n      nan_strategy: \"skip\"\n    });\n  }\n  if (debug_level >= 2) console.log(\"[geotiff-read-bbox] bbox_in_base_image_coords:\", bbox_in_base_image_coords);\n\n  // read window as used by geotiff.js\n  let read_window = snap_to_read_window(bbox_in_base_image_coords, padding);\n  if (debug_level >= 2) console.log(\"[geotiff-read-bbox] read_window:\", read_window);\n  let [read_width, read_height] = (0, _bboxSize.default)(read_window);\n  if (debug_level >= 2) console.log(\"[geotiff-read-bbox] base read size:\", [read_width, read_height]);\n  const selected = {\n    image,\n    image_height,\n    image_width,\n    index: 0,\n    ratio: [1, 1],\n    read_window,\n    read_height,\n    read_width\n  };\n  if (use_overview && target_height && target_width) {\n    // figure out ratio between actual raw width and desired width\n    if (debug_level >= 2) console.log(\"[geotiff-read-bbox] getting image count\");\n    const start_get_image_count = performance.now();\n    const image_count = await geotiff.getImageCount();\n    if (debug_level >= 2) console.log(\"[geotiff-read-bbox] image_count: \" + image_count);\n    const duration_get_image_count = performance.now() - start_get_image_count;\n    if (debug_level >= 2) {\n      console.log(`[geotiff-read-bbox] getting image count (${image_count}) took ${duration_get_image_count} ms`);\n    }\n    for (let i = 1; i < image_count; i++) {\n      const subimage = await geotiff.getImage(i);\n      if (debug_level >= 3) console.log(\"[geotiff-read-bbox] subimage:\", typeof subimage);\n      if (subimage.fileDirectory.PhotometricInterpretation === 4) {\n        if (debug_level >= 3) console.log(`[geotiff-read-bbox] ignoring image ${i} because it is a transparency mask`);\n        continue;\n      }\n\n      // from 0 to 1\n      const ratioX = subimage.getHeight() / image_height;\n      if (debug_level >= 3) console.log(\"[geotiff-read-bbox] ratioX:\", ratioX);\n      const ratioY = subimage.getWidth() / image_width;\n      if (debug_level >= 3) console.log(\"[geotiff-read-bbox] ratioY:\", ratioY);\n      const bbox_in_subimage_coords = (0, _scale.default)(bbox_in_base_image_coords, [ratioX, ratioY]);\n      if (debug_level >= 3) console.log(\"[geotiff-read-bbox] bbox_in_subimage_coords:\", bbox_in_subimage_coords);\n      const subimage_read_window = snap_to_read_window(bbox_in_subimage_coords, padding);\n      if (debug_level >= 2) console.log(\"[geotiff-read-bbox] subimage_read_window:\", subimage_read_window);\n\n      // how many pixels we would clip from the current image\n      [read_width, read_height] = (0, _bboxSize.default)(subimage_read_window);\n      if (debug_level >= 3) console.log(\"[geotiff-read-bbox] read_width:\", read_width);\n      if (debug_level >= 3) console.log(\"[geotiff-read-bbox] read_height:\", read_height);\n      if (read_height >= target_height && read_width >= target_width) {\n        selected.image = subimage;\n        selected.image_height = subimage.getHeight();\n        selected.image_width = subimage.getWidth();\n        selected.index = i;\n        selected.ratio = [ratioX, ratioY];\n        selected.read_height = read_height;\n        selected.read_width = read_width;\n        selected.read_window = subimage_read_window;\n        if (debug_level >= 2) console.log(\"[geotiff-read-bbox] selected:\", selected);\n      } else {\n        break;\n      }\n    }\n  }\n  const start_read_rasters = performance.now();\n  let data;\n  if (debug_level >= 3) console.log(\"[geotiff-read-bbox] selected:\", selected);\n  const [left, top, right, bottom] = selected.read_window;\n  if (right <= 0 || bottom <= 0 || left >= selected.image_width || top >= selected.image_height) {\n    // totally outside raster, so skip geotiff.js\n    const depth = image.getSamplesPerPixel();\n    const read_area = selected.read_width * selected.read_height;\n    data = [];\n    for (let b = 0; b < depth; b++) data.push(new Array(read_area).fill(fill_value));\n  } else {\n    if (clamp) {\n      if (debug_level >= 2) console.log(\"[geotiff-read-bbox] clamping\");\n      selected.read_window = (0, _intersect.default)(selected.read_window, [0, 0, selected.image_width, selected.image_height]);\n      [read_width, read_height] = (0, _bboxSize.default)(selected.read_window);\n      selected.read_height = read_height;\n      selected.read_width = read_width;\n    }\n    if (debug_level >= 2) console.log(\"[geotiff-read-bbox] reading \", selected.read_window);\n    data = await selected.image.readRasters({\n      fillValue: fill_value,\n      window: selected.read_window,\n      signal\n    });\n  }\n  const duration_read_rasters = performance.now() - start_read_rasters;\n  if (debug_level >= 2) {\n    console.log(\"[geotiff-read-bbox] reading rasters took \" + duration_read_rasters.toFixed() + \"ms\");\n  }\n  if (debug_level >= 3) console.log(\"[geotiff-read-bbox] data:\", data);\n  const unscaled_read_window = (0, _scale.default)(selected.read_window, selected.ratio.map(n => 1 / n));\n  const read_bbox = (0, _reproject.default)(unscaled_read_window, affine.forward, {\n    density\n  });\n\n  // create geotransform equation for current data\n  const [scaled_left, scaled_top, scaled_right, scaled_bottom] = unscaled_read_window;\n  const upper_left = [scaled_left, scaled_top];\n  if (debug_level >= 3) console.log(\"[geotiff-read-bbox] upper_left:\", upper_left);\n  const [upper_left_x, upper_left_y] = affine.forward(upper_left);\n  const read_geotransform = [upper_left_x, geotransform[1] / selected.ratio[0], geotransform[2] / selected.ratio[1], upper_left_y, geotransform[4] / selected.ratio[0], geotransform[5] / selected.ratio[1]];\n  const simple_bbox = [unscaled_read_window[0], image_height - unscaled_read_window[3], unscaled_read_window[2], image_height - unscaled_read_window[1]];\n  const result = {\n    base_window: unscaled_read_window,\n    bbox: read_bbox,\n    data,\n    geotransform: read_geotransform,\n    height: selected.read_height,\n    index: selected.index,\n    image: selected.image,\n    simple_bbox,\n    srs: geotiff_srs,\n    width: selected.read_width,\n    window: selected.read_window\n  };\n  [[\"read_bbox\", \"bbox\"], [\"selected_image_index\", \"index\"], [\"selected_image\", \"image\"]].forEach(([_from, _to]) => {\n    Object.defineProperty(result, _from, {\n      get() {\n        if (debug_level >= 1) console.log(`[geotiff-read-bbox] ${_from} is deprected, please use ${_to} instead`);\n        return result[_to];\n      }\n    });\n  });\n  Object.defineProperty(result, \"read_window\", {\n    get() {\n      if (debug_level >= 1) {\n        console.log(\"[geotiff-read-bbox] read_window [left, bottom, top, right] is deprected, please use window [left, top, right, bottom] instead\");\n      }\n      return [this.window[0], this.window[3], this.window[2], this.window[1]];\n    }\n  });\n  Object.defineProperty(result, \"srs_of_geotiff\", {\n    get() {\n      if (debug_level >= 1) console.log(\"[geotiff-read-bbox] srs_of_geotiff is deprected, please use srs instead\");\n      return this.srs.startsWith(\"EPSG:\") ? Number(this.srs.replace(\"EPSG:\", \"\")) : this.srs;\n    }\n  });\n  return result;\n}\n\nmodule.exports = exports.default; module.exports.default = exports.default;\n", "function getPreciseNoDataValue(data, options) {\n  if (data.fileDirectory) data = data.fileDirectory;\n  if (data.GDAL_NODATA) data = data.GDAL_NODATA;\n  if (typeof data !== \"string\") return undefined;\n\n  if (options && options.raw) return data;\n\n  data = data.replace(\"\\u0000\", \"\").trim();\n\n  if ([\"-inf\", \"-infinity\"].includes(data)) {\n    return \"-Infinity\";\n  }\n\n  if ([\"+inf\", \"inf\", \"+infinity\", \"infinity\"].includes(data)) {\n    return \"Infinity\";\n  }\n\n  // remove preceding plus\n  data = data.replace(/^\\+/, \"\");\n\n  return data;\n}\n\nif (typeof module === \"object\") {\n  module.exports = getPreciseNoDataValue;\n  module.exports.default = getPreciseNoDataValue;\n  module.exports.getPreciseNoDataValue = getPreciseNoDataValue;\n}\n", "const get_precise_no_data_value = require(\"geotiff-precise-no-data\");\n\nfunction getNoDataNumber(image) {\n  const precise_no_data_value = get_precise_no_data_value(image);\n  if (typeof precise_no_data_value === undefined) return;\n  const no_data_value = Number(precise_no_data_value);\n  if (isNaN(no_data_value)) return;\n  return no_data_value;\n}\n\nif (typeof define === \"function\" && define.amd) {\n  define(function() { return getNoDataNumber; });\n}\n\nif (typeof module === \"object\") {\n  module.exports = getNoDataNumber;\n  module.exports.default = getNoDataNumber;\n}\n\nif (typeof window === \"object\") {\n  window.getNoDataNumber = getNoDataNumber;\n}\n\nif (typeof self === \"object\") {\n  self.getNoDataNumber = getNoDataNumber;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTile;\nvar _geowarp = _interopRequireDefault(require(\"geowarp\"));\nvar _geotiffReadBbox = _interopRequireDefault(require(\"geotiff-read-bbox\"));\nvar _geotiffEpsgCode = _interopRequireDefault(require(\"geotiff-epsg-code\"));\nvar _geotiffNoData = _interopRequireDefault(require(\"geotiff-no-data\"));\nvar _geotiffGeotransform = _interopRequireDefault(require(\"geotiff-geotransform\"));\nvar _Geotransform = _interopRequireDefault(require(\"geoaffine/Geotransform.js\"));\nvar _proj4FullyLoaded = _interopRequireDefault(require(\"proj4-fully-loaded\"));\nvar _reproject = _interopRequireDefault(require(\"bbox-fns/reproject.js\"));\nvar _reprojectBbox = _interopRequireDefault(require(\"reproject-bbox\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// import { rawToRgb } from \"pixel-utils\";\n\n// import snap_bbox from \"snap-bbox\";\n\nasync function createTile({\n  // bands,\n  bbox,\n  bbox_srs = 4326,\n  cutline,\n  cutline_srs = 4326,\n  debug_level = 0,\n  density = 100,\n  geotiff,\n  geotiff_srs,\n  expr: _expr,\n  // fit = false,\n  method,\n  pixel_depth,\n  round,\n  tile_array_types,\n  tile_height = 256,\n  tile_srs = 3857,\n  // epsg code of the output tile\n  tile_array_types_strategy = \"auto\",\n  tile_layout = \"[band][row,column]\",\n  tile_resolution = [1, 1],\n  tile_width = 256,\n  timed = false,\n  use_overview = true,\n  turbo = false\n}) {\n  let bbox_in_tile_srs;\n  try {\n    const start_time = timed ? performance.now() : 0;\n    if (!bbox) throw new Error(\"[geotiff-tile] you must provide bbox\");\n    if (isNaN(tile_height)) throw new Error(\"[geotiff-tile] tile_height is NaN\");\n    if (isNaN(tile_width)) throw new Error(\"[geotiff-tile] tile_width is NaN\");\n    const image = await geotiff.getImage(0);\n    const image_height = image.getHeight();\n    const bbox_nums = [Number(bbox[0]), Number(bbox[1]), Number(bbox[2]), Number(bbox[3])];\n    if (debug_level >= 1) console.log(\"bbox_nums:\", bbox_nums);\n    if (!geotiff_srs) {\n      const start_get_geotiff_epsg_code = timed ? performance.now() : 0;\n      geotiff_srs = await (0, _geotiffEpsgCode.default)(geotiff);\n      if (timed) console.log(\"[geotiff-tile] parsing epsg code took \" + Math.round(performance.now() - start_get_geotiff_epsg_code) + \"ms\");\n    }\n    if (debug_level >= 1) console.log(\"[geotiff-tile] geotiff_srs:\", geotiff_srs);\n    if (!geotiff_srs) {\n      throw new Error(\"[geotiff-tile] unfortunately we weren't able to parse an EPSG code from the GeoTIFF metadata. \" + \"Unfortunately, this library does not currently support reading tiles from GeoTIFF files with custom projections. \" + \"We hope to add this support in the future, per time and funding.\");\n    }\n\n    // const image = await geotiff.getImage();\n\n    const start_bbox_in_tile_srs = timed ? performance.now() : 0;\n    bbox_in_tile_srs = (() => {\n      if (tile_srs === bbox_srs) {\n        return bbox;\n      } else if (bbox_srs === \"simple\") {\n        // if bbox_srs is simple, use srs of geotiff\n        const geotransform = (0, _geotiffGeotransform.default)(image);\n        const affine = (0, _Geotransform.default)(geotransform);\n        const [xmin, ymin, xmax, ymax] = bbox_nums;\n\n        // flip y-axis\n        const image_bbox = [xmin, image_height - ymax, xmax, image_height - ymin];\n        const bbox_in_geotiff_srs = (0, _reproject.default)(image_bbox, affine.forward, {\n          async: false,\n          density: 0 // standard 6-param geoaffine transformations won't lead to curved lines\n        });\n        if (debug_level >= 1) console.log(\"bbox_in_geotiff_srs:\", bbox_in_geotiff_srs);\n        if (geotiff_srs === tile_srs) {\n          return bbox_in_geotiff_srs;\n        } else {\n          return (0, _reprojectBbox.default)({\n            bbox: bbox_in_geotiff_srs,\n            density,\n            from: geotiff_srs,\n            to: tile_srs\n          });\n        }\n      } else {\n        if (debug_level >= 1) console.log(`reprojecting bbox from \"${bbox_srs}\" to \"${tile_srs}\"`);\n        return (0, _reprojectBbox.default)({\n          bbox: bbox_nums,\n          density,\n          from: bbox_srs,\n          to: tile_srs\n        });\n      }\n    })();\n    if (debug_level >= 1) console.log(\"bbox_in_tile_srs:\", bbox_in_tile_srs);\n    if (timed) console.log(\"[geotiff-tile] getting bbox_in_tile_srs took \" + Math.round(performance.now() - start_bbox_in_tile_srs) + \"ms\");\n\n    // // snap the bounding box, so we get extra padding\n    // const snapped = snap_bbox({\n    //   bbox: bbox_in_tile_srs,\n    //   origin: image.getOrigin(),\n    //   scale: image.getResolution(),\n    //   padding: [10, 10],\n    //   container: image.getBoundingBox()\n    // });\n    // console.log(\"snapped:\", snapped);\n    // const read_bbox = snapped.bbox_in_coordinate_system;\n\n    // read data from geotiff\n    const readBoundingBoxOptions = (() => {\n      if (bbox_srs === \"simple\" && tile_srs === geotiff_srs) {\n        // not reprojecting the bbox, so just use the simple image coordinates\n        // this helps avoid floating point arithmetic imprecision with using\n        // the result from the affine transformation\n        return {\n          bbox: bbox_nums,\n          debugLevel: debug_level,\n          srs: \"simple\",\n          geotiff,\n          use_overview,\n          target_height: tile_height,\n          target_width: tile_width\n        };\n      } else {\n        return {\n          bbox: bbox_in_tile_srs,\n          debugLevel: debug_level,\n          srs: tile_srs,\n          geotiff,\n          use_overview,\n          target_height: tile_height,\n          target_width: tile_width\n        };\n      }\n    })();\n    if (debug_level >= 2) console.log(\"[geotiff-tile] calling readBoundingBox with:\\n\", readBoundingBoxOptions);\n    const start_read_bbox = timed ? performance.now() : 0;\n    const readResult = await (0, _geotiffReadBbox.default)(readBoundingBoxOptions);\n    if (debug_level >= 2) console.log(\"[geotiff-tile] geotiff-read-bbox result is:\\n\", readResult);\n    if (timed) console.log(\"[geotiff-tile] reading bounding box took \" + Math.round(performance.now() - start_read_bbox) + \"ms\");\n    const sourceArrayType = readResult.data[0].constructor.name;\n    if (debug_level >= 2) console.log(\"[geotiff-tile] sourceArrayType:\\n\", sourceArrayType);\n    const [theoretical_min, theoretical_max] = (() => {\n      switch (sourceArrayType) {\n        case \"Uint8Array\":\n          return [0, 255];\n        case \"Int8Array\":\n          return [-128, 127];\n        case \"Uint16Array\":\n          return [0, 65535];\n        case \"Int16Array\":\n          return [-32768, 32767];\n        case \"Uint32Array\":\n          return [0, 4294967295];\n        case \"Int32Array\":\n          return [-2147483648, 2147483647];\n        case \"Float32Array\":\n          return [-3.4e38, 3.4e38];\n        case \"Float64Array\":\n          return [-1 * Number.MAX_VALUE, Number.MAX_VALUE];\n        case \"BigInt64Array\":\n          return [Math.pow(-2, 63), Math.pow(2, 63) - 1];\n        case \"BigUint64Array\":\n          return [0, Math.pow(2, 64) - 1];\n        default:\n          return [undefined, undefined];\n      }\n    })();\n    if (cutline && !cutline_srs) {\n      // default cutline srs is 4326\n      cutline_srs = 4326;\n    }\n    let forward, inverse;\n    if (geotiff_srs !== tile_srs) {\n      ({\n        forward,\n        inverse\n      } = (0, _proj4FullyLoaded.default)(typeof geotiff_srs === \"number\" ? \"EPSG:\" + geotiff_srs : geotiff_srs, typeof tile_srs === \"number\" ? \"EPSG:\" + tile_srs : tile_srs));\n    }\n\n    // if (fit && !_expr) {\n    //   _expr = rawToRgb({\n    //       format: \"array\",\n    //       // flip: this.currentStats.mins.length === 1 ? true : false,\n    //     //   ranges: zip(this.currentStats.mins, this.currentStats.maxs),\n    //       round\n    //   // });\n    // }\n\n    if (timed) console.log(\"[geotiff-tile] time elapsed before warping \" + Math.round(performance.now() - start_time) + \"ms\");\n\n    // warp result\n    const start_geowarp = timed ? performance.now() : 0;\n    const array_depth = tile_layout.match(/\\[/g).length;\n    tile_array_types = (() => {\n      if (tile_array_types) {\n        return tile_array_types;\n      } else if (tile_array_types_strategy === \"auto\") {\n        if (_expr) {\n          // ex: [row,column,band] -> [\"Array\"]\n          // ex: [band][row,column] -> [\"Array\", \"Array\"]\n          return new Array(array_depth).fill(\"Array\");\n        } else {\n          return new Array(array_depth - 1).fill(\"Array\").concat([sourceArrayType]);\n        }\n      } else if (tile_array_types_strategy === \"geotiff\") {\n        return new Array(array_depth - 1).fill(\"Array\").concat([sourceArrayType]);\n      } else if (tile_array_types_strategy === \"untyped\") {\n        return new Array(array_depth - 1).fill(\"Array\");\n      }\n      return new Array(array_depth - 1).fill(\"Array\");\n    })();\n    if (debug_level >= 2) console.log(\"[geotiff-tile] tile_array_types:\\n\", tile_array_types);\n    const bbox_in_tile_srs_num = bbox_in_tile_srs.map(it => Number(it));\n    const out_srs = tile_srs;\n    const geowarp_options = {\n      cutline,\n      cutline_srs,\n      cutline_forward: cutline ? (0, _proj4FullyLoaded.default)(\"EPSG:\" + cutline_srs, \"EPSG:\" + tile_srs).forward : undefined,\n      debug_level: debug_level > 1 ? debug_level - 1 : 0,\n      forward,\n      inverse,\n      in_data: readResult.data,\n      in_bbox: out_srs === \"simple\" ? readResult.simple_bbox : readResult.bbox,\n      // in_geotransform is only necessary if using skewed or rotated in_data\n      in_geotransform: out_srs === \"simple\" ? null : readResult.geotransform,\n      in_layout: \"[band][row,column]\",\n      in_no_data: (0, _geotiffNoData.default)(image),\n      in_srs: geotiff_srs,\n      in_width: readResult.width,\n      in_height: readResult.height,\n      method,\n      // out_bands: should use if repeated bands in output\n      out_array_types: tile_array_types,\n      out_bbox: bbox_in_tile_srs_num,\n      out_height: tile_height,\n      out_layout: tile_layout,\n      out_pixel_depth: pixel_depth,\n      out_resolution: typeof tile_resolution === \"number\" ? [tile_resolution, tile_resolution] : tile_resolution,\n      out_srs,\n      out_width: tile_width,\n      round,\n      theoretical_max,\n      theoretical_min,\n      expr: _expr,\n      turbo\n    };\n    if (debug_level >= 2) console.log(\"[geotiff-tile] geowarp_options:\\n\", geowarp_options);\n    const {\n      data: out_data,\n      ...extra\n    } = await (0, _geowarp.default)(geowarp_options);\n    if (timed) console.log(\"[geotiff-tile] geowarp took \" + Math.round(performance.now() - start_geowarp) + \"ms\");\n    if (timed) console.log(\"[geotiff-tile] took \" + Math.round(performance.now() - start_time) + \"ms\");\n\n    // @ts-ignore\n    if (debug_level >= 1) extra.readResult = readResult;\n    return {\n      height: tile_height,\n      tile: out_data,\n      width: tile_width,\n      extra // extra metadata from geowarp\n    };\n  } catch (error) {\n    console.log(\"[geotiff-tile] failed to create tile\");\n    console.log(\"[geotiff-tile] bbox_in_tile_srs: \", bbox_in_tile_srs);\n    console.log(\"[geotiff-tile] tile_height:\", tile_height);\n    console.log(\"[geotiff-tile] tile_width;\", tile_width);\n    console.log(\"[geotiff-tile] tile_srs:\", tile_srs);\n    console.log(\"[geotiff-tile] use_overview:\", use_overview);\n    console.error(\"[geotiff-tile] error:\", error);\n    throw error;\n  }\n}\nif (typeof window === \"object\") {\n  window.geotiff_tile = {\n    createTile\n  };\n}\nif (typeof self === \"object\") {\n  self.geotiff_tile = {\n    createTile\n  };\n}\n\nmodule.exports = exports.default; module.exports.default = exports.default;\n", "const readTile = require(\"geotiff-tile\");\nconst proj4fullyloaded = require(\"proj4-fully-loaded\");\n\nconst chooseAtRandom = arr => arr[Math.floor(Math.random() * arr.length)];\n\nconst range = ct => new Array(ct).fill(0).map((_, i) => i);\n\n// approach of static async factory functions is described here:\n// https://dev.to/somedood/the-proper-way-to-write-async-constructors-in-javascript-1o8c\n\nclass GeoRasterStack {\n  constructor({ cache = true, cache_size = 100, create_worker, debug_level, flat = false, georasters, method, turbo }) {\n    this.cache = [];\n    this.cache_size = cache_size;\n    this.use_cache = cache || false;\n    this.debug_level = debug_level;\n    this.flat = flat;\n    this.georasters = georasters;\n    this.defaultMethod = method;\n    this.defaultTurbo = turbo;\n    this.tileWorkers = range(3).map(() => create_worker());\n    return this;\n  }\n\n  static async init({ cache, cache_size, create_worker, debug_level, flat, method, parse_georaster, sources, turbo }) {\n    return new GeoRasterStack({\n      cache,\n      cache_size,\n      create_worker,\n      debug_level,\n      flat,\n      georasters: await Promise.all(sources.map(src => (typeof src === \"string\" ? parse_georaster(src) : src))),\n      method,\n      turbo\n    });\n  }\n\n  async _read({ extent, size }) {\n    const startReadRasters = performance.now();\n\n    const [width, height] = size;\n\n    const out_array_types = [\"Array\", \"Array\", \"Array\"];\n\n    const resample_method = this.defaultMethod || \"near-vectorize\";\n\n    const sub_debug_level = Math.max((this.debug_level || 3) - 3, 0);\n\n    const promises = this.georasters.map(async georaster => {\n      // old-school in-memory georaster from an ArrayBuffer or simple object\n      if (georaster.values) {\n        if (extent.srs === \"simple\") {\n          return geowarp({\n            debug_level: sub_debug_level,\n            in_data: georaster.values,\n            in_bbox: [0, 0, georaster.width, georaster.height],\n            in_layout: \"[band][row][column]\",\n            in_width: georaster.width,\n            in_height: georaster.height,\n            out_array_types,\n            out_bbox: extent.bbox,\n            out_layout: \"[band][row][column]\",\n            out_height: height,\n            out_width: width,\n            method: resample_method,\n            round: false,\n            turbo: this.turbo\n          }).data;\n        } else {\n          const { forward, inverse } = proj4fullyloaded(\"EPSG:\" + georaster.projection, extent.srs);\n\n          return geowarp({\n            debug_level: sub_debug_level,\n            forward,\n            inverse,\n            in_data: georaster.values,\n            in_bbox: [georaster.xmin, georaster.ymin, georaster.xmax, georaster.ymax],\n            in_layout: \"[band][row][column]\",\n            in_srs: georaster.projection,\n            in_width: georaster.width,\n            in_height: georaster.height,\n            out_array_types,\n            out_bbox: extent.bbox,\n            out_layout: \"[band][row][column]\",\n            out_srs: extent.srs,\n            out_height: height,\n            out_width: width,\n            method: resample_method,\n            round: false,\n            turbo: this.turbo\n          }).data;\n        }\n      } else {\n        const baseReadTileParams = {\n          bbox: extent.bbox,\n          bbox_srs: extent.srs,\n          debug_level: sub_debug_level,\n          method: resample_method,\n          round: false,\n          tile_array_types: out_array_types,\n          tile_height: height,\n          tile_layout: \"[band][row][column]\",\n          tile_srs: extent.srs,\n          tile_width: width,\n          timed: sub_debug_level >= 1,\n          use_overview: true,\n          turbo: this.turbo\n        };\n\n        if (extent.srs === \"simple\") {\n          // this will prevent attempts at resampling because\n          // the input (geotiff) and output srs will be treated as the same\n          baseReadTileParams.geotiff_srs = \"simple\";\n        }\n\n        if (this.debug_level >= 2) console.log(\"[georaster-stack] baseReadTileParams:\", baseReadTileParams);\n        if (georaster._url) {\n          const tileWorker = await chooseAtRandom(this.tileWorkers);\n          const createTileParams = { ...baseReadTileParams, url: georaster._url };\n          if (this.debug_level >= 1) console.log(\"[georaster-stack] calling createTile with:\", createTileParams);\n          const created = await tileWorker.createTile(createTileParams);\n          if (created === undefined) {\n            console.error(\"[georaster-stack] failed to create tile with the following params:\\n\" + JSON.stringify(createTileParams));\n            throw new Error(\"[georaster-stack] failed to create tile\");\n          }\n          return created.tile;\n        } else if (georaster._geotiff) {\n          return readTile({ ...baseReadTileParams, geotiff: georaster._geotiff }).then(({ tile }) => tile);\n        }\n      }\n    });\n    if (this.debug_level >= 4) console.log(\"[georaster-stack] inside GeoRasterReader.read, promises:\", promises);\n    const valuesByGeoRaster = await Promise.all(promises);\n    if (this.debug_level >= 4) console.log(\"[georaster-stack] valuesByGeoRaster:\", valuesByGeoRaster);\n\n    // flatten the stack\n    const result = this.flat ? valuesByGeoRaster.flat() : valuesByGeoRaster;\n    if (this.debug_level >= 1) console.log(\"[georaster-stack] read rasters took:\", performance.now() - startReadRasters, \"ms\");\n    return { data: result, size };\n  }\n\n  async read({ extent, size }) {\n    if (this.use_cache) {\n      const [width, height] = size;\n\n      const key = `bbox=${extent.bbox.join(\",\")}; srs=${extent.srs}; height=${height}; width=${width}`;\n      if (this.debug_level >= 2) console.log(\"[georaster-stack] key:\", key);\n\n      if (this.cache.length > 0) {\n        const entry = this.cache.find(it => it[0] === key);\n        if (entry) {\n          if (this.debug_level >= 1) console.log(`[georaster-stack] found cache entry \"${key}\"`);\n          return entry[1];\n        }\n      }\n\n      const promise = this._read({ extent, size });\n\n      // if at limit, remove first element in cache array\n      if (this.cache.length === this.cache_size) this.cache.shift();\n\n      this.cache.push([key, promise]);\n\n      return promise;\n    } else {\n      return this._read({ extent, size });\n    }\n  }\n}\n\nmodule.exports = {\n  GeoRasterStack\n};\n", "const parseGeoraster = require(\"georaster\");\nconst { createWorker } = require(\"geotiff-tile-web-worker\");\n\nconst { GeoRasterStack: CoreGeoRasterStack } = require(\"../core/index.js\");\n\nclass GeoRasterStack extends CoreGeoRasterStack {\n  static async init({ cache, cache_size, debug_level, flat, method, sources, turbo }) {\n    return await super.init({\n      cache,\n      cache_size,\n      create_worker: createWorker,\n      debug_level,\n      flat,\n      method,\n      parse_georaster: parseGeoraster,\n      sources,\n      turbo\n    });\n  }\n}\n\nmodule.exports = {\n  GeoRasterStack\n};\n\nif (typeof self === \"object\") {\n  self.GeoRasterStack = GeoRasterStack;\n}\n\nif (typeof window === \"object\") {\n  window.GeoRasterStack = GeoRasterStack;\n}\n", "/* global global */\n/* global proj4 */\nimport \"regenerator-runtime/runtime.js\";\nimport * as L from \"leaflet\";\nimport { rawToRgb } from \"pixel-utils\";\nimport densePolygon from \"bbox-fns/dense-polygon.js\";\nimport isUTM from \"utm-utils/src/isUTM.js\";\nimport getProjString from \"utm-utils/src/getProjString.js\";\nimport proj4collect from \"proj4-collect\";\nimport reprojectGeoJSON from \"reproject-geojson\";\nimport bboxMerge from \"bbox-fns/merge.js\";\nimport bboxPolygon from \"bbox-fns/polygon.js\";\nimport fastMin from \"fast-min\";\nimport fastMax from \"fast-max\";\nimport { GeoExtent } from \"geo-extent\";\nimport geowarp_core from \"geowarp\";\nimport geowarp_canvas from \"geowarp-canvas\";\nimport snap from \"snap-bbox\";\nimport { GeoRasterStack } from \"georaster-stack/web\";\nconst EPSG4326 = 4326;\nconst ORIGIN = [0, 0];\nconst geowarp = geowarp_canvas(geowarp_core);\nconst isDefaultCRS = crs => crs === L.CRS.EPSG3857 || crs.code === \"EPSG:3857\";\n\n// figure out if simple CRS\n// even if not created with same instance of LeafletJS\nconst isSimpleCRS = crs => {\n  var _crs$transformation, _crs$transformation2, _crs$transformation3, _crs$transformation4;\n  return crs === L.CRS.Simple || !crs.code && crs.infinite && (crs === null || crs === void 0 || (_crs$transformation = crs.transformation) === null || _crs$transformation === void 0 ? void 0 : _crs$transformation._a) === 1 && (crs === null || crs === void 0 || (_crs$transformation2 = crs.transformation) === null || _crs$transformation2 === void 0 ? void 0 : _crs$transformation2._b) === 0 && (crs === null || crs === void 0 || (_crs$transformation3 = crs.transformation) === null || _crs$transformation3 === void 0 ? void 0 : _crs$transformation3._c) === -1 && (crs === null || crs === void 0 || (_crs$transformation4 = crs.transformation) === null || _crs$transformation4 === void 0 ? void 0 : _crs$transformation4._d) === 0;\n};\nif (!L) console.warn(\"[georaster-layer-for-leaflet] can't find Leaflet.  If you are loading via <script>, please add the GeoRasterLayer script after the LeafletJS script.\");\nconst zip = (a, b) => a.map((it, i) => [it, b[i]]);\nconst measureSkew = (bbox, reproj) => {\n  const poly = bboxPolygon(bbox);\n  const [topLeft, bottomLeft, bottomRight, topRight] = poly[0];\n  const rTopLeft = reproj(topLeft);\n  const rBottomRight = reproj(bottomRight);\n  const rBottomLeft = reproj(bottomLeft);\n  const rTopRight = reproj(topRight);\n  const xSkew = Math.max(Math.abs(rTopLeft[0] - rBottomLeft[0]), Math.abs(rTopRight[0] - rBottomRight[0]));\n  const ySkew = Math.max(Math.abs(rTopLeft[1] - rTopRight[1]), Math.abs(rBottomLeft[1] - rBottomRight[1]));\n  return [xSkew, ySkew];\n};\nconst GeoRasterLayer = L.GridLayer.extend({\n  options: {\n    updateWhenIdle: true,\n    updateWhenZooming: false,\n    keepBuffer: 25,\n    resolution: 2 ** 5,\n    debugLevel: 0,\n    caching: true,\n    turbo: false\n  },\n  cache: {},\n  initialize: function (options) {\n    this.proj4 = proj4collect();\n    try {\n      if (options.georasters) {\n        this.georasters = options.georasters;\n      } else if (options.georaster) {\n        this.georasters = [options.georaster];\n      } else {\n        throw new Error(\"You initialized a GeoRasterLayer without a georaster or georasters value.\");\n      }\n      if (this.sourceType === \"url\") {\n        options.updateWhenIdle = false;\n        options.updateWhenZooming = true;\n        options.keepBuffer = 16;\n      }\n      if (options.resampleMethod) {\n        if (options.resampleMethod === \"nearest\") {\n          this.resampleMethod = \"near\";\n        } else {\n          this.resampleMethod = options.resampleMethod;\n        }\n      }\n      this._cache = {\n        innerTile: {},\n        tile: {}\n      };\n      this.debugLevel = options.debugLevel;\n      this.subextents = this.georasters.map(g => new GeoExtent([g.xmin, g.ymin, g.xmax, g.ymax], {\n        srs: g.projection\n      }));\n      const max_height = Math.max.apply(null, this.georasters.map(it => it.height));\n      const max_width = Math.max.apply(null, this.georasters.map(it => it.width));\n      this.simpleExtent = new GeoExtent([0, 0, max_width, max_height]);\n      if (this.debugLevel >= 1) {\n        console.log(\"[georaster-layer-for-leaflet] \", {\n          options\n        });\n      }\n      this.initialize_mask(options);\n      this.turbo = options.turbo || false;\n      this.stack = GeoRasterStack.init({\n        // flatten results, so it appears as if all the bands\n        // are from the same raster\n        flat: true,\n        sources: this.georasters,\n        debugLevel: this.debugLevel,\n        method: this.resampleMethod,\n        turbo: this.turbo\n      });\n\n      // could probably replace some day with a simple\n      // (for let k in options) { this.options[k] = options[k]; }\n      // but need to find a way around TypeScript any issues\n      L.Util.setOptions(this, options);\n\n      /*\n          Caching the constant tile size, so we don't recalculate everytime we\n          create a new tile\n      */\n      const tileSize = this.getTileSize();\n      this.tileHeight = tileSize.y;\n      this.tileWidth = tileSize.x;\n      if (this.georasters.length >= 4 && !options.pixelValuesToColorFn) {\n        throw \"you must pass in a pixelValuesToColorFn if you are combining rasters\";\n      }\n      this._all_values_in_memory = this.georasters.every(georaster => typeof georaster.values === \"object\");\n\n      // total number of bands across all georasters\n      this.numBands = this.georasters.reduce((total, g) => total + g.numberOfRasters, 0);\n      if (this.debugLevel > 1) console.log(\"this.numBands:\", this.numBands);\n\n      // if we have pre-computed stats, save them, so we can use them for linear stretching later\n      if (this.georasters.every(g => Array.isArray(g.mins) && g.mins.length === g.numberOfRasters && g.mins.every(it => typeof it === \"number\") && Array.isArray(g.maxs) && g.maxs.length === g.numberOfRasters && g.maxs.every(it => typeof it === \"number\"))) {\n        this.stats = {\n          mins: [],\n          maxs: []\n        };\n        this.georasters.map(georaster => {\n          const numBands = georaster.numberOfRasters;\n          if (georaster.mins.length === numBands) {\n            this.stats.mins = this.stats.mins.concat(georaster.mins);\n          } else {\n            this.stats.mins = this.stats.mins.concat(new Array(numBands).fill(null));\n          }\n          if (georaster.maxs.length === numBands) {\n            this.stats.maxs = this.stats.maxs.concat(georaster.maxs);\n          } else {\n            this.stats.maxs = this.stats.maxs.concat(new Array(numBands).fill(null));\n          }\n          this.stats.ranges = zip(this.stats.mins, this.stats.maxs).map(([min, max]) => max - min);\n        });\n      }\n\n      // in-case we want to track dynamic/running stats of all pixels fetched\n      this.currentStats = {\n        mins: new Array(this.numBands),\n        maxs: new Array(this.numBands),\n        ranges: new Array(this.numBands)\n      };\n\n      // if don't have custom band arithmetic, set one based on the palette\n      if (!this.options.pixelValuesToColorFn && !this.options.customDrawFunction && this.georasters.length === 1 && Array.isArray(this.georasters[0].palette)) {\n        const palette = this.georasters[0].palette;\n        this.options.pixelValuesToColorFn = values => palette[values[0]];\n      }\n\n      // using single-band raster as grayscale\n      // or mapping 2 or 3 rasters to rgb bands\n      if ([1, 2, 3].includes(this.georasters.length) && this.georasters.every(g => g.sourceType === \"url\") && this.georasters.every(g => g.numberOfRasters === 1) && !options.pixelValuesToColorFn) {\n        try {\n          this.calcStats = true;\n          this._dynamic = true;\n          this.options.pixelValuesToColorFn = values => {\n            const haveDataForAllBands = values.every(value => value !== undefined && value !== this.noDataValue);\n            if (haveDataForAllBands) {\n              return this.rawToRgb(values);\n            }\n          };\n        } catch (error) {\n          console.error(\"[georaster-layer-for-leaflet]\", error);\n        }\n      }\n\n      // if you haven't specified a pixelValuesToColorFn\n      // and the image is YCbCr, add a function to convert YCbCr\n      this.checkIfYCbCr = new Promise(async resolve => {\n        if (this.options.pixelValuesToColorFn) return resolve(true);\n        if (this.georasters.length === 1 && this.georasters[0].numberOfRasters === 3) {\n          var _this$georasters$0$_g, _image$fileDirectory;\n          const image = await ((_this$georasters$0$_g = this.georasters[0]._geotiff) === null || _this$georasters$0$_g === void 0 ? void 0 : _this$georasters$0$_g.getImage());\n          if ((image === null || image === void 0 || (_image$fileDirectory = image.fileDirectory) === null || _image$fileDirectory === void 0 ? void 0 : _image$fileDirectory.PhotometricInterpretation) === 6) {\n            this.options.pixelValuesToColorFn = values => {\n              const r = Math.round(values[0] + 1.402 * (values[2] - 0x80));\n              const g = Math.round(values[0] - 0.34414 * (values[1] - 0x80) - 0.71414 * (values[2] - 0x80));\n              const b = Math.round(values[0] + 1.772 * (values[1] - 0x80));\n              return `rgb(${r},${g},${b})`;\n            };\n          }\n        }\n        return resolve(true);\n      });\n    } catch (error) {\n      console.error(\"ERROR initializing GeoRasterLayer\", error);\n    }\n  },\n  getExtent: function (srs = 4326) {\n    if (!this._extent) this._extent = {};\n    if (!this._extent[srs]) {\n      this._extent[srs] = new GeoExtent(bboxMerge(this.subextents.map(extent => extent.reproj(srs).bbox)), {\n        srs\n      });\n    }\n    return this._extent[srs];\n  },\n  onAdd: function (map) {\n    if (!this.options.maxZoom) {\n      // maxZoom is needed to display the tiles in the correct order over the zIndex between the zoom levels\n      // https://github.com/Leaflet/Leaflet/blob/2592967aa6bd392db0db9e58dab840054e2aa291/src/layer/tile/GridLayer.js#L375C21-L375C21\n      this.options.maxZoom = map.getMaxZoom();\n    }\n    L.GridLayer.prototype.onAdd.call(this, map);\n  },\n  initialize_mask: function (options) {\n    if (options.mask && options.mask !== \"auto\") {\n      if (typeof options.mask === \"string\") {\n        this.mask = fetch(options.mask).then(r => r.json());\n      } else if (typeof options.mask === \"object\") {\n        this.mask = Promise.resolve(options.mask);\n      }\n      this.mask_srs = options.mask_srs || \"EPSG:4326\";\n    } else if (options.mask === \"auto\") {\n      const projections = new Set(this.georasters.map(it => it.projection));\n      if (projections.size === 1) {\n        this.mask = Promise.resolve({\n          type: \"Feature\",\n          geometry: {\n            type: \"MultiPolygon\",\n            coordinates: this.subextents.map(ext => ext.unwrap()).flat().map(ext => densePolygon(ext.bbox, {\n              density: 100\n            }))\n          }\n        });\n        this.mask_srs = Array.from(projections)[0];\n      } else {\n        this.mask = Promise.resolve({\n          type: \"Feature\",\n          geometry: {\n            type: \"MultiPolygon\",\n            coordinates: this.subextents.map(ext => ext.unwrap()).flat().map(ext => ext.reproj(4326, {\n              density: \"high\"\n            })).map(ext => densePolygon(ext.bbox, {\n              density: 100\n            }))\n          }\n        });\n        this.mask_srs = \"EPSG:4326\";\n      }\n    }\n    this.mask_strategy = options.mask_strategy;\n  },\n  getProjectionString: function (proj) {\n    if (isUTM(proj)) return getProjString(proj);\n    if (typeof proj === \"number\") proj = \"EPSG:\" + proj;\n    if (proj in this.proj4.defs) return proj;\n    if (\"EPSG:\" + proj in this.proj4.defs) return \"EPSG:\" + proj;\n    throw new Error(\"[georaster-layer-for-leaflet] unsupported projection:\" + proj);\n  },\n  getProjector: function (_from, _to = \"EPSG:4326\") {\n    if (_from === null || _from === undefined) {\n      if (new Set(this.georasters.map(georaster => georaster.projection)).size !== 1) {\n        throw new Error(\"[georaster-layer-for-leaflet] getProjector called without a _from and georasters don't all have the same projection\");\n      } else {\n        _from = this.georasters[0].projection;\n      }\n    }\n    if (!this.isSupportedProjection(_from)) {\n      throw Error(\"[georaster-layer-for-leaflet] unsupported projection: \" + _from);\n    }\n    if (!this.isSupportedProjection(_to)) throw Error(\"[georaster-layer-for-leaflet] unsupported projection: \" + _to);\n    return this.proj4(this.getProjectionString(_from), this.getProjectionString(_to));\n  },\n  createTile: function (coords, done) {\n    /* This tile is the square piece of the Leaflet map that we draw on */\n    const tile = L.DomUtil.create(\"canvas\", \"leaflet-tile\");\n\n    // we do this because sometimes css normalizers will set * to box-sizing: border-box\n    tile.style.boxSizing = \"content-box\";\n\n    // start tile hidden\n    tile.style.visibility = \"hidden\";\n    const context = tile.getContext(\"2d\");\n    const {\n      x,\n      y,\n      z\n    } = coords;\n    tile.setAttribute(\"data-x\", x.toString());\n    tile.setAttribute(\"data-y\", y.toString());\n    tile.setAttribute(\"data-z\", z.toString());\n\n    // note that we aren't setting the tile height or width here\n    // drawTile dynamically sets the width and padding based on\n    // how much the georaster takes up the tile area\n    const coordsKey = this._tileCoordsToKey(coords);\n    const resolution = this._getResolution(coords.z);\n    if (resolution === undefined) throw new Error(\"[georaster-layer-for-leaflet] resolution is undefined\");\n\n    // saving resolution, which we will need later if/when redrawing\n    tile.resolution = resolution;\n    const key = `${coordsKey}:${resolution}`;\n    const doneCb = (error, tile) => {\n      done(error, tile);\n\n      // caching the rendered tile, to skip the calculation for the next time\n      if (!error && this.options.caching) {\n        this.cache[key] = tile;\n      }\n    };\n    if (this.options.caching && this.cache[key]) {\n      done(undefined, this.cache[key]);\n      return this.cache[key];\n    } else {\n      this.drawTile({\n        tile,\n        coords,\n        context,\n        done: doneCb,\n        resolution\n      });\n    }\n    return tile;\n  },\n  drawTile: function ({\n    tile,\n    coords,\n    context,\n    done,\n    resolution\n  }) {\n    try {\n      const start_draw_tile = performance.now();\n      const {\n        debugLevel = 0\n      } = this;\n      const timed = debugLevel >= 1;\n      if (debugLevel >= 2) console.log(\"starting drawTile with\", {\n        tile,\n        coords,\n        context,\n        done,\n        resolution\n      });\n      let error;\n\n      // stringified hash of tile coordinates for caching purposes\n      const {\n        x,\n        y,\n        z\n      } = coords;\n      const cacheKey = [z, x, y].join(\"/\");\n      if (isNaN(resolution)) {\n        throw new Error(`[georaster-layer-for-leafler] [${cacheKey}] resolution isNaN`);\n      }\n      if (this.options._valid_tiles && !this.options._valid_tiles.includes(cacheKey)) return;\n\n      // over-ride default log with tile coordinate info\n      const log = (...rest) => {\n        if (rest.length === 1 && typeof rest[0] === \"object\" && Object.keys(rest[0]).length === 1) {\n          const obj = rest[0];\n          const key = Object.keys(obj)[0];\n          console.log(`[georaster-layer-for-leaflet] [${cacheKey}] ${key}: `, obj[key]);\n        } else {\n          console.log(`[georaster-layer-for-leaflet] [${cacheKey}]`, ...rest);\n        }\n      };\n      if (debugLevel >= 2) log({\n        cacheKey\n      });\n      if (this.debugLevel >= 4) {\n        try {\n          // L.geoJSON(this.getExtent().asGeoJSON({ density: 1000 }), { style: { color: \"#0F0\", fillOpacity: 0 } }).addTo(\n          //   this.getMap()\n          // );\n        } catch (error) {\n          console.error(error);\n        }\n      }\n      const mapCRS = this.getMapCRS();\n      if (debugLevel >= 2) log({\n        mapCRS\n      });\n      const inDefaultCRS = isDefaultCRS(mapCRS);\n      if (debugLevel >= 2) log({\n        inDefaultCRS\n      });\n      const inSimpleCRS = isSimpleCRS(mapCRS);\n      if (debugLevel >= 2) log({\n        inSimpleCRS\n      });\n\n      // Unpacking values for increased speed\n      const {\n        xmin,\n        xmax,\n        ymin,\n        ymax\n      } = this;\n      const rasterHeight = this.height;\n      const rasterWidth = this.width;\n      const map_crs_code = mapCRS.code;\n      let extentOfLayer;\n      if (inSimpleCRS) {\n        extentOfLayer = new GeoExtent(this.getBounds(), {\n          srs: \"simple\"\n        });\n      } else if (inDefaultCRS) {\n        extentOfLayer = new GeoExtent(this.getBounds(), {\n          srs: 4326\n        });\n      } else {\n        extentOfLayer = this.getExtent(map_crs_code);\n      }\n      if (debugLevel >= 2) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] extentOfLayer = ${extentOfLayer.js}`);\n      if (debugLevel >= 2) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] map_crs_code = ${map_crs_code}`);\n      const extentOfTile = this.getTileExtent(coords, debugLevel >= 2);\n      if (debugLevel >= 2) log(`extentOfTile: ${extentOfTile.js}`);\n\n      // create blue outline around tiles\n      if (debugLevel >= 4) {\n        if (!this._cache.tile[cacheKey]) {\n          this._cache.tile[cacheKey] = L.geoJSON(extentOfTile.asGeoJSON({\n            density: 100\n          }), {\n            style: {\n              fillOpacity: 0\n            }\n          }).addTo(this.getMap()).bindTooltip(`z:${z}</br>x:${x}</br>y:${y}`, {\n            direction: \"center\",\n            permanent: true\n          });\n        }\n      }\n      const extentOfTileInMapCRS = inSimpleCRS ? extentOfTile : extentOfTile.reproj(map_crs_code);\n      if (debugLevel >= 2) {\n        console.log(`[georaster-layer-for-leaflet] [${cacheKey}] extentOfTileInMapCRS = ${extentOfTileInMapCRS.js}`);\n      }\n      if (!inSimpleCRS && !this.subextents.some(extent => extentOfTileInMapCRS.overlaps(extent, {\n        strict: false\n      }))) {\n        if (debugLevel >= 2) {\n          console.log(`[georaster-layer-for-leaflet] [${cacheKey}] subextents = ${this.subextents.map(e => e.js).join(\", \")}`);\n          console.log(`[georaster-layer-for-leaflet] [${cacheKey}] tile and georaster don't overlap`);\n        }\n        return;\n      }\n      if (debugLevel >= 2) {\n        console.log(`[georaster-layer-for-leaflet] [${cacheKey}] this.subextents:`, this.subextents.map(({\n          js\n        }) => js));\n      }\n      let cropline;\n      if (inSimpleCRS) {\n        cropline = extentOfLayer;\n      } else if (inDefaultCRS) {\n        cropline = this.getExtent();\n      } else {\n        cropline = this.getExtent(map_crs_code);\n      }\n      if (debugLevel >= 2) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] cropline = ${cropline.js}`);\n      let extentOfInnerTileInMapCRS = extentOfTileInMapCRS.crop(cropline);\n      if (debugLevel >= 2) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] extentOfInnerTileInMapCRS = ${extentOfInnerTileInMapCRS.js}`);\n      if (extentOfInnerTileInMapCRS === null) {\n        if (debugLevel >= 2) {\n          console.log(`[georaster-layer-for-leaflet] failed to crop ${extentOfTileInMapCRS.js} by ${cropline.js}`);\n        }\n        return;\n      }\n\n      // create red outline around inner tiles\n      if (debugLevel >= 4) {\n        if (!this._cache.innerTile[cacheKey]) {\n          if (inSimpleCRS) {\n            this._cache.innerTile[cacheKey] = L.rectangle(extentOfInnerTileInMapCRS.leafletBounds, {\n              color: \"#F00\",\n              dashArray: \"5, 10\",\n              fillOpacity: 0\n            }).addTo(this.getMap());\n          } else {\n            const density = inDefaultCRS ? 0 : 100;\n            const innerTileAsGeoJSON = extentOfInnerTileInMapCRS.asGeoJSON({\n              density\n            });\n            // this._cache.innerTile[cacheKey] = L.rectangle(ext.leafletBounds, {\n            this._cache.innerTile[cacheKey] = L.geoJSON(innerTileAsGeoJSON, {\n              style: {\n                color: \"#F00\",\n                dashArray: \"5, 10\",\n                fillOpacity: 0\n              }\n            }).addTo(this.getMap());\n          }\n        }\n      }\n      const widthOfScreenPixelInMapCRS = extentOfTileInMapCRS.width / this.tileWidth;\n      const heightOfScreenPixelInMapCRS = extentOfTileInMapCRS.height / this.tileHeight;\n      // const defaultCanvasHeight = Math.max(256, this.resolution || 256);\n      // const defaultCanvasWidth = Math.max(256, this.resolution || 256);\n      // const widthOfCanvasPixelInMapCRS = extentOfTileInMapCRS.width / defaultCanvasHeight;\n      // const heightOfCanvasPixelInMapCRS = extentOfTileInMapCRS.height / defaultCanvasWidth;\n      if (debugLevel >= 3) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] heightOfScreenPixelInMapCRS: ${heightOfScreenPixelInMapCRS}`);\n      if (debugLevel >= 3) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] widthOfScreenPixelInMapCRS: ${widthOfScreenPixelInMapCRS}`);\n\n      // even if we aren't doing the more advanced sample alignment above\n      // we should still factor in the resolution when determing the resolution of the sampled rasters\n      // for example, if the inner tile only takes up 10% of the total tile container space,\n      // we shouldn't sample 256 times across\n      let numberOfSamplesAcross = Math.ceil(resolution * (extentOfInnerTileInMapCRS.width / extentOfTileInMapCRS.width));\n      let numberOfSamplesDown = Math.ceil(resolution * (extentOfInnerTileInMapCRS.height / extentOfTileInMapCRS.height));\n      const skew = map_crs_code === \"EPSG:\" + this.georasters[0].projection ? [0, 0] : measureSkew([this.georasters[0].xmin, this.georasters[0].ymin, this.georasters[0].xmax, this.georasters[0].ymax], this.getProjector(this.georasters[0].projection, map_crs_code).forward);\n      if (debugLevel >= 2) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] skew:`, skew);\n      if (new Set(this.georasters.map(g => JSON.stringify([g.pixelHeight, g.pixelWidth, g.projection, g.xmin, g.ymin, g.xmax, g.ymax]))).size === 1 && (skew[0] === 0 && skew[1] === 0 || inDefaultCRS && [4326, 3857].includes(this.georasters[0].projection))) {\n        if (debugLevel >= 2) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] aligning samples`);\n        const {\n          xmin,\n          ymin,\n          xmax,\n          ymax,\n          pixelHeight,\n          pixelWidth,\n          projection\n        } = this.georasters[0];\n\n        // expand tile sampling area to align with raster pixels\n        const oldExtentOfInnerTileInRasterCRS = inSimpleCRS ? extentOfInnerTileInMapCRS : extentOfInnerTileInMapCRS.reproj(projection);\n        const snapped = snap({\n          bbox: oldExtentOfInnerTileInRasterCRS.bbox,\n          // pad xmax and ymin of container to tolerate ceil() and floor() in snap()\n          container: inSimpleCRS ? [extentOfLayer.xmin, extentOfLayer.ymin - 0.25 * pixelHeight, extentOfLayer.xmax + 0.25 * pixelWidth, extentOfLayer.ymax] : [xmin, ymin - 0.25 * pixelHeight, xmax + 0.25 * pixelWidth, ymax],\n          debug: debugLevel >= 2,\n          origin: inSimpleCRS ? [extentOfLayer.xmin, extentOfLayer.ymax] : [xmin, ymax],\n          scale: [pixelWidth, -pixelHeight] // negative because origin is at ymax\n        });\n        const newExtentOfInnerTileInRasterCRS = new GeoExtent(snapped.bbox_in_coordinate_system, {\n          srs: inSimpleCRS ? \"simple\" : projection\n        });\n        const snappedSamplesAcross = Math.round(newExtentOfInnerTileInRasterCRS.width / pixelWidth);\n        const snappedSamplesDown = Math.round(newExtentOfInnerTileInRasterCRS.height / pixelHeight);\n        const newExtentOfInnerTileInMapCRS = newExtentOfInnerTileInRasterCRS.reproj(map_crs_code);\n\n        // maybe if can't fix situation when reprojjing tile outside bounds of the earth,\n        // we can at least catch situations where snapped samples across is obviously wrong like more htan 1k\n\n        const newLeft = Math.round((newExtentOfInnerTileInMapCRS.xmin - extentOfTileInMapCRS.xmin) / widthOfScreenPixelInMapCRS);\n        const newRight = Math.round((extentOfTileInMapCRS.xmax - newExtentOfInnerTileInMapCRS.xmax) / widthOfScreenPixelInMapCRS);\n        const newTop = Math.round((extentOfTileInMapCRS.ymax - newExtentOfInnerTileInMapCRS.ymax) / heightOfScreenPixelInMapCRS);\n        const newBottom = Math.round((newExtentOfInnerTileInMapCRS.ymin - extentOfTileInMapCRS.ymin) / heightOfScreenPixelInMapCRS);\n        if (Math.abs(newLeft) < 512 && Math.abs(newRight) < 512 && Math.abs(newTop) < 512 && Math.abs(newBottom) < 512 && snappedSamplesAcross < 64 && snappedSamplesDown < 64 && newExtentOfInnerTileInMapCRS) {\n          extentOfInnerTileInMapCRS = newExtentOfInnerTileInMapCRS;\n          numberOfSamplesAcross = snappedSamplesAcross;\n          numberOfSamplesDown = snappedSamplesDown;\n        }\n      }\n      if (debugLevel >= 2) {\n        console.log(`[georaster-layer-for-leaflet] [${cacheKey}] numberOfSamplesAcross: ${numberOfSamplesAcross}`);\n        console.log(`[georaster-layer-for-leaflet] [${cacheKey}] numberOfSamplesDown: ${numberOfSamplesDown}`);\n      }\n      if (isNaN(numberOfSamplesAcross)) {\n        throw new Error(`[georaster-layer-for-leaflet [${cacheKey}] numberOfSamplesAcross is NaN when resolution=${resolution} and extentOfInnerTileInMapCRS.width=${extentOfInnerTileInMapCRS.width} and extentOfTileInMapCRS.width=${extentOfTileInMapCRS.width}`);\n      }\n      if (debugLevel >= 3) {\n        console.log(\"[georaster-layer-for-leaflet] extent of inner tile before snapping \" + extentOfInnerTileInMapCRS.reproj(inSimpleCRS ? \"simple\" : 4326).bbox.toString());\n      }\n\n      // create outline around raster pixels\n      if (debugLevel >= 4) {\n        if (!this._cache.innerTile[cacheKey]) {\n          const ext = inSimpleCRS ? extentOfInnerTileInMapCRS : extentOfInnerTileInMapCRS.reproj(4326);\n          this._cache.innerTile[cacheKey] = L.rectangle(ext.leafletBounds, {\n            color: \"#F00\",\n            dashArray: \"5, 10\",\n            fillOpacity: 0\n          }).addTo(this.getMap());\n        }\n      }\n      if (debugLevel >= 3) {\n        log(\"extent of inner tile after snapping\", extentOfInnerTileInMapCRS.reproj(inSimpleCRS ? \"simple\" : 4326).bbox);\n      }\n\n      // Note that the snapped \"inner\" tile may extend beyond the original tile,\n      // in which case the padding values will be negative.\n\n      // we round here because sometimes there will be slight floating arithmetic issues\n      // where the padding is like 0.00000000000001\n      const margin = {\n        left: Math.round((extentOfInnerTileInMapCRS.xmin - extentOfTileInMapCRS.xmin) / widthOfScreenPixelInMapCRS),\n        right: Math.round((extentOfTileInMapCRS.xmax - extentOfInnerTileInMapCRS.xmax) / widthOfScreenPixelInMapCRS),\n        top: Math.round((extentOfTileInMapCRS.ymax - extentOfInnerTileInMapCRS.ymax) / heightOfScreenPixelInMapCRS),\n        bottom: Math.round((extentOfInnerTileInMapCRS.ymin - extentOfTileInMapCRS.ymin) / heightOfScreenPixelInMapCRS)\n      };\n      if (debugLevel >= 3) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] margin:`, margin);\n      const innerTileHeight = this.tileHeight - margin.top - margin.bottom;\n      const innerTileWidth = this.tileWidth - margin.left - margin.right;\n      if (debugLevel >= 3) log({\n        innerTileHeight,\n        innerTileWidth\n      });\n      if (innerTileHeight === 0 || innerTileWidth === 0) {\n        if (debugLevel >= 2) log(\"returning early because the tile will be invisible\");\n        return;\n      }\n      tile.setAttribute(\"data-extent\", extentOfTile.bbox);\n      tile.setAttribute(\"data-zxy\", cacheKey);\n\n      // if (debugLevel >= 3) tile.style.background = \"rgb(255, 0, 0, 0.2)\";\n\n      // set padding and size of canvas tile\n      tile.style.marginLeft = margin.left + \"px\";\n      tile.style.marginTop = margin.top + \"px\";\n      tile.height = innerTileHeight;\n      tile.style.height = innerTileHeight + \"px\";\n      tile.width = innerTileWidth;\n      tile.style.width = innerTileWidth + \"px\";\n      if (debugLevel >= 3) console.log(`[georaster-layer-for-leaflet [${cacheKey}] setting tile height to ${innerTileHeight}px`);\n      if (debugLevel >= 3) console.log(`[georaster-layer-for-leaflet [${cacheKey}] setting tile width to ${innerTileWidth}px`);\n\n      // set how large to display each sample in screen pixels\n      const heightOfSampleInScreenPixels = innerTileHeight / numberOfSamplesDown;\n      const widthOfSampleInScreenPixels = innerTileWidth / numberOfSamplesAcross;\n      if (debugLevel >= 3) console.log(`[georaster-layer-for-leaflet [${cacheKey}] heightOfSampleInScreenPixels: ${heightOfSampleInScreenPixels}px`);\n      if (debugLevel >= 3) console.log(`[georaster-layer-for-leaflet [${cacheKey}] widthOfSampleInScreenPixels: ${widthOfSampleInScreenPixels}px`);\n      const tileSize = this.getTileSize();\n\n      // this converts tile coordinates (how many tiles down and right)\n      // to pixels from left and top of tile pane\n      const tileNwPoint = coords.scaleBy(tileSize);\n      if (debugLevel >= 4) log({\n        tileNwPoint\n      });\n      const xLeftOfInnerTile = tileNwPoint.x + margin.left;\n      const yTopOfInnerTile = tileNwPoint.y + margin.top;\n      const innerTileTopLeftPoint = {\n        x: xLeftOfInnerTile,\n        y: yTopOfInnerTile\n      };\n      if (debugLevel >= 4) log({\n        innerTileTopLeftPoint\n      });\n      if (timed) log(`pre-processing took ${performance.now() - start_draw_tile}ms`);\n\n      // render asynchronously so tiles show up as they finish instead of all at once (which blocks the UI)\n      setTimeout(async () => {\n        try {\n          const startReadRasters = timed ? performance.now() : 0;\n          const stack = await this.stack;\n          const stack_size = [numberOfSamplesAcross, numberOfSamplesDown];\n          if (debugLevel >= 3) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] stack reading extent=\"${extentOfInnerTileInMapCRS.js}\" and size=${JSON.stringify(stack_size)}`);\n          const {\n            data: tileRasters\n          } = await stack.read({\n            extent: extentOfInnerTileInMapCRS,\n            size: stack_size\n          });\n          if (debugLevel >= 3) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] tileRasters:`, tileRasters);\n          if (tileRasters === undefined) {\n            throw new Error(`tileRasters is undefined when extent is ${extentOfInnerTileInMapCRS.js} and size is ${JSON.stringify([numberOfSamplesAcross, numberOfSamplesDown])}`);\n          }\n          if (timed) {\n            const durationReadRasters = performance.now() - startReadRasters;\n            console.log(`[georaster-layer-for-leaflet] [${cacheKey}] reading rasters took: ${durationReadRasters}ms`);\n          }\n          if (this.options.onReadRasters) {\n            this.options.onReadRasters({\n              data: tileRasters,\n              height: numberOfSamplesDown,\n              width: numberOfSamplesAcross\n            });\n          }\n          if (this.calcStats) {\n            const start_calc_stats = debugLevel >= 1 ? performance.now() : 0;\n            const {\n              noDataValue\n            } = this;\n            const original_ranges = Array.from(this.currentStats.ranges);\n            for (let bandIndex = 0; bandIndex < tileRasters.length; bandIndex++) {\n              let min = this.currentStats.mins[bandIndex];\n              let max = this.currentStats.maxs[bandIndex];\n              const band = tileRasters[bandIndex];\n              for (let rowIndex = 0; rowIndex < band.length; rowIndex++) {\n                const row = band[rowIndex];\n                for (let columnIndex = 0; columnIndex < row.length; columnIndex++) {\n                  const value = row[columnIndex];\n                  if (value !== noDataValue) {\n                    if (min === undefined || value < min) {\n                      min = value;\n                    }\n                    if (max === undefined || value > max) {\n                      max = value;\n                    }\n                  }\n                }\n              }\n              this.currentStats.mins[bandIndex] = min;\n              this.currentStats.maxs[bandIndex] = max;\n              this.currentStats.ranges[bandIndex] = max - min;\n            }\n            let redraw = false;\n            for (let bandIndex = 0; bandIndex < tileRasters.length; bandIndex++) {\n              const old_range = original_ranges[bandIndex];\n              const new_range = this.currentStats.ranges[bandIndex];\n              const diff_range = new_range - old_range;\n              const percentage_change = diff_range / old_range;\n              const threshold = 1 / 256;\n              if (percentage_change > threshold) {\n                redraw = true;\n                break;\n              }\n            }\n            if (redraw) {\n              if (debugLevel >= 1) console.log(\"[georaster-layer-for-leaflet] redrawing tiles\");\n              // invalidate cache because previous tiles used less accurate stats\n              this._cache = {\n                innerTile: {},\n                tile: {}\n              };\n              const tiles = this.getActiveTiles();\n\n              // redraw old tiles\n              tiles.forEach(tile => {\n                const {\n                  coords,\n                  el\n                } = tile;\n                this.drawTile({\n                  tile: el,\n                  coords,\n                  context: el.getContext(\"2d\"),\n                  resolution: el.resolution\n                });\n              });\n              if (debugLevel >= 1) console.log(\"[georaster-layer-for-leaflet] finished redrawing tiles\");\n            }\n            if (this._dynamic) {\n              const rawToRgbFn = rawToRgb.default || rawToRgb;\n              try {\n                this.rawToRgb = rawToRgbFn({\n                  format: \"string\",\n                  flip: typeof this.options.flip === \"boolean\" ? this.options.flip : this.currentStats.mins.length === 1 ? true : false,\n                  ranges: zip(this.currentStats.mins, this.currentStats.maxs),\n                  round: true\n                });\n              } catch (error) {\n                console.error(\"[georaster-layer-for-leaflet] error creating rawToRgb\");\n              }\n            }\n            if (timed) log(`updating statistics took ${performance.now() - start_calc_stats}ms`);\n          }\n          const start_ycbcr = timed ? performance.now() : 0;\n          await this.checkIfYCbCr;\n          if (timed) log(`checking if YCbCr took ${performance.now() - start_ycbcr}ms`);\n          const mask = await Promise.resolve(this.mask);\n          const {\n            pixelValuesToColorFn\n          } = this.options;\n\n          // paint the sampled data onto the canvas with and band math expressions applicable\n          // note: don't need forward or inverse because tileRasters is already warped to map projection\n          // note: we don't need to provide in_bbox and out_bbox because same\n          // - the following aren't applicable when drawing on a canvas: out_array_types, out_no_data, out_layout\n          // - we don't currently use out_bands and read_bands, but could probably allow users to use that\n          // don't need to provide out_pixel_depth because geowarp-canvas takes care of that\n          // - taken care of by geowapr-canvas: out_pixel_depth, out_height, out_width, method\n          // don't need to do round: true because our pixel-utils expr function takes care of that\n          // have to provide in_srs and out_srs in order to support clipping\n          const cutline_forward = mask ? this.getProjector(this.mask_srs, map_crs_code).forward : undefined;\n          if (this.debugLevel >= 4 && inSimpleCRS === false && mask) {\n            try {\n              const geojson = await reprojectGeoJSON(mask, {\n                from: this.mask_srs,\n                to: 4326\n              });\n              L.geoJSON(geojson, {\n                style: {\n                  color: \"#AAA\",\n                  fillOpacity: 0\n                }\n              }).addTo(this.getMap());\n            } catch (error) {\n              console.error(error);\n            }\n          }\n          const theoretical_min = this.calcStats ? fastMin(this.currentStats.mins) : undefined;\n          const theoretical_max = this.calcStats ? fastMax(this.currentStats.maxs) : undefined;\n          const in_stats = (() => {\n            if (this.stats) {\n              return zip(this.stats.mins, this.stats.maxs).map(([min, max]) => ({\n                min,\n                max\n              }));\n            } else if (this.calcStats && this.currentStats) {\n              return zip(this.currentStats.mins, this.currentStats.maxs).map(([min, max]) => ({\n                min,\n                max\n              }));\n            } else {\n              return undefined;\n            }\n          })();\n          const draw = !this.options.customDrawFunction ? undefined : ({\n            // deprecating rasterX and rasterY\n            context,\n            pixel,\n            rect: [x, y, width, height],\n            sample: [sampleX, sampleY] = [undefined, undefined]\n          }) => {\n            this.options.customDrawFunction({\n              canvas: tile,\n              values: pixel,\n              context,\n              x,\n              y,\n              width,\n              height,\n              sampleX,\n              sampleY,\n              sampledRaster: tileRasters\n            });\n          };\n          const expr = pixelValuesToColorFn ? ({\n            pixel\n          }) => pixelValuesToColorFn(pixel) : undefined;\n\n          // recalculate out_resolution based on sample data and canvas width and height\n          const out_resolution = [numberOfSamplesAcross > innerTileWidth ? 1 : numberOfSamplesAcross / innerTileWidth, numberOfSamplesDown > innerTileHeight ? 1 : numberOfSamplesDown / innerTileHeight];\n          geowarp({\n            plugins: [\"canvas\"],\n            // activate geowarp-canvas plugin\n            cutline: mask,\n            cutline_forward,\n            cutline_strategy: this.mask_strategy,\n            cutline_srs: this.mask_srs,\n            debug_level: debugLevel - 1,\n            in_bbox: extentOfInnerTileInMapCRS.bbox,\n            in_data: tileRasters,\n            in_height: numberOfSamplesDown,\n            in_layout: \"[band][row][column]\",\n            in_no_data: null,\n            in_srs: map_crs_code,\n            in_stats,\n            in_width: numberOfSamplesAcross,\n            out_bbox: extentOfInnerTileInMapCRS.bbox,\n            out_canvas: tile,\n            out_resolution,\n            out_srs: map_crs_code,\n            draw,\n            draw_strategy: \"canvas\",\n            method: \"near\",\n            // this is separate from the resampleMethod that does the actual reprojection\n            theoretical_min,\n            theoretical_max,\n            expr,\n            turbo: this.options.turbo ?? false,\n            skip_no_data_strategy: \"any\",\n            // don't bother trying to render pixels with no data values\n            before_warp: options => {\n              // provide backwards compatability\n              this.getColor = pixel => options.expr({\n                pixel\n              });\n            }\n          });\n          tile.style.visibility = \"visible\";\n        } catch (e) {\n          console.error(e);\n          error = e;\n        }\n        if (timed) console.log(`[georaster-layer-for-leaflet] [${cacheKey}] creating tile took ${performance.now() - start_draw_tile}ms`);\n        done && done(error, tile);\n      }, 0);\n\n      // return the tile so it can be rendered on screen\n      return tile;\n    } catch (error) {\n      console.error(error);\n      done && done(error, tile);\n    }\n  },\n  // copied from Leaflet with slight modifications,\n  // including removing the lines that set the tile size\n  _initTile: function (tile) {\n    L.DomUtil.addClass(tile, \"leaflet-tile\");\n    tile.onselectstart = L.Util.falseFn;\n    tile.onmousemove = L.Util.falseFn;\n\n    // update opacity on tiles in IE7-8 because of filter inheritance problems\n    if (L.Browser.ielt9 && this.options.opacity < 1) {\n      L.DomUtil.setOpacity(tile, this.options.opacity);\n    }\n\n    // without this hack, tiles disappear after zoom on Chrome for Android\n    // https://github.com/Leaflet/Leaflet/issues/2078\n    if (L.Browser.android && !L.Browser.android23) {\n      tile.style.WebkitBackfaceVisibility = \"hidden\";\n    }\n  },\n  // method from https://github.com/Leaflet/Leaflet/blob/bb1d94ac7f2716852213dd11563d89855f8d6bb1/src/layer/ImageOverlay.js\n  getBounds: function () {\n    this.initBounds();\n    return this._bounds;\n  },\n  getMap: function () {\n    return this._map || this._mapToAdd;\n  },\n  getMapCRS: function () {\n    var _this$getMap;\n    return ((_this$getMap = this.getMap()) === null || _this$getMap === void 0 ? void 0 : _this$getMap.options.crs) || L.CRS.EPSG3857;\n  },\n  // add in to ensure backwards compatability with Leaflet 1.0.3\n  _tileCoordsToNwSe: function (coords) {\n    const map = this.getMap();\n    const tileSize = this.getTileSize();\n    const nwPoint = coords.scaleBy(tileSize);\n    const sePoint = nwPoint.add(tileSize);\n    const nw = map.unproject(nwPoint, coords.z);\n    const se = map.unproject(sePoint, coords.z);\n    return [nw, se];\n  },\n  _tileCoordsToBounds: function (coords) {\n    const [nw, se] = this._tileCoordsToNwSe(coords);\n    let bounds = new L.LatLngBounds(nw, se);\n    if (!this.options.noWrap) {\n      const {\n        crs\n      } = this.getMap().options;\n      bounds = crs.wrapLatLngBounds(bounds);\n    }\n    return bounds;\n  },\n  // get extent of tile in the projection of the map\n  _tileCoordsToExtent: function (coords, debug = false) {\n    const crs = this.getMapCRS();\n    const tileSize = this.getTileSize();\n    const topLeft = coords.scaleBy(tileSize);\n    if (debug) console.log(\"topLeft:\", topLeft);\n    const bottomRight = topLeft.add(tileSize);\n    if (debug) console.log(\"bottomRight:\", bottomRight);\n    const scl = crs.scale(coords.z);\n    if (debug) console.log(\"scl:\", scl);\n    const {\n      x: xmin,\n      y: ymax\n    } = crs.transformation.untransform(topLeft, scl);\n    const {\n      x: xmax,\n      y: ymin\n    } = crs.transformation.untransform(bottomRight, scl);\n    const bbox = [xmin, ymin, xmax, ymax];\n    if (debug) console.log(\"bbox:\", bbox);\n    return new GeoExtent(bbox, {\n      srs: crs.code\n    });\n  },\n  getTileExtent: function (coords, debug = false) {\n    const crs = this.getMapCRS();\n    if (isSimpleCRS(crs)) {\n      const bounds = this._tileCoordsToBounds(coords);\n      return new GeoExtent(bounds, {\n        srs: \"simple\"\n      });\n    } else if (isDefaultCRS(crs)) {\n      const bounds = this._tileCoordsToBounds(coords);\n      return new GeoExtent(bounds, {\n        srs: 4326\n      });\n    } else {\n      return this._tileCoordsToExtent(coords, debug);\n    }\n  },\n  _isValidTile: function (coords) {\n    // console.log(\"_isValidTile from \", coords)\n    const crs = this.getMapCRS();\n    const bounds = this.getBounds();\n    if (!bounds) {\n      return true;\n    }\n    const {\n      x,\n      y,\n      z\n    } = coords;\n    const boundsOfTile = this.getTileExtent(coords);\n    if (isSimpleCRS(crs)) {\n      // if not within the original confines of the earth return false\n      // we don't want wrapping if using Simple CRS\n      return this.simpleExtent.overlaps(boundsOfTile);\n    }\n    if (!crs.infinite) {\n      // don't load tile if it's out of bounds and not wrapped\n      const globalBounds = this._globalTileRange;\n      if (!crs.wrapLng && (coords.x < globalBounds.min.x || coords.x > globalBounds.max.x) || !crs.wrapLat && (coords.y < globalBounds.min.y || coords.y > globalBounds.max.y)) {\n        return false;\n      }\n    }\n\n    // check if any raster's extent overlaps the given tile coordinates\n    // we check in both the srs of the georaster extents and the tile extent\n    // because sometimes reprojection acts weird around world boundaries\n    // it's better to try to render empty tiles than miss rendering tiles we should\n    if (this.subextents.some(extent => extent.overlaps(boundsOfTile))) {\n      return true;\n    }\n\n    // width of the globe in tiles at the given zoom level\n    const width = Math.pow(2, z);\n\n    // check one world to the left\n    const leftCoords = L.point(x - width, y);\n    leftCoords.z = z;\n    const leftBounds = this.getTileExtent(leftCoords);\n    if (this.subextents.some(extent => extent.overlaps(leftBounds))) return true;\n\n    // check one world to the right\n    const rightCoords = L.point(x + width, y);\n    rightCoords.z = z;\n    const rightBounds = this.getTileExtent(rightCoords);\n    if (this.subextents.some(extent => extent.overlaps(rightBounds))) return true;\n    return false;\n  },\n  // provided for backwards compatability\n  getColor: function (values) {\n    throw new Error(\"[georaster-layer-for-leaflet] please call getColor after creating at least one tile\");\n  },\n  /**\n   * Redraws the active map tiles updating the pixel values using the supplie callback\n   */\n  updateColors(pixelValuesToColorFn, {\n    debugLevel = -1\n  } = {\n    debugLevel: -1\n  }) {\n    if (!pixelValuesToColorFn) {\n      throw new Error(\"Missing pixelValuesToColorFn function\");\n    }\n\n    // if debugLevel is -1, set it to the default for the class\n    if (debugLevel === -1) debugLevel = this.debugLevel;\n    if (debugLevel >= 1) console.log(\"Start updating active tile pixel values\");\n\n    // update option to ensure correct colours at other zoom levels.\n    this.options.pixelValuesToColorFn = pixelValuesToColorFn;\n    const tiles = this.getActiveTiles();\n    if (!tiles) {\n      console.error(\"No active tiles available\");\n      return this;\n    }\n    if (debugLevel >= 1) console.log(\"Active tiles fetched\", tiles);\n    tiles.forEach(tile => {\n      const {\n        coords,\n        el\n      } = tile;\n      this.drawTile({\n        tile: el,\n        coords,\n        context: el.getContext(\"2d\"),\n        resolution: el.resolution\n      });\n    });\n    if (debugLevel >= 1) console.log(\"Finished updating active tile colours\");\n    return this;\n  },\n  getTiles() {\n    // transform _tiles object collection into an array\n    return Object.values(this._tiles);\n  },\n  getActiveTiles() {\n    const tiles = this.getTiles();\n    // only return valid tiles\n    return tiles.filter(tile => this._isValidTile(tile.coords));\n  },\n  isSupportedProjection: function (proj) {\n    return isUTM(proj) || proj in this.proj4.defs || `EPSG:${proj}` in this.proj4.defs;\n  },\n  initBounds: function (options) {\n    if (!options) options = this.options;\n    const maxWidth = Math.max(...this.georasters.map(georaster => georaster.width));\n    const maxHeight = Math.max(...this.georasters.map(georaster => georaster.height));\n    const maxValue = Math.max(maxWidth, maxHeight);\n    const aspect_ratio = maxWidth / maxHeight;\n\n    // want a little padding, so all tiles appear when fit bounds\n    // const maxBounds = Math.round(maxValue * 0.5);\n    const maxBounds = maxValue;\n    if (!this._bounds) {\n      const map_crs = this.getMapCRS();\n      if (isSimpleCRS(map_crs)) {\n        if (maxWidth === maxHeight) {\n          this._bounds = L.latLngBounds([ORIGIN, [maxBounds, maxBounds]]);\n        } else if (maxHeight > maxWidth) {\n          this._bounds = L.latLngBounds([ORIGIN, [maxBounds, maxBounds * aspect_ratio]]);\n        } else if (maxWidth > maxHeight) {\n          this._bounds = L.latLngBounds([ORIGIN, [maxBounds / aspect_ratio, maxBounds]]);\n        }\n      } else {\n        const bboxes_in_map_crs = this.subextents.map(extent => {\n          try {\n            return extent.reproj(4326, {\n              density: \"high\",\n              quiet: false\n            }).bbox;\n          } catch (error) {\n            throw \"GeoRasterLayer ran into an issue reprojecting.  Try adding the projection definition to your global proj4.\";\n          }\n        });\n        const [xmin, ymin, xmax, ymax] = bboxMerge(bboxes_in_map_crs);\n        this._bounds = L.latLngBounds([[ymin, xmin], [ymax, xmax]]);\n      }\n\n      // not sure if/why this is necessary\n      options.bounds = this._bounds;\n      if (this.debugLevel >= 1) console.log(\"bounds were intialized to:\", this._bounds);\n    }\n  },\n  same(array, key) {\n    return new Set(array.map(item => item[key])).size === 1;\n  },\n  clearCache() {\n    this.cache = {};\n  },\n  _getResolution(zoom) {\n    const {\n      resolution\n    } = this.options;\n    let resolutionValue;\n    if (typeof resolution === \"object\") {\n      const zoomLevels = Object.keys(resolution);\n      for (const key in zoomLevels) {\n        if (Object.prototype.hasOwnProperty.call(zoomLevels, key)) {\n          const zoomLvl = parseInt(zoomLevels[key]);\n          if (zoomLvl <= zoom) {\n            resolutionValue = resolution[zoomLvl];\n          } else {\n            break;\n          }\n        }\n      }\n    } else {\n      resolutionValue = resolution;\n    }\n    return resolutionValue;\n  }\n});\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nif (typeof window === \"object\") {\n  window[\"GeoRasterLayer\"] = GeoRasterLayer;\n}\nif (typeof self !== \"undefined\") {\n  self[\"GeoRasterLayer\"] = GeoRasterLayer;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nexport default GeoRasterLayer;\n\n// Explicitly exports public types", "import { prepareData, prepareUpdate } from \"xdim\";\nimport rawToRgba from \"../raw-to-rgba\";\nimport selectPixel from \"../select-pixel\";\n// fit raw bands to 8-bit color space\n// while slicing and scaling as necessary\nexport default function fit({\n  data,\n  debug_level = 0,\n  depth,\n  flip = false,\n  old_no_data_value,\n  old_layout,\n  no_data_strategy = \"partial\",\n  // png strategy\n  no_range_value,\n  no_range_value_strategy = \"top\",\n  new_layout = \"[row,column,band]\",\n  new_no_data_value,\n  height,\n  ranges,\n  width\n}) {\n  if (!ranges) throw new Error(\"[expand] can't expand without ranges\");\n  if (debug_level >= 1) console.log(\"[stretch] starting fit\");\n  if (typeof height !== \"number\") throw new Error(\"[fit] height must be a number\");\n  if (typeof width !== \"number\") throw new Error(\"[fit] height must be a number\");\n  if (typeof old_layout !== \"string\") throw new Error(\"[fit] old_layout must be a string\");\n  if (typeof new_layout !== \"string\") throw new Error(\"[fit] new_layout must be a string\");\n  const select = selectPixel(data, {\n    depth,\n    height,\n    layout: old_layout,\n    width\n  });\n  const out_sizes = {\n    band: 4,\n    row: height,\n    column: width\n  };\n  const {\n    data: out_data\n  } = prepareData({\n    fill: new_no_data_value,\n    layout: new_layout,\n    sizes: out_sizes\n  });\n  const convert = rawToRgba({\n    debug_level: debug_level - 1,\n    format: \"array\",\n    flip,\n    ranges,\n    new_no_data_value: new_no_data_value,\n    no_data_strategy: no_data_strategy,\n    no_range_value: no_range_value,\n    no_range_value_strategy: no_range_value_strategy,\n    old_no_data_value\n  });\n  const update = prepareUpdate({\n    data: out_data,\n    layout: new_layout,\n    sizes: out_sizes\n  });\n  for (let row = 0; row < height; row++) {\n    for (let column = 0; column < width; column++) {\n      const [r, g, b, a] = convert(select(row, column));\n      update({\n        point: {\n          band: 0,\n          row,\n          column\n        },\n        value: r\n      });\n      update({\n        point: {\n          band: 1,\n          row,\n          column\n        },\n        value: g\n      });\n      update({\n        point: {\n          band: 2,\n          row,\n          column\n        },\n        value: b\n      });\n      update({\n        point: {\n          band: 3,\n          row,\n          column\n        },\n        value: a\n      });\n    }\n  }\n  if (debug_level >= 1) console.log(\"[pixel-utils/fit] out_data:\", out_data);\n  return {\n    // @ts-ignore\n    data: out_data,\n    layout: new_layout\n  };\n}", "import { createScaleFunction } from \"quick-scale\";\nimport noDataArray from \"../make-no-data-rgba\";\nimport noDataString from \"../make-no-data-rgba-string\";\nimport convertSingle from \"./convert-single\";\nimport convertSingleString from \"./convert-single-str\";\nimport convertDouble from \"./convert-double\";\nimport convertDoubleString from \"./convert-double-str\";\nimport convertDoubleAll from \"./convert-double-all\";\nimport convertDoubleAllString from \"./convert-double-all-str\";\nimport convertMulti from \"./convert-multiband\";\nimport convertMultiString from \"./convert-multiband-str\";\nimport convertMultiAll from \"./convert-multiband-all\";\nimport convertMultiAllString from \"./convert-multiband-all-str\";\nexport default function rawToRgba({\n  debug_level = 0,\n  format = \"array\",\n  ranges,\n  flip = false,\n  new_no_data_value,\n  no_data_strategy,\n  no_range_value,\n  no_range_value_strategy,\n  old_no_data_value\n}) {\n  if (debug_level >= 1) console.log(\"[pixel-utils/raw-to-rgba] ranges:\", ranges);\n  const nbands = ranges.length;\n  const new_range = [0 === new_no_data_value ? 1 : 0, 255 === new_no_data_value ? 254 : 255];\n  if (debug_level >= 1) console.log(\"[pixel-utils/raw-to-rgba] new_range:\", new_range);\n  const options = {\n    no_data_value: new_no_data_value,\n    flip,\n    no_range_value,\n    no_range_value_strategy,\n    round: true\n  };\n  if (debug_level >= 1) console.log(\"[pixel-utils/raw-to-rgba] options:\", options);\n  const scalefns = ranges.slice(0, 3).map(rng => createScaleFunction(rng, new_range, options));\n  if (nbands === 1) {\n    if (format === \"string\") {\n      // @ts-ignore\n      return convertSingleString.bind(null, old_no_data_value, noDataString(new_no_data_value !== null && new_no_data_value !== void 0 ? new_no_data_value : \"null\"), scalefns[0]);\n    } else if (format === \"array\") {\n      // @ts-ignore\n      return convertSingle.bind(null, old_no_data_value, noDataArray(new_no_data_value), scalefns[0]);\n    }\n  } else if (nbands === 2) {\n    if (no_data_strategy === \"all\") {\n      if (format === \"string\") {\n        // @ts-ignore\n        return convertDoubleAllString.bind(null, old_no_data_value, noDataString(new_no_data_value !== null && new_no_data_value !== void 0 ? new_no_data_value : \"null\"), ...scalefns);\n      } else if (format === \"array\") {\n        // @ts-ignore\n        return convertDoubleAll.bind(null, old_no_data_value, noDataArray(new_no_data_value), ...scalefns);\n      }\n    } else {\n      if (format === \"string\") {\n        // @ts-ignore\n        return convertDoubleString.bind(null, old_no_data_value, new_no_data_value !== null && new_no_data_value !== void 0 ? new_no_data_value : \"null\", ...scalefns);\n      } else if (format === \"array\") {\n        // @ts-ignore\n        return convertDouble.bind(null, old_no_data_value, new_no_data_value, ...scalefns);\n      }\n    }\n  } else if (nbands >= 3) {\n    if (no_data_strategy === \"all\") {\n      if (format === \"string\") {\n        // @ts-ignore\n        return convertMultiAllString.bind(null, old_no_data_value, noDataString(new_no_data_value), ...scalefns);\n      } else if (format === \"array\") {\n        // @ts-ignore\n        return convertMultiAll.bind(null, old_no_data_value, noDataArray(new_no_data_value), ...scalefns);\n      }\n    } else {\n      if (format === \"string\") {\n        // @ts-ignore\n        return convertMultiString.bind(null, old_no_data_value, new_no_data_value, ...scalefns);\n      } else if (format === \"array\") {\n        // @ts-ignore\n        return convertMulti.bind(null, old_no_data_value, new_no_data_value, ...scalefns);\n      }\n    }\n  }\n  throw Error(\"uh oh\");\n}", "export let Layout;\n(function (Layout) {\n  Layout[\"[band][row][column]\"] = \"[band][row][column]\";\n  Layout[\"[band][row,column]\"] = \"[band][row,column]\";\n  Layout[\"[band,row,column]\"] = \"[band,row,column]\";\n  Layout[\"[row,column,band]\"] = \"[row,column,band]\";\n  Layout[\"[row,column][band]\"] = \"[row,column][band]\";\n  Layout[\"[row][column][band]\"] = \"[row][column][band]\";\n  Layout[\"[row][column,band]\"] = \"[row][column,band]\";\n})(Layout || (Layout = {}));", "export default function makeNoDataRGB(noDataValue) {\n  // typescript not smart enough to realize all values in the array will be the same\n  // @ts-ignore\n  return [noDataValue, noDataValue, noDataValue];\n}", "import { createScaleFunction } from \"quick-scale\";\nimport makeNoDataRGB from \"../make-no-data-rgb\";\nimport convertSingle from \"./convert-single\";\nimport convertSingleStr from \"./convert-single-str\";\nimport convertDouble from \"./convert-double\";\nimport convertDoubleStr from \"./convert-double-str\";\nimport convertTriple from \"./convert-triple\";\nimport convertTripleStr from \"./convert-triple-str\";\nimport convertMulti from \"./convert-many\";\nimport convertMultiStr from \"./convert-many-str\";\nimport rgbToStr from \"../rgb-to-str\";\nexport default function rawToRgb({\n  format = \"array\",\n  ranges,\n  flip,\n  new_no_data_pixel,\n  new_no_data_value,\n  no_range_value,\n  no_range_value_strategy,\n  old_no_data_value,\n  round = true\n}) {\n  const nbands = ranges.length;\n  if (new_no_data_pixel && new_no_data_value) {\n    throw new Error(\"[pixel-utils/raw-to-rgb] can't specify both new_no_data_pixel and new_no_data_value\");\n  }\n  if (new_no_data_pixel === undefined || new_no_data_pixel === null) {\n    if (new_no_data_value === undefined || new_no_data_value === null) {\n      new_no_data_pixel = makeNoDataRGB(null);\n    } else {\n      new_no_data_pixel = makeNoDataRGB(new_no_data_value);\n    }\n  }\n  if (new_no_data_pixel === undefined) throw new Error(\"[raw-to-rgb] undefined new_no_data_pixel\");\n  const new_range = [0 === new_no_data_value ? 1 : 0, 255 === new_no_data_value ? 254 : 255];\n  const options = {\n    flip,\n    no_range_value,\n    no_range_value_strategy,\n    round\n  };\n  const scalefns = ranges.slice(0, 3).map(rng => createScaleFunction(rng, new_range, options));\n  if (nbands === 1) {\n    if (format === \"string\") {\n      // @ts-ignore\n      return convertSingleStr.bind(null, old_no_data_value, rgbToStr(new_no_data_pixel), ...scalefns);\n    } else {\n      // @ts-ignore\n      return convertSingle.bind(null, old_no_data_value, new_no_data_pixel, ...scalefns);\n    }\n  } else if (nbands === 2) {\n    if (format === \"string\") {\n      // @ts-ignore\n      return convertDoubleStr.bind(null, old_no_data_value, rgbToStr(new_no_data_pixel), ...scalefns);\n    } else {\n      // @ts-ignore\n      return convertDouble.bind(null, old_no_data_value, new_no_data_pixel, ...scalefns);\n    }\n  } else if (nbands === 3) {\n    if (format === \"string\") {\n      // @ts-ignore\n      return convertTripleStr.bind(null, old_no_data_value, rgbToStr(new_no_data_pixel), ...scalefns);\n    } else {\n      // @ts-ignore\n      return convertTriple.bind(null, old_no_data_value, new_no_data_pixel, ...scalefns);\n    }\n  } else if (nbands >= 4) {\n    if (format === \"string\") {\n      // @ts-ignore\n      return convertMultiStr.bind(null, old_no_data_value, rgbToStr(new_no_data_pixel), ...scalefns);\n    } else {\n      // @ts-ignore\n      return convertMulti.bind(null, old_no_data_value, new_no_data_pixel, ...scalefns);\n    }\n  } else {\n    throw new Error(\"[pixel-utils/raw-to-rgb] invalid number of bands: \" + nbands);\n  }\n}", "export default function convert_raw_one_band_pixel_to_rgb(noDataValue, noDataPixel, scale, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  const scaled = scale(pixel[0]);\n  return [scaled, scaled, scaled];\n}", "export default function convert_raw_one_band_pixel_to_rgb_str(noDataValue, noDataPixel, scale, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  const scaled = scale(pixel[0]);\n  return \"rgb(\" + scaled + \", \" + scaled + \", \" + scaled + \")\";\n}", "export default function convert_raw_two_band_pixel_to_rgb(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return [scaleFunction1(pixel[0]), scaleFunction2(pixel[1]), 0];\n}", "export default function convert_raw_two_band_pixel_to_rgb_str(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return \"rgb(\" + scaleFunction1(pixel[0]) + \", \" + scaleFunction2(pixel[1]) + \", 0)\";\n}", "export default function convert_raw_three_band_pixel_to_rgb(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, scaleFunction3, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return [scaleFunction1(pixel[0]), scaleFunction2(pixel[1]), scaleFunction3(pixel[2])];\n}", "export default function convert_raw_three_band_pixel_to_rgb_css(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, scaleFunction3, pixel) {\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return \"rgb(\" + scaleFunction1(pixel[0]) + \", \" + scaleFunction2(pixel[1]) + \", \" + scaleFunction3(pixel[2]) + \")\";\n}", "export default function convert_raw_two_band_pixel_to_rgb(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, scaleFunction3, pixel) {\n  pixel = pixel.slice(0, 3);\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return [scaleFunction1(pixel[0]), scaleFunction2(pixel[1]), scaleFunction3(pixel[2])];\n}", "export default function convert_raw_two_band_pixel_to_rgb_str(noDataValue, noDataPixel, scaleFunction1, scaleFunction2, scaleFunction3, pixel) {\n  pixel = pixel.slice(0, 3);\n  if (pixel.includes(noDataValue)) return noDataPixel;\n  return \"rgb(\" + scaleFunction1(pixel[0]) + \", \" + scaleFunction2(pixel[1]) + \", \" + scaleFunction3(pixel[2]) + \")\";\n}", "// prettier-ignore\nexport default function rgbToStr([r, g, b]) {\n  return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n}", "\"use strict\";\n\n/****\n * TO DO:\n * add support for GeoJSON and need to check projection of GeoJSON\n */\nimport add from \"preciso/add.js\";\nimport divide from \"preciso/divide.js\";\nimport multiply from \"preciso/multiply.js\";\nimport subtract from \"preciso/subtract.js\";\n\nimport bboxArray from \"bbox-fns/bbox-array.js\";\nimport booleanContains from \"bbox-fns/boolean-contains.js\";\nimport booleanIntersects from \"bbox-fns/boolean-intersects.js\";\nimport densePolygon from \"bbox-fns/dense-polygon.js\";\nimport unwrap from \"bbox-fns/unwrap.js\";\n\nimport getEPSGCode from \"get-epsg-code\";\nimport { Envelope } from \"geography-markup-language\";\nimport reprojectBoundingBox from \"reproject-bbox\";\nimport reprojectGeoJSON from \"reproject-geojson\";\n\nconst avg = (a, b) => divide(add(a.toString(), b.toString()), \"2\");\nconst isAry = o => Array.isArray(o);\nconst isDef = o => o !== undefined && o !== null && o !== \"\";\nconst isFunc = o => typeof o === \"function\";\n\n// identifying GeoJSON currently unused\n// shouldn't rely on type being provided\n// because sometimes the rest could be valid but no type is provided\n// const isFeatureCollection = it => isObj(it) && it.type === \"FeatureCollection\" && hasKey(it, \"features\");\n// const isFeature = it => isObj(it) && it.type === \"Feature\" && hasKey(it, \"geometry\");\n// const isGeometryCollection = it => isObj(it) && it.type === \"GeometryCollection\" && hasKey(\"geometries\");\n// const isMultiPolygon = it => isObj(it) && it.type === \"MultiPolygon\" && hasKey(it, \"coordinates\");\n// const isPolygon = it => isObj(it) && it.type === \"Polygon\" && hasKey(it, \"coordinates\");\n// const isPoint = it => isObj(it) && it.type === \"Point\" && hasKey(it, \"coordinates\");\n// const isMultiPoint = it => isObj(it) && isObj.type === \"MultiPoint\" && hasKey(it, \"coordinates\");\n\nconst isObj = o => typeof o === \"object\";\nconst isStr = o => typeof o === \"string\";\nconst isNum = o => typeof o === \"number\";\nconst isBoxStr = o => isStr(o) && !!o.match(/^[-|+]?[\\d\\.]+(, ?[-|+]?[\\d\\.]+){3}$/);\nconst isLeafletBounds = it =>\n  isObj(it) && hasFuncs(it, [\"getBottomLeft\", \"getBottomRight\", \"getTopLeft\", \"getTopRight\"]);\nconst isLeafletBoundsJSON = it =>\n  isObj(it) &&\n  typeof it.min === \"object\" &&\n  typeof it.min.x === \"number\" &&\n  typeof it.min.y === \"number\" &&\n  typeof it.max === \"object\" &&\n  typeof it.max.x === \"number\" &&\n  typeof it.max.y === \"number\";\nconst isLeafletLatLngBounds = o => isObj(o) && hasFuncs(o, [\"getEast\", \"getNorth\", \"getSouth\", \"getWest\"]);\nconst isLeafletLatLngBoundsJSON = o => isObj(o) && hasKeys(o, [\"_southWest\", \"_northEast\"]);\nconst wkt = bbox => {\n  const [xmin, ymin, xmax, ymax] = bbox;\n  return `POLYGON((${xmax} ${ymin},${xmax} ${ymax},${xmin} ${ymax},${xmin} ${ymin},${xmax} ${ymin}))`;\n};\n\nconst hasFunc = (o, f) => isObj(o) && isFunc(o[f]);\nconst hasObj = (o, k) => isObj(o) && isObj(o[k]);\nconst hasFuncs = (o, fs) => fs.every(f => hasFunc(o, f));\nconst hasObjs = (o, ks) => ks.every(k => hasObj(o, k));\nconst hasKey = (o, k) => isObj(o) && o[k] !== undefined && o[k] !== null;\nconst hasKeys = (o, ks) => ks.every(k => hasKey(o, k));\nconst allNums = ary => isAry(ary) && ary.every(isNum);\nconst allStrs = ary => isAry(ary) && ary.every(isStr);\nconst getConstructor = o => (typeof obj === \"object\" && typeof obj.constructor === \"function\") || undefined;\nconst normalize = srs => {\n  if (!srs) return srs;\n  if (srs === 32767 || srs === \"EPSG:32767\") return null;\n  if (isStr(srs) && srs.startsWith(\"EPSG:\")) return srs;\n  if (isStr(srs) && srs.match(/^\\d+$/)) return \"EPSG:\" + srs;\n  else if (isNum(srs)) return \"EPSG:\" + srs;\n  const code = getEPSGCode(srs);\n  if (isNum(code)) return \"EPSG:\" + code;\n  return srs;\n};\n\n// currently unused\n// const getConstructorName = o =>\n//   (typeof obj === \"object\" &&\n//     typeof obj.constructor === \"function\" &&\n//     typeof obj.constructor.name === \"string\" &&\n//     obj.constructor.name) ||\n//   undefined;\n\n// const forEachCoord = (data, cb) => {\n//   if (data.features) data.features.forEach(forEachCoord);\n//   else if (data.geometry) forEachCoord(data.geometry);\n//   else if (data.coordinates) forEachCoord(data.coordinates);\n//   else if (Array.isArray(data) && Array.isArray(data[0])) data.map(forEachCoord);\n//   else if (Array.isArray(data) && (data.length === 2 || data.length === 3) && typeof data[0] === \"number\") {\n//     const [x, y, z] = data;\n//     cb({ x, y, z });\n//   }\n// };\n\n// const getExtentOfGeoJSON = geojson => {\n//   let xmin, xmax, ymin, ymax;\n//   if (geojson.features) {\n\n//   }\n// }\n\nexport class GeoExtent {\n  constructor(o, { srs } = {}) {\n    this.srs = normalize(srs);\n\n    let xmin, xmax, ymin, ymax;\n    let xmin_str, xmax_str, ymin_str, ymax_str;\n    if (getConstructor(o) === this.constructor) {\n      ({ xmin, xmax, ymin, ymax } = o);\n      if (isDef(o.srs)) {\n        this.srs = normalize(o.srs);\n      }\n    }\n\n    if (isBoxStr(o)) o = o.split(/, ?/);\n\n    if (isAry(o) && o.length === 4 && allNums(o)) {\n      [xmin, ymin, xmax, ymax] = o;\n    } else if (isAry(o) && o.length === 4 && allStrs(o)) {\n      [xmin_str, ymin_str, xmax_str, ymax_str] = o;\n      [xmin, ymin, xmax, ymax] = o.map(str => Number(str));\n    } else if (isAry(o) && o.length === 2 && o.every(isAry) && o.every(o => o.length === 2 && allNums(o))) {\n      [[ymin, xmin], [ymax, xmax]] = o;\n    } else if (isLeafletLatLngBounds(o)) {\n      (xmin = o.getWest()), (xmax = o.getEast()), (ymin = o.getSouth()), (ymax = o.getNorth());\n      if (!isDef(this.srs)) this.srs = \"EPSG:4326\";\n    } else if (isLeafletBounds(o)) {\n      ({ x: xmin, y: ymin } = o.getBottomLeft()), ({ x: xmax, y: ymax } = o.getTopRight());\n    } else if (isLeafletLatLngBoundsJSON(o)) {\n      ({\n        _southWest: { lat: ymin, lng: xmin },\n        _northEast: { lat: ymax, lng: xmax }\n      } = o);\n      if (!isDef(this.srs)) this.srs = \"EPSG:4326\";\n    } else if (isLeafletBoundsJSON(o)) {\n      ({\n        min: { x: xmin, y: ymin },\n        max: { x: xmax, y: ymax }\n      } = o);\n    } else if (isAry(o) && o.length === 2 && o.every(it => hasKeys(it, [\"x\", \"y\"]))) {\n      [{ x: xmin, y: ymin }, { x: xmax, y: ymax }] = o;\n    } else if (isObj(o) && hasKeys(o, [\"x\", \"y\"]) && isNum(o.x) && isNum(o.y)) {\n      // receive a point like { x: 147, y: -18 } because isn't a point\n      // really just an extent with zero height and width?\n      xmin = xmax = o.x;\n      ymin = ymax = o.y;\n      if (hasKey(o, \"spatialReference\") && hasKey(o.spatialReference, \"wkid\")) {\n        if (!isDef(this.srs)) this.srs = normalize(o.spatialReference.wkid);\n      }\n    } else if (isObj(o) && hasKeys(o, [\"xmin\", \"xmax\", \"ymin\", \"ymax\"])) {\n      ({ xmin, xmax, ymin, ymax } = o);\n      const keys = [\"srs\", \"crs\", \"proj\", \"projection\"];\n\n      for (let i = 0; i < keys.length; i++) {\n        const k = keys[i];\n        const v = o[k];\n        const normalized = normalize(v);\n        if (normalized) {\n          this.srs = normalized;\n          break;\n        }\n      }\n\n      if (!this.srs && isDef(o.srs)) {\n        this.srs = o.srs;\n      }\n    } else if (isAry(o) && o.length === 2 && allNums(o)) {\n      // assume [ x , y ]\n      xmin = xmax = o[0];\n      ymin = ymax = o[1];\n    } else if (isObj(o) && hasFuncs(o, [\"getCoordinates\"])) {\n      const xy = o.getCoordinates();\n      xmin = xmax = xy[0];\n      ymin = ymax = xy[1];\n    } else if (isObj(o) && hasKey(o, \"bbox\") && o.bbox.length === 4 && allNums(o)) {\n      // like GeoJSON with bbox property set\n      // { type: \"Feature\", \"bbox\": [-37, 7, 12, 67 ], \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [...] } }\n      [xmin, ymin, xmax, ymax] = o.bbox;\n    } else if (hasObj(o, \"_bounds\") && isLeafletLatLngBounds(o._bounds)) {\n      const { _bounds } = o;\n      (xmin = _bounds.getWest()), (xmax = _bounds.getEast()), (ymin = _bounds.getSouth()), (ymax = _bounds.getNorth());\n      if (!this.srs) this.srs = \"EPSG:4326\";\n    } else if (isObj(o) && isObj(o._bounds) && hasObjs(o._bounds, [\"_southWest\", \"_northEast\"])) {\n      ({ lat: ymin, lng: xmin } = o._bounds._southWest);\n      ({ lat: ymax, lng: xmax } = o._bounds._northEast);\n      if (!isDef(this.srs)) this.srs = \"EPSG:4326\";\n    } else if (isStr(o) && o.toLowerCase().includes(\"envelope\")) {\n      const envelope = Envelope(o);\n      if (envelope.corners) {\n        [[xmin, ymin], [xmax, ymax]] = envelope.corners;\n      }\n      if (envelope.srs) {\n        if (envelope.srs.startsWith(\"urn\") && envelope.srs.includes(\"EPSG:\")) {\n          // ex: \"urn:ogc:def:crs:EPSG:9.0:26986\"\n          this.srs = \"EPSG:\" + envelope.srs.split(\":\").pop();\n        } else if (/^EPSG:\\d+/.test(envelope.srs)) {\n          this.srs = envelope.srs;\n        }\n      }\n    } else {\n      throw new Error(\"[geo-extent] unknown format\");\n    }\n\n    this.xmin = xmin;\n    this.xmin_str = xmin_str || xmin.toString();\n    this.ymin = ymin;\n    this.ymin_str = ymin_str || ymin.toString();\n    this.xmax = xmax;\n    this.xmax_str = xmax_str || xmax.toString();\n    this.ymax = ymax;\n    this.ymax_str = ymax_str || ymax.toString();\n\n    this.width_str = subtract(this.xmax_str, this.xmin_str);\n    this.width = Number(this.width_str);\n\n    this.height_str = subtract(this.ymax_str, this.ymin_str);\n    this.height = Number(this.height_str);\n\n    // corners\n    this.bottomLeft = { x: xmin, y: ymin };\n    this.bottomRight = { x: xmax, y: ymin };\n    this.topLeft = { x: xmin, y: ymax };\n    this.topRight = { x: xmax, y: ymax };\n\n    this.leafletBounds = [\n      [this.ymin, this.xmin],\n      [this.ymax, this.xmax]\n    ];\n\n    this.area_str = multiply(this.width_str, this.height_str);\n    this.area = Number(this.area_str);\n\n    this.perimeter_str = add(multiply(this.width_str, \"2\"), multiply(this.height_str, \"2\"));\n    this.perimeter = Number(this.perimeter_str);\n\n    this.bbox = [xmin, ymin, xmax, ymax];\n    this.bbox_str = [this.xmin_str, this.ymin_str, this.xmax_str, this.ymax_str];\n\n    this.center_str = {\n      x: avg(xmin_str || xmin, xmax_str || xmax),\n      y: avg(ymin_str || ymin, ymax_str || ymax)\n    };\n    this.center = { x: Number(this.center_str.x), y: Number(this.center_str.y) };\n\n    this.str = this.bbox_str.join(\",\");\n\n    this.wkt = wkt(this.bbox_str);\n\n    this.ewkt = (this.srs?.startsWith(\"EPSG:\") ? this.srs.replace(\"EPSG:\", \"SRID=\") + \";\" : \"\") + this.wkt;\n\n    this.js = `new GeoExtent([${this.bbox_str.join(\", \")}]${this.srs ? `, { srs: ${JSON.stringify(this.srs)} }` : \"\"})`;\n  }\n\n  _pre(_this, _other) {\n    // convert other to an extent instance (if not already)\n    _other = new this.constructor(_other);\n\n    if (!isDef(_this.srs) && !isDef(_other.srs)) {\n      // assume same/no projection\n    } else if (isDef(_this.srs) && !isDef(_other.srs)) {\n      // assume other is the same srs as this\n      _other = new _this.constructor({ ..._other, srs: _this.srs });\n    } else if (!isDef(_this.srs) && isDef(_other.srs)) {\n      // assume this' srs is the same as other\n      _this = new _this.constructor({ ..._this, srs: _other.srs });\n    } else if (isDef(_this.srs) && isDef(_other.srs) && _this.srs !== _other.srs) {\n      _other = _other.reproj(_this.srs);\n    } else if (isDef(_this.srs) && isDef(_other.srs) && _this.srs === _other.srs) {\n      // same projection, so no reprojection necessary\n    } else {\n      throw \"UH OH\";\n    }\n    return [_this, _other];\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  _contains(other, { quiet = false } = { quiet: false }) {\n    try {\n      const [_this, _other] = this._pre(this, other);\n\n      return booleanContains(_this.bbox, _other.bbox);\n    } catch (error) {\n      if (!quiet) throw error;\n    }\n  }\n\n  contains(other, { debug_level = 0, quiet = true } = { debug_level: 0, quiet: true }) {\n    const result = this._contains(other, { quiet: true });\n    if (typeof result === \"boolean\") return result;\n\n    if (isDef(this.srs) && isDef(other.srs)) {\n      try {\n        // try reprojecting to projection of second bbox\n        const this2 = this.reproj(other.srs);\n        const result2 = this2._contains(other, { quiet: true });\n        if (typeof result2 === \"boolean\") return result2;\n      } catch (error) {\n        if (debug_level >= 1) console.error(error);\n      }\n\n      try {\n        // previous attempt was inconclusive, so try again by converting everything to 4326\n        const this4326 = this.reproj(4326);\n        const other4326 = other.reproj(4326);\n        const result4326 = this4326._contains(other4326, { quiet: true });\n        if (typeof result4326 === \"boolean\") return result4326;\n      } catch (error) {\n        if (debug_level >= 1) console.error(error);\n      }\n    }\n\n    if (!quiet)\n      throw new Error(\n        `[geo-extent] failed to determine if ${this.bbox} in srs ${this.srs} contains ${other.bbox} in srs ${other.srs}`\n      );\n  }\n\n  // should return null if no overlap\n  crop(other) {\n    other = new this.constructor(other);\n\n    // if really no overlap then return null\n    if (!this.overlaps(other)) {\n      return null;\n    }\n\n    // first check if other fully contains this extent\n    // in which case, we don't really need to crop\n    // and can just return the extent of this\n    if (other.contains(this)) return this.clone();\n\n    // check if special case where other crosses 180th meridian\n    if (other.srs === \"EPSG:4326\" && (other.xmin < -180 || other.xmax > 180)) {\n      const parts = other.unwrap();\n\n      let cropped = parts.map(it => this.crop(it));\n\n      // filter out any parts that are null (didn't overlap)\n      cropped = cropped.filter(Boolean);\n\n      // no overlap\n      if (cropped.length === 0) return null;\n\n      let combo = cropped[0];\n      for (let i = 1; i < cropped.length; i++) combo = combo.combine(cropped[i]);\n\n      return combo;\n    }\n\n    // if both this and other have srs defined reproject\n    // otherwise, assume they are the same projection\n    let another = isDef(this.srs) && isDef(other.srs) ? other.reproj(this.srs, { quiet: true }) : other.clone();\n    if (another) {\n      if (!this.overlaps(another)) return null;\n      const xmin = Math.max(this.xmin, another.xmin);\n      const ymin = Math.max(this.ymin, another.ymin);\n      const xmax = Math.min(this.xmax, another.xmax);\n      const ymax = Math.min(this.ymax, another.ymax);\n      return new this.constructor([xmin, ymin, xmax, ymax], { srs: this.srs });\n    }\n\n    // fall back to converting everything to 4326 and cropping there\n    const this4326 = isDef(this.srs) ? this.reproj(4326) : this;\n    const other4326 = isDef(other.srs) ? other.reproj(4326) : other;\n    const [aMinLon, aMinLat, aMaxLon, aMaxLat] = this4326.bbox;\n    const [bMinLon, bMinLat, bMaxLon, bMaxLat] = other4326.bbox;\n\n    if (!this4326.overlaps(other4326)) return null;\n\n    const minLon = Math.max(aMinLon, bMinLon);\n    const minLat = Math.max(aMinLat, bMinLat);\n    const maxLon = Math.min(aMaxLon, bMaxLon);\n    const maxLat = Math.min(aMaxLat, bMaxLat);\n    return new this.constructor([minLon, minLat, maxLon, maxLat], { srs: 4326 }).reproj(this.srs);\n  }\n\n  // add two extents together\n  // result is a new extent in the projection of this\n  combine(other) {\n    if (isDef(this.srs) && isDef(other.srs)) {\n      other = other.reproj(this.srs);\n    }\n\n    const xmin = Math.min(this.xmin, other.xmin);\n    const xmax = Math.max(this.xmax, other.xmax);\n    const ymin = Math.min(this.ymin, other.ymin);\n    const ymax = Math.max(this.ymax, other.ymax);\n\n    return new this.constructor({ xmin, xmax, ymin, ymax, srs: this.srs });\n  }\n\n  equals(other, { digits = 13, strict = true } = { digits: 13, strict: true }) {\n    // convert other to GeoExtent if necessary\n    other = new this.constructor(other);\n\n    if (isDef(this.srs) && isDef(other.srs)) {\n      other = other.reproj(this.srs);\n    } else if (strict && isDef(this.srs) !== !isDef(this.srs)) {\n      return false;\n    }\n    const str1 = this.bbox.map(n => n.toFixed(digits)).join(\",\");\n    const str2 = other.bbox.map(n => n.toFixed(digits)).join(\",\");\n    return str1 === str2;\n  }\n\n  /*\n    shouldn't accept GeoJSON as input because the extent created from a GeoJSON\n    might overlap, but the actual polygon wouldn't.\n    Or at least make the user have to be explicit about the functionality via\n    a flag like overlaps(geojson, { strict: false })\n  */\n  _overlaps(other, { quiet = false } = { quiet: false }) {\n    try {\n      const [_this, _other] = this._pre(this, other);\n\n      return booleanIntersects(_this.bbox, _other.bbox);\n    } catch (error) {\n      if (quiet) return;\n      else throw error;\n    }\n  }\n\n  overlaps(other, { quiet = true, strict = false } = { quiet: true, strict: false }) {\n    if (this._overlaps(other, { quiet })) {\n      return true;\n    }\n\n    if (strict) return false;\n\n    // if already in same projection or none at all,\n    // don't bother trying different projections\n    if (this.srs === other.srs || (!this.srs && !other.srs)) {\n      return false;\n    }\n\n    // if not strict, try finding overlap in reverse and 4326\n    other = new this.constructor(other);\n    if (other._overlaps(this, { quiet: true })) {\n      return true;\n    }\n\n    // check 4326\n    if (this.srs && other.srs) {\n      if (this.reproj(4326)._overlaps(other.reproj(4326))) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  reproj(\n    to,\n    {\n      allow_infinity = false,\n      debug_level = 0,\n      density = \"high\",\n      shrink = false,\n      shrink_density = 100,\n      split = true,\n      quiet = false\n    } = {\n      allow_infinity: false,\n      debug_level: 0,\n      density: \"high\",\n      shrink: false,\n      split: true,\n      quiet: false\n    }\n  ) {\n    to = normalize(to); // normalize srs\n\n    // don't need to reproject, so just return a clone\n    if (isDef(this.srs) && this.srs === normalize(to)) return this.clone();\n\n    if (!isDef(this.srs)) {\n      if (quiet) return;\n      throw new Error(`[geo-extent] cannot reproject ${this.bbox} without a projection set`);\n    }\n\n    // unwrap, reproject pieces, and combine\n    if (this.srs === \"EPSG:4326\" && (this.xmin < -180 || this.xmax > 180)) {\n      try {\n        const parts = this.unwrap().map(ext => ext.reproj(to));\n        let combo = parts[0];\n        for (let i = 1; i < parts.length; i++) combo = combo.combine(parts[i]);\n        return combo;\n      } catch (error) {\n        if (quiet) return;\n        throw error;\n      }\n    }\n\n    if (density === \"lowest\") density = 0;\n    else if (density === \"low\") density = 1;\n    else if (density === \"medium\") density = 10;\n    else if (density === \"high\") density = 100;\n    else if (density === \"higher\") density = 1000;\n    else if (density === \"highest\") density = 10000;\n\n    let reprojected;\n    try {\n      const options = {\n        bbox: this.bbox,\n        density,\n        from: this.srs,\n        split,\n        to\n      };\n      reprojected = reprojectBoundingBox(options);\n    } catch (error) {\n      if (debug_level) console.error(error);\n    }\n\n    if (reprojected?.every(isFinite)) {\n      return new GeoExtent(reprojected, { srs: to });\n    }\n\n    // as a fallback, try reprojecting to EPSG:4326 then to the desired srs\n    if (to !== 4326) {\n      let bbox_4326;\n      try {\n        bbox_4326 = reprojectBoundingBox({\n          bbox: this.bbox,\n          density,\n          from: this.srs,\n          split,\n          to: 4326\n        });\n      } catch (error) {\n        if (debug_level) console.error(\"failed to create intermediary bbox in EPSG:4326\");\n      }\n\n      if (bbox_4326) {\n        try {\n          reprojected = reprojectBoundingBox({\n            bbox: bbox_4326,\n            density,\n            from: 4326,\n            split,\n            to\n          });\n        } catch (err) {\n          if (debug_level) console.error(`failed to reproject from intermediary bbox ${bbox_4326} in 4326 to ${to}`);\n        }\n      }\n    }\n\n    if (reprojected && (allow_infinity || reprojected?.every(isFinite))) {\n      return new GeoExtent(reprojected, { srs: to });\n    }\n\n    // if really haven't gotten a solution yet,\n    // such as when reprojecting globe into Web Mercator\n    // reproject with shrinking and highest density\n    if (shrink) {\n      try {\n        if (shrink_density === \"lowest\") shrink_density = 1;\n        else if (shrink_density === \"low\") shrink_density = 2;\n        else if (shrink_density === \"medium\") shrink_density = 10;\n        else if (shrink_density === \"high\") shrink_density = 100;\n        else if (shrink_density === \"higher\") shrink_density = 1000;\n        else if (shrink_density === \"highest\") shrink_density = 10000;\n\n        reprojected = reprojectBoundingBox({\n          bbox: this.bbox,\n          density: shrink_density,\n          from: this.srs,\n          nan_strategy: \"skip\",\n          split: true,\n          to\n        });\n      } catch (err) {\n        if (debug_level) console.error(`failed to reproject from bbox ${this.bbox} with shrinking to ${to}`);\n      }\n    }\n\n    if (reprojected && (allow_infinity || reprojected?.every(isFinite))) {\n      return new GeoExtent(reprojected, { srs: to });\n    } else if (quiet) {\n      return;\n    } else {\n      throw new Error(`[geo-extent] failed to reproject ${this.bbox} from ${this.srs} to ${to}`);\n    }\n  }\n\n  unwrap() {\n    const { xmin, ymin, xmax, ymax, srs } = this;\n\n    // not in 4326, so just return a clone\n    if (srs !== \"EPSG:4326\") return [this.clone()];\n\n    // extent is within the normal extent of the earth, so return clone\n    if (xmin > -180 && xmax < 180) return [this.clone()];\n\n    const bboxes = unwrap(this.bbox, [-180, -90, 180, 90]);\n\n    return bboxes.map(bbox => new this.constructor(bbox, { srs: 4326 }));\n  }\n\n  asEsriJSON() {\n    return {\n      xmin: this.xmin,\n      ymin: this.ymin,\n      xmax: this.xmax,\n      ymax: this.ymax,\n      spatialReference: {\n        wkid: this.srs\n      }\n    };\n  }\n\n  asGeoJSON({ density = 0 } = { density: 0 }) {\n    const will_reproject = ![undefined, null, \"EPSG:4326\"].includes(this.srs);\n\n    let geojson = {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Polygon\",\n        coordinates: densePolygon(this.bbox, { density })\n      }\n    };\n\n    if (will_reproject) {\n      geojson = reprojectGeoJSON(geojson, { from: this.srs, to: \"EPSG:4326\", in_place: true });\n    }\n\n    geojson.bbox = bboxArray(geojson.geometry.coordinates[0]);\n\n    return geojson;\n  }\n\n  asObj() {\n    const res = {};\n    for (let k in this) {\n      const v = this[k];\n      if (!isFunc(v)) {\n        res[k] = v;\n      }\n    }\n    return res;\n  }\n}\n\nif (typeof define === \"function\" && define.amd)\n  define(function () {\n    return GeoExtent;\n  });\nif (typeof self === \"object\") self.GeoExtent = GeoExtent;\nif (typeof window === \"object\") window.GeoExtent = GeoExtent;\n"],
  "mappings": "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A,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,aAAa;AAAA,QACX,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,aAAa;AAAA,QACX,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,aAAa;AAAA,QACX,SAAS;AAAA,MACX;AAAA,MACA,aAAa;AAAA,QACX,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MAC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,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,aAAa;AAAA,QACX,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,MACX;AAAA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IAAE,GAAEC,KAAE,KAAG,IAAE,KAAG,IAAED,IAAE,GAAEC,KAAE,KAAG,KAAG,KAAG,IAAED,IAAE,GAAEC,KAAE,KAAG,KAAG,KAAG,IAAED,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGM,KAAE,IAAE,IAAE,IAAE,IAAEN,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG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AE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KA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AAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,oBAAkB,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,wBAAsB,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,oBAAkBE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,oBAAkB,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,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AE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,KAAG,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,KAAG,IAAED,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAED,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,IAAE,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,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AE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAED,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,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AG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,gBAAc,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,eAAaiBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,gBAAc,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,gBAAcsBAAoB,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,IAAE,KAAG,KAAG,UAAQ,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,IAAE,KAAG,qBAAmB,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,IAAE,KAAG,qBAAm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,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,eAAa,KAAG,eAAa,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,IAAE,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,IAAE,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,UAAQ,IAAE,IAAE,IAAE,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,gBAAc,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,gBAAc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,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGM,KAAE,IAAE,IAAE,IAAE,IAAEN,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAEE,KAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAE,IAAE,yEAAuE,KAAG,IAAE,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IA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AAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQE,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAEE,KAAE,KAAG,UAA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IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,UAAQ,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,sBAAoB,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAEA,IAAE,IAAG,IAAE,KAAG,KAAG,UAAQ,IAAE,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,UAAQ,IAAE,iBAAe,IAAE,IAA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AG,KAAG,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,KAAI,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,eAAa,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,eAAa,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,kBAAgB,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,kBAAgB,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,eAAa,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,eAAa,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,eAAa,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,eAAa,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,eAAa,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,eAAa,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,eAAa,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,eAAa,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,eAAa,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,iBAAeiBAAe,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,iBAAe,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,eAAa,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAEC,KAAE,KAAG,IAAE,KAAG,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,KAAG,IAAED,IAAE,GAAE,IAAE,IAAE,IAAEA,IAAE,IAAG,IAAEE,KAAE,KAAGG,KAAED,KAAE,IAAE,IAAE,KAAG,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,2CAAyCA,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,IAAG,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAGA,IAAE,GAAE,IAAEE,KAAE,KAAG,KAAG,IAAE,mBAAiB,IAAE,KAAG,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAGG,KAAE,KAAG,IAAE,IAAE,KAAG,IAAEL,IAAE,GAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAEA,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,iBAAe,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,mDAAiD,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,IAAEA,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAE,IAAE,mDAAiD,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,KAAG,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,KAAG,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,KAAG,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,KAAG,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,KAAG,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,KAAG,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,KAAG,IAAEH,IAAE,GAAE,IAAE,qHAAmH,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,eAAa,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,eAAa,KAAG,KAAGK,KAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAED,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAED,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAED,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAED,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAED,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAED,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAED,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAED,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAGE,KAAE,KAAG,IAAE,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,eAAa,KAAG,eAAa,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,IAAE,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,KAAG,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,eAAaeAAa,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAEE,KAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAA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,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,4BAA0B,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,4BAA0B,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,gBAAc,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,gBAAc,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,KAAG,UAAQ,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,KAAG,UAAQ,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,KAAG,UAAQ,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,KAAG,UAAQ,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,eAAa,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,eAAa,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,eAAa,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,eAAa,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,8CAA4C,KAAG,cAAY,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,mBAAiB,KAAG,KAAG,KAAG,cAAY,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,8CAA4C,KAAG,cAAY,IAAE,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,mBAAiB,KAAG,KAAG,KAAG,cAAY,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,gBAAc,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAA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AAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,kBAAgB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,kBAAgB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,+BAA6B,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,+BAA6B,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,mBAAiB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,mBAAiB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,kBAAgB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,kBAAgB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,kBAAgB,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,mBAAiB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,mBAAiB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,kBAAgB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,kBAAgB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,+BAA6B,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,+BAA6B,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iBAAe,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,mBAAiB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,mBAAiB,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,IAAEA,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,KAAI,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,yDAAuD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,gBAAc,KAAG,0BAAwB,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,uDAAqD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,+DAA6D,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qDAAmD,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,uDAAqD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,wDAAsD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,yDAAuD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iDAA+C,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,+CAA6C,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,8DAA4D,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,6DAA2D,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,wDAAsD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,wDAAsD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,gEAA8D,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,wCAAsC,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iDAA+C,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,wDAAsD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,oEAAkE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,wDAAsD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,uDAAqD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,wDAAsD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,mEAAiE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,yDAAuD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,yDAAuD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,+DAA6D,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,yDAAuD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,kDAAgD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,wDAAsD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,wDAAsD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,yDAAuD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,yDAAuD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,+CAA6C,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iDAA+C,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iDAA+C,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,wDAAsD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,wDAAsD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,gCAA8B,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,gBAAc,KAAG,mDAAiD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,yDAAuD,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,2CAAyC,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,iEAA+D,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,iBAAe,KAAG,sEAAoE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,sBAAoB,KAAG,4BAA0B,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,sEAAoE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,oEAAkE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,iFAA+E,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,sEAAoE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,oDAAkD,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,uEAAqE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,sEAAoE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,iFAA+E,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,gFAA8E,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,sEAAoE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,sEAAoE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,kEAAgE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,0CAAwC,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,4CAA0C,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,sEAAoE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,uBAAqB,KAAG,2BAAyB,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,qEAAmE,IAAE,IAAEA,IAAE,IAAG,IAAE,IAAEA,IAAE,GAAE,IAAEE,KAAE,gDAA8C,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,mCAAiC,KAAG,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,mCAAiC,KAAG,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,mCAAiC,KAAG,KAAG,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,gDAA8C,KAAG,IAAE,IAAEF,IAAE,OAAM,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAA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E,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,UAAQI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,IAAE,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,IAAE,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAGK,KAAE,KAAG,IAAE,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,IAAGC,KAAE,KAAG,IAAE,KAAG,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,KAAG,IAAED,IAAE,IAAGC,KAAE,KAAG,IAAE,KAAG,IAAED,IAAE,IAAG,+DAA6D,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,wDAAsDK,KAAE,KAAG,KAAG,IAAE,IAAE,IAAEL,IAAE,GAAE,IAAE,wDAAsD,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,wDAAsD,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,uDAAqD,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,uDAAqD,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,sDAAoD,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,6DAA2D,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,wDAAsD,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,oFAAkF,IAAE,IAAE,IAAEA,IAAE,IAAGC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,IAAG,IAAE,gFAA8E,IAAE,IAAE,KAAGA,IAAE,GAAE,IAAE,KAAG,qEAAmE,IAAE,IAAE,KAAGA,IAAE,IAAG,IAAE,KAAG,oCAAkC,IAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,oCAAkC,IAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,UAAQ,IAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,qBAAmB,IAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,UAAQ,IAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,mCAAiC,IAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,mCAAiC,IAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,mCAAiC,IAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,IAAGC,KAAE,KAAG,IAAE,KAAG,IAAED,IAAE,IAAG,IAAE,KAAG,KAAG,+CAA6C,IAAE,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,8CAA4CI,KAAE,KAAG,gBAAc,KAAG,KAAG,IAAEJ,IAAE,IAAG,IAAE,KAAG,KAAG,KAAG,sBAAoB,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,6BAA2B,KAAG,qBAAmB,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,sBAAoB,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,kDAAgD,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,sBAAoB,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,6BAA2B,KAAG,qBAAmB,IAAE,kBAAgB,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,sBAAoB,IAAE,kBAAgB,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,mDAAiD,KAAG,KAAG,KAAG,KAAG,IAAEA,IAAE,KAAI,IAAE,yCAAuC,IAAE,kBAAgB,KAAG,KAAG,IAAEA,IAAE,KAAI,KAAG,KAAG,KAAG,KAAG,qBAAmB,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,UAAQ,KAAG,sBAAoB,KAAG,KAAG,KAAG,IAAEA,IAAE,GAAE,KAAG,KAAG,KAAG,KAAG,sBAAoB,KAAG,KAAG,KAAG,IAAEA,IAAE,IAAGC,KAAE,KAAG,IAAE,KAAG,KAAG,KAAG,IAAED,IAAE,KAAIC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,IAAG,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,UAAQ,KAAG,IAAEC,KAAE,IAAE,IAAEH,IAAE,GAAE,IAAEE,KAAE,KAAG,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E,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAA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,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,IAAE,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,IAAE,KAAGI,KAAE,KAAG,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAGI,KAAE,IAAE,IAAE,IAAE,IAAEJ,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAE,IAAEA,IAAE,GAAE,IAAE,KAAG,KAAG,KAAG,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IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,IAAGC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,IAAGC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,IAAGC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAE,IAAED,IAAE,IAAGC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAED,IAAE,GAAE,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,KAAG,IAAE,IAAEA,IAAE,GAAE,IAAEE,KAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEF,IAAE,GAAE,IAAEE,KAAE,KAAG,KAAG,IAAE,IAAE,IAAE,IAAEF,IAAE,IAAGC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAAE,GAAEC,KAAE,KAAG,IAAE,IAAE,IAAED,IAA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",
  "names": ["exports", "obj", "undefined", "define", "wrap", "self", "result", "value", "key", "next", "obj", "zip", "point", "point", "match", "parse", "result", "point", "prepareUpdate", "start", "data", "prepareData", "names", "end", "transform", "update", "createScaleFunction", "pixel", "densePolygon", "isUTM", "getProjString", "add", "defs", "obj", "self", "params", "result", "unit", "result", "result", "wkt", "text", "obj", "D2R", "wkt", "result", "obj", "params", "wkt", "init", "names", "names", "sphere", "datum", "nadgrid", "start", "Z", "point", "inverse", "point", "point", "point", "wgs84", "obj", "forward", "inverse", "A", "M", "C1", "result", "forward", "init", "forward", "inverse", "names", "init", "Z", "forward", "inverse", "names", "init", "names", "init", "forward", "inverse", "MAX_ITER", "names", "init", "forward", "inverse", "names", "init", "forward", "A", "inverse", "names", "init", "forward", "I", "inverse", "names", "init", "L", "forward", "V", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "MAX_ITER", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "MAX_ITER", "V", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "L", "A", "init", "forward", "inverse", "M", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "start", "init", "forward", "inverse", "names", "init", "forward", "point", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "forward", "inverse", "names", "init", "names", "proj4", "proj4", "A", "I", "L", "M", "O", "V", "Z", "i", "proj4", "defs", "proj4collect", "arr", "point", "proj4", "reprojectGeoJSON", "fastMin", "fastMax", "result", "result", "result", "n", "add", "subtract", "add", "result", "add", "subtract", "i", "idot", "qlen", "comparison", "divide", "start", "i", "carried", "result", "multiply", "bboxArray", "booleanContains", "booleanIntersects", "xmin", "xmax", "ymin", "ymax", "booleanIntersects", "unwrap", "require_b64ab", "__commonJSMin", "exports", "module", "b64ab", "__name", "b64", "char2bits", "eqct", "i", "slen", "l", "u8", "s", "char", "ab", "bits2char", "b", "n", "require_index_of_match", "indexOfMatch", "xml", "pattern", "startIndex", "match", "require_index_of_match_end", "indexOfMatchEnd", "require_count_substring", "countSubstring", "string", "substring", "require_find_tag_by_name", "findTagByName", "tagName", "options", "debug", "nested", "start", "afterStart", "relativeEnd", "selfClosing", "openings", "closings", "clip", "end", "outer", "inner", "require_find_tags_by_name", "findTagsByName", "tags", "tag", "require_find_tags_by_path", "findTagsByPath", "path", "returnOnFirst", "pathIndex", "allSubTags", "tagIndex", "subTags", "subTag", "require_find_tag_by_path", "findTagByPath", "found", "require_get_attribute", "getAttribute", "attributeName", "opening", "quotechars", "require_wkt_build", "NEUTRAL", "KEYWORD", "NUMBER", "QUOTED", "AFTERQUOTE", "ENDED", "whitespace", "latin", "keyword", "endThings", "digets", "Parser", "text", "newObjects", "parseString", "txt", "parser", "mapit", "obj", "key", "value", "thing", "out", "newObj", "item", "sExpr", "v", "D2R", "rename", "params", "outName", "inName", "d2r", "input", "cleanWKT", "wkt", "axisOrder", "ii", "axis", "geogcs", "toMeter", "ratio", "renamer", "a", "list", "index", "lisp", "type", "name", "require_getCodeFromEsriWKT", "getCodeFromEsriWKT", "esri_wkt", "last_part", "zone", "hemisphere", "require_getCodeFromProjString", "getCodeFromProjString", "proj", "parts", "part", "south", "ellps", "require_hash", "hash32", "hash", "chr", "string_length", "require_wkt_crs", "sort", "data", "keywords", "keys", "k", "counts", "it", "indices", "param", "parse", "raw", "p1", "varname", "error", "process", "parent", "kw", "kwarr", "result", "unparse", "attrs", "attr", "_module", "require_wkt", "wktcrs", "sort_wkt", "normalize_wkt", "require_esriwkt", "normalize_esriwkt", "esriwkt", "require_proj4", "normalize_proj4", "str", "remove_k1", "remove_no_defs", "remove_title", "remove_init", "remove_type", "require_is_wkt", "isWKT", "require_enums", "FORMATS", "require_get_proj_type", "ESRI_WKT", "GEOSERVER", "MAPFILE", "MAPNIK", "OGC_GML", "OGC_XML", "OGC_WKT", "POSTGIS", "PROJ_4", "PROJ_4_JS", "PROJJSON", "WKT_2", "getProjType", "parsed", "require_proj4js", "parseProj4JS", "require_esriwkt_mapfile_proj4", "parseWKT", "utmUtils_getCodeFromEsriWKT", "utmUtils_getCodeFromProjString", "getDefault", "fn", "rows", "_load_rows", "decoded", "arr", "num_fields", "num_rows", "r", "row", "f", "lookup", "dataType", "hashed", "getEPSGCodes", "authority", "code", "identifier", "map", "srs", "getEPSGCode", "__commonJS", "__export", "__toESM", "__toCommonJS", "require_polygon", "exports", "match", "start", "Envelope", "import_polygon", "names", "point", "obj", "result", "Point_default", "Point", "Point2", "bboxArray", "densePolygon", "proj4", "bboxMerge", "reprojectBoundingBox", "bbox", "booleanIntersects", "require_dense_polygon", "add", "divide", "multiply", "subtract", "require_divide", "divide", "require_bbox_array", "bboxArray", "x", "y", "require_reproject", "require_validate", "bboxArray", "booleanContains", "booleanIntersects", "densePolygon", "unwrap", "cluster", "result", "start", "require_compare", "require_sort", "range", "result", "require_merge", "result", "start", "snap", "couple", "range", "start", "result", "transform", "point", "forward", "point", "inverse", "result", "add", "divide", "require_src", "point", "start", "booleanIntersects", "fastMax", "fastMin", "reprojectBoundingBox", "reprojectGeoJSON", "range", "mode", "geowarp", "inverse", "forward", "pixel", "selectPixel", "params", "start", "divide", "divide", "result", "divide", "start", "divide", "divide", "multiply", "result", "add", "divide", "result", "add", "divide", "add", "result", "require_mean", "add", "divide", "add", "divide", "add", "divide", "subtract", "multiply", "subtract", "add", "divide", "result", "divide", "require_sort", "add", "divide", "multiply", "subtract", "require_count", "require_expand", "result", "require_clean", "require_compare_positive", "require_constants", "require_long_addition", "result", "require_long_subtraction", "result", "n", "require_add", "add", "require_absolute", "require_long_multiplication", "start", "i", "carried", "result", "require_multiply", "multiply", "require_subtract", "subtract", "require_round_last_decimal", "result", "require_long_division", "add", "multiply", "subtract", "i", "idot", "qlen", "comparison", "require_divide", "divide", "require_mean", "add", "divide", "require_src", "add", "divide", "multiply", "subtract", "sum", "start", "obj", "range", "__name", "ct", "_", "i", "values", "_a", "_b", "bands", "height", "precise", "stats", "width", "layout", "rest", "__objRest", "result", "bandStats", "bandIndex", "band", "options", "__spreadValues", "rect", "sizes", "addAlpha", "makeNoDataRgba", "makeNoDataRgbaString", "convert_one", "pixel", "convert_raw_one_band_pixel_to_rgba_string", "pixel", "convert_raw_two_band_pixel_to_rgba", "pixel", "convert_raw_two_band_pixel_to_rgba_string", "pixel", "convert_double_all", "pixel", "convert_double_all_string", "pixel", "convert_multiband", "pixel", "convert_raw_multiband_to_rgba_string", "pixel", "convert_multiband_all", "pixel", "convert_multiband_all_to_string", "pixel", "rawToRgba", "obj", "Layout", "select_brc", "pixel", "select_b_r_c", "pixel", "select_b_rc", "pixel", "select_rcb", "pixel", "select_rc_b", "select_r_c_b", "select_r_cb", "pixel", "selectPixel", "obj", "fit", "obj", "hasNoData", "pixel", "hide_rgba", "isHidden", "pixel", "isNoData", "pixel", "makeNoDataRGB", "popAlpha", "pixel", "range", "require_convert_single", "convert_raw_one_band_pixel_to_rgb", "pixel", "require_convert_single_str", "convert_raw_one_band_pixel_to_rgb_str", "pixel", "require_convert_double", "convert_raw_two_band_pixel_to_rgb", "pixel", "require_convert_double_str", "convert_raw_two_band_pixel_to_rgb_str", "pixel", "convert_raw_three_band_pixel_to_rgb", "pixel", "convert_raw_three_band_pixel_to_rgb_css", "pixel", "convert_raw_two_band_pixel_to_rgb", "pixel", "convert_raw_two_band_pixel_to_rgb_str", "pixel", "rgbToStr", "rawToRgb", "obj", "pushAlpha", "pixel", "safely_convert_rgb_to_rgba", "obj", "pixel", "quickly_convert", "obj", "rgbToRgba", "obj", "sliceAlpha", "pixel", "require_safely_convert", "safely_convert_rgba_to_rgb", "obj", "pixel", "require_quickly_convert", "quickly_convert_rgba_to_rgb", "obj", "pixel", "rgbaToRgb", "obj", "setHidden", "pixel", "setVisible", "pixel", "showRGBA", "obj", "rawToRgba", "geowarp_canvas", "geowarp", "pixel", "result", "add", "divide", "multiply", "subtract", "snap", "params", "batch", "result", "batch", "params", "listener", "result", "it", "obj", "params", "params", "listener", "result", "msg", "obj", "params", "result", "wrap", "prepareData", "prepareUpdate", "obj", "debug_level", "pixel", "result", "parse", "obj", "proj4", "result", "obj", "forward", "inverse", "range", "GeoRasterStack", "forward", "inverse", "result", "GeoRasterStack", "Layout", "import_quick_scale", "pixel", "pixel", "pixel", "pixel", "pixel", "pixel", "convert_raw_two_band_pixel_to_rgb", "pixel", "convert_raw_two_band_pixel_to_rgb_str", "pixel", "convert_raw_two_band_pixel_to_rgb_str", "convert_raw_two_band_pixel_to_rgb", "import_dense_polygon", "import_reproject_geojson", "divide", "add", "srs", "getEPSGCode", "o", "subtract", "multiply", "booleanContains", "result", "result2", "booleanIntersects", "reprojectBoundingBox", "unwrap", "densePolygon", "reprojectGeoJSON", "bboxArray", "geowarp", "geowarp_canvas", "geowarp_core", "bboxPolygon", "proj4collect", "srs", "bboxMerge", "densePolygon", "isUTM", "getProjString", "tile", "obj", "error", "xmin", "ymin", "xmax", "ymax", "snap", "coords", "reprojectGeoJSON", "fastMin", "fastMax", "context", "pixel", "x", "y"]
}
